# ::snt I am 24 and a mother of a 2 and a half year old.
# ::tok I am 24 and a mother of a 2 and a half year old .
# ::alignments 0-1|0.0 5-6|0.2 3-4|0 11-12|0.3 12-13|0.3.0 13-14|0.3.0.0 0-1|0.1 9-10|0.3.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:57:58.259
# ::node	0	and	3-4
# ::node	0.0	1	0-1
# ::node	0.1	i	0-1
# ::node	0.2	mother	5-6
# ::node	0.3	half	11-12
# ::node	0.3.0	year	12-13
# ::node	0.3.0.0	old	13-14
# ::node	0.3.1	and	9-10
# ::root	0	and
# ::edge	1	calendar	and	0.0	0	
# ::edge	and	op1	half	0.3.1	0.3	
# ::edge	and	op1	mother	0	0.2	
# ::edge	and	op2	half	0	0.3	
# ::edge	i	calendar	and	0.1	0	
# ::edge	old	mod	year	0.3.0.0	0.3.0	
# ::edge	year	mod	half	0.3.0	0.3	
(a / and 
      :calendar-of 1 
      :calendar-of (i / i) 
      :op1 (m / mother) 
      :op2 (h / half 
            :mod-of (y / year 
                  :mod-of (o / old)) 
            :op-of (a2 / and)))

# ::snt Me and my son's father have been broken up since August.
# ::tok Me and my son 's father have been broken up since August .
# ::alignments 8-9|0 0-1|0.0 5-6|0.0.0.0 3-4|0.0.0.0.0 0-12|0.0.0.1.0+0.0.0.1 1-2|0.0.0 10-11|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:57:58.862
# ::node	0	break-08	8-9
# ::node	0.0	me	0-1
# ::node	0.0.0	and	1-2
# ::node	0.0.0.0	father	5-6
# ::node	0.0.0.0.0	son	3-4
# ::node	0.0.0.1	date-entity	0-12
# ::node	0.0.0.1.0	8	0-12
# ::node	0.1	since	10-11
# ::root	0	break-08
# ::edge	and	op1	me	0.0.0	0.0	
# ::edge	and	op2	father	0.0.0	0.0.0.0	
# ::edge	and	time	date-entity	0.0.0	0.0.0.1	
# ::edge	break-08	ARG1	me	0	0.0	
# ::edge	break-08	ARG6	since	0	0.1	
# ::edge	date-entity	month	8	0.0.0.1	0.0.0.1.0	
# ::edge	father	poss	son	0.0.0.0	0.0.0.0.0	
(b / break-08 
      :ARG1 (m / me 
            :op-of (a / and 
                  :op1 (f / father 
                        :poss (s / son)) 
                  :time (d / date-entity 
                        :month 8))) 
      :ARG6 (s2 / since))

# ::snt I want to start dating other people and my son's father says if I do he will have nothing to do with his son.
# ::tok I want to start dating other people and my son 's father says if I do he will have nothing to do with his son .
# ::alignments 24-25|0.2.0.1.0.0 11-12|0.2.0.0 0-1|0.0 3-4|0.1 4-5|0.1.0 1-2|0 21-22|0.2.0.1.0 19-20|0.2.0.1.0.1 15-16|0.2.0.1 7-8|0.2 12-13|0.2.0 5-6|0.1.0.0 9-10|0.2.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:05.305
# ::node	0	want-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	start-01	3-4
# ::node	0.1.0	date-01	4-5
# ::node	0.1.0.0	other	5-6
# ::node	0.2	and	7-8
# ::node	0.2.0	say-01	12-13
# ::node	0.2.0.0	father	11-12
# ::node	0.2.0.0.0	son	9-10
# ::node	0.2.0.1	do-02	15-16
# ::node	0.2.0.1.0	do-02	21-22
# ::node	0.2.0.1.0.0	son	24-25
# ::node	0.2.0.1.0.1	nothing	19-20
# ::root	0	want-01
# ::edge	and	op1	want-01	0.2	0	
# ::edge	and	op2	say-01	0.2	0.2.0	
# ::edge	date-01	ARG1	other	0.1.0	0.1.0.0	
# ::edge	do-02	ARG0	son	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	do-02	ARG1	do-02	0.2.0.1	0.2.0.1.0	
# ::edge	do-02	ARG1	nothing	0.2.0.1.0	0.2.0.1.0.1	
# ::edge	father	poss	son	0.2.0.0	0.2.0.0.0	
# ::edge	say-01	ARG0	father	0.2.0	0.2.0.0	
# ::edge	say-01	ARG1	do-02	0.2.0	0.2.0.1	
# ::edge	start-01	ARG1	date-01	0.1	0.1.0	
# ::edge	want-01	ARG0	i	0	0.0	
# ::edge	want-01	ARG1	start-01	0	0.1	
(w / want-01 
      :ARG0 (i / i) 
      :ARG1 (s2 / start-01 
            :ARG1 (d / date-01 
                  :ARG1 (o / other))) 
      :op-of (a / and 
            :op1 (s3 / say-01 
                  :ARG0 (f / father 
                        :poss (s4 / son)) 
                  :ARG1 (d3 / do-02 
                        :ARG1 (d2 / do-02 
                              :ARG0 (s / son) 
                              :ARG1 (n / nothing))))))

# ::snt He is very possesive and controlling but he has no right to be as we are not together.
# ::tok He is very possesive and controlling but he has no right to be as we are not together .
# ::alignments 5-6|0.1 0-1|0.1.0 2-3|0.0.1 17-18|0.0.0 6-7|0.0 4-5|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:05.797
# ::node	0	and	4-5
# ::node	0.0	bunt-01	6-7
# ::node	0.0.0	together	17-18
# ::node	0.0.1	very	2-3
# ::node	0.1	control-01	5-6
# ::node	0.1.0	he	0-1
# ::root	0	and
# ::edge	and	op1	control-01	0	0.1	
# ::edge	bunt-01	ARG0	together	0.0	0.0.0	
# ::edge	bunt-01	ARG1	and	0.0	0	
# ::edge	bunt-01	ARG6	very	0.0	0.0.1	
# ::edge	control-01	ARG1	he	0.1	0.1.0	
(a / and 
      :ARG1-of (b / bunt-01 
            :ARG0 (t / together) 
            :ARG6 (v / very)) 
      :op1 (c / control-01 
            :ARG1 (h / he)))

# ::snt He has too much going on in his life right now and he thinks we can work when I have told him several times I dont love him and he does not love me.
# ::tok He has too much going on in his life right now and he thinks we can work when I have told him several times I dont love him and he does not love me .
# ::alignments 16-17|0.2.1.0 4-5|0.0 20-21|0.2.1.0.0.1 0-10|0.1.0+0.1.1+0.1 25-26|0.2.1.0.0.2 0-1|0.2.0 11-12|0 32-33|0.2.1.0.0.0 15-16|0.2.1 2-3|0.0.1.0 26-27|0.2.1.0.0.2.0 33-34|0.2.1.0.0.0.0 13-14|0.2 8-9|0.0.0 22-23|0.2.1.0.0.1.0 23-24|0.2.1.0.0.1.0.0 3-4|0.0.1 28-29|0.2.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:07.974
# ::node	0	and	11-12
# ::node	0.0	go-06	4-5
# ::node	0.0.0	life	8-9
# ::node	0.0.1	much	3-4
# ::node	0.0.1.0	too	2-3
# ::node	0.1	date-entity	0-10
# ::node	0.1.0	now	0-10
# ::node	0.1.1	right	0-10
# ::node	0.2	think-01	13-14
# ::node	0.2.0	he	0-1
# ::node	0.2.1	possible	15-16
# ::node	0.2.1.0	work-01	16-17
# ::node	0.2.1.0.0	and	28-29
# ::node	0.2.1.0.0.0	love-01	32-33
# ::node	0.2.1.0.0.0.0	i	33-34
# ::node	0.2.1.0.0.1	tell-01	20-21
# ::node	0.2.1.0.0.1.0	several	22-23
# ::node	0.2.1.0.0.1.0.0	time	23-24
# ::node	0.2.1.0.0.2	-	25-26
# ::node	0.2.1.0.0.2.0	love-01	26-27
# ::root	0	and
# ::edge	and	condition	tell-01	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	and	op1	-	0.2.1.0.0	0.2.1.0.0.2	
# ::edge	and	op1	date-entity	0	0.1	
# ::edge	and	op2	think-01	0	0.2	
# ::edge	date-entity	time	now	0.1	0.1.0	
# ::edge	date-entity	time	right	0.1	0.1.1	
# ::edge	go-06	ARG0	life	0.0	0.0.0	
# ::edge	go-06	ARG1	and	0.0	0	
# ::edge	go-06	ARG6	much	0.0	0.0.1	
# ::edge	love-01	ARG1	-	0.2.1.0.0.2.0	0.2.1.0.0.2	
# ::edge	love-01	ARG1	and	0.2.1.0.0.0	0.2.1.0.0	
# ::edge	love-01	ARG6	i	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	much	degree	too	0.0.1	0.0.1.0	
# ::edge	possible	domain	work-01	0.2.1	0.2.1.0	
# ::edge	tell-01	ARG1	several	0.2.1.0.0.1	0.2.1.0.0.1.0	
# ::edge	think-01	ARG0	he	0.2	0.2.0	
# ::edge	think-01	ARG1	possible	0.2	0.2.1	
# ::edge	time	quant	several	0.2.1.0.0.1.0.0	0.2.1.0.0.1.0	
# ::edge	work-01	ARG1	and	0.2.1.0	0.2.1.0.0	
(a / and 
      :ARG1-of (g / go-06 
            :ARG0 (l3 / life) 
            :ARG6 (m / much 
                  :degree (t2 / too))) 
      :op1 (d / date-entity 
            :time (n / now) 
            :time (r / right)) 
      :op2 (t3 / think-01 
            :ARG0 (h / he) 
            :ARG1 (p / possible 
                  :domain (w / work-01 
                        :ARG1 (a2 / and 
                              :ARG1-of (l / love-01 
                                    :ARG6 (i / i)) 
                              :condition (t / tell-01 
                                    :ARG1 (s / several 
                                          :quant-of (t4 / time))) 
                              :op1 (- / - 
                                    :ARG1-of (l2 / love-01)))))))

# ::snt I want him to be there for his son without needing me too.
# ::tok I want him to be there for his son without needing me too .
# ::alignments 1-2|0 8-9|0.2.0 10-11|0.2 12-13|0.2.2 5-6|0.1 11-12|0.2.1 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:08.270
# ::node	0	want-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	multi-sentence	5-6
# ::node	0.2	need-01	10-11
# ::node	0.2.0	son	8-9
# ::node	0.2.1	i	11-12
# ::node	0.2.2	too	12-13
# ::root	0	want-01
# ::edge	need-01	ARG0	son	0.2	0.2.0	
# ::edge	need-01	ARG1	i	0.2	0.2.1	
# ::edge	need-01	ARG6	too	0.2	0.2.2	
# ::edge	want-01	ARG0	i	0	0.0	
# ::edge	want-01	ARG1	multi-sentence	0	0.1	
# ::edge	want-01	manner	need-01	0	0.2	
(w / want-01 
      :ARG0 (i2 / i) 
      :ARG1 (m / multi-sentence) 
      :manner (n / need-01 
            :ARG0 (s / son) 
            :ARG1 (i / i) 
            :ARG6 (t / too)))

# ::snt But he has no one his family and him dont get along and have their own issues.
# ::tok But he has no one his family and him dont get along and have their own issues .
# ::alignments 0-1|0.0.2 15-16|0.0.0.0 9-10|0.0.1.0.1 10-11|0.0.1.0 0-1|0.0.1 7-8|0.1.0 13-14|0.0 12-13|0 6-7|0.1 11-12|0.0.1.0.2 3-4|0.0.1.0.0 16-17|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:08.936
# ::node	0	and	12-13
# ::node	0.0	have-03	13-14
# ::node	0.0.0	issue	16-17
# ::node	0.0.0.0	own	15-16
# ::node	0.0.1	bunt-01	0-1
# ::node	0.0.1.0	get-03	10-11
# ::node	0.0.1.0.0	-	3-4
# ::node	0.0.1.0.1	-	9-10
# ::node	0.0.1.0.2	along	11-12
# ::node	0.0.2	1	0-1
# ::node	0.1	family	6-7
# ::node	0.1.0	and	7-8
# ::root	0	and
# ::edge	1	op1	have-03	0.0.2	0.0	
# ::edge	and	op1	family	0.1.0	0.1	
# ::edge	and	op1	have-03	0	0.0	
# ::edge	and	time	family	0	0.1	
# ::edge	bunt-01	ARG1	get-03	0.0.1	0.0.1.0	
# ::edge	bunt-01	ARG2	have-03	0.0.1	0.0	
# ::edge	get-03	ARG0	-	0.0.1.0	0.0.1.0.0	
# ::edge	get-03	ARG1	-	0.0.1.0	0.0.1.0.1	
# ::edge	get-03	ARG6	along	0.0.1.0	0.0.1.0.2	
# ::edge	have-03	ARG1	issue	0.0	0.0.0	
# ::edge	issue	mod	own	0.0.0	0.0.0.0	
(a2 / and 
      :op1 (h / have-03 
            :ARG1 (i / issue 
                  :mod (o / own)) 
            :ARG2-of (b / bunt-01 
                  :ARG1 (g / get-03 
                        :ARG0 (-2 / -) 
                        :ARG1 (- / -) 
                        :ARG6 (a3 / along))) 
            :op-of 1) 
      :time (f / family 
            :op-of (a / and)))

# ::snt I don't want to be miserable anymore and the longer he is around the more miserable I will be.
# ::tok I do n't want to be miserable anymore and the longer he is around the more miserable I will be .
# ::alignments 7-8|0.1 15-16|0.2.1 8-9|0.3 13-14|0.2.0 16-17|0.2 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:09.452
# ::node	0	want-01	3-4
# ::node	0.0	i	0-1
# ::node	0.1	have-part-91	7-8
# ::node	0.2	misspell-01	16-17
# ::node	0.2.0	around	13-14
# ::node	0.2.1	more	15-16
# ::node	0.3	and	8-9
# ::root	0	want-01
# ::edge	and	op1	want-01	0.3	0	
# ::edge	have-part-91	ARG1	want-01	0.1	0	
# ::edge	misspell-01	ARG1	want-01	0.2	0	
# ::edge	misspell-01	ARG6	around	0.2	0.2.0	
# ::edge	misspell-01	degree	more	0.2	0.2.1	
# ::edge	want-01	ARG1	i	0	0.0	
(w / want-01 
      :ARG1 (i / i) 
      :ARG1-of (h / have-part-91) 
      :ARG1-of (m2 / misspell-01 
            :ARG6 (a2 / around) 
            :degree (m / more)) 
      :op-of (a / and))

# ::snt I dont want him to not be there for his son as he is a good father or he at least tries.
# ::tok I dont want him to not be there for his son as he is a good father or he at least tries .
# ::alignments 16-17|0.0.0.0.0 1-2|0.0.0 15-16|0.0.0.0.0.0 10-11|0.0.0.0.1.0 17-18|0.0.0.0 7-8|0 2-3|0.0 0-1|0.0.0.0.1.1 21-22|0.0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:09.949
# ::node	0	multi-sentence	7-8
# ::node	0.0	want-01	2-3
# ::node	0.0.0	-	1-2
# ::node	0.0.0.0	or	17-18
# ::node	0.0.0.0.0	father	16-17
# ::node	0.0.0.0.0.0	good	15-16
# ::node	0.0.0.0.1	try-01	21-22
# ::node	0.0.0.0.1.0	son	10-11
# ::node	0.0.0.0.1.1	i	0-1
# ::root	0	multi-sentence
(m / multi-sentence 
      :ARG1-of (w / want-01 
            :ARG0 (- / - 
                  :op-of (o / or 
                        :op1 (f / father 
                              :mod (g / good)) 
                        :op2 (t / try-01 
                              :ARG0 (s / son) 
                              :ARG1 (i / i))))))

# ::snt I do believe every child needs both parents weather they are together or not.
# ::tok I do believe every child needs both parents weather they are together or not .
# ::alignments 8-9|0.1.0.1 12-13|0.1.0.1.0.0 4-5|0.1.0.0 11-12|0.1.0.1.0 7-8|0.1.0.1.1 0-1|0.0 3-4|0.1.0.0.0 5-6|0.1.0 1-2|0 2-3|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:10.253
# ::node	0	do-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	believe-01	2-3
# ::node	0.1.0	need-01	5-6
# ::node	0.1.0.0	child	4-5
# ::node	0.1.0.0.0	every	3-4
# ::node	0.1.0.1	weather	8-9
# ::node	0.1.0.1.0	together	11-12
# ::node	0.1.0.1.0.0	or	12-13
# ::node	0.1.0.1.1	parent	7-8
# ::root	0	do-01
# ::edge	believe-01	ARG1	need-01	0.1	0.1.0	
# ::edge	child	mod	every	0.1.0.0	0.1.0.0.0	
# ::edge	do-01	ARG0	i	0	0.0	
# ::edge	do-01	ARG1	believe-01	0	0.1	
# ::edge	need-01	ARG0	child	0.1.0	0.1.0.0	
# ::edge	need-01	ARG1	weather	0.1.0	0.1.0.1	
# ::edge	or	op1	together	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	weather	calendar	together	0.1.0.1	0.1.0.1.0	
# ::edge	weather	mod	parent	0.1.0.1	0.1.0.1.1	
(d / do-01 
      :ARG0 (i / i) 
      :ARG1 (b / believe-01 
            :ARG1 (n / need-01 
                  :ARG0 (c / child 
                        :mod (e / every)) 
                  :ARG1 (w / weather 
                        :calendar (t / together 
                              :op-of (o / or)) 
                        :mod (p / parent)))))

# ::snt But he thinks if he cant have me no one can.
# ::tok But he thinks if he cant have me no one can .
# ::alignments 0-1|0.0 6-7|0.1.0 7-8|0.1.0.1 10-11|0.1.0.0 0-1|0.1 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:10.502
# ::node	0	think-01	2-3
# ::node	0.0	1	0-1
# ::node	0.1	bunt-01	0-1
# ::node	0.1.0	have-01	6-7
# ::node	0.1.0.0	possible	10-11
# ::node	0.1.0.1	i	7-8
# ::root	0	think-01
# ::edge	bunt-01	ARG1	have-01	0.1	0.1.0	
# ::edge	have-01	ARG1	possible	0.1.0	0.1.0.0	
# ::edge	have-01	ARG6	i	0.1.0	0.1.0.1	
# ::edge	think-01	ARG0	1	0	0.0	
# ::edge	think-01	ARG1	bunt-01	0	0.1	
(t / think-01 
      :ARG0 1 
      :ARG1 (b / bunt-01 
            :ARG1 (h / have-01 
                  :ARG1 (p / possible) 
                  :ARG6 (i / i))))

# ::snt What do I do to move on with my life.
# ::tok What do I do to move on with my life .
# ::alignments 3-4|0 5-6|0.0 9-10|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:10.599
# ::node	0	do-02	3-4
# ::node	0.0	move-01	5-6
# ::node	0.0.0	life	9-10
# ::root	0	do-02
# ::edge	do-02	ARG1	move-01	0	0.0	
# ::edge	move-01	ARG1	life	0.0	0.0.0	
(d / do-02 
      :ARG1 (m / move-01 
            :ARG1 (l / life)))

# ::snt Your ex is threatening you using your son... bad, bad, bad.
# ::tok Your ex is threatening you using your son ... bad , bad , bad .
# ::alignments 4-5|0.1.0 9-10|0.0.0.0 3-4|0 13-14|0.0 5-6|0.1 7-8|0.1.1 11-12|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:10.892
# ::node	0	threaten-01	3-4
# ::node	0.0	bad	13-14
# ::node	0.0.0	bad	11-12
# ::node	0.0.0.0	bad	9-10
# ::node	0.1	use-01	5-6
# ::node	0.1.0	y	4-5
# ::node	0.1.1	son	7-8
# ::root	0	threaten-01
# ::edge	bad	calendar	bad	0.0	0.0.0	
# ::edge	bad	calendar	bad	0.0.0	0.0.0.0	
# ::edge	threaten-01	ARG0	bad	0	0.0	
# ::edge	threaten-01	ARG1	use-01	0	0.1	
# ::edge	use-01	ARG0	y	0.1	0.1.0	
# ::edge	use-01	ARG1	son	0.1	0.1.1	
(t / threaten-01 
      :ARG0 (b2 / bad 
            :calendar (b3 / bad 
                  :calendar (b / bad))) 
      :ARG1 (u / use-01 
            :ARG0 (y / y) 
            :ARG1 (s / son)))

# ::snt You can't give in to that or it will just escalate.
# ::tok You ca n't give in to that or it will just escalate .
# ::alignments 7-8|0.0.1 11-12|0.0.1.0 8-9|0.0.1.0.0 1-2|0 3-4|0.0 10-11|0.0.1.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:11.063
# ::node	0	possible	1-2
# ::node	0.0	give-01	3-4
# ::node	0.0.0	you	0-1
# ::node	0.0.1	or	7-8
# ::node	0.0.1.0	escalate-01	11-12
# ::node	0.0.1.0.0	country	8-9
# ::node	0.0.1.0.1	just	10-11
# ::root	0	possible
# ::edge	escalate-01	ARG0	country	0.0.1.0	0.0.1.0.0	
# ::edge	escalate-01	ARG1	just	0.0.1.0	0.0.1.0.1	
# ::edge	give-01	ARG0	you	0.0	0.0.0	
# ::edge	or	op1	give-01	0.0.1	0.0	
# ::edge	or	op2	escalate-01	0.0.1	0.0.1.0	
# ::edge	possible	domain	give-01	0	0.0	
(p / possible 
      :domain (g / give-01 
            :ARG0 (y / you) 
            :op-of (o / or 
                  :op1 (e / escalate-01 
                        :ARG0 (c / country) 
                        :ARG1 (j / just)))))

# ::snt You have a right to live your own life and be happy, so don't cave to his threats.
# ::tok You have a right to live your own life and be happy , so do n't cave to his threats .
# ::alignments 8-9|0.0.0 1-2|0.0.1 16-17|0.1.0 19-20|0.1.0.0 11-12|0.1 5-6|0.0 0-1|0.0.1.0 9-10|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:11.352
# ::node	0	and	9-10
# ::node	0.0	live-01	5-6
# ::node	0.0.0	life	8-9
# ::node	0.0.1	have-03	1-2
# ::node	0.0.1.0	you	0-1
# ::node	0.1	happen-01	11-12
# ::node	0.1.0	cave-01	16-17
# ::node	0.1.0.0	treat-01	19-20
# ::root	0	and
# ::edge	and	op1	live-01	0	0.0	
# ::edge	and	op2	happen-01	0	0.1	
# ::edge	cave-01	ARG1	treat-01	0.1.0	0.1.0.0	
# ::edge	happen-01	ARG1	cave-01	0.1	0.1.0	
# ::edge	have-03	ARG0	you	0.0.1	0.0.1.0	
# ::edge	have-03	ARG1	live-01	0.0.1	0.0	
# ::edge	live-01	ARG1	life	0.0	0.0.0	
(a / and 
      :op1 (l2 / live-01 
            :ARG1 (l / life) 
            :ARG1-of (h / have-03 
                  :ARG0 (y / you))) 
      :op2 (h2 / happen-01 
            :ARG1 (c / cave-01 
                  :ARG1 (t / treat-01))))

# ::snt If he really loves his son, he'll see him regardless, but this is just a typical control method that people like him use.
# ::tok If he really loves his son , he 'll see him regardless , but this is just a typical control method that people like him use .
# ::alignments 3-4|0.0 9-10|0 25-26|0.1.1.1 2-3|0.0.1 19-20|0.1.1.0 5-6|0.0.0 11-12|0.1.0+0.1.0.0 13-14|0.1 16-17|0.1.1.2.0 18-19|0.1.1.0.0 20-21|0.1.1 14-15|0.1.1.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:12.356
# ::node	0	see-01	9-10
# ::node	0.0	love-01	3-4
# ::node	0.0.0	son	5-6
# ::node	0.0.1	really	2-3
# ::node	0.1	bunt-01	13-14
# ::node	0.1.0	know-01	11-12
# ::node	0.1.0.0	regardless	11-12
# ::node	0.1.1	method	20-21
# ::node	0.1.1.0	control-01	19-20
# ::node	0.1.1.0.0	typical	18-19
# ::node	0.1.1.1	use-01	25-26
# ::node	0.1.1.2	this	14-15
# ::node	0.1.1.2.0	just	16-17
# ::root	0	see-01
# ::edge	bunt-01	ARG1	see-01	0.1	0	
# ::edge	bunt-01	ARG2	method	0.1	0.1.1	
# ::edge	control-01	ARG0	method	0.1.1.0	0.1.1	
# ::edge	control-01	ARG1	typical	0.1.1.0	0.1.1.0.0	
# ::edge	know-01	ARG1	bunt-01	0.1.0	0.1	
# ::edge	love-01	ARG1	son	0.0	0.0.0	
# ::edge	love-01	manner	really	0.0	0.0.1	
# ::edge	regardless	op1	know-01	0.1.0.0	0.1.0	
# ::edge	see-01	ARG1	love-01	0	0.0	
# ::edge	this	mod	method	0.1.1.2	0.1.1	
# ::edge	this	time	just	0.1.1.2	0.1.1.2.0	
# ::edge	use-01	ARG1	method	0.1.1.1	0.1.1	
(s / see-01 
      :ARG1 (l / love-01 
            :ARG1 (s2 / son) 
            :manner (r / really)) 
      :ARG1-of (b / bunt-01 
            :ARG1-of (k / know-01 
                  :op-of (r2 / regardless)) 
            :ARG2 (m / method 
                  :ARG0-of (c / control-01 
                        :ARG1 (t / typical)) 
                  :ARG1-of (u / use-01) 
                  :mod-of (t2 / this 
                        :time (j / just)))))

# ::snt Others say things like, "I'm going to kill myself if you leave me"... get it?
# ::tok Others say things like , " I 'm going to kill myself if you leave me " ... get it ?
# ::alignments 2-3|0.1 10-11|0.1.0.0 1-2|0 18-19|0.2 14-15|0.1.0.0.0.0 8-9|0.1.0 11-12|0.1.0.0.0 0-1|0.0 13-14|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:15.627
# ::node	0	say-01	1-2
# ::node	0.0	other	0-1
# ::node	0.1	thing	2-3
# ::node	0.1.0	go-04	8-9
# ::node	0.1.0.0	kill-01	10-11
# ::node	0.1.0.0.0	myself	11-12
# ::node	0.1.0.0.0.0	leave-01	14-15
# ::node	0.1.0.0.0.0.0	you	13-14
# ::node	0.2	get-04	18-19
# ::root	0	say-01
# ::edge	get-04	ARG1	say-01	0.2	0	
# ::edge	go-04	ARG0	thing	0.1.0	0.1	
# ::edge	go-04	ARG1	kill-01	0.1.0	0.1.0.0	
# ::edge	kill-01	ARG1	myself	0.1.0.0	0.1.0.0.0	
# ::edge	leave-01	ARG0	you	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	leave-01	ARG1	myself	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	say-01	ARG0	other	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
(s / say-01 
      :ARG0 (o / other) 
      :ARG1 (t / thing 
            :ARG0-of (g2 / go-04 
                  :ARG1 (k / kill-01 
                        :ARG1 (m / myself 
                              :ARG1-of (l / leave-01 
                                    :ARG0 (y / you)))))) 
      :ARG1-of (g / get-04))

# ::snt Date.
# ::tok Date .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:15.656
# ::node	0	date-entity	0-1
# ::root	0	date-entity
(d / date-entity)

# ::snt Meet all kinds of people.
# ::tok Meet all kinds of people .
# ::alignments 1-2|0.0.0 0-1|0 2-3|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:15.715
# ::node	0	meet-01	0-1
# ::node	0.0	kind	2-3
# ::node	0.0.0	all	1-2
# ::root	0	meet-01
# ::edge	kind	quant	all	0.0	0.0.0	
# ::edge	meet-01	ARG1	kind	0	0.0	
(m / meet-01 
      :ARG1 (k / kind 
            :quant (a / all)))

# ::snt Do what you want.
# ::tok Do what you want .
# ::alignments 2-3|0.0.0 0-1|0 3-4|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:15.760
# ::node	0	do-02	0-1
# ::node	0.0	want-01	3-4
# ::node	0.0.0	you	2-3
# ::root	0	do-02
# ::edge	do-02	ARG1	want-01	0	0.0	
# ::edge	want-01	ARG0	you	0.0	0.0.0	
(d / do-02 
      :ARG1 (w / want-01 
            :ARG0 (y / you)))

# ::snt If the price is, he voluntarily walks out of both of your lives, you're probably better off without him.
# ::tok If the price is , he voluntarily walks out of both of your lives , you 're probably better off without him .
# ::alignments 19-20|0.0.1 15-16|0.1.0 17-18|0.1 2-3|0.0.0+0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.0.0.1 18-19|0+0.0 13-14|0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:16.356
# ::node	0	more	18-19
# ::node	0.0	good	18-19
# ::node	0.0.0	price-01	2-3
# ::node	0.0.0.0	thing	2-3
# ::node	0.0.0.0.0	walk-02	7-8
# ::node	0.0.0.0.0.0	life	13-14
# ::node	0.0.0.0.0.1	ordinal-entity	6-7
# ::node	0.0.1	off	19-20
# ::node	0.1	probable	17-18
# ::node	0.1.0	you	15-16
# ::root	0	more
# ::edge	good	calendar	off	0.0	0.0.1	
# ::edge	good	degree	more	0.0	0	
# ::edge	more	mod	probable	0	0.1	
# ::edge	price-01	ARG1	good	0.0.0	0.0	
# ::edge	price-01	ARG2	thing	0.0.0	0.0.0.0	
# ::edge	probable	domain	you	0.1	0.1.0	
# ::edge	walk-02	ARG0	thing	0.0.0.0.0	0.0.0.0	
# ::edge	walk-02	ARG6	life	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	walk-02	manner	ordinal-entity	0.0.0.0.0	0.0.0.0.0.1	
(m / more 
      :degree-of (g / good 
            :ARG1-of (p2 / price-01 
                  :ARG2 (t / thing 
                        :ARG0-of (w / walk-02 
                              :ARG6 (l / life) 
                              :manner (o2 / ordinal-entity)))) 
            :calendar (o / off)) 
      :mod (p / probable 
            :domain (y / you)))

# ::snt I'd agree - one other thing it is none of his business whether you date or not.
# ::tok I 'd agree - one other thing it is none of his business whether you date or not .
# ::alignments 0-1|0.2 2-3|0 15-16|0.0.1 6-7|0.0 16-17|0.0.1.0 12-13|0.1.0 5-6|0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.083
# ::node	0	agree-01	2-3
# ::node	0.0	thing	6-7
# ::node	0.0.0	other	5-6
# ::node	0.0.1	date-entity	15-16
# ::node	0.0.1.0	or	16-17
# ::node	0.1	i	0-1
# ::node	0.1.0	business	12-13
# ::node	0.2	1	0-1
# ::root	0	agree-01
# ::edge	agree-01	ARG1	thing	0	0.0	
# ::edge	agree-01	time	1	0	0.2	
# ::edge	agree-01	time	i	0	0.1	
# ::edge	business	mod	i	0.1.0	0.1	
# ::edge	date-entity	poss	thing	0.0.1	0.0	
# ::edge	or	op1	date-entity	0.0.1.0	0.0.1	
# ::edge	thing	mod	other	0.0	0.0.0	
(a / agree-01 
      :ARG1 (t / thing 
            :mod (o2 / other) 
            :poss-of (d / date-entity 
                  :op-of (o / or))) 
      :time (i / i 
            :mod-of (b / business)) 
      :time 1)

# ::snt I wouldn't tell him.
# ::tok I would n't tell him .
# ::alignments 3-4|0 0-1|0.0 4-5|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.135
# ::node	0	tell-01	3-4
# ::node	0.0	i	0-1
# ::node	0.1	hew-01	4-5
# ::root	0	tell-01
# ::edge	tell-01	ARG0	i	0	0.0	
# ::edge	tell-01	ARG1	hew-01	0	0.1	
(t / tell-01 
      :ARG0 (i / i) 
      :ARG1 (h / hew-01))

# ::snt Not because of his threat - but because your personal life is none of his business.
# ::tok Not because of his threat - but because your personal life is none of his business .
# ::alignments 9-10|0.1.0.0 7-8|0 4-5|0.1.0 6-7|0.1 0-1|0.1.0.1 10-11|0.0 15-16|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.424
# ::node	0	accuse-01	7-8
# ::node	0.0	life	10-11
# ::node	0.0.0	business	15-16
# ::node	0.1	bunt-01	6-7
# ::node	0.1.0	treat-01	4-5
# ::node	0.1.0.0	personal	9-10
# ::node	0.1.0.1	-	0-1
# ::root	0	accuse-01
# ::edge	-	purpose	treat-01	0.1.0.1	0.1.0	
# ::edge	accuse-01	ARG1	life	0	0.0	
# ::edge	bunt-01	ARG1	treat-01	0.1	0.1.0	
# ::edge	bunt-01	ARG6	accuse-01	0.1	0	
# ::edge	business	poss	life	0.0.0	0.0	
# ::edge	treat-01	ARG1	personal	0.1.0	0.1.0.0	
(a / accuse-01 
      :ARG1 (l / life 
            :poss-of (b2 / business)) 
      :ARG6-of (b / bunt-01 
            :ARG1 (t / treat-01 
                  :ARG1 (p / personal) 
                  :purpose-of (- / -))))

# ::snt Can you document his threats?
# ::tok Can you document his threats ?
# ::alignments 1-2|0 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.480
# ::node	0	you	1-2
# ::node	0.0	treat-01	4-5
# ::root	0	you
(y / you 
      :ARG1-of (t / treat-01))

# ::snt You really need to.
# ::tok You really need to .
# ::alignments 1-2|0.1 0-1|0.0 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.539
# ::node	0	need-01	2-3
# ::node	0.0	you	0-1
# ::node	0.1	really	1-2
# ::root	0	need-01
# ::edge	need-01	ARG0	you	0	0.0	
# ::edge	need-01	ARG1	really	0	0.1	
(n / need-01 
      :ARG0 (y / you) 
      :ARG1 (r / really))

# ::snt Quit taking his calls, make him leave voice mail.
# ::tok Quit taking his calls , make him leave voice mail .
# ::alignments 3-4|0.0.0 8-9|0.1.0.0 0-1|0.0 5-6|0 9-10|0.1.0 4-5|0.2 7-8|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.751
# ::node	0	make-02	5-6
# ::node	0.0	expressive	0-1
# ::node	0.0.0	calk-01	3-4
# ::node	0.1	leave-01	7-8
# ::node	0.1.0	mail	9-10
# ::node	0.1.0.0	voice	8-9
# ::node	0.2	and	4-5
# ::root	0	make-02
# ::edge	calk-01	ARG1	expressive	0.0.0	0.0	
# ::edge	leave-01	ARG1	mail	0.1	0.1.0	
# ::edge	mail	mod	voice	0.1.0	0.1.0.0	
# ::edge	make-02	ARG0	expressive	0	0.0	
# ::edge	make-02	ARG1	leave-01	0	0.1	
# ::edge	make-02	ARG6	and	0	0.2	
(m / make-02 
      :ARG0 (e / expressive 
            :ARG1-of (c / calk-01)) 
      :ARG1 (l / leave-01 
            :ARG1 (m2 / mail 
                  :mod (v / voice))) 
      :ARG6 (a / and))

# ::snt Make him email or text you.
# ::tok Make him email or text you .
# ::alignments 2-3|0.0 0-1|0 3-4|0.0.1 4-5|0.0.1.0 5-6|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.823
# ::node	0	make-02	0-1
# ::node	0.0	email-01	2-3
# ::node	0.0.0	you	5-6
# ::node	0.0.1	or	3-4
# ::node	0.0.1.0	text	4-5
# ::root	0	make-02
# ::edge	email-01	ARG1	you	0.0	0.0.0	
# ::edge	make-02	ARG1	email-01	0	0.0	
# ::edge	or	op1	email-01	0.0.1	0.0	
# ::edge	or	op2	text	0.0.1	0.0.1.0	
(m / make-02 
      :ARG1 (e / email-01 
            :ARG1 (y / you) 
            :op-of (o / or 
                  :op1 (t / text))))

# ::snt Keep those records.
# ::tok Keep those records .
# ::alignments 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.874
# ::node	0	keep-01	0-1
# ::node	0.0	record	2-3
# ::root	0	keep-01
# ::edge	keep-01	ARG1	record	0	0.0	
(k / keep-01 
      :ARG1 (r / record))

# ::snt Get a lawyer and get a divorce.
# ::tok Get a lawyer and get a divorce .
# ::alignments 0-1|0.0 3-4|0 2-3|0.0.0 6-7|0.1.0 4-5|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:17.967
# ::node	0	and	3-4
# ::node	0.0	get-01	0-1
# ::node	0.0.0	lawyer	2-3
# ::node	0.1	get-01	4-5
# ::node	0.1.0	divorce-01	6-7
# ::root	0	and
# ::edge	and	op1	get-01	0	0.0	
# ::edge	and	op2	get-01	0	0.1	
# ::edge	get-01	ARG1	divorce-01	0.1	0.1.0	
# ::edge	get-01	ARG1	lawyer	0.0	0.0.0	
(a / and 
      :op1 (g / get-01 
            :ARG1 (l / lawyer)) 
      :op2 (g2 / get-01 
            :ARG1 (d / divorce-01)))

# ::snt If you can't afford one, try legal aid.
# ::tok If you ca n't afford one , try legal aid .
# ::alignments 0-1|0.1.2 4-5|0.1 8-9|0.0.0 1-2|0.1.0 2-3|0.1.1 9-10|0.0 7-8|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:18.218
# ::node	0	try-02	7-8
# ::node	0.0	aid-01	9-10
# ::node	0.0.0	legal	8-9
# ::node	0.1	afford-01	4-5
# ::node	0.1.0	you	1-2
# ::node	0.1.1	possible	2-3
# ::node	0.1.2	1	0-1
# ::root	0	try-02
# ::edge	1	op1	afford-01	0.1.2	0.1	
# ::edge	afford-01	ARG0	you	0.1	0.1.0	
# ::edge	afford-01	ARG1	try-02	0.1	0	
# ::edge	aid-01	ARG1	legal	0.0	0.0.0	
# ::edge	possible	domain	afford-01	0.1.1	0.1	
# ::edge	try-02	ARG1	aid-01	0	0.0	
(t / try-02 
      :ARG1 (a2 / aid-01 
            :ARG1 (l / legal)) 
      :ARG1-of (a / afford-01 
            :ARG0 (y / you) 
            :domain-of (p / possible) 
            :op-of 1))

# ::snt Tell your ex that all communication needs to go through the lawyer.
# ::tok Tell your ex that all communication needs to go through the lawyer .
# ::alignments 5-6|0.0.0.0 6-7|0.0 11-12|0.0.0.1 4-5|0.0.0.0.0 0-1|0 8-9|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:18.461
# ::node	0	tell-01	0-1
# ::node	0.0	need-01	6-7
# ::node	0.0.0	go-12	8-9
# ::node	0.0.0.0	communicate-01	5-6
# ::node	0.0.0.0.0	all	4-5
# ::node	0.0.0.1	lawyer	11-12
# ::root	0	tell-01
# ::edge	communicate-01	ARG6	all	0.0.0.0	0.0.0.0.0	
# ::edge	go-12	ARG0	communicate-01	0.0.0	0.0.0.0	
# ::edge	go-12	ARG1	lawyer	0.0.0	0.0.0.1	
# ::edge	need-01	ARG1	go-12	0.0	0.0.0	
# ::edge	tell-01	ARG1	need-01	0	0.0	
(t / tell-01 
      :ARG1 (n / need-01 
            :ARG1 (g / go-12 
                  :ARG0 (c / communicate-01 
                        :ARG6 (a / all)) 
                  :ARG1 (l / lawyer))))

# ::snt The bus drivers want exact change, the till people want exact change, the people who deliver your food want exact change...
# ::tok The bus drivers want exact change , the till people want exact change , the people who deliver your food want exact change ...
# ::alignments 5-6|0.0.1.1.1 8-9|0.0.0.0 11-12|0.0.1.2 20-21|0.0.1.0.0.0 2-3|0.0.1.1.0 17-18|0.0.1.0 4-5|0.0.1.1.1.0 12-13|0.0.1 1-2|0.0.1.1.0.0 21-22|0.0.1.0.0.0.0.0 22-23|0.0.1.0.0.0.0 3-4|0.0.1.1 10-11|0+0.0 9-10|0.0.0 19-20|0.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:19.965
# ::node	0	cause-01	10-11
# ::node	0.0	want-01	10-11
# ::node	0.0.0	people	9-10
# ::node	0.0.0.0	till-01	8-9
# ::node	0.0.1	change-01	12-13
# ::node	0.0.1.0	deliver-01	17-18
# ::node	0.0.1.0.0	food	19-20
# ::node	0.0.1.0.0.0	want-01	20-21
# ::node	0.0.1.0.0.0.0	change-01	22-23
# ::node	0.0.1.0.0.0.0.0	exact	21-22
# ::node	0.0.1.1	want-01	3-4
# ::node	0.0.1.1.0	driver	2-3
# ::node	0.0.1.1.0.0	bus	1-2
# ::node	0.0.1.1.1	change-01	5-6
# ::node	0.0.1.1.1.0	exact	4-5
# ::node	0.0.1.2	exact	11-12
# ::root	0	cause-01
# ::edge	cause-01	ARG1	want-01	0	0.0	
# ::edge	change-01	ARG1	deliver-01	0.0.1	0.0.1.0	
# ::edge	change-01	ARG1	exact	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	change-01	ARG1	exact	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	change-01	ARG2	want-01	0.0.1	0.0.1.1	
# ::edge	change-01	mod	exact	0.0.1	0.0.1.2	
# ::edge	deliver-01	ARG1	food	0.0.1.0	0.0.1.0.0	
# ::edge	driver	mod	bus	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	till-01	ARG1	people	0.0.0.0	0.0.0	
# ::edge	want-01	ARG0	driver	0.0.1.1	0.0.1.1.0	
# ::edge	want-01	ARG0	food	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	want-01	ARG0	people	0.0	0.0.0	
# ::edge	want-01	ARG1	change-01	0.0	0.0.1	
# ::edge	want-01	ARG1	change-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	want-01	ARG1	change-01	0.0.1.1	0.0.1.1.1	
(c4 / cause-01 
      :ARG1 (w3 / want-01 
            :ARG0 (p / people 
                  :ARG1-of (t / till-01)) 
            :ARG1 (c2 / change-01 
                  :ARG1 (d2 / deliver-01 
                        :ARG1 (f / food 
                              :ARG0-of (w / want-01 
                                    :ARG1 (c3 / change-01 
                                          :ARG1 (e3 / exact))))) 
                  :ARG2 (w2 / want-01 
                        :ARG0 (d / driver 
                              :mod (b / bus)) 
                        :ARG1 (c / change-01 
                              :ARG1 (e2 / exact))) 
                  :mod (e / exact))))

# ::snt Do they not realise that you don't get piles of change from the bank,
# ::tok Do they not realise that you do n't get piles of change from the bank ,
# ::alignments 8-9|0.0 0-1|0.0.0 5-6|0 11-12|0.0.1.0 14-15|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:20.261
# ::node	0	you	5-6
# ::node	0.0	get-01	8-9
# ::node	0.0.0	do-02	0-1
# ::node	0.0.1	bank	14-15
# ::node	0.0.1.0	change-01	11-12
# ::root	0	you
(y / you 
      :ARG1-of (g / get-01 
            :ARG1-of (d / do-02) 
            :ARG2 (b / bank 
                  :ARG1-of (c / change-01))))

# ::snt someone somewhere is going to have to take the notes?
# ::tok someone somewhere is going to have to take the notes ?
# ::alignments 7-8|0.1.0 0-1|0.0 1-2|0.2 5-6|0.1 9-10|0.1.0.0 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:20.422
# ::node	0	go-04	3-4
# ::node	0.0	someone	0-1
# ::node	0.1	have-02	5-6
# ::node	0.1.0	take-02	7-8
# ::node	0.1.0.0	note	9-10
# ::node	0.2	somewhere	1-2
# ::root	0	go-04
# ::edge	go-04	ARG0	someone	0	0.0	
# ::edge	go-04	ARG1	have-02	0	0.1	
# ::edge	go-04	mod	somewhere	0	0.2	
# ::edge	have-02	ARG1	take-02	0.1	0.1.0	
# ::edge	take-02	ARG1	note	0.1.0	0.1.0.0	
(g / go-04 
      :ARG0 (s / someone) 
      :ARG1 (h / have-02 
            :ARG1 (t / take-02 
                  :ARG1 (n / note))) 
      :mod (s2 / somewhere))

# ::snt People are getting lazy.
# ::tok People are getting lazy .
# ::alignments 2-3|0.0 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:20.467
# ::node	0	lazy	3-4
# ::node	0.0	get-03	2-3
# ::root	0	lazy
(l / lazy 
      :ARG1-of (g / get-03))

# ::snt I do like to get as near as possible as i woudn't like to be couting coppers all day
# ::tok I do like to get as near as possible as i woud n't like to be couting coppers all day
# ::alignments 19-20|0.0.1.1.0.0.0.0.0 16-17|0.0.1.1.0.0 18-19|0.0.1.1.0.0.0.0 4-5|0.0 0-1|0.0.1.0 1-2|0.0.1 10-11|0.0.0 8-9|0 17-18|0.0.1.1.0.0.0 2-3|0.0.1.1 5-6|0.0.3 6-7|0.0.2 13-14|0.0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:21.170
# ::node	0	possible	8-9
# ::node	0.0	get-03	4-5
# ::node	0.0.0	i	10-11
# ::node	0.0.1	do-02	1-2
# ::node	0.0.1.0	i	0-1
# ::node	0.0.1.1	like-01	2-3
# ::node	0.0.1.1.0	like-01	13-14
# ::node	0.0.1.1.0.0	couting-01	16-17
# ::node	0.0.1.1.0.0.0	copper-01	17-18
# ::node	0.0.1.1.0.0.0.0	all	18-19
# ::node	0.0.1.1.0.0.0.0.0	day	19-20
# ::node	0.0.2	near	6-7
# ::node	0.0.3	as-well	5-6
# ::root	0	possible
(p / possible 
      :ARG0-of (g / get-03 
            :ARG1 (i2 / i) 
            :ARG1-of (d2 / do-02 
                  :ARG0 (i / i) 
                  :time (l / like-01 
                        :ARG1 (l2 / like-01 
                              :ARG1 (c / couting-01 
                                    :ARG1 (c2 / copper-01 
                                          :ARG1 (a / all 
                                                :quant-of (d / day))))))) 
            :ARG6 (n / near) 
            :calendar-of (a2 / as-well)))

# ::snt take a £20 note on the bus, they just tell you to get on cos theyre lazy as hell
# ::tok take a GBP 20 note on the bus , they just tell you to get on cos theyre lazy as hell
# ::alignments 2-3|0.2.0.0.0.0.0+0.2.0.0.0.0.1+0.2.0.0.0.0+0.2.0.0.0 0-1|0.2.0.0.0.1.0 1-2|0.2.0.0.0.1 3-4|0.2.0.0 12-13|0.3 18-19|0.2.1 7-8|0.0 10-11|0.1 11-12|0 20-21|0.2.1.0 4-5|0.2.0 14-15|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:49.843
# ::node	0	tell-01	11-12
# ::node	0.0	bus	7-8
# ::node	0.1	just	10-11
# ::node	0.2	get-01	14-15
# ::node	0.2.0	note	4-5
# ::node	0.2.0.0	20	3-4
# ::node	0.2.0.0.0	law	2-3
# ::node	0.2.0.0.0.0	name	2-3
# ::node	0.2.0.0.0.0.0	"Act"	2-3
# ::node	0.2.0.0.0.0.1	"FISA"	2-3
# ::node	0.2.0.0.0.1	ah-01	1-2
# ::node	0.2.0.0.0.1.0	take-01	0-1
# ::node	0.2.1	lay-01	18-19
# ::node	0.2.1.0	heel-01	20-21
# ::node	0.3	you	12-13
# ::root	0	tell-01
# ::edge	20	quant	law	0.2.0.0	0.2.0.0.0	
# ::edge	ah-01	ARG1	take-01	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	get-01	ARG0	note	0.2	0.2.0	
# ::edge	get-01	ARG1	tell-01	0.2	0	
# ::edge	heel-01	ARG1	lay-01	0.2.1.0	0.2.1	
# ::edge	law	name	name	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	law	purpose	ah-01	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	lay-01	ARG1	get-01	0.2.1	0.2	
# ::edge	name	op1	"Act"	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	name	op2	"FISA"	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	note	quant	20	0.2.0	0.2.0.0	
# ::edge	tell-01	ARG0	bus	0	0.0	
# ::edge	tell-01	ARG1	just	0	0.1	
# ::edge	you	purpose	tell-01	0.3	0	
(t2 / tell-01 
      :ARG0 (b / bus) 
      :ARG1 (j / just) 
      :ARG1-of (g / get-01 
            :ARG0 (n2 / note 
                  :quant (2 / 20 
                        :quant (l / law 
                              :name (n / name 
                                    :op1 "Act" 
                                    :op2 "FISA") 
                              :purpose (a / ah-01 
                                    :ARG1 (t / take-01))))) 
            :ARG1-of (l2 / lay-01 
                  :ARG1-of (h / heel-01))) 
      :purpose-of (y / you))

# ::snt its illegal to pay certain amounts in loads of coins. such as you can only pay something like 30pence in 1ps
# ::tok its illegal to pay certain amounts in loads of coins . such as you can only pay something like 30pence in 1ps
# ::alignments 17-18|0.0.0.0 7-8|0.0.0.1 9-10|0.0.0.1.1 15-16|0.0 16-17|0.0.0 5-6|0.0.0.1.0.0 4-5|0.0.0.1.0.0.0 3-4|0.0.0.1.0 14-15|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:50.197
# ::node	0	possible	14-15
# ::node	0.0	only	15-16
# ::node	0.0.0	pay-01	16-17
# ::node	0.0.0.0	something	17-18
# ::node	0.0.0.1	load	7-8
# ::node	0.0.0.1.0	pay-01	3-4
# ::node	0.0.0.1.0.0	amount	5-6
# ::node	0.0.0.1.0.0.0	certain	4-5
# ::node	0.0.0.1.1	coin	9-10
# ::root	0	possible
# ::edge	amount	mod	certain	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	load	location	coin	0.0.0.1	0.0.0.1.1	
# ::edge	pay-01	ARG0	load	0.0.0.1.0	0.0.0.1	
# ::edge	pay-01	ARG0	only	0.0.0	0.0	
# ::edge	pay-01	ARG1	amount	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	pay-01	ARG1	something	0.0.0	0.0.0.0	
# ::edge	pay-01	ARG3	load	0.0.0	0.0.0.1	
# ::edge	possible	op1	only	0	0.0	
(p3 / possible 
      :op1 (o / only 
            :ARG0-of (p / pay-01 
                  :ARG1 (s / something) 
                  :ARG3 (l / load 
                        :ARG0-of (p2 / pay-01 
                              :ARG1 (a / amount 
                                    :mod (c2 / certain))) 
                        :location (c / coin)))))

# ::snt Hello I started university in September, didn't immediately gel with it obviously like most people.
# ::tok Hello I started university in September , did n't immediately gel with it obviously like most people .
# ::alignments 15-16|0.0.0 0-1|0.0.2 2-3|0.0 13-14|0.0.2.1.0 9-10|0 16-17|0.0.2.0 0-6|0.0.2.1.1+0.0.2.1 3-4|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:51.117
# ::node	0	immediate	9-10
# ::node	0.0	start-01	2-3
# ::node	0.0.0	most	15-16
# ::node	0.0.1	university	3-4
# ::node	0.0.2	heel-01	0-1
# ::node	0.0.2.0	people	16-17
# ::node	0.0.2.1	date-entity	0-6
# ::node	0.0.2.1.0	obviously	13-14
# ::node	0.0.2.1.1	9	0-6
# ::root	0	immediate
(i / immediate 
      :ARG6-of (s / start-01 
            :ARG0 (m / most) 
            :ARG1 (u / university) 
            :ARG6-of (h / heel-01 
                  :ARG0 (p / people) 
                  :ARG1 (d / date-entity 
                        :mod (o / obviously) 
                        :month 9))))

# ::snt However, I knew it would take me some time to adjust, because I have always been very introverted, and shy and especially anxious and all the rest of it.
# ::tok However , I knew it would take me some time to adjust , because I have always been very introverted , and shy and especially anxious and all the rest of it .
# ::alignments 11-12|0.0.0 18-19|0.0.0.0.1 25-26|0.0.0.0 21-22|0.0.0.0.3.0 26-27|0.0.0.0.3.1.0 0-1|0.1.0.0+0.1.0+0.1 27-28|0.0.0.0.0 16-17|0.0.0.0.1.0 24-25|0.0.0.0.2 29-30|0.0.0.0.3.1 3-4|0 6-7|0.0 8-9|0.0.1 23-24|0.0.0.0.3 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:53.974
# ::node	0	know-01	3-4
# ::node	0.0	take-10	6-7
# ::node	0.0.0	adjust-01	11-12
# ::node	0.0.0.0	annul-01	25-26
# ::node	0.0.0.0.0	all	27-28
# ::node	0.0.0.0.1	very	18-19
# ::node	0.0.0.0.1.0	always	16-17
# ::node	0.0.0.0.2	especially	24-25
# ::node	0.0.0.0.3	and	23-24
# ::node	0.0.0.0.3.0	and	21-22
# ::node	0.0.0.0.3.1	rest	29-30
# ::node	0.0.0.0.3.1.0	and	26-27
# ::node	0.0.1	some	8-9
# ::node	0.1	country	0-1
# ::node	0.1.0	name	0-1
# ::node	0.1.0.0	"Russia"	0-1
# ::root	0	know-01
# ::edge	adjust-01	ARG1	annul-01	0.0.0	0.0.0.0	
# ::edge	always	calendar	very	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	and	op1	and	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	and	op1	rest	0.0.0.0.3.1.0	0.0.0.0.3.1	
# ::edge	and	op2	annul-01	0.0.0.0.3	0.0.0.0	
# ::edge	and	op3	rest	0.0.0.0.3	0.0.0.0.3.1	
# ::edge	annul-01	ARG1	all	0.0.0.0	0.0.0.0.0	
# ::edge	annul-01	ARG6	very	0.0.0.0	0.0.0.0.1	
# ::edge	annul-01	degree	especially	0.0.0.0	0.0.0.0.2	
# ::edge	country	name	name	0.1	0.1.0	
# ::edge	know-01	ARG1	take-10	0	0.0	
# ::edge	know-01	ARG6	country	0	0.1	
# ::edge	name	op1	"Russia"	0.1.0	0.1.0.0	
# ::edge	take-10	ARG1	adjust-01	0.0	0.0.0	
# ::edge	take-10	ARG6	some	0.0	0.0.1	
(k / know-01 
      :ARG1 (t / take-10 
            :ARG1 (a / adjust-01 
                  :ARG1 (a2 / annul-01 
                        :ARG1 (a5 / all) 
                        :ARG6 (v / very 
                              :calendar-of (a6 / always)) 
                        :degree (e / especially) 
                        :op-of (a7 / and 
                              :op1 (a3 / and) 
                              :op2 (r / rest 
                                    :op-of (a4 / and))))) 
            :ARG6 (s / some)) 
      :ARG6 (c / country 
            :name (n / name 
                  :op1 "Russia")))

# ::snt The first night I was here, all my housemates and I went out and it was the hardest thing I have ever ever had to do.
# ::tok The first night I was here , all my housemates and I went out and it was the hardest thing I have ever ever had to do .
# ::alignments 23-24|0.1.0 7-8|0.1.0.0.0.2 17-18|0.1.0.0.0.0.0.0.0+0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 10-11|0 0-2|0.1.0.0.0.1.0.0.0+0.1.0.0.0.1.0.0 22-23|0.1.1.0+0.1.1+0.1 2-3|0.1.0.0.0.1.0 11-12|0.0 5-6|0.1.0.0.0.1 13-14|0.0.0 20-21|0.1.0.0 26-27|0.1.0.0.0 19-20|0.1.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:55.107
# ::node	0	and	10-11
# ::node	0.0	i	11-12
# ::node	0.0.0	out	13-14
# ::node	0.1	country	22-23
# ::node	0.1.0	ever	23-24
# ::node	0.1.0.0	i	20-21
# ::node	0.1.0.0.0	do-02	26-27
# ::node	0.1.0.0.0.0	thing	19-20
# ::node	0.1.0.0.0.0.0	country	17-18
# ::node	0.1.0.0.0.0.0.0	name	17-18
# ::node	0.1.0.0.0.0.0.0.0	"North"	17-18
# ::node	0.1.0.0.0.1	here	5-6
# ::node	0.1.0.0.0.1.0	night	2-3
# ::node	0.1.0.0.0.1.0.0	ordinal-entity	0-2
# ::node	0.1.0.0.0.1.0.0.0	1	0-2
# ::node	0.1.0.0.0.2	all	7-8
# ::node	0.1.1	name	22-23
# ::node	0.1.1.0	"Mexico"	22-23
# ::root	0	and
# ::edge	all	op1	do-02	0.1.0.0.0.2	0.1.0.0.0	
# ::edge	and	op1	i	0	0.0	
# ::edge	and	op2	country	0	0.1	
# ::edge	country	name	name	0.1	0.1.1	
# ::edge	country	name	name	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	do-02	ARG0	i	0.1.0.0.0	0.1.0.0	
# ::edge	do-02	ARG1	thing	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	ever	degree	country	0.1.0	0.1	
# ::edge	ever	domain	i	0.1.0	0.1.0.0	
# ::edge	here	op1	do-02	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	name	op1	"Mexico"	0.1.1	0.1.1.0	
# ::edge	name	op1	"North"	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0	
# ::edge	night	calendar	here	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	night	mod	ordinal-entity	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	ordinal-entity	value	1	0.1.0.0.0.1.0.0	0.1.0.0.0.1.0.0.0	
# ::edge	out	calendar	i	0.0.0	0.0	
# ::edge	thing	mod	country	0.1.0.0.0.0	0.1.0.0.0.0.0	
(a2 / and 
      :op1 (i / i 
            :calendar-of (o2 / out)) 
      :op2 (c2 / country 
            :degree-of (e / ever 
                  :domain (i2 / i 
                        :ARG0-of (d / do-02 
                              :ARG1 (t / thing 
                                    :mod (c / country 
                                          :name (n / name 
                                                :op1 "North"))) 
                              :op-of (h / here 
                                    :calendar-of (n3 / night 
                                          :mod (o / ordinal-entity 
                                                :value 1))) 
                              :op-of (a / all)))) 
            :name (n2 / name 
                  :op1 "Mexico")))

# ::snt To go into the SU bar on my own, sober.
# ::tok To go into the SU bar on my own , sober .
# ::alignments 5-6|0.0 1-2|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:55.205
# ::node	0	go-06	1-2
# ::node	0.0	bar	5-6
# ::root	0	go-06
# ::edge	go-06	ARG1	bar	0	0.0	
(g / go-06 
      :ARG1 (b / bar))

# ::snt Anyways more to the point; Here are the facts:
# ::tok Anyways more to the point ; Here are the facts :
# ::alignments 1-2|0.0 6-7|0.1 4-5|0 9-10|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:55.302
# ::node	0	point	4-5
# ::node	0.0	more	1-2
# ::node	0.1	here	6-7
# ::node	0.2	fact	9-10
# ::root	0	point
# ::edge	here	calendar	point	0.1	0	
# ::edge	point	calendar	more	0	0.0	
# ::edge	point	location	fact	0	0.2	
(p / point 
      :calendar (m / more) 
      :calendar-of (h / here) 
      :location (f / fact))

# ::snt - I am not enjoying university having been here 5months or so; I'm disillusioned by the course, not enjoying the projects set, and I don't like the course delivery as much.
# ::tok - I am not enjoying university having been here 5months or so ; I 'm disillusioned by the course , not enjoying the projects set , and I do n't like the course delivery as much .
# ::alignments 30-31|0.1.0 13-14|0.0.0.1.0.1 21-22|0.0.0.1 24-25|0.0.0 32-33|0.1.0.0.1 15-16|0.0.0.1.0 23-24|0.0.0.0 33-34|0.1.0.0 8-9|0.1 27-28|0.1.0.0.0 18-19|0.0.0.1.0.0 5-6|0.0 35-36|0.1.0.0.0.0 4-5|0 10-11|0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:57.703
# ::node	0	enjoy-01	4-5
# ::node	0.0	university	5-6
# ::node	0.0.0	set-01	24-25
# ::node	0.0.0.0	project	23-24
# ::node	0.0.0.1	enjoy-01	21-22
# ::node	0.0.0.1.0	disillusion-01	15-16
# ::node	0.0.0.1.0.0	course	18-19
# ::node	0.0.0.1.0.1	i	13-14
# ::node	0.1	here	8-9
# ::node	0.1.0	like-01	30-31
# ::node	0.1.0.0	deliver-01	33-34
# ::node	0.1.0.0.0	i	27-28
# ::node	0.1.0.0.0.0	much	35-36
# ::node	0.1.0.0.1	course	32-33
# ::node	0.1.1	or	10-11
# ::root	0	enjoy-01
# ::edge	deliver-01	ARG0	i	0.1.0.0	0.1.0.0.0	
# ::edge	deliver-01	ARG1	course	0.1.0.0	0.1.0.0.1	
# ::edge	disillusion-01	ARG0	course	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	disillusion-01	ARG1	i	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	disillusion-01	purpose	enjoy-01	0.0.0.1.0	0.0.0.1	
# ::edge	enjoy-01	ARG1	set-01	0.0.0.1	0.0.0	
# ::edge	enjoy-01	ARG1	university	0	0.0	
# ::edge	enjoy-01	ARG6	here	0	0.1	
# ::edge	like-01	ARG0	here	0.1.0	0.1	
# ::edge	like-01	ARG1	deliver-01	0.1.0	0.1.0.0	
# ::edge	much	domain	i	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	or	mod	here	0.1.1	0.1	
# ::edge	set-01	ARG0	university	0.0.0	0.0	
# ::edge	set-01	ARG1	project	0.0.0	0.0.0.0	
(e2 / enjoy-01 
      :ARG1 (u / university 
            :ARG0-of (s / set-01 
                  :ARG1 (p / project) 
                  :ARG1-of (e / enjoy-01 
                        :purpose-of (d / disillusion-01 
                              :ARG0 (c2 / course) 
                              :ARG1 (i / i))))) 
      :ARG6 (h / here 
            :ARG0-of (l / like-01 
                  :ARG1 (d2 / deliver-01 
                        :ARG0 (i2 / i 
                              :domain-of (m / much)) 
                        :ARG1 (c / course))) 
            :mod-of (o / or)))

# ::snt The University made out it was much better than it seems.
# ::tok The University made out it was much better than it seems .
# ::alignments 10-11|0.1.0 7-8|0+0.1 6-7|0.0 1-2|0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:58:57.824
# ::node	0	more	7-8
# ::node	0.0	much	6-7
# ::node	0.1	good	7-8
# ::node	0.1.0	seem	10-11
# ::node	0.1.1	university	1-2
# ::root	0	more
# ::edge	good	compared-to	seem	0.1	0.1.0	
# ::edge	good	degree	more	0.1	0	
# ::edge	more	degree	much	0	0.0	
# ::edge	university	poss	good	0.1.1	0.1	
(m / more 
      :degree (m2 / much) 
      :degree-of (g / good 
            :compared-to (s / seem) 
            :poss-of (u / university)))

# ::snt - I had a bad start to the first term; student finance was delayed, adding to my stress levels, I was so worried I was unable to progress with work, conclusively it all piled up.
# ::tok - I had a bad start to the first term ; student finance was delayed , adding to my stress levels , I was so worried I was unable to progress with work , conclusively it all piled up .
# ::alignments 32-33|0.0.1.0.0.0.0 37-38|0.0.1.0.0.0.0.0 4-5|0.1.0.0 16-17|0.0 11-12|0.0.1.0.0+0.0.1.0.0.0 12-13|0.0.1.0 14-15|0.0.1 30-31|0.0.1.0.0.0.0.1 5-6|0.1.0 19-20|0.0.0 36-37|0.0.1.0.0.0.0.0.0 24-25|0.0.1.0.0.0.0.1.0.0 0-9|0.2+0 20-21|0.0.0.0 9-10|0.1 25-26|0.0.1.0.0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:01.122
# ::node	0	ordinal-entity	0-9
# ::node	0.0	add-02	16-17
# ::node	0.0.0	stress	19-20
# ::node	0.0.0.0	level	20-21
# ::node	0.0.1	delay-01	14-15
# ::node	0.0.1.0	finance	12-13
# ::node	0.0.1.0.0	study-01	11-12
# ::node	0.0.1.0.0.0	person	11-12
# ::node	0.0.1.0.0.0.0	work-01	32-33
# ::node	0.0.1.0.0.0.0.0	pile-04	37-38
# ::node	0.0.1.0.0.0.0.0.0	all	36-37
# ::node	0.0.1.0.0.0.0.1	progress-01	30-31
# ::node	0.0.1.0.0.0.0.1.0	worry-01	25-26
# ::node	0.0.1.0.0.0.0.1.0.0	sob-01	24-25
# ::node	0.1	term	9-10
# ::node	0.1.0	start-01	5-6
# ::node	0.1.0.0	bad	4-5
# ::node	0.2	1	0-9
# ::root	0	ordinal-entity
# ::edge	add-02	ARG1	ordinal-entity	0.0	0	
# ::edge	add-02	ARG2	stress	0.0	0.0.0	
# ::edge	add-02	ARG6	delay-01	0.0	0.0.1	
# ::edge	delay-01	ARG1	finance	0.0.1	0.0.1.0	
# ::edge	level	mod	stress	0.0.0.0	0.0.0	
# ::edge	ordinal-entity	op1	term	0	0.1	
# ::edge	ordinal-entity	value	1	0	0.2	
# ::edge	pile-04	ARG1	all	0.0.1.0.0.0.0.0	0.0.1.0.0.0.0.0.0	
# ::edge	progress-01	ARG1	work-01	0.0.1.0.0.0.0.1	0.0.1.0.0.0.0	
# ::edge	sob-01	ARG1	worry-01	0.0.1.0.0.0.0.1.0.0	0.0.1.0.0.0.0.1.0	
# ::edge	start-01	ARG1	term	0.1.0	0.1	
# ::edge	start-01	mod	bad	0.1.0	0.1.0.0	
# ::edge	study-01	ARG0	person	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	study-01	ARG1	finance	0.0.1.0.0	0.0.1.0	
# ::edge	work-01	ARG0	person	0.0.1.0.0.0.0	0.0.1.0.0.0	
# ::edge	work-01	ARG1	pile-04	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	worry-01	ARG1	progress-01	0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.0.1	
(o / ordinal-entity 
      :ARG1-of (a / add-02 
            :ARG2 (s3 / stress 
                  :mod-of (l / level)) 
            :ARG6 (d / delay-01 
                  :ARG1 (f / finance 
                        :ARG1-of (s / study-01 
                              :ARG0 (p2 / person 
                                    :ARG0-of (w / work-01 
                                          :ARG1 (p / pile-04 
                                                :ARG1 (a2 / all)) 
                                          :ARG1-of (p3 / progress-01 
                                                :ARG1-of (w2 / worry-01 
                                                      :ARG1-of (s4 / sob-01))))))))) 
      :op1 (t / term 
            :ARG1-of (s2 / start-01 
                  :mod (b / bad))) 
      :value 1)

# ::snt - I was assigned a counselor through the university; had seen her for about 5-6weeks (block sessions), if I'm honest it didn't really work; because I was never open with her.
# ::tok - I was assigned a counselor through the university ; had seen her for about 5-6weeks ( block sessions ) , if I 'm honest it did n't really work ; because I was never open with her .
# ::alignments 3-4|0.1.1 28-29|0.0.1.0 29-30|0.0.1 31-32|0.0.2 8-9|0.1.0 11-12|0 5-6|0.1 35-36|0.0 15-16|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:17.347
# ::node	0	see-01	11-12
# ::node	0.0	open-01	35-36
# ::node	0.0.0	5-6week	15-16
# ::node	0.0.1	work-01	29-30
# ::node	0.0.1.0	real	28-29
# ::node	0.0.2	accuse-01	31-32
# ::node	0.1	counsel-01	5-6
# ::node	0.1.0	university	8-9
# ::node	0.1.1	assign-01	3-4
# ::root	0	see-01
# ::edge	accuse-01	ARG1	open-01	0.0.2	0.0	
# ::edge	assign-01	ARG1	counsel-01	0.1.1	0.1	
# ::edge	counsel-01	ARG0	university	0.1	0.1.0	
# ::edge	counsel-01	ARG1	see-01	0.1	0	
# ::edge	open-01	ARG0	5-6week	0.0	0.0.0	
# ::edge	open-01	ARG1	work-01	0.0	0.0.1	
# ::edge	see-01	ARG1	open-01	0	0.0	
# ::edge	work-01	manner	real	0.0.1	0.0.1.0	
(s / see-01 
      :ARG1 (o / open-01 
            :ARG0 5-6week 
            :ARG1 (w / work-01 
                  :manner (r / real)) 
            :ARG1-of (a2 / accuse-01)) 
      :ARG1-of (c / counsel-01 
            :ARG0 (u / university) 
            :ARG1-of (a / assign-01)))

# ::snt Only half-halfheartedly.
# ::tok Only half - halfheartedly .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:17.386
# ::node	0	only	0-1
# ::root	0	only
(o / only)

# ::snt - Now the work-load is up to my neck, I have major deadlines to hit, I am depressed, the anxiety is resulting in me feeling miserable all the time.
# ::tok - Now the work - load is up to my neck , I have major deadlines to hit , I am depressed , the anxiety is resulting in me feeling miserable all the time .
# ::alignments 29-30|0.0.0.2 12-13|0.1.0 31-32|0.0.0.2.1 13-14|0.1 18-19|0 24-25|0.0.0 27-28|0.0.0.2.0 8-9|0.0.0.0 0-2|0.0.0.1.0+0.0.0.1 15-16|0.1.0.0 22-23|0.0 5-6|0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:19.297
# ::node	0	be-located-at-91	18-19
# ::node	0.0	anxiety	22-23
# ::node	0.0.0	result-01	24-25
# ::node	0.0.0.0	neck	8-9
# ::node	0.0.0.1	date-entity	0-2
# ::node	0.0.0.1.0	now	0-2
# ::node	0.0.0.2	all	29-30
# ::node	0.0.0.2.0	feel-01	27-28
# ::node	0.0.0.2.1	time	31-32
# ::node	0.1	deadline	13-14
# ::node	0.1.0	major	12-13
# ::node	0.1.0.0	hit-01	15-16
# ::node	0.1.0.0.0	up-to	5-6
# ::root	0	be-located-at-91
# ::edge	all	op1	result-01	0.0.0.2	0.0.0	
# ::edge	be-located-at-91	ARG0	anxiety	0	0.0	
# ::edge	be-located-at-91	ARG1	deadline	0	0.1	
# ::edge	date-entity	time	now	0.0.0.1	0.0.0.1.0	
# ::edge	deadline	calendar	major	0.1	0.1.0	
# ::edge	feel-01	ARG6	all	0.0.0.2.0	0.0.0.2	
# ::edge	hit-01	ARG0	major	0.1.0.0	0.1.0	
# ::edge	hit-01	ARG1	up-to	0.1.0.0	0.1.0.0.0	
# ::edge	result-01	ARG0	neck	0.0.0	0.0.0.0	
# ::edge	result-01	ARG1	date-entity	0.0.0	0.0.0.1	
# ::edge	result-01	ARG6	anxiety	0.0.0	0.0	
# ::edge	time	calendar	all	0.0.0.2.1	0.0.0.2	
(b / be-located-at-91 
      :ARG0 (a2 / anxiety 
            :ARG6-of (r / result-01 
                  :ARG0 (n / neck) 
                  :ARG1 (d2 / date-entity 
                        :time (n2 / now)) 
                  :op-of (a / all 
                        :ARG6-of (f / feel-01) 
                        :calendar-of (t / time)))) 
      :ARG1 (d / deadline 
            :calendar (m / major 
                  :ARG0-of (h / hit-01 
                        :ARG1 (u / up-to)))))

# ::snt In no longer have a counselor because you can only have them for so many sessions at a time, and I doubt it will help much this time, if it hasn't already.
# ::tok In no longer have a counselor because you can only have them for so many sessions at a time , and I doubt it will help much this time , if it has n't already .
# ::alignments 14-15|0.0.2.1 5-6|0.0.1 28-29|0.0.1.0.0.1.0 21-22|0.0.1.0.0.0 9-10|0.0.3 8-9|0 34-35|0.0.0 10-11|0.0 15-16|0.0.2 26-27|0.0.1.0.0.1.1 18-19|0.0.2.0 2-3|0.0.1.0.1 22-23|0.0.1.0.0 13-14|0.0.2.1.0 25-26|0.0.1.0.0.1 27-28|0.0.1.0.0.1.0.0 3-4|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:29.469
# ::node	0	possible	8-9
# ::node	0.0	have-03	10-11
# ::node	0.0.0	already	34-35
# ::node	0.0.1	counsel-01	5-6
# ::node	0.0.1.0	have-03	3-4
# ::node	0.0.1.0.0	doubt-01	22-23
# ::node	0.0.1.0.0.0	i	21-22
# ::node	0.0.1.0.0.1	help-01	25-26
# ::node	0.0.1.0.0.1.0	time	28-29
# ::node	0.0.1.0.0.1.0.0	this	27-28
# ::node	0.0.1.0.0.1.1	much	26-27
# ::node	0.0.1.0.1	-	2-3
# ::node	0.0.2	session	15-16
# ::node	0.0.2.0	time	18-19
# ::node	0.0.2.1	many	14-15
# ::node	0.0.2.1.0	sob-01	13-14
# ::node	0.0.3	only	9-10
# ::root	0	possible
# ::edge	counsel-01	ARG1	have-03	0.0.1	0.0	
# ::edge	doubt-01	ARG0	i	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	doubt-01	ARG1	help-01	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	have-03	ARG1	already	0.0	0.0.0	
# ::edge	have-03	ARG1	counsel-01	0.0.1.0	0.0.1	
# ::edge	have-03	ARG2	doubt-01	0.0.1.0	0.0.1.0.0	
# ::edge	have-03	ARG6	-	0.0.1.0	0.0.1.0.1	
# ::edge	have-03	location	session	0.0	0.0.2	
# ::edge	have-03	mod	only	0.0	0.0.3	
# ::edge	help-01	ARG1	time	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	help-01	ARG6	much	0.0.1.0.0.1	0.0.1.0.0.1.1	
# ::edge	possible	domain	have-03	0	0.0	
# ::edge	session	prep-in	time	0.0.2	0.0.2.0	
# ::edge	session	quant	many	0.0.2	0.0.2.1	
# ::edge	sob-01	ARG1	many	0.0.2.1.0	0.0.2.1	
# ::edge	time	mod	this	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
(p / possible 
      :domain (h / have-03 
            :ARG1 (a / already) 
            :ARG1-of (c / counsel-01 
                  :ARG1-of (h3 / have-03 
                        :ARG2 (d / doubt-01 
                              :ARG0 (i / i) 
                              :ARG1 (h2 / help-01 
                                    :ARG1 (t / time 
                                          :mod (t3 / this)) 
                                    :ARG6 (m2 / much))) 
                        :ARG6 (- / -))) 
            :location (s / session 
                  :prep-in (t2 / time) 
                  :quant (m / many 
                        :ARG1-of (s2 / sob-01))) 
            :mod (o / only)))

# ::snt - I lack motivation, don't feel comfortable with any of my lecturers, feel like I want to give in, but can't bring myself to it, because I will end up in a dead end job, and I aspired to 'be someone'.
# ::tok - I lack motivation , do n't feel comfortable with any of my lecturers , feel like I want to give in , but ca n't bring myself to it , because I will end up in a dead end job , and I aspired to ' be someone ' .
# ::alignments 15-16|0.0.0.0 23-24|0 1-2|0.0.0 17-18|0.0.0.0.0.0 27-28|0.2.0 34-35|0.2.2 39-40|0.2.2.0.0 44-45|0.0.0.1 7-8|0.1 24-25|0.2.1 20-21|0.0.0.0.0.1 40-41|0.2.2.0 8-9|0.1.0 48-49|0.0.0.1.0 3-4|0.0.1 18-19|0.0.0.0.0 26-27|0.2 46-47|0.0.0.1.1 2-3|0.0 38-39|0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:39.896
# ::node	0	bunt-01	23-24
# ::node	0.0	lack-01	2-3
# ::node	0.0.0	i	1-2
# ::node	0.0.0.0	feel-01	15-16
# ::node	0.0.0.0.0	want-01	18-19
# ::node	0.0.0.0.0.0	i	17-18
# ::node	0.0.0.0.0.1	give-09	20-21
# ::node	0.0.0.0.0.1.0	dead	38-39
# ::node	0.0.0.1	aspire-01	44-45
# ::node	0.0.0.1.0	someone	48-49
# ::node	0.0.0.1.1	x	46-47
# ::node	0.0.1	motivation	3-4
# ::node	0.1	feel-01	7-8
# ::node	0.1.0	comfortable	8-9
# ::node	0.2	bring-01	26-27
# ::node	0.2.0	myself	27-28
# ::node	0.2.1	possible	24-25
# ::node	0.2.2	end-03	34-35
# ::node	0.2.2.0	job	40-41
# ::node	0.2.2.0.0	end-01	39-40
# ::root	0	bunt-01
# ::edge	aspire-01	ARG1	i	0.0.0.1	0.0.0	
# ::edge	aspire-01	ARG2	someone	0.0.0.1	0.0.0.1.0	
# ::edge	aspire-01	ARG6	x	0.0.0.1	0.0.0.1.1	
# ::edge	bring-01	ARG1	myself	0.2	0.2.0	
# ::edge	bring-01	time	end-03	0.2	0.2.2	
# ::edge	bunt-01	ARG1	lack-01	0	0.0	
# ::edge	bunt-01	ARG2	feel-01	0	0.1	
# ::edge	bunt-01	ARG6	bring-01	0	0.2	
# ::edge	end-01	ARG1	job	0.2.2.0.0	0.2.2.0	
# ::edge	end-03	ARG1	job	0.2.2	0.2.2.0	
# ::edge	feel-01	ARG0	want-01	0.0.0.0	0.0.0.0.0	
# ::edge	feel-01	ARG1	comfortable	0.1	0.1.0	
# ::edge	feel-01	ARG1	i	0.0.0.0	0.0.0	
# ::edge	give-09	ARG1	dead	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	lack-01	ARG0	i	0.0	0.0.0	
# ::edge	lack-01	ARG1	motivation	0.0	0.0.1	
# ::edge	possible	domain	bring-01	0.2.1	0.2	
# ::edge	want-01	ARG0	i	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	want-01	ARG1	give-09	0.0.0.0.0	0.0.0.0.0.1	
(b / bunt-01 
      :ARG1 (l / lack-01 
            :ARG0 (i / i 
                  :ARG1-of (f / feel-01 
                        :ARG0 (w / want-01 
                              :ARG0 (i2 / i) 
                              :ARG1 (g / give-09 
                                    :ARG1 (d / dead)))) 
                  :ARG1-of (a / aspire-01 
                        :ARG2 (s / someone) 
                        :ARG6 (x / x))) 
            :ARG1 (m2 / motivation)) 
      :ARG2 (f2 / feel-01 
            :ARG1 (c / comfortable)) 
      :ARG6 (b2 / bring-01 
            :ARG1 (m / myself) 
            :domain-of (p / possible) 
            :time (e / end-03 
                  :ARG1 (j / job 
                        :ARG1-of (e2 / end-01)))))

# ::snt - I would rather be dead than not be educated, and live a life I want to live (and dropping out of uni would make matters worse).
# ::tok - I would rather be dead than not be educated , and live a life I want to live ( and dropping out of uni would make matters worse ) .
# ::alignments 9-10|0.0 3-4|0.0.0.1+0.0.0.2+0.0.0.3+0.0.0.4+0.0.0.0+0.0.0.5+0.0.0.6+0.0.0.7+0.0.0.8+0.0.0 11-12|0 12-13|0.1 14-15|0.1.0 15-16|0.1.0.0.0.0 18-19|0.1.0.0 16-17|0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:44.887
# ::node	0	and	11-12
# ::node	0.0	educate-01	9-10
# ::node	0.0.0	name	3-4
# ::node	0.0.0.0	"Universe"	3-4
# ::node	0.0.0.1	"Emergent"	3-4
# ::node	0.0.0.2	"and"	3-4
# ::node	0.0.0.3	"Biological"	3-4
# ::node	0.0.0.4	"Resources"	3-4
# ::node	0.0.0.5	"of"	3-4
# ::node	0.0.0.6	"Principles"	3-4
# ::node	0.0.0.7	"Computational"	3-4
# ::node	0.0.0.8	"the"	3-4
# ::node	0.1	live-01	12-13
# ::node	0.1.0	life	14-15
# ::node	0.1.0.0	live-01	18-19
# ::node	0.1.0.0.0	want-01	16-17
# ::node	0.1.0.0.0.0	i	15-16
# ::root	0	and
# ::edge	and	op1	educate-01	0	0.0	
# ::edge	and	op2	live-01	0	0.1	
# ::edge	educate-01	ARG1	name	0.0	0.0.0	
# ::edge	live-01	ARG1	life	0.1	0.1.0	
# ::edge	live-01	ARG1	life	0.1.0.0	0.1.0	
# ::edge	name	op0	"Universe"	0.0.0	0.0.0.0	
# ::edge	name	op1	"Emergent"	0.0.0	0.0.0.1	
# ::edge	name	op2	"and"	0.0.0	0.0.0.2	
# ::edge	name	op3	"Biological"	0.0.0	0.0.0.3	
# ::edge	name	op4	"Resources"	0.0.0	0.0.0.4	
# ::edge	name	op5	"of"	0.0.0	0.0.0.5	
# ::edge	name	op6	"Principles"	0.0.0	0.0.0.6	
# ::edge	name	op7	"Computational"	0.0.0	0.0.0.7	
# ::edge	name	op8	"the"	0.0.0	0.0.0.8	
# ::edge	want-01	ARG0	i	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	want-01	ARG1	live-01	0.1.0.0.0	0.1.0.0	
(a / and 
      :op1 (e / educate-01 
            :ARG1 (n / name 
                  :op0 "Universe" 
                  :op1 "Emergent" 
                  :op2 "and" 
                  :op3 "Biological" 
                  :op4 "Resources" 
                  :op5 "of" 
                  :op6 "Principles" 
                  :op7 "Computational" 
                  :op8 "the")) 
      :op2 (l / live-01 
            :ARG1 (l2 / life 
                  :ARG1-of (l3 / live-01 
                        :ARG1-of (w / want-01 
                              :ARG0 (i / i))))))

# ::snt - I'm 21yrs old (turn 22 this year), don't have much time left for failing need to do something.
# ::tok - I 'm 21yrs old ( turn 22 this year ) , do n't have much time left for failing need to do something .
# ::alignments 17-18|0.1 20-21|0.1.1.0 22-23|0.1.1.0.0 4-5|0 16-17|0.1.0 15-16|0.1.2 23-24|0.1.1.0.0.0 19-20|0.1.1 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:48.659
# ::node	0	old	4-5
# ::node	0.0	i	1-2
# ::node	0.1	left-01	17-18
# ::node	0.1.0	time	16-17
# ::node	0.1.1	fail-01	19-20
# ::node	0.1.1.0	need-01	20-21
# ::node	0.1.1.0.0	do-02	22-23
# ::node	0.1.1.0.0.0	something	23-24
# ::node	0.1.2	much	15-16
# ::root	0	old
# ::edge	do-02	ARG1	something	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	fail-01	ARG1	need-01	0.1.1	0.1.1.0	
# ::edge	left-01	ARG1	time	0.1	0.1.0	
# ::edge	left-01	ARG2	fail-01	0.1	0.1.1	
# ::edge	left-01	ARG6	much	0.1	0.1.2	
# ::edge	need-01	ARG1	do-02	0.1.1.0	0.1.1.0.0	
# ::edge	old	domain	i	0	0.0	
# ::edge	old	topic	left-01	0	0.1	
(o / old 
      :domain (i / i) 
      :topic (l / left-01 
            :ARG1 (t / time) 
            :ARG2 (f / fail-01 
                  :ARG1 (n / need-01 
                        :ARG1 (d / do-02 
                              :ARG1 (s / something)))) 
            :ARG6 (m / much)))

# ::snt I failed college once over, did another course so I could get to uni don't want to go through the system over and over and consistently fail.
# ::tok I failed college once over , did another course so I could get to uni do n't want to go through the system over and over and consistently fail .
# ::alignments 26-27|0 23-24|0.1.2 22-23|0.1.1.0 7-8|0.1.0.1 0-1|0.2.0 19-20|0.1.1 17-18|0.1 27-28|0.2.1 2-3|0.2.0.0.0 24-25|0.1.2.0 8-9|0.1.0 0-4|0.0.0+0.0 12-13|0.1.0.0 1-2|0.2.0.0 11-12|0.1.0.0.0 28-29|0.2 25-26|0.1.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:50.685
# ::node	0	and	26-27
# ::node	0.0	date-entity	0-4
# ::node	0.0.0	once	0-4
# ::node	0.1	want-01	17-18
# ::node	0.1.0	course	8-9
# ::node	0.1.0.0	get-01	12-13
# ::node	0.1.0.0.0	possible	11-12
# ::node	0.1.0.1	another	7-8
# ::node	0.1.1	go-01	19-20
# ::node	0.1.1.0	system	22-23
# ::node	0.1.2	over	23-24
# ::node	0.1.2.0	and	24-25
# ::node	0.1.2.0.0	over	25-26
# ::node	0.2	fail-01	28-29
# ::node	0.2.0	i	0-1
# ::node	0.2.0.0	fail-01	1-2
# ::node	0.2.0.0.0	college	2-3
# ::node	0.2.1	consistent	27-28
# ::root	0	and
# ::edge	and	calendar	over	0.1.2.0	0.1.2	
# ::edge	and	calendar	over	0.1.2.0	0.1.2.0.0	
# ::edge	and	op1	date-entity	0	0.0	
# ::edge	and	op2	want-01	0	0.1	
# ::edge	and	op3	fail-01	0	0.2	
# ::edge	course	mod	another	0.1.0	0.1.0.1	
# ::edge	date-entity	time	once	0.0	0.0.0	
# ::edge	fail-01	ARG0	i	0.2.0.0	0.2.0	
# ::edge	fail-01	ARG1	college	0.2.0.0	0.2.0.0.0	
# ::edge	fail-01	ARG1	i	0.2	0.2.0	
# ::edge	fail-01	manner	consistent	0.2	0.2.1	
# ::edge	get-01	ARG1	course	0.1.0.0	0.1.0	
# ::edge	go-01	ARG2	system	0.1.1	0.1.1.0	
# ::edge	possible	domain	get-01	0.1.0.0.0	0.1.0.0	
# ::edge	want-01	ARG0	course	0.1	0.1.0	
# ::edge	want-01	ARG1	go-01	0.1	0.1.1	
# ::edge	want-01	ARG6	over	0.1	0.1.2	
(a / and 
      :op1 (d / date-entity 
            :time (o2 / once)) 
      :op2 (w / want-01 
            :ARG0 (c3 / course 
                  :ARG1-of (g2 / get-01 
                        :domain-of (p / possible)) 
                  :mod (a2 / another)) 
            :ARG1 (g / go-01 
                  :ARG2 (s / system)) 
            :ARG6 (o / over 
                  :calendar-of (a3 / and 
                        :calendar (o3 / over)))) 
      :op3 (f2 / fail-01 
            :ARG1 (i / i 
                  :ARG0-of (f / fail-01 
                        :ARG1 (c2 / college))) 
            :manner (c / consistent)))

# ::snt Can someone please give me some advice please?
# ::tok Can someone please give me some advice please ?
# ::alignments 2-3|0 7-8|0.0.0.0 6-7|0.0.0.0.0 4-5|0.1 1-2|0.0 5-6|0.0.0.1 3-4|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:50.898
# ::node	0	please-01	2-3
# ::node	0.0	someone	1-2
# ::node	0.0.0	give-01	3-4
# ::node	0.0.0.0	please-01	7-8
# ::node	0.0.0.0.0	advice	6-7
# ::node	0.0.0.1	some	5-6
# ::node	0.1	i	4-5
# ::root	0	please-01
# ::edge	give-01	ARG0	someone	0.0.0	0.0	
# ::edge	give-01	ARG1	please-01	0.0.0	0.0.0.0	
# ::edge	give-01	ARG6	some	0.0.0	0.0.0.1	
# ::edge	please-01	ARG0	someone	0	0.0	
# ::edge	please-01	ARG1	advice	0.0.0.0	0.0.0.0.0	
# ::edge	please-01	ARG1	i	0	0.1	
(p / please-01 
      :ARG0 (s / someone 
            :ARG0-of (g / give-01 
                  :ARG1 (p2 / please-01 
                        :ARG1 (a / advice)) 
                  :ARG6 (s2 / some))) 
      :ARG1 (i / i))

# ::snt Perhaps go and see your doctor, and see if there's any way you can get your deadlines extended to try and ease the pressure a bit?
# ::tok Perhaps go and see your doctor , and see if there 's any way you can get your deadlines extended to try and ease the pressure a bit ?
# ::alignments 22-23|0.1.0.0.1.0.1 16-17|0.1.0.0 23-24|0.1.0.0.1.0 0-1|0.0.1.0.1 18-19|0.1.0.0.1 27-28|0.0.0 15-16|0.1.0.0.2 14-15|0.1.0.0.0 25-26|0.1.0.0.1.0.0 5-6|0.0.1.0.0 19-20|0.1.0.0.1.0.1.0 21-22|0.1.0.0.1.0.0.1 1-2|0.0 12-13|0.1.0.0.1.0.0.0 8-9|0.1 3-4|0.0.1.0 2-3|0.0.1 13-14|0.1.0 7-8|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T12:59:52.412
# ::node	0	and	7-8
# ::node	0.0	go-01	1-2
# ::node	0.0.0	bit	27-28
# ::node	0.0.1	and	2-3
# ::node	0.0.1.0	see-01	3-4
# ::node	0.0.1.0.0	doctor	5-6
# ::node	0.0.1.0.1	possible	0-1
# ::node	0.1	see-01	8-9
# ::node	0.1.0	way	13-14
# ::node	0.1.0.0	get-01	16-17
# ::node	0.1.0.0.0	you	14-15
# ::node	0.1.0.0.1	deadline	18-19
# ::node	0.1.0.0.1.0	ease-02	23-24
# ::node	0.1.0.0.1.0.0	pressure-01	25-26
# ::node	0.1.0.0.1.0.0.0	any	12-13
# ::node	0.1.0.0.1.0.0.1	try-01	21-22
# ::node	0.1.0.0.1.0.1	and	22-23
# ::node	0.1.0.0.1.0.1.0	extend-01	19-20
# ::node	0.1.0.0.2	possible	15-16
# ::root	0	and
# ::edge	and	op1	ease-02	0.1.0.0.1.0.1	0.1.0.0.1.0	
# ::edge	and	op1	go-01	0	0.0	
# ::edge	and	op1	go-01	0.0.1	0.0	
# ::edge	and	op2	see-01	0	0.1	
# ::edge	and	op2	see-01	0.0.1	0.0.1.0	
# ::edge	ease-02	ARG0	deadline	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	ease-02	ARG1	pressure-01	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	extend-01	ARG1	and	0.1.0.0.1.0.1.0	0.1.0.0.1.0.1	
# ::edge	get-01	ARG0	you	0.1.0.0	0.1.0.0.0	
# ::edge	get-01	ARG1	deadline	0.1.0.0	0.1.0.0.1	
# ::edge	get-01	manner	way	0.1.0.0	0.1.0	
# ::edge	go-01	ARG1	bit	0.0	0.0.0	
# ::edge	possible	domain	get-01	0.1.0.0.2	0.1.0.0	
# ::edge	pressure-01	ARG1	any	0.1.0.0.1.0.0	0.1.0.0.1.0.0.0	
# ::edge	see-01	ARG1	doctor	0.0.1.0	0.0.1.0.0	
# ::edge	see-01	ARG1	way	0.1	0.1.0	
# ::edge	see-01	time	possible	0.0.1.0	0.0.1.0.1	
# ::edge	try-01	ARG1	pressure-01	0.1.0.0.1.0.0.1	0.1.0.0.1.0.0	
(a4 / and 
      :op1 (g2 / go-01 
            :ARG1 (b / bit) 
            :op-of (a3 / and 
                  :op1 (s2 / see-01 
                        :ARG1 (d2 / doctor) 
                        :time (p / possible)))) 
      :op2 (s / see-01 
            :ARG1 (w / way 
                  :manner-of (g / get-01 
                        :ARG0 (y / you) 
                        :ARG1 (d / deadline 
                              :ARG0-of (e / ease-02 
                                    :ARG1 (p3 / pressure-01 
                                          :ARG1 (a2 / any) 
                                          :ARG1-of (t / try-01)) 
                                    :op-of (a / and 
                                          :ARG1-of (e2 / extend-01)))) 
                        :domain-of (p2 / possible)))))

# ::snt Send your tutors a similar email to this post (don't worry they've seen it all before - some much more uncomfortable admissions too - I know as I used to work in a Uni Dept admin) and they will consider mitigating circumstances.
# ::tok Send your tutors a similar email to this post ( do n't worry they 've seen it all before - some much more uncomfortable admissions too - I know as I used to work in a Uni Dept admin ) and they will consider mitigating circumstances .
# ::alignments 45-46|0.1.0.1 7-8|0.0.1.0 40-41|0.1 4-5|0.0.0 5-6|0.0 0-1|0 8-9|0.0.1 43-44|0.1.0 41-42|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:01.275
# ::node	0	send-01	0-1
# ::node	0.0	email	5-6
# ::node	0.0.0	simmer-01	4-5
# ::node	0.0.1	post	8-9
# ::node	0.0.1.0	this	7-8
# ::node	0.1	and	40-41
# ::node	0.1.0	consider-01	43-44
# ::node	0.1.0.0	country	41-42
# ::node	0.1.0.1	circumstance	45-46
# ::root	0	send-01
# ::edge	and	op1	send-01	0.1	0	
# ::edge	and	op2	consider-01	0.1	0.1.0	
# ::edge	consider-01	ARG0	country	0.1.0	0.1.0.0	
# ::edge	consider-01	ARG1	circumstance	0.1.0	0.1.0.1	
# ::edge	email	op1	post	0.0	0.0.1	
# ::edge	post	mod	this	0.0.1	0.0.1.0	
# ::edge	send-01	ARG1	email	0	0.0	
# ::edge	simmer-01	ARG1	email	0.0.0	0.0	
(s2 / send-01 
      :ARG1 (e / email 
            :ARG1-of (s / simmer-01) 
            :op1 (p / post 
                  :mod (t / this))) 
      :op-of (a / and 
            :op1 (c2 / consider-01 
                  :ARG0 (c3 / country) 
                  :ARG1 (c / circumstance))))

# ::snt Break your work into manageable chunks.
# ::tok Break your work into manageable chunks .
# ::alignments 2-3|0.0 0-1|0 5-6|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:01.347
# ::node	0	break-01	0-1
# ::node	0.0	work-01	2-3
# ::node	0.0.0	chunk	5-6
# ::root	0	break-01
# ::edge	break-01	ARG1	work-01	0	0.0	
# ::edge	work-01	ARG1	chunk	0.0	0.0.0	
(b / break-01 
      :ARG1 (w / work-01 
            :ARG1 (c / chunk)))

# ::snt Concentrate on one bit of work at a time (obvs the most urgent assignment first).
# ::tok Concentrate on one bit of work at a time ( obvs the most urgent assignment first ) .
# ::alignments 0-1|0.0 5-6|0.1.0 0-1|0 8-9|0.1.0.0 3-4|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:04.378
# ::node	0	concentrate-01	0-1
# ::node	0.0	1	0-1
# ::node	0.1	bit	3-4
# ::node	0.1.0	work-01	5-6
# ::node	0.1.0.0	time	8-9
# ::root	0	concentrate-01
# ::edge	concentrate-01	ARG1	1	0	0.0	
# ::edge	concentrate-01	prep-in	bit	0	0.1	
# ::edge	work-01	ARG0	bit	0.1.0	0.1	
# ::edge	work-01	ARG1	time	0.1.0	0.1.0.0	
(c / concentrate-01 
      :ARG1 1 
      :prep-in (b / bit 
            :ARG0-of (w / work-01 
                  :ARG1 (t / time))))

# ::snt Don't shut yourself off from your housemates, and well done for trying new things from the very beginning now keep at it!
# ::tok Do n't shut yourself off from your housemates , and well done for trying new things from the very beginning now keep at it !
# ::alignments 11-12|0.1 21-22|0.1.0.0.0 19-20|0.1.0.0.0.0 0-21|0.1.0.0.0.1.0+0.1.0.0.0.1 18-19|0.1.0.0.0.0.0 15-16|0.1.0.0 2-3|0.0 3-4|0.0.0 13-14|0.1.0 14-15|0.1.0.0.1 10-11|0.1.1 9-10|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:05.290
# ::node	0	and	9-10
# ::node	0.0	shut-05	2-3
# ::node	0.0.0	yourself	3-4
# ::node	0.1	do-02	11-12
# ::node	0.1.0	try-04	13-14
# ::node	0.1.0.0	thing	15-16
# ::node	0.1.0.0.0	keep-06	21-22
# ::node	0.1.0.0.0.0	begin-01	19-20
# ::node	0.1.0.0.0.0.0	very	18-19
# ::node	0.1.0.0.0.1	date-entity	0-21
# ::node	0.1.0.0.0.1.0	now	0-21
# ::node	0.1.0.0.1	new	14-15
# ::node	0.1.1	well	10-11
# ::root	0	and
# ::edge	and	op1	shut-05	0	0.0	
# ::edge	and	op2	do-02	0	0.1	
# ::edge	begin-01	ARG1	very	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	date-entity	time	now	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	do-02	ARG1	try-04	0.1	0.1.0	
# ::edge	do-02	mod	well	0.1	0.1.1	
# ::edge	keep-06	ARG0	thing	0.1.0.0.0	0.1.0.0	
# ::edge	keep-06	ARG1	begin-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	keep-06	ARG6	date-entity	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	shut-05	ARG1	yourself	0.0	0.0.0	
# ::edge	thing	mod	new	0.1.0.0	0.1.0.0.1	
# ::edge	try-04	ARG1	thing	0.1.0	0.1.0.0	
(a / and 
      :op1 (s / shut-05 
            :ARG1 (y / yourself)) 
      :op2 (d / do-02 
            :ARG1 (t2 / try-04 
                  :ARG1 (t / thing 
                        :ARG0-of (k / keep-06 
                              :ARG1 (b / begin-01 
                                    :ARG1 (v / very)) 
                              :ARG6 (d2 / date-entity 
                                    :time (n / now))) 
                        :mod (n2 / new))) 
            :mod (w / well)))

# ::snt I'd reccomend you go and see your doctor too.
# ::tok I 'd reccomend you go and see your doctor too .
# ::alignments 6-7|0.2 4-5|0.1 5-6|0 2-3|0.0 8-9|0.2.0 0-1|0.0.0 9-10|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:05.405
# ::node	0	and	5-6
# ::node	0.0	reccomend-01	2-3
# ::node	0.0.0	i	0-1
# ::node	0.1	go-02	4-5
# ::node	0.1.0	too	9-10
# ::node	0.2	see-01	6-7
# ::node	0.2.0	doctor	8-9
# ::root	0	and
# ::edge	and	op1	go-02	0	0.1	
# ::edge	and	op2	see-01	0	0.2	
# ::edge	go-02	ARG1	too	0.1	0.1.0	
# ::edge	reccomend-01	ARG0	i	0.0	0.0.0	
# ::edge	reccomend-01	ARG1	and	0.0	0	
# ::edge	see-01	ARG1	doctor	0.2	0.2.0	
(a / and 
      :ARG1-of (r / reccomend-01 
            :ARG0 (i / i)) 
      :op1 (g / go-02 
            :ARG1 (t / too)) 
      :op2 (s / see-01 
            :ARG1 (d / doctor)))

# ::snt If you've always been an anxious person you might benefit from speaking to someone (my friend got therapy on the NHS for anxiety, so its really normal).
# ::tok If you 've always been an anxious person you might benefit from speaking to someone ( my friend got therapy on the NHS for anxiety , so its really normal ) .
# ::alignments 7-8|0.1.0 3-4|0.2 14-15|0.1.1 1-2|0.2.0 12-13|0.1 6-7|0.1.0.0 8-9|0.0 10-11|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:09.215
# ::node	0	benefit-01	10-11
# ::node	0.0	you	8-9
# ::node	0.1	speak-01	12-13
# ::node	0.1.0	person	7-8
# ::node	0.1.0.0	annul-01	6-7
# ::node	0.1.1	someone	14-15
# ::node	0.2	always	3-4
# ::node	0.2.0	you	1-2
# ::root	0	benefit-01
# ::edge	always	domain	you	0.2	0.2.0	
# ::edge	annul-01	ARG1	person	0.1.0.0	0.1.0	
# ::edge	benefit-01	ARG0	you	0	0.0	
# ::edge	benefit-01	ARG1	speak-01	0	0.1	
# ::edge	benefit-01	ARG6	always	0	0.2	
# ::edge	speak-01	ARG0	person	0.1	0.1.0	
# ::edge	speak-01	ARG1	someone	0.1	0.1.1	
(b / benefit-01 
      :ARG0 (y2 / you) 
      :ARG1 (s2 / speak-01 
            :ARG0 (p / person 
                  :ARG1-of (a2 / annul-01)) 
            :ARG1 (s / someone)) 
      :ARG6 (a / always 
            :domain (y / you)))

# ::snt And try and get deadlines extended, if you're honest I'm sure your uni will allow it.
# ::tok And try and get deadlines extended , if you 're honest I 'm sure your uni will allow it .
# ::alignments 5-6|0.1.0.0.0 17-18|0.1.0.1.0 0-1|0.1.0.1 1-2|0 4-5|0.1.0.0 2-3|0.1 13-14|0.1.0.1.0.0 3-4|0.1.0 8-9|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:09.540
# ::node	0	try-01	1-2
# ::node	0.0	you	8-9
# ::node	0.1	and	2-3
# ::node	0.1.0	get-01	3-4
# ::node	0.1.0.0	deadline	4-5
# ::node	0.1.0.0.0	extend-01	5-6
# ::node	0.1.0.1	and	0-1
# ::node	0.1.0.1.0	allow-01	17-18
# ::node	0.1.0.1.0.0	surge-01	13-14
# ::root	0	try-01
# ::edge	allow-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	and	op1	get-01	0.1.0.1	0.1.0	
# ::edge	and	op1	try-01	0.1	0	
# ::edge	and	op2	get-01	0.1	0.1.0	
# ::edge	extend-01	ARG1	deadline	0.1.0.0.0	0.1.0.0	
# ::edge	get-01	ARG1	deadline	0.1.0	0.1.0.0	
# ::edge	surge-01	ARG1	allow-01	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	try-01	ARG1	you	0	0.0	
(t / try-01 
      :ARG1 (y / you) 
      :op-of (a3 / and 
            :op1 (g / get-01 
                  :ARG1 (d / deadline 
                        :ARG1-of (e / extend-01)) 
                  :op-of (a2 / and 
                        :ARG1-of (a / allow-01 
                              :ARG1-of (s / surge-01))))))

# ::snt It's getting hard to keep strong and keep carrying on with life.
# ::tok It 's getting hard to keep strong and keep carrying on with life .
# ::alignments 0-1|0.0.0 2-3|0.0 12-13|0.0.1.1.0.0 6-7|0.0.1.0.0 7-8|0.0.1 3-4|0.0.0.0 1-2|0 5-6|0.0.1.0 8-9|0.0.1.1 9-10|0.0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:09.824
# ::node	0	be-located-at-91	1-2
# ::node	0.0	get-03	2-3
# ::node	0.0.0	it	0-1
# ::node	0.0.0.0	hard	3-4
# ::node	0.0.1	and	7-8
# ::node	0.0.1.0	keep-02	5-6
# ::node	0.0.1.0.0	strong	6-7
# ::node	0.0.1.1	keep-04	8-9
# ::node	0.0.1.1.0	carry-01	9-10
# ::node	0.0.1.1.0.0	life	12-13
# ::root	0	be-located-at-91
# ::edge	and	op1	keep-02	0.0.1	0.0.1.0	
# ::edge	and	op2	keep-04	0.0.1	0.0.1.1	
# ::edge	be-located-at-91	ARG1	get-03	0	0.0	
# ::edge	carry-01	ARG1	life	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	get-03	ARG0	it	0.0	0.0.0	
# ::edge	get-03	ARG1	and	0.0	0.0.1	
# ::edge	hard	domain	it	0.0.0.0	0.0.0	
# ::edge	keep-02	ARG1	strong	0.0.1.0	0.0.1.0.0	
# ::edge	keep-04	ARG1	carry-01	0.0.1.1	0.0.1.1.0	
(b / be-located-at-91 
      :ARG1 (g / get-03 
            :ARG0 (i / it 
                  :domain-of (h / hard)) 
            :ARG1 (a / and 
                  :op1 (k / keep-02 
                        :ARG1 (s / strong)) 
                  :op2 (k2 / keep-04 
                        :ARG1 (c / carry-01 
                              :ARG1 (l / life))))))

# ::snt My mum is getting divorced - she had a horrible time with my step-father and her new found freedom has sent her round the bend.
# ::tok My mum is getting divorced - she had a horrible time with my step - father and her new found freedom has sent her round the bend .
# ::alignments 16-17|0.0.1.1 14-15|0.0.1.2.0 3-4|0.0 9-10|0.0.1.0 13-14|0.0.1.2 24-25|0.1 10-11|0.0.1 18-19|0.1.0.0 4-5|0.0.0 22-23|0.1.0 20-21|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:10.473
# ::node	0	send-01	20-21
# ::node	0.0	get-03	3-4
# ::node	0.0.0	divorce-01	4-5
# ::node	0.0.1	time	10-11
# ::node	0.0.1.0	horrible	9-10
# ::node	0.0.1.1	new	16-17
# ::node	0.0.1.2	steep-01	13-14
# ::node	0.0.1.2.0	and	14-15
# ::node	0.1	bend-01	24-25
# ::node	0.1.0	round	22-23
# ::node	0.1.0.0	free-01	18-19
# ::root	0	send-01
# ::edge	bend-01	ARG1	send-01	0.1	0	
# ::edge	bend-01	ARG6	round	0.1	0.1.0	
# ::edge	free-01	ARG1	round	0.1.0.0	0.1.0	
# ::edge	get-03	ARG1	divorce-01	0.0	0.0.0	
# ::edge	get-03	ARG6	time	0.0	0.0.1	
# ::edge	new	op1	time	0.0.1.1	0.0.1	
# ::edge	send-01	ARG1	get-03	0	0.0	
# ::edge	steep-01	ARG1	and	0.0.1.2	0.0.1.2.0	
# ::edge	time	mod	horrible	0.0.1	0.0.1.0	
# ::edge	time	purpose	steep-01	0.0.1	0.0.1.2	
(s2 / send-01 
      :ARG1 (g / get-03 
            :ARG1 (d / divorce-01) 
            :ARG6 (t / time 
                  :mod (h / horrible) 
                  :op-of (n / new) 
                  :purpose (s / steep-01 
                        :ARG1 (a / and)))) 
      :ARG1-of (b / bend-01 
            :ARG6 (r / round 
                  :ARG1-of (f / free-01))))

# ::snt She's epileptic and a manic depressive with a huge anger problem.
# ::tok She 's epileptic and a manic depressive with a huge anger problem .
# ::alignments 0-1|0.0 3-4|0.0.0 10-11|0 11-12|0.1 9-10|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:10.639
# ::node	0	anger-01	10-11
# ::node	0.0	she	0-1
# ::node	0.0.0	and	3-4
# ::node	0.1	problem	11-12
# ::node	0.1.0	huge	9-10
# ::root	0	anger-01
# ::edge	and	calendar	she	0.0.0	0.0	
# ::edge	anger-01	ARG1	she	0	0.0	
# ::edge	problem	mod	huge	0.1	0.1.0	
# ::edge	problem	topic	anger-01	0.1	0	
(a2 / anger-01 
      :ARG1 (s / she 
            :calendar-of (a / and)) 
      :topic-of (p / problem 
            :mod (h / huge)))

# ::snt She's horrible to me, constantly.
# ::tok She 's horrible to me , constantly .
# ::alignments 0-1|0.0 6-7|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:10.703
# ::node	0	constant	6-7
# ::node	0.0	she	0-1
# ::root	0	constant
# ::edge	constant	poss	she	0	0.0	
(c / constant 
      :poss (s / she))

# ::snt I can't cope with her outbursts and nasty hateful remarks when I'm at home.
# ::tok I ca n't cope with her outbursts and nasty hateful remarks when I 'm at home .
# ::alignments 3-4|0.0 1-2|0 15-16|0.0.1.0.0 7-8|0.0.1 10-11|0.0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:10.903
# ::node	0	possible	1-2
# ::node	0.0	cope-01	3-4
# ::node	0.0.0	i	0-1
# ::node	0.0.1	and	7-8
# ::node	0.0.1.0	remark-01	10-11
# ::node	0.0.1.0.0	home	15-16
# ::root	0	possible
# ::edge	and	op1	remark-01	0.0.1	0.0.1.0	
# ::edge	cope-01	ARG0	i	0.0	0.0.0	
# ::edge	cope-01	ARG1	and	0.0	0.0.1	
# ::edge	possible	domain	cope-01	0	0.0	
# ::edge	remark-01	ARG1	home	0.0.1.0	0.0.1.0.0	
(p / possible 
      :domain (c / cope-01 
            :ARG0 (i / i) 
            :ARG1 (a / and 
                  :op1 (r / remark-01 
                        :ARG1 (h / home)))))

# ::snt I'm 18, a full-time sixth former at a high pressure private school (on a 95% bursary) and I'm at breaking point.
# ::tok I 'm 18 , a full - time sixth former at a high pressure private school ( on a 95 % bursary ) and I 'm at breaking point .
# ::alignments 0-1|0.2.0.0.0.0 12-13|0.0 10-11|0.1.0.0.0 25-26|0.2 21-22|0.1.0 26-27|0.2.1 23-24|0 0-7|0.2.0.0.1+0.2.0.0 7-8|0.2.0 22-23|0.1 11-12|0.1.0.0 0-1|0.2.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:15.434
# ::node	0	be-located-at-91	23-24
# ::node	0.0	private	12-13
# ::node	0.1	i	22-23
# ::node	0.1.0	and	21-22
# ::node	0.1.0.0	pressure-01	11-12
# ::node	0.1.0.0.0	high	10-11
# ::node	0.2	break-01	25-26
# ::node	0.2.0	former	7-8
# ::node	0.2.0.0	ordinal-entity	0-7
# ::node	0.2.0.0.0	i	0-1
# ::node	0.2.0.0.0.0	1	0-1
# ::node	0.2.0.0.1	1	0-7
# ::node	0.2.1	point	26-27
# ::root	0	be-located-at-91
# ::edge	be-located-at-91	ARG0	private	0	0.0	
# ::edge	be-located-at-91	ARG6	i	0	0.1	
# ::edge	break-01	ARG0	former	0.2	0.2.0	
# ::edge	break-01	ARG6	be-located-at-91	0.2	0	
# ::edge	break-01	time	point	0.2	0.2.1	
# ::edge	i	calendar	and	0.1	0.1.0	
# ::edge	i	mod	1	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	ordinal-entity	mod	i	0.2.0.0	0.2.0.0.0	
# ::edge	ordinal-entity	op1	former	0.2.0.0	0.2.0	
# ::edge	ordinal-entity	value	1	0.2.0.0	0.2.0.0.1	
# ::edge	pressure-01	ARG0	and	0.1.0.0	0.1.0	
# ::edge	pressure-01	ARG6	high	0.1.0.0	0.1.0.0.0	
(b2 / be-located-at-91 
      :ARG0 (p / private) 
      :ARG6 (i / i 
            :calendar (a / and 
                  :ARG0-of (p3 / pressure-01 
                        :ARG6 (h / high)))) 
      :ARG6-of (b / break-01 
            :ARG0 (f / former 
                  :op-of (o / ordinal-entity 
                        :mod (i2 / i 
                              :mod 1) 
                        :value 1)) 
            :time (p2 / point)))

# ::snt I can't do work at home, because she shouts at me.
# ::tok I ca n't do work at home , because she shouts at me .
# ::alignments 3-4|0.0 6-7|0.0.1.0 10-11|0.0.1.1 1-2|0 4-5|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:15.577
# ::node	0	possible	1-2
# ::node	0.0	do-02	3-4
# ::node	0.0.0	i	0-1
# ::node	0.0.1	work-01	4-5
# ::node	0.0.1.0	home	6-7
# ::node	0.0.1.1	shout-01	10-11
# ::root	0	possible
# ::edge	do-02	ARG0	i	0.0	0.0.0	
# ::edge	do-02	ARG1	work-01	0.0	0.0.1	
# ::edge	possible	domain	do-02	0	0.0	
# ::edge	shout-01	ARG1	work-01	0.0.1.1	0.0.1	
# ::edge	work-01	ARG1	home	0.0.1	0.0.1.0	
(p / possible 
      :domain (d / do-02 
            :ARG0 (i / i) 
            :ARG1 (w / work-01 
                  :ARG1 (h / home) 
                  :ARG1-of (s / shout-01))))

# ::snt So then my teachers get angry at me.
# ::tok So then my teachers get angry at me .
# ::alignments 3-4|0.0.0 4-5|0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:15.686
# ::node	0	so	0-1
# ::node	0.0	get-03	4-5
# ::node	0.0.0	teacher	3-4
# ::root	0	so
(s / so 
      :ARG6-of (g / get-03 
            :ARG1 (t / teacher)))

# ::snt One minute she's lovely, and it's like having my mummy back, then the next, she turns into the most spiteful human alive.
# ::tok One minute she 's lovely , and it 's like having my mummy back , then the next , she turns into the most spiteful human alive .
# ::alignments 1-2|0.1.0 0-1|0.1.0.0 20-21|0 23-24|0.2.0 2-3|0.1.1.0+0.1.1+0.1 10-11|0.0.0 17-18|0.0.0.1 26-27|0.2.1 25-26|0.2 7-8|0.0 13-14|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:16.595
# ::node	0	turn-02	20-21
# ::node	0.0	country	7-8
# ::node	0.0.0	have-03	10-11
# ::node	0.0.0.0	back	13-14
# ::node	0.0.0.1	next	17-18
# ::node	0.1	country	2-3
# ::node	0.1.0	minute	1-2
# ::node	0.1.0.0	1	0-1
# ::node	0.1.1	name	2-3
# ::node	0.1.1.0	"United States"	2-3
# ::node	0.2	human	25-26
# ::node	0.2.0	most	23-24
# ::node	0.2.1	alive	26-27
# ::root	0	turn-02
# ::edge	country	calendar	minute	0.1	0.1.0	
# ::edge	country	name	name	0.1	0.1.1	
# ::edge	have-03	ARG0	country	0.0.0	0.0	
# ::edge	have-03	ARG1	back	0.0.0	0.0.0.0	
# ::edge	have-03	ARG6	next	0.0.0	0.0.0.1	
# ::edge	human	quant	alive	0.2	0.2.1	
# ::edge	minute	quant	1	0.1.0	0.1.0.0	
# ::edge	most	calendar	human	0.2.0	0.2	
# ::edge	name	op1	"United States"	0.1.1	0.1.1.0	
# ::edge	turn-02	ARG0	country	0	0.0	
# ::edge	turn-02	ARG1	country	0	0.1	
# ::edge	turn-02	prep-as	human	0	0.2	
(t / turn-02 
      :ARG0 (c2 / country 
            :ARG0-of (h / have-03 
                  :ARG1 (b / back) 
                  :ARG6 (n2 / next))) 
      :ARG1 (c / country 
            :calendar (m / minute 
                  :quant 1) 
            :name (n / name 
                  :op1 "United States")) 
      :prep-as (h2 / human 
            :calendar-of (m2 / most) 
            :quant (a / alive)))

# ::snt I'm not going to pass my A2 exams, I've already accepted defeat, that this year of my life is going to make me a failure.
# ::tok I 'm not going to pass my A 2 exams , I 've already accepted defeat , that this year of my life is going to make me a failure .
# ::alignments 8-9|0.1.0.2.0 5-6|0.1.0 14-15|0 3-4|0.1 0-1|0.1.0.0 12-13|0.0 23-24|0.3 26-27|0.3.1 7-8|0.1.0.2 13-14|0.2 0-18|0.1.0.1.0+0.1.0.1.1+0.1.0.1 28-29|0.3.1.0 25-26|0.3.1.1 21-22|0.3.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:18.104
# ::node	0	defeat-01	14-15
# ::node	0.0	already	12-13
# ::node	0.1	go-04	3-4
# ::node	0.1.0	pass-01	5-6
# ::node	0.1.0.0	i	0-1
# ::node	0.1.0.1	date-entity	0-18
# ::node	0.1.0.1.0	year	0-18
# ::node	0.1.0.1.1	this	0-18
# ::node	0.1.0.2	ah-01	7-8
# ::node	0.1.0.2.0	exam	8-9
# ::node	0.2	accept-01	13-14
# ::node	0.3	go-08	23-24
# ::node	0.3.0	life	21-22
# ::node	0.3.1	i	26-27
# ::node	0.3.1.0	allure-01	28-29
# ::node	0.3.1.1	make-02	25-26
# ::root	0	defeat-01
# ::edge	accept-01	ARG1	defeat-01	0.2	0	
# ::edge	ah-01	ARG1	exam	0.1.0.2	0.1.0.2.0	
# ::edge	ah-01	ARG6	pass-01	0.1.0.2	0.1.0	
# ::edge	allure-01	ARG1	i	0.3.1.0	0.3.1	
# ::edge	date-entity	time	this	0.1.0.1	0.1.0.1.1	
# ::edge	date-entity	time	year	0.1.0.1	0.1.0.1.0	
# ::edge	defeat-01	ARG0	already	0	0.0	
# ::edge	defeat-01	ARG1	go-04	0	0.1	
# ::edge	defeat-01	ARG6	go-08	0	0.3	
# ::edge	go-04	ARG1	pass-01	0.1	0.1.0	
# ::edge	go-08	ARG1	life	0.3	0.3.0	
# ::edge	go-08	ARG6	i	0.3	0.3.1	
# ::edge	make-02	ARG1	i	0.3.1.1	0.3.1	
# ::edge	pass-01	ARG0	i	0.1.0	0.1.0.0	
# ::edge	pass-01	ARG1	date-entity	0.1.0	0.1.0.1	
(d / defeat-01 
      :ARG0 (a / already) 
      :ARG1 (g / go-04 
            :ARG1 (p / pass-01 
                  :ARG0 (i / i) 
                  :ARG1 (d2 / date-entity 
                        :time (y / year) 
                        :time (t / this)) 
                  :ARG6-of (a2 / ah-01 
                        :ARG1 (e / exam)))) 
      :ARG1-of (a3 / accept-01) 
      :ARG6 (g2 / go-08 
            :ARG1 (l / life) 
            :ARG6 (i2 / i 
                  :ARG1-of (a4 / allure-01) 
                  :ARG1-of (m / make-02))))

# ::snt Maybe I can come back from this, who knows. I've got the most amazing university offers, but I can't even accept them - I'll never make the grades.
# ::tok Maybe I can come back from this , who knows . I 've got the most amazing university offers , but I ca n't even accept them - I 'll never make the grades .
# ::alignments 25-26|0.1 15-16|0.2.0 0-1|0.0.1 4-5|0.0.2 20-21|0.1.1.1 18-19|0.1.1 16-17|0.0.0 33-34|0.2 2-3|0 9-10|0.1.0.0 22-23|0.1.1.1.0 3-4|0.0 6-7|0.1.0 17-18|0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:19.162
# ::node	0	possible	2-3
# ::node	0.0	come-01	3-4
# ::node	0.0.0	amazing	16-17
# ::node	0.0.1	possible	0-1
# ::node	0.0.2	back	4-5
# ::node	0.1	accept-01	25-26
# ::node	0.1.0	this	6-7
# ::node	0.1.0.0	know-01	9-10
# ::node	0.1.1	offer-01	18-19
# ::node	0.1.1.0	university	17-18
# ::node	0.1.1.1	bunt-01	20-21
# ::node	0.1.1.1.0	possible	22-23
# ::node	0.2	grade-01	33-34
# ::node	0.2.0	most	15-16
# ::root	0	possible
# ::edge	accept-01	ARG0	this	0.1	0.1.0	
# ::edge	accept-01	ARG1	offer-01	0.1	0.1.1	
# ::edge	bunt-01	ARG1	offer-01	0.1.1.1	0.1.1	
# ::edge	bunt-01	ARG6	possible	0.1.1.1	0.1.1.1.0	
# ::edge	come-01	ARG1	amazing	0.0	0.0.0	
# ::edge	come-01	ARG6	possible	0.0	0.0.1	
# ::edge	come-01	direction	back	0.0	0.0.2	
# ::edge	grade-01	ARG1	most	0.2	0.2.0	
# ::edge	know-01	ARG1	this	0.1.0.0	0.1.0	
# ::edge	offer-01	ARG1	university	0.1.1	0.1.1.0	
# ::edge	possible	domain	accept-01	0	0.1	
# ::edge	possible	domain	come-01	0	0.0	
# ::edge	possible	domain	grade-01	0	0.2	
(p2 / possible 
      :domain (c / come-01 
            :ARG1 (a2 / amazing) 
            :ARG6 (p / possible) 
            :direction (b / back)) 
      :domain (a / accept-01 
            :ARG0 (t / this 
                  :ARG1-of (k / know-01)) 
            :ARG1 (o / offer-01 
                  :ARG1 (u / university) 
                  :ARG1-of (b2 / bunt-01 
                        :ARG6 (p3 / possible)))) 
      :domain (g / grade-01 
            :ARG1 (m / most)))

# ::snt I wish I could wipe her out of my life - things would be so much better without her.
# ::tok I wish I could wipe her out of my life - things would be so much better without her .
# ::alignments 16-17|0.2.0.0+0.2.0 4-5|0.1.0 15-16|0.2.0.0.0 5-6|0.1.0.1 9-10|0.1.0.0 1-2|0 3-4|0.1 0-1|0.0 11-12|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:19.723
# ::node	0	wish-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	possible	3-4
# ::node	0.1.0	wipe-02	4-5
# ::node	0.1.0.0	life	9-10
# ::node	0.1.0.1	shed-01	5-6
# ::node	0.2	thing	11-12
# ::node	0.2.0	good	16-17
# ::node	0.2.0.0	more	16-17
# ::node	0.2.0.0.0	much	15-16
# ::root	0	wish-01
# ::edge	good	degree	more	0.2.0	0.2.0.0	
# ::edge	good	domain	thing	0.2.0	0.2	
# ::edge	more	degree	much	0.2.0.0	0.2.0.0.0	
# ::edge	possible	domain	wipe-02	0.1	0.1.0	
# ::edge	shed-01	ARG1	wipe-02	0.1.0.1	0.1.0	
# ::edge	wipe-02	ARG1	life	0.1.0	0.1.0.0	
# ::edge	wish-01	ARG0	i	0	0.0	
# ::edge	wish-01	ARG1	possible	0	0.1	
# ::edge	wish-01	ARG6	thing	0	0.2	
(w2 / wish-01 
      :ARG0 (i / i) 
      :ARG1 (p / possible 
            :domain (w / wipe-02 
                  :ARG1 (l / life) 
                  :ARG1-of (s / shed-01))) 
      :ARG6 (t / thing 
            :domain-of (g / good 
                  :degree (m / more 
                        :degree (m2 / much)))))

# ::snt But then, I think I'm just being selfish.
# ::tok But then , I think I 'm just being selfish .
# ::alignments 0-1|0.2 1-2|0.1 7-8|0.0 4-5|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:19.832
# ::node	0	think-01	4-5
# ::node	0.0	just	7-8
# ::node	0.1	then	1-2
# ::node	0.2	bunt-01	0-1
# ::root	0	think-01
# ::edge	bunt-01	ARG1	think-01	0.2	0	
# ::edge	think-01	ARG0	just	0	0.0	
# ::edge	think-01	ARG1	then	0	0.1	
(t2 / think-01 
      :ARG0 (j / just) 
      :ARG1 (t / then) 
      :ARG1-of (b / bunt-01))

# ::snt But surely, my life isn't meant to be like this?
# ::tok But surely , my life is n't meant to be like this ?
# ::alignments 0-1|0.1 4-5|0.0 1-2|0.1.1 7-8|0 11-12|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:19.974
# ::node	0	mean-01	7-8
# ::node	0.0	life	4-5
# ::node	0.1	bunt-01	0-1
# ::node	0.1.0	this	11-12
# ::node	0.1.1	sure	1-2
# ::root	0	mean-01
# ::edge	bunt-01	ARG0	this	0.1	0.1.0	
# ::edge	bunt-01	ARG1	mean-01	0.1	0	
# ::edge	bunt-01	ARG6	sure	0.1	0.1.1	
# ::edge	mean-01	ARG1	life	0	0.0	
(m / mean-01 
      :ARG1 (l / life) 
      :ARG1-of (b / bunt-01 
            :ARG0 (t / this) 
            :ARG6 (s / sure)))

# ::snt It should be so much better. B
# ::tok It should be so much better . B
# ::alignments 0-1|0.0.0.0 4-5|0.0.0.1 1-2|0.0.0 5-6|0+0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.116
# ::node	0	more	5-6
# ::node	0.0	good	5-6
# ::node	0.0.0	shoulder-01	1-2
# ::node	0.0.0.0	it	0-1
# ::node	0.0.0.1	much	4-5
# ::root	0	more
(m2 / more 
      :degree-of (g / good 
            :ARG0-of (s / shoulder-01 
                  :ARG1 (i / it) 
                  :ARG6 (m / much))))

# ::snt ut I feel as if I have no control over this downhill spiral.
# ::tok ut I feel as if I have no control over this downhill spiral .
# ::alignments 12-13|0.1.0.0 0-1|0.0 8-9|0.1.0 10-11|0.1.0.0.0 6-7|0.1 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.360
# ::node	0	feel-01	2-3
# ::node	0.0	1	0-1
# ::node	0.1	have-03	6-7
# ::node	0.1.0	control-01	8-9
# ::node	0.1.0.0	spiral	12-13
# ::node	0.1.0.0.0	this	10-11
# ::root	0	feel-01
# ::edge	control-01	ARG1	spiral	0.1.0	0.1.0.0	
# ::edge	feel-01	ARG1	1	0	0.0	
# ::edge	feel-01	condition	have-03	0	0.1	
# ::edge	have-03	ARG1	control-01	0.1	0.1.0	
# ::edge	spiral	mod	this	0.1.0.0	0.1.0.0.0	
(f / feel-01 
      :ARG1 1 
      :condition (h / have-03 
            :ARG1 (c / control-01 
                  :ARG1 (s / spiral 
                        :mod (t / this)))))

# ::snt And I don't know what to do.
# ::tok And I do n't know what to do .
# ::alignments 4-5|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.428
# ::node	0	know-01	4-5
# ::root	0	know-01
(k / know-01)

# ::snt Thanks for reading.
# ::tok Thanks for reading .
# ::alignments 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.469
# ::node	0	thank-01	0-1
# ::node	0.0	reread-01	2-3
# ::root	0	thank-01
# ::edge	thank-01	ARG1	reread-01	0	0.0	
(t / thank-01 
      :ARG1 (r / reread-01))

# ::snt It's nice to vent.
# ::tok It 's nice to vent .
# ::alignments 0-1|0.0 4-5|0.1 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.513
# ::node	0	nice	2-3
# ::node	0.0	it	0-1
# ::node	0.1	vent-01	4-5
# ::root	0	nice
# ::edge	nice	domain	it	0	0.0	
# ::edge	nice	domain	vent-01	0	0.1	
(n / nice 
      :domain (i / it) 
      :domain (v / vent-01))

# ::snt You can't get her sectioned for that.
# ::tok You ca n't get her sectioned for that .
# ::alignments 4-5|0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 1-2|0 5-6|0.0.1.0+0.0.1 0-1|0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.644
# ::node	0	possible	1-2
# ::node	0.0	get-01	3-4
# ::node	0.0.0	you	0-1
# ::node	0.0.1	thing	5-6
# ::node	0.0.1.0	section-01	5-6
# ::node	0.0.1.0.0	country	4-5
# ::node	0.0.1.0.0.0	name	4-5
# ::node	0.0.1.0.0.0.0	"United States"	4-5
# ::root	0	possible
# ::edge	country	name	name	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	get-01	ARG0	you	0.0	0.0.0	
# ::edge	get-01	ARG1	thing	0.0	0.0.1	
# ::edge	name	op1	"United States"	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	possible	domain	get-01	0	0.0	
# ::edge	section-01	ARG1	country	0.0.1.0	0.0.1.0.0	
# ::edge	section-01	ARG2	thing	0.0.1.0	0.0.1	
(p / possible 
      :domain (g / get-01 
            :ARG0 (y / you) 
            :ARG1 (t / thing 
                  :ARG2-of (s / section-01 
                        :ARG1 (c / country 
                              :name (n / name 
                                    :op1 "United States"))))))

# ::snt Does she even have a history of mental illness or a diagnosis?
# ::tok Does she even have a history of mental illness or a diagnosis ?
# ::alignments 2-3|0.1.0 8-9|0.0.0.0 0-1|0.1 5-6|0.0 9-10|0.0.0 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:20.934
# ::node	0	have-03	3-4
# ::node	0.0	history	5-6
# ::node	0.0.0	or	9-10
# ::node	0.0.0.0	illness	8-9
# ::node	0.1	do-02	0-1
# ::node	0.1.0	even	2-3
# ::root	0	have-03
# ::edge	do-02	ARG1	have-03	0.1	0	
# ::edge	do-02	ARG6	even	0.1	0.1.0	
# ::edge	have-03	ARG1	history	0	0.0	
# ::edge	history	poss	or	0.0	0.0.0	
# ::edge	or	op1	illness	0.0.0	0.0.0.0	
(h2 / have-03 
      :ARG1 (h / history 
            :poss (o / or 
                  :op1 (i / illness))) 
      :ARG1-of (d / do-02 
            :ARG6 (e / even)))

# ::snt You don't know for sure that you won't get good grades so accept places if you can.
# ::tok You do n't know for sure that you wo n't get good grades so accept places if you can .
# ::alignments 12-13|0.0.1 3-4|0 10-11|0.0 17-18|0.0.1.0.1 18-19|0.1.0 13-14|0.0.1.0.2 8-9|0.0.2.0.0+0.0.2.0+0.0.2 5-6|0.1 11-12|0.0.1.1 0-1|0.0.0 15-16|0.0.1.0.0 14-15|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:21.490
# ::node	0	know-01	3-4
# ::node	0.0	get-01	10-11
# ::node	0.0.0	you	0-1
# ::node	0.0.1	grade	12-13
# ::node	0.0.1.0	accept-01	14-15
# ::node	0.0.1.0.0	place	15-16
# ::node	0.0.1.0.1	you	17-18
# ::node	0.0.1.0.2	so	13-14
# ::node	0.0.1.1	good	11-12
# ::node	0.0.2	country	8-9
# ::node	0.0.2.0	name	8-9
# ::node	0.0.2.0.0	"U.S."	8-9
# ::node	0.1	surge-01	5-6
# ::node	0.1.0	possible	18-19
# ::root	0	know-01
# ::edge	accept-01	ARG0	grade	0.0.1.0	0.0.1	
# ::edge	accept-01	ARG1	place	0.0.1.0	0.0.1.0.0	
# ::edge	accept-01	ARG6	you	0.0.1.0	0.0.1.0.1	
# ::edge	accept-01	manner	so	0.0.1.0	0.0.1.0.2	
# ::edge	country	domain	get-01	0.0.2	0.0	
# ::edge	country	name	name	0.0.2	0.0.2.0	
# ::edge	get-01	ARG0	you	0.0	0.0.0	
# ::edge	get-01	ARG1	grade	0.0	0.0.1	
# ::edge	grade	mod	good	0.0.1	0.0.1.1	
# ::edge	know-01	ARG1	get-01	0	0.0	
# ::edge	know-01	ARG2	surge-01	0	0.1	
# ::edge	name	op1	"U.S."	0.0.2.0	0.0.2.0.0	
# ::edge	surge-01	ARG1	possible	0.1	0.1.0	
(k / know-01 
      :ARG1 (g2 / get-01 
            :ARG0 (y2 / you) 
            :ARG1 (g / grade 
                  :ARG0-of (a / accept-01 
                        :ARG1 (p2 / place) 
                        :ARG6 (y / you) 
                        :manner (s / so)) 
                  :mod (g3 / good)) 
            :domain-of (c / country 
                  :name (n / name 
                        :op1 "U.S."))) 
      :ARG2 (s2 / surge-01 
            :ARG1 (p / possible)))

# ::snt Life throws **** at you all the time.
# ::tok Life throws * * * * at you all the time .
# ::alignments 0-1|0.0.1 0-1|0 5-6|0.0 7-8|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:21.575
# ::node	0	life	0-1
# ::node	0.0	all	5-6
# ::node	0.0.0	time	7-8
# ::node	0.0.1	1	0-1
# ::root	0	life
(l / life 
      :domain-of (a / all 
            :calendar-of (t / time) 
            :domain 1))

# ::snt If it's not someone in your family, it's an outsider.
# ::tok If it 's not someone in your family , it 's an outsider .
# ::alignments 1-2|0.1 4-5|0.0 7-8|0.0.0 12-13|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:21.702
# ::node	0	outsider	12-13
# ::node	0.0	someone	4-5
# ::node	0.0.0	family	7-8
# ::node	0.1	country	1-2
# ::root	0	outsider
# ::edge	country	poss	outsider	0.1	0	
# ::edge	outsider	poss	someone	0	0.0	
# ::edge	someone	poss	family	0.0	0.0.0	
(o / outsider 
      :poss (s / someone 
            :poss (f / family)) 
      :poss-of (c / country))

# ::snt I had to deal with verbal abuse from my dad for a long 8 years before I came to uni and honestly, the only reason why I'm here is because it was the only way out.
# ::tok I had to deal with verbal abuse from my dad for a long 8 years before I came to uni and honestly , the only reason why I 'm here is because it was the only way out .
# ::alignments 13-14|0.0.1.0.0.3 29-30|0.0.1.1 6-7|0.0.1 5-6|0.0.1.2 36-37|0.0.1.0.0.2.0 21-22|0.1 12-13|0.0.1.0.0.1 15-16|0.0.1.0.0.0 20-21|0 0-1|0.0.0 16-17|0.0.1.0.0.0.0 14-15|0.0.1.0.0 24-25|0.0.1.3 9-10|0.0.1.0 3-4|0.0 35-36|0.0.1.0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:22.845
# ::node	0	and	20-21
# ::node	0.0	deal-01	3-4
# ::node	0.0.0	i	0-1
# ::node	0.0.1	abuse-01	6-7
# ::node	0.0.1.0	dad	9-10
# ::node	0.0.1.0.0	year	14-15
# ::node	0.0.1.0.0.0	before	15-16
# ::node	0.0.1.0.0.0.0	i	16-17
# ::node	0.0.1.0.0.1	long	12-13
# ::node	0.0.1.0.0.2	only	35-36
# ::node	0.0.1.0.0.2.0	way	36-37
# ::node	0.0.1.0.0.3	8	13-14
# ::node	0.0.1.1	here	29-30
# ::node	0.0.1.2	verbal	5-6
# ::node	0.0.1.3	only	24-25
# ::node	0.1	honest	21-22
# ::root	0	and
# ::edge	abuse-01	ARG0	dad	0.0.1	0.0.1.0	
# ::edge	abuse-01	ARG1	here	0.0.1	0.0.1.1	
# ::edge	abuse-01	mod	verbal	0.0.1	0.0.1.2	
# ::edge	and	op1	deal-01	0	0.0	
# ::edge	and	op2	honest	0	0.1	
# ::edge	before	calendar	i	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	deal-01	ARG0	i	0.0	0.0.0	
# ::edge	deal-01	ARG1	abuse-01	0.0	0.0.1	
# ::edge	only	mod	year	0.0.1.0.0.2	0.0.1.0.0	
# ::edge	only	op1	abuse-01	0.0.1.3	0.0.1	
# ::edge	way	mod	only	0.0.1.0.0.2.0	0.0.1.0.0.2	
# ::edge	year	location	before	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	year	mod	long	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	year	quant	8	0.0.1.0.0	0.0.1.0.0.3	
# ::edge	year	quant	dad	0.0.1.0.0	0.0.1.0	
(a2 / and 
      :op1 (d2 / deal-01 
            :ARG0 (i / i) 
            :ARG1 (a / abuse-01 
                  :ARG0 (d / dad 
                        :quant-of (y / year 
                              :location (b / before 
                                    :calendar (i2 / i)) 
                              :mod (l / long) 
                              :mod-of (o2 / only 
                                    :mod-of (w / way)) 
                              :quant 8)) 
                  :ARG1 (h / here) 
                  :mod (v / verbal) 
                  :op-of (o / only))) 
      :op2 (h2 / honest))

# ::snt Work hard if you really want out.
# ::tok Work hard if you really want out .
# ::alignments 1-2|0.0 0-1|0 4-5|0.1.1 5-6|0.1 3-4|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:23.008
# ::node	0	work-01	0-1
# ::node	0.0	hard	1-2
# ::node	0.1	want-01	5-6
# ::node	0.1.0	you	3-4
# ::node	0.1.1	really	4-5
# ::root	0	work-01
# ::edge	want-01	ARG0	you	0.1	0.1.0	
# ::edge	want-01	ARG1	work-01	0.1	0	
# ::edge	want-01	manner	really	0.1	0.1.1	
# ::edge	work-01	ARG1	hard	0	0.0	
(w / work-01 
      :ARG1 (h / hard) 
      :ARG1-of (w2 / want-01 
            :ARG0 (y / you) 
            :manner (r / really)))

# ::snt Really sounds like you need support from somewhere else if she can't give it to you consistently.
# ::tok Really sounds like you need support from somewhere else if she ca n't give it to you consistently .
# ::alignments 4-5|0.0.1 17-18|0.1.1 13-14|0.1 0-1|0.0.1.0.0 3-4|0.0.0 16-17|0.1.0 11-12|0 1-2|0.0.1.0 5-6|0.0 7-8|0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:23.594
# ::node	0	possible	11-12
# ::node	0.0	support-01	5-6
# ::node	0.0.0	you	3-4
# ::node	0.0.1	need-01	4-5
# ::node	0.0.1.0	sound-01	1-2
# ::node	0.0.1.0.0	real	0-1
# ::node	0.0.2	somewhere	7-8
# ::node	0.1	give-01	13-14
# ::node	0.1.0	you	16-17
# ::node	0.1.1	consistent	17-18
# ::root	0	possible
# ::edge	give-01	ARG1	you	0.1	0.1.0	
# ::edge	give-01	ARG6	consistent	0.1	0.1.1	
# ::edge	need-01	ARG1	support-01	0.0.1	0.0	
# ::edge	possible	domain	give-01	0	0.1	
# ::edge	sound-01	ARG0	real	0.0.1.0	0.0.1.0.0	
# ::edge	sound-01	ARG1	need-01	0.0.1.0	0.0.1	
# ::edge	support-01	ARG0	you	0.0	0.0.0	
# ::edge	support-01	ARG1	possible	0.0	0	
# ::edge	support-01	ARG6	somewhere	0.0	0.0.2	
(p / possible 
      :ARG1-of (s2 / support-01 
            :ARG0 (y / you) 
            :ARG1-of (n / need-01 
                  :ARG1-of (s / sound-01 
                        :ARG0 (r / real))) 
            :ARG6 (s3 / somewhere)) 
      :domain (g / give-01 
            :ARG1 (y2 / you) 
            :ARG6 (c / consistent)))

# ::snt You could call Childline or something similar?
# ::tok You could call Childline or something similar ?
# ::alignments 4-5|0.0.1.0 6-7|0.0.1 2-3|0.0 5-6|0.0.1.0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:23.755
# ::node	0	possible	1-2
# ::node	0.0	call-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.1	simmer-01	6-7
# ::node	0.0.1.0	or	4-5
# ::node	0.0.1.0.0	something	5-6
# ::root	0	possible
# ::edge	call-01	ARG0	you	0.0	0.0.0	
# ::edge	call-01	ARG1	simmer-01	0.0	0.0.1	
# ::edge	or	op1	something	0.0.1.0	0.0.1.0.0	
# ::edge	possible	domain	call-01	0	0.0	
# ::edge	simmer-01	ARG1	or	0.0.1	0.0.1.0	
(p / possible 
      :domain (c / call-01 
            :ARG0 (y / you) 
            :ARG1 (s / simmer-01 
                  :ARG1 (o / or 
                        :op1 (s2 / something)))))

# ::snt You could go to the library on saturdays and do a good 8 hours of studying there.
# ::tok You could go to the library on saturdays and do a good 8 hours of studying there .
# ::alignments 8-9|0.0.2 2-3|0.0 13-14|0.0.2.0.0 1-2|0 12-13|0.0.2.0.0.0.0 0-1|0.0.0 11-12|0.0.1.0.0+0.0.1.0+0.0.1 15-16|0.0.2.0.0.0 9-10|0.0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:23.992
# ::node	0	possible	1-2
# ::node	0.0	go-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.1	person	11-12
# ::node	0.0.1.0	name	11-12
# ::node	0.0.1.0.0	"Good"	11-12
# ::node	0.0.2	and	8-9
# ::node	0.0.2.0	do-02	9-10
# ::node	0.0.2.0.0	hour	13-14
# ::node	0.0.2.0.0.0	study-01	15-16
# ::node	0.0.2.0.0.0.0	8	12-13
# ::root	0	possible
# ::edge	and	op1	go-01	0.0.2	0.0	
# ::edge	and	op2	do-02	0.0.2	0.0.2.0	
# ::edge	do-02	ARG1	hour	0.0.2.0	0.0.2.0.0	
# ::edge	go-01	ARG0	you	0.0	0.0.0	
# ::edge	go-01	ARG1	person	0.0	0.0.1	
# ::edge	name	op1	"Good"	0.0.1.0	0.0.1.0.0	
# ::edge	person	name	name	0.0.1	0.0.1.0	
# ::edge	possible	domain	go-01	0	0.0	
# ::edge	study-01	ARG0	hour	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	study-01	ARG1	8	0.0.2.0.0.0	0.0.2.0.0.0.0	
(p / possible 
      :domain (g / go-01 
            :ARG0 (y / you) 
            :ARG1 (p2 / person 
                  :name (n / name 
                        :op1 "Good")) 
            :op-of (a / and 
                  :op1 (d / do-02 
                        :ARG1 (h / hour 
                              :ARG0-of (s / study-01 
                                    :ARG1 8))))))

# ::snt Is there a friend's house you could go to- form a study group?
# ::tok Is there a friend 's house you could go to - form a study group ?
# ::alignments 5-6|0.0.1 14-15|0.0.0.0.0 7-8|0 6-7|0.0.0 8-9|0.0 13-14|0.0.0.0.0.0 3-4|0.0.2 11-12|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:24.283
# ::node	0	possible	7-8
# ::node	0.0	go-06	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.0.0	form-01	11-12
# ::node	0.0.0.0.0	group	14-15
# ::node	0.0.0.0.0.0	study	13-14
# ::node	0.0.1	house	5-6
# ::node	0.0.2	friend	3-4
# ::root	0	possible
# ::edge	form-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	form-01	ARG1	group	0.0.0.0	0.0.0.0.0	
# ::edge	go-06	ARG0	you	0.0	0.0.0	
# ::edge	go-06	ARG1	house	0.0	0.0.1	
# ::edge	go-06	ARG6	friend	0.0	0.0.2	
# ::edge	group	mod	study	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	possible	domain	go-06	0	0.0	
(p / possible 
      :domain (g2 / go-06 
            :ARG0 (y / you 
                  :ARG0-of (f2 / form-01 
                        :ARG1 (g / group 
                              :mod (s / study)))) 
            :ARG1 (h / house) 
            :ARG6 (f / friend)))

# ::snt So you want her sectioned cos she is a bit of a pain in the arse and you've blamed all your problems on her?
# ::tok So you want her sectioned cos she is a bit of a pain in the arse and you 've blamed all your problems on her ?
# ::alignments 12-13|0.2 16-17|0.2.0 1-2|0.0 17-18|0.2.0.0.0 19-20|0.2.0.0 20-21|0.2.0.0.3 9-10|0.2.0.0.2 0-1|0.1 22-23|0.2.0.0.1 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:24.915
# ::node	0	want-01	2-3
# ::node	0.0	you	1-2
# ::node	0.1	so	0-1
# ::node	0.2	pain-01	12-13
# ::node	0.2.0	and	16-17
# ::node	0.2.0.0	blame-01	19-20
# ::node	0.2.0.0.0	you	17-18
# ::node	0.2.0.0.1	problem	22-23
# ::node	0.2.0.0.2	bit	9-10
# ::node	0.2.0.0.3	all	20-21
# ::root	0	want-01
# ::edge	all	op1	blame-01	0.2.0.0.3	0.2.0.0	
# ::edge	and	op1	blame-01	0.2.0	0.2.0.0	
# ::edge	blame-01	ARG0	you	0.2.0.0	0.2.0.0.0	
# ::edge	blame-01	ARG1	problem	0.2.0.0	0.2.0.0.1	
# ::edge	blame-01	ARG6	bit	0.2.0.0	0.2.0.0.2	
# ::edge	pain-01	ARG0	and	0.2	0.2.0	
# ::edge	pain-01	ARG1	want-01	0.2	0	
# ::edge	want-01	ARG0	you	0	0.0	
# ::edge	want-01	ARG1	so	0	0.1	
(w / want-01 
      :ARG0 (y / you) 
      :ARG1 (s / so) 
      :ARG1-of (p / pain-01 
            :ARG0 (a / and 
                  :op1 (b / blame-01 
                        :ARG0 (y2 / you) 
                        :ARG1 (p2 / problem) 
                        :ARG6 (b2 / bit) 
                        :op-of (a2 / all)))))

# ::snt I know what you're feeling.
# ::tok I know what you 're feeling .
# ::alignments 1-2|0 3-4|0.1.0 5-6|0.1 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:24.975
# ::node	0	know-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	feel-01	5-6
# ::node	0.1.0	you	3-4
# ::root	0	know-01
# ::edge	feel-01	ARG0	you	0.1	0.1.0	
# ::edge	know-01	ARG0	i	0	0.0	
# ::edge	know-01	ARG1	feel-01	0	0.1	
(k / know-01 
      :ARG0 (i / i) 
      :ARG1 (f / feel-01 
            :ARG0 (y / you)))

# ::snt My Mum was spat out of hell too.
# ::tok My Mum was spat out of hell too .
# ::alignments 6-7|0.0 3-4|0 7-8|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:25.070
# ::node	0	spit-01	3-4
# ::node	0.0	hell-out-of	6-7
# ::node	0.1	too	7-8
# ::root	0	spit-01
# ::edge	spit-01	ARG1	hell-out-of	0	0.0	
# ::edge	spit-01	ARG6	too	0	0.1	
(s / spit-01 
      :ARG1 (h / hell-out-of) 
      :ARG6 (t / too))

# ::snt I highly recommend taking up smoking
# ::tok I highly recommend taking up smoking
# ::alignments 5-6|0.1.0 2-3|0 1-2|0.2 0-1|0.0 3-4|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:25.171
# ::node	0	recommend-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	take-13	3-4
# ::node	0.1.0	smoking	5-6
# ::node	0.2	high	1-2
# ::root	0	recommend-01
# ::edge	recommend-01	ARG0	i	0	0.0	
# ::edge	recommend-01	ARG1	take-13	0	0.1	
# ::edge	recommend-01	manner	high	0	0.2	
# ::edge	take-13	ARG1	smoking	0.1	0.1.0	
(r / recommend-01 
      :ARG0 (i / i) 
      :ARG1 (t / take-13 
            :ARG1 (s / smoking)) 
      :manner (h / high))

# ::snt Oh grow up tsr and stop negging its was a joke!!!
# ::tok Oh grow up tsr and stop negging its was a joke !!!
# ::alignments 10-11|0.0.0.2 5-6|0.0.0.1 1-2|0.0 4-5|0.0.0.0 6-7|0.0.0 0-1|0.1.0+0.1+0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:25.702
# ::node	0	multi-sentence	0-1
# ::node	0.0	grow-04	1-2
# ::node	0.0.0	negging-01	6-7
# ::node	0.0.0.0	and	4-5
# ::node	0.0.0.1	stop-01	5-6
# ::node	0.0.0.2	joke-01	10-11
# ::node	0.1	oh	0-1
# ::node	0.1.0	expressive	0-1
# ::root	0	multi-sentence
# ::edge	grow-04	ARG1	negging-01	0.0	0.0.0	
# ::edge	grow-04	ARG6	multi-sentence	0.0	0	
# ::edge	joke-01	ARG1	negging-01	0.0.0.2	0.0.0	
# ::edge	multi-sentence	snt1	oh	0	0.1	
# ::edge	negging-01	ARG0	and	0.0.0	0.0.0.0	
# ::edge	negging-01	ARG1	stop-01	0.0.0	0.0.0.1	
# ::edge	oh	mode	expressive	0.1	0.1.0	
(m / multi-sentence 
      :ARG6-of (g / grow-04 
            :ARG1 (n / negging-01 
                  :ARG0 (a / and) 
                  :ARG1 (s / stop-01) 
                  :ARG1-of (j / joke-01))) 
      :snt1 (o / oh 
            :mode (e / expressive)))

# ::snt I think over the last year or 2 i've become a much weaker person and in a way have dulled down my personality inorder to try and make some friends at uni.
# ::tok I think over the last year or 2 i 've become a much weaker person and in a way have dulled down my personality inorder to try and make some friends at uni .
# ::alignments 13-14|0.2.0.1.0+0.2.0.1 12-13|0.2.0.0.0 27-28|0.3.0.0.0 6-7|0.0.0.0 20-21|0.3 2-3|0.0.0 15-16|0 14-15|0.2.0.0+0.2.0 30-31|0.3.0.0.0.0.0 26-27|0.3.0.0 0-1|0.0.2 23-24|0.3.1 28-29|0.3.0.0.0.0 0-1|0.0.1 1-2|0.0 0-4|0.1.0+0.1.1+0.1.2+0.1 10-11|0.2 18-19|0.3.0 29-30|0.3.0.0.0.0.0.0 8-9|0.2.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:29.415
# ::node	0	and	15-16
# ::node	0.0	think-01	1-2
# ::node	0.0.0	over	2-3
# ::node	0.0.0.0	or	6-7
# ::node	0.0.1	1	0-1
# ::node	0.0.2	i	0-1
# ::node	0.1	date-entity	0-4
# ::node	0.1.0	year	0-4
# ::node	0.1.1	last	0-4
# ::node	0.1.2	the	0-4
# ::node	0.2	become-01	10-11
# ::node	0.2.0	person	14-15
# ::node	0.2.0.0	oppose-01	14-15
# ::node	0.2.0.0.0	much	12-13
# ::node	0.2.0.1	weak	13-14
# ::node	0.2.0.1.0	more	13-14
# ::node	0.2.1	i	8-9
# ::node	0.3	dull-01	20-21
# ::node	0.3.0	way	18-19
# ::node	0.3.0.0	try-01	26-27
# ::node	0.3.0.0.0	and	27-28
# ::node	0.3.0.0.0.0	make-03	28-29
# ::node	0.3.0.0.0.0.0	friend	30-31
# ::node	0.3.0.0.0.0.0.0	some	29-30
# ::node	0.3.1	personality	23-24
# ::root	0	and
# ::edge	and	op1	date-entity	0	0.1	
# ::edge	and	op1	try-01	0.3.0.0.0	0.3.0.0	
# ::edge	and	op2	become-01	0	0.2	
# ::edge	and	op2	make-03	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	and	op3	dull-01	0	0.3	
# ::edge	become-01	ARG2	person	0.2	0.2.0	
# ::edge	become-01	ARG6	i	0.2	0.2.1	
# ::edge	date-entity	time	last	0.1	0.1.1	
# ::edge	date-entity	time	the	0.1	0.1.2	
# ::edge	date-entity	time	year	0.1	0.1.0	
# ::edge	dull-01	ARG0	way	0.3	0.3.0	
# ::edge	dull-01	ARG1	personality	0.3	0.3.1	
# ::edge	friend	quant	some	0.3.0.0.0.0.0	0.3.0.0.0.0.0.0	
# ::edge	make-03	ARG1	friend	0.3.0.0.0.0	0.3.0.0.0.0.0	
# ::edge	oppose-01	ARG0	person	0.2.0.0	0.2.0	
# ::edge	oppose-01	ARG1	much	0.2.0.0	0.2.0.0.0	
# ::edge	over	calendar	or	0.0.0	0.0.0.0	
# ::edge	person	mod	weak	0.2.0	0.2.0.1	
# ::edge	think-01	ARG1	and	0.0	0	
# ::edge	think-01	duration	over	0.0	0.0.0	
# ::edge	think-01	manner	1	0.0	0.0.1	
# ::edge	think-01	manner	i	0.0	0.0.2	
# ::edge	try-01	ARG1	way	0.3.0.0	0.3.0	
# ::edge	weak	degree	more	0.2.0.1	0.2.0.1.0	
(a2 / and 
      :ARG1-of (t2 / think-01 
            :duration (o2 / over 
                  :calendar (o / or)) 
            :manner 1 
            :manner (i / i)) 
      :op1 (d2 / date-entity 
            :time (y / year) 
            :time (l / last) 
            :time (t3 / the)) 
      :op2 (b / become-01 
            :ARG2 (p / person 
                  :ARG0-of (o3 / oppose-01 
                        :ARG1 (m2 / much)) 
                  :mod (w / weak 
                        :degree (m / more))) 
            :ARG6 (i2 / i)) 
      :op3 (d / dull-01 
            :ARG0 (w2 / way 
                  :ARG1-of (t / try-01 
                        :op-of (a / and 
                              :op1 (m3 / make-03 
                                    :ARG1 (f / friend 
                                          :quant (s / some)))))) 
            :ARG1 (p2 / personality)))

# ::snt But being overly-nice to people has lead them to believe that they can say or do whatever the hell they want to me...
# ::tok But being overly - nice to people has lead them to believe that they can say or do whatever the hell they want to me ...
# ::alignments 18-19|0.0.0 14-15|0.0.2 9-10|0.0.2.0 20-21|0.0.1 0-1|0.0.2.0.0 15-16|0.0 12-13|0.1 16-17|0.0.3 6-7|0.0.2.0.0.0 13-14|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:29.929
# ::node	0	say-01	13-14
# ::node	0.0	do-02	15-16
# ::node	0.0.0	hell	18-19
# ::node	0.0.1	want-01	20-21
# ::node	0.0.2	or	14-15
# ::node	0.0.2.0	believe-01	9-10
# ::node	0.0.2.0.0	bunt-01	0-1
# ::node	0.0.2.0.0.0	lead-03	6-7
# ::node	0.0.3	whatever	16-17
# ::node	0.1	possible	12-13
# ::root	0	say-01
# ::edge	believe-01	ARG1	or	0.0.2.0	0.0.2	
# ::edge	bunt-01	ARG1	believe-01	0.0.2.0.0	0.0.2.0	
# ::edge	do-02	ARG0	say-01	0.0	0	
# ::edge	do-02	ARG1	hell	0.0	0.0.0	
# ::edge	lead-03	ARG1	bunt-01	0.0.2.0.0.0	0.0.2.0.0	
# ::edge	or	domain	do-02	0.0.2	0.0	
# ::edge	say-01	ARG1	possible	0	0.1	
# ::edge	want-01	ARG1	do-02	0.0.1	0.0	
# ::edge	whatever	op1	do-02	0.0.3	0.0	
(s / say-01 
      :ARG0-of (d / do-02 
            :ARG1 (h / hell) 
            :ARG1-of (w / want-01) 
            :domain-of (o / or 
                  :ARG1-of (b / believe-01 
                        :ARG1-of (b2 / bunt-01 
                              :ARG1-of (l / lead-03)))) 
            :op-of (w2 / whatever)) 
      :ARG1 (p / possible))

# ::snt they show absolutely no respect.
# ::tok they show absolutely no respect .
# ::alignments 2-3|0.1.0 1-2|0 0-1|0.0 4-5|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:30.021
# ::node	0	show-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	respect-01	4-5
# ::node	0.1.0	absolutely	2-3
# ::root	0	show-01
# ::edge	respect-01	ARG1	absolutely	0.1	0.1.0	
# ::edge	show-01	ARG0	they	0	0.0	
# ::edge	show-01	ARG1	respect-01	0	0.1	
(s / show-01 
      :ARG0 (t / they) 
      :ARG1 (r / respect-01 
            :ARG1 (a / absolutely)))

# ::snt e.g. i'll say hello to someone from uni and they'll ignore me, but 30 minutes later they'll decide they want my help with some work... and i'll give it to them.
# ::tok e.g. i 'll say hello to someone from uni and they 'll ignore me , but 30 minutes later they 'll decide they want my help with some work ... and i 'll give it to them .
# ::alignments 13-14|0.1.0.1 3-4|0 6-7|0.1.1.0.2.0.0 1-2|0.0 21-22|0.1.1 9-10|0.1 23-24|0.1.1.0.1+0.1.1.0 30-31|0.1.1.0.2 0-17|0.1.1.1.0.0+0.1.1.1.0.1+0.1.1.1.0.2+0.1.1.1.0 31-32|0.1.1.0.2.1.0 15-16|0.1.1.1 27-28|0.1.1.0.2.0.1 28-29|0.1.1.0.2.0 10-11|0.1.0.0 12-13|0.1.0 4-5|0.2 25-26|0.1.1.0.0 33-34|0.1.1.0.2.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:32.187
# ::node	0	say-01	3-4
# ::node	0.0	i	1-2
# ::node	0.1	and	9-10
# ::node	0.1.0	ignore-01	12-13
# ::node	0.1.0.0	country	10-11
# ::node	0.1.0.1	i	13-14
# ::node	0.1.1	decide-01	21-22
# ::node	0.1.1.0	want-01	23-24
# ::node	0.1.1.0.0	help-01	25-26
# ::node	0.1.1.0.1	cause-01	23-24
# ::node	0.1.1.0.2	and	30-31
# ::node	0.1.1.0.2.0	work-01	28-29
# ::node	0.1.1.0.2.0.0	someone	6-7
# ::node	0.1.1.0.2.0.1	some	27-28
# ::node	0.1.1.0.2.1	give-01	33-34
# ::node	0.1.1.0.2.1.0	i	31-32
# ::node	0.1.1.1	bunt-01	15-16
# ::node	0.1.1.1.0	date-entity	0-17
# ::node	0.1.1.1.0.0	later	0-17
# ::node	0.1.1.1.0.1	minute	0-17
# ::node	0.1.1.1.0.2	30	0-17
# ::node	0.2	heel-01	4-5
# ::root	0	say-01
# ::edge	and	op1	ignore-01	0.1	0.1.0	
# ::edge	and	op1	want-01	0.1.1.0.2	0.1.1.0	
# ::edge	and	op2	decide-01	0.1	0.1.1	
# ::edge	and	op2	work-01	0.1.1.0.2	0.1.1.0.2.0	
# ::edge	and	op3	give-01	0.1.1.0.2	0.1.1.0.2.1	
# ::edge	bunt-01	ARG1	date-entity	0.1.1.1	0.1.1.1.0	
# ::edge	bunt-01	ARG2	decide-01	0.1.1.1	0.1.1	
# ::edge	cause-01	ARG1	want-01	0.1.1.0.1	0.1.1.0	
# ::edge	date-entity	time	30	0.1.1.1.0	0.1.1.1.0.2	
# ::edge	date-entity	time	later	0.1.1.1.0	0.1.1.1.0.0	
# ::edge	date-entity	time	minute	0.1.1.1.0	0.1.1.1.0.1	
# ::edge	decide-01	ARG1	want-01	0.1.1	0.1.1.0	
# ::edge	give-01	ARG1	i	0.1.1.0.2.1	0.1.1.0.2.1.0	
# ::edge	heel-01	ARG1	say-01	0.2	0	
# ::edge	ignore-01	ARG0	country	0.1.0	0.1.0.0	
# ::edge	ignore-01	ARG1	i	0.1.0	0.1.0.1	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	say-01	ARG1	and	0	0.1	
# ::edge	want-01	ARG1	help-01	0.1.1.0	0.1.1.0.0	
# ::edge	work-01	ARG1	someone	0.1.1.0.2.0	0.1.1.0.2.0.0	
# ::edge	work-01	quant	some	0.1.1.0.2.0	0.1.1.0.2.0.1	
(s / say-01 
      :ARG0 (i2 / i) 
      :ARG1 (a / and 
            :op1 (i4 / ignore-01 
                  :ARG0 (c2 / country) 
                  :ARG1 (i / i)) 
            :op2 (d / decide-01 
                  :ARG1 (w / want-01 
                        :ARG1 (h2 / help-01) 
                        :ARG1-of (c / cause-01) 
                        :op-of (a2 / and 
                              :op1 (w2 / work-01 
                                    :ARG1 (s2 / someone) 
                                    :quant (s3 / some)) 
                              :op2 (g / give-01 
                                    :ARG1 (i3 / i)))) 
                  :ARG2-of (b / bunt-01 
                        :ARG1 (d2 / date-entity 
                              :time (l / later) 
                              :time (m / minute) 
                              :time 30)))) 
      :ARG1-of (h / heel-01))

# ::snt It's causing alot of anger and distress in my life and is really starting to effect my concentration in uni.
# ::tok It 's causing alot of anger and distress in my life and is really starting to effect my concentration in uni .
# ::alignments 0-1|0.0 16-17|0.3.0.0 6-7|0.2 13-14|0.3.0.1 11-12|0.3 3-4|0.1 18-19|0.3.0.0.0 5-6|0.2.0 2-3|0 20-21|0.3.0.0.0.0 10-11|0.2.0.0 14-15|0.3.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:33.091
# ::node	0	cause-01	2-3
# ::node	0.0	it	0-1
# ::node	0.1	alot	3-4
# ::node	0.2	and	6-7
# ::node	0.2.0	anger-01	5-6
# ::node	0.2.0.0	life	10-11
# ::node	0.3	and	11-12
# ::node	0.3.0	start-01	14-15
# ::node	0.3.0.0	effect-01	16-17
# ::node	0.3.0.0.0	concentrate-01	18-19
# ::node	0.3.0.0.0.0	unus	20-21
# ::node	0.3.0.1	really	13-14
# ::root	0	cause-01
# ::edge	and	op1	anger-01	0.2	0.2.0	
# ::edge	and	op1	cause-01	0.3	0	
# ::edge	and	op2	start-01	0.3	0.3.0	
# ::edge	anger-01	ARG1	life	0.2.0	0.2.0.0	
# ::edge	cause-01	ARG0	it	0	0.0	
# ::edge	cause-01	ARG1	alot	0	0.1	
# ::edge	cause-01	ARG2	and	0	0.2	
# ::edge	concentrate-01	ARG1	unus	0.3.0.0.0	0.3.0.0.0.0	
# ::edge	effect-01	ARG1	concentrate-01	0.3.0.0	0.3.0.0.0	
# ::edge	start-01	ARG1	effect-01	0.3.0	0.3.0.0	
# ::edge	start-01	mod	really	0.3.0	0.3.0.1	
(c2 / cause-01 
      :ARG0 (i / it) 
      :ARG1 (a3 / alot) 
      :ARG2 (a / and 
            :op1 (a4 / anger-01 
                  :ARG1 (l / life))) 
      :op-of (a2 / and 
            :op1 (s / start-01 
                  :ARG1 (e / effect-01 
                        :ARG1 (c / concentrate-01 
                              :ARG1 (u / unus))) 
                  :mod (r / really))))

# ::snt has anyone got any experience in handling this sort of thing or how to go about gaining some respect again?
# ::tok has anyone got any experience in handling this sort of thing or how to go about gaining some respect again ?
# ::alignments 14-15|0.2.0.0 1-2|0.0 6-7|0.2 12-13|0.2.0.0.1 7-8|0.2.1.0 3-4|0.1.1 19-20|0.2.0.0.0.1 4-5|0.1 18-19|0.2.0.0.0.0 8-9|0.2.1 10-11|0.2.0.0.0.0.0 17-18|0.1.0 16-17|0.2.0.0.0 2-3|0 11-12|0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:34.486
# ::node	0	get-01	2-3
# ::node	0.0	anyone	1-2
# ::node	0.1	experience-01	4-5
# ::node	0.1.0	some	17-18
# ::node	0.1.1	any	3-4
# ::node	0.2	handle-01	6-7
# ::node	0.2.0	or	11-12
# ::node	0.2.0.0	go-01	14-15
# ::node	0.2.0.0.0	gain-02	16-17
# ::node	0.2.0.0.0.0	respect-01	18-19
# ::node	0.2.0.0.0.0.0	thing	10-11
# ::node	0.2.0.0.0.1	again	19-20
# ::node	0.2.0.0.1	thing	12-13
# ::node	0.2.1	sort	8-9
# ::node	0.2.1.0	this	7-8
# ::root	0	get-01
# ::edge	experience-01	ARG1	some	0.1	0.1.0	
# ::edge	experience-01	mod	any	0.1	0.1.1	
# ::edge	gain-02	ARG1	respect-01	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	gain-02	manner	again	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	get-01	ARG0	anyone	0	0.0	
# ::edge	get-01	ARG1	experience-01	0	0.1	
# ::edge	get-01	manner	handle-01	0	0.2	
# ::edge	go-01	ARG2	gain-02	0.2.0.0	0.2.0.0.0	
# ::edge	go-01	ARG6	thing	0.2.0.0	0.2.0.0.1	
# ::edge	handle-01	ARG1	or	0.2	0.2.0	
# ::edge	handle-01	ARG2	sort	0.2	0.2.1	
# ::edge	or	op1	go-01	0.2.0	0.2.0.0	
# ::edge	respect-01	ARG1	thing	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	sort	mod	this	0.2.1	0.2.1.0	
(g3 / get-01 
      :ARG0 (a / anyone) 
      :ARG1 (e / experience-01 
            :ARG1 (s2 / some) 
            :mod (a2 / any)) 
      :manner (h / handle-01 
            :ARG1 (o / or 
                  :op1 (g / go-01 
                        :ARG2 (g2 / gain-02 
                              :ARG1 (r / respect-01 
                                    :ARG1 (t3 / thing)) 
                              :manner (a3 / again)) 
                        :ARG6 (t / thing))) 
            :ARG2 (s / sort 
                  :mod (t2 / this))))

# ::snt Just say no.
# ::tok Just say no.
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:34.526
# ::node	0	say-01	1-2
# ::node	0.0	just	0-1
# ::root	0	say-01
# ::edge	say-01	ARG1	just	0	0.0	
(s / say-01 
      :ARG1 (j / just))

# ::snt Do it gradually if it's not something you're particularly comfortable with.
# ::tok Do it gradually if it 's not something you 're particularly comfortable with .
# ::alignments 0-1|0 7-8|0.2 11-12|0.2.0.0 2-3|0.1 8-9|0.2.0 10-11|0.2.0.0.0 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:34.717
# ::node	0	do-02	0-1
# ::node	0.0	country	4-5
# ::node	0.1	gradually	2-3
# ::node	0.2	something	7-8
# ::node	0.2.0	you	8-9
# ::node	0.2.0.0	comfortable	11-12
# ::node	0.2.0.0.0	particular	10-11
# ::root	0	do-02
# ::edge	comfortable	domain	you	0.2.0.0	0.2.0	
# ::edge	comfortable	mod	particular	0.2.0.0	0.2.0.0.0	
# ::edge	do-02	ARG0	country	0	0.0	
# ::edge	do-02	ARG1	gradually	0	0.1	
# ::edge	do-02	condition	something	0	0.2	
# ::edge	you	calendar	something	0.2.0	0.2	
(d / do-02 
      :ARG0 (c2 / country) 
      :ARG1 (g / gradually) 
      :condition (s / something 
            :calendar-of (y / you 
                  :domain-of (c / comfortable 
                        :mod (p / particular)))))

# ::snt You could start with 'No, sorry but I'm busy'
# ::tok You could start with ' No , sorry but I 'm busy '
# ::alignments 2-3|0.0 11-12|0.0.1 7-8|0.0.0.0.0+0.0.0.0 1-2|0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:37.507
# ::node	0	possible	1-2
# ::node	0.0	start-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.0.0	sorry-41	7-8
# ::node	0.0.0.0.0	i	7-8
# ::node	0.0.1	busy	11-12
# ::root	0	possible
# ::edge	possible	domain	start-01	0	0.0	
# ::edge	sorry-41	ARG1	i	0.0.0.0	0.0.0.0.0	
# ::edge	sorry-41	ARG6	you	0.0.0.0	0.0.0	
# ::edge	start-01	ARG0	you	0.0	0.0.0	
# ::edge	start-01	ARG1	busy	0.0	0.0.1	
(p / possible 
      :domain (s / start-01 
            :ARG0 (y / you 
                  :ARG6-of (s2 / sorry-41 
                        :ARG1 (i / i))) 
            :ARG1 (b / busy)))

# ::snt Of course, don't go over the top with it lest you go in completely the opposite direction.
# ::tok Of course , do n't go over the top with it lest you go in completely the opposite direction .
# ::alignments 6-7|0.0.0 12-13|0.1.0 15-16|0.1.2 8-9|0.0 5-6|0 18-19|0.1.1 13-14|0.1 1-2|0.2 17-18|0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:37.945
# ::node	0	go-01	5-6
# ::node	0.0	top	8-9
# ::node	0.0.0	over	6-7
# ::node	0.1	go-02	13-14
# ::node	0.1.0	you	12-13
# ::node	0.1.1	direction	18-19
# ::node	0.1.1.0	opposite	17-18
# ::node	0.1.2	complete	15-16
# ::node	0.2	course	1-2
# ::root	0	go-01
# ::edge	direction	mod	opposite	0.1.1	0.1.1.0	
# ::edge	go-01	ARG1	top	0	0.0	
# ::edge	go-01	ARG2	course	0	0.2	
# ::edge	go-02	ARG0	you	0.1	0.1.0	
# ::edge	go-02	ARG1	go-01	0.1	0	
# ::edge	go-02	ARG2	direction	0.1	0.1.1	
# ::edge	go-02	ARG6	complete	0.1	0.1.2	
# ::edge	over	op1	top	0.0.0	0.0	
(g / go-01 
      :ARG1 (t / top 
            :op-of (o / over)) 
      :ARG1-of (g2 / go-02 
            :ARG0 (y / you) 
            :ARG2 (d / direction 
                  :mod (o2 / opposite)) 
            :ARG6 (c / complete)) 
      :ARG2 (c2 / course))

# ::snt If, in your mind, you're thinking no - say it.
# ::tok If , in your mind , you 're thinking no - say it .
# ::alignments 4-5|0.0.1 11-12|0 8-9|0.0 6-7|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:38.106
# ::node	0	say-01	11-12
# ::node	0.0	think-01	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.1	mind	4-5
# ::root	0	say-01
# ::edge	say-01	ARG1	think-01	0	0.0	
# ::edge	think-01	ARG0	you	0.0	0.0.0	
# ::edge	think-01	ARG1	mind	0.0	0.0.1	
(s / say-01 
      :ARG1 (t / think-01 
            :ARG0 (y / you) 
            :ARG1 (m / mind)))

# ::snt When they start to realise that you're not going to bend over backwards for them, they'll start respecting you more.
# ::tok When they start to realise that you 're not going to bend over backwards for them , they 'll start respecting you more .
# ::alignments 9-10|0.0 11-12|0.0.0 2-3|0.1 21-22|0.1.0.0.1 6-7|0.0.0.0 22-23|0.1.0.0.0 12-13|0.0.0.1 4-5|0 20-21|0.1.0.0 19-20|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:38.803
# ::node	0	realize-01	4-5
# ::node	0.0	go-04	9-10
# ::node	0.0.0	bend-02	11-12
# ::node	0.0.0.0	you	6-7
# ::node	0.0.0.1	over	12-13
# ::node	0.1	start-01	2-3
# ::node	0.1.0	start-01	19-20
# ::node	0.1.0.0	respect-01	20-21
# ::node	0.1.0.0.0	more	22-23
# ::node	0.1.0.0.1	y	21-22
# ::root	0	realize-01
# ::edge	bend-02	ARG0	you	0.0.0	0.0.0.0	
# ::edge	bend-02	ARG1	over	0.0.0	0.0.0.1	
# ::edge	go-04	ARG1	bend-02	0.0	0.0.0	
# ::edge	realize-01	ARG1	go-04	0	0.0	
# ::edge	respect-01	ARG1	more	0.1.0.0	0.1.0.0.0	
# ::edge	respect-01	ARG6	y	0.1.0.0	0.1.0.0.1	
# ::edge	start-01	ARG1	realize-01	0.1	0	
# ::edge	start-01	ARG1	respect-01	0.1.0	0.1.0.0	
# ::edge	start-01	time	start-01	0.1.0	0.1	
(r / realize-01 
      :ARG1 (g / go-04 
            :ARG1 (b / bend-02 
                  :ARG0 (y2 / you) 
                  :ARG1 (o / over))) 
      :ARG1-of (s / start-01 
            :time-of (s2 / start-01 
                  :ARG1 (r2 / respect-01 
                        :ARG1 (m / more) 
                        :ARG6 (y / y)))))

# ::snt well this is such a bad attitude really, of course you can be respected if you're nice but not to the point where you just let them do anything to you, that's not being nice it's being a fool.
# ::tok well this is such a bad attitude really , of course you can be respected if you 're nice but not to the point where you just let them do anything to you , that 's not being nice it 's being a fool .
# ::alignments 7-8|0.0.0.0.1.0.0.0.0.1 38-39|0.0.0.1.0+0.0.0.1+0.0.0 10-11|0.0.0.0.0 14-15|0.0.0.0 3-4|0.0.0.0.1.0.0.0.0.0.1 29-30|0.1 26-27|0.1.1.1 30-31|0.1.0 43-44|0.0 5-6|0.0.0.0.1.0.0.0.0.0.0 18-19|0.0.0.0.1.0 19-20|0.0.0.0.1.0.0 0-1|0.0.0.0.1.0.0.0 25-26|0.1.1.0 6-7|0.0.0.0.1.0.0.0.0.0 1-2|0.0.0.0.1.0.0.0.0 11-12|0.0.0.0.2.0 23-24|0 12-13|0.0.0.0.2 16-17|0.0.0.0.1 32-33|0.1.2 27-28|0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:40.942
# ::node	0	point	23-24
# ::node	0.0	fool-01	43-44
# ::node	0.0.0	city	38-39
# ::node	0.0.0.0	respect-01	14-15
# ::node	0.0.0.0.0	course	10-11
# ::node	0.0.0.0.1	you	16-17
# ::node	0.0.0.0.1.0	nice	18-19
# ::node	0.0.0.0.1.0.0	bunt-01	19-20
# ::node	0.0.0.0.1.0.0.0	well	0-1
# ::node	0.0.0.0.1.0.0.0.0	this	1-2
# ::node	0.0.0.0.1.0.0.0.0.0	attitude	6-7
# ::node	0.0.0.0.1.0.0.0.0.0.0	bad	5-6
# ::node	0.0.0.0.1.0.0.0.0.0.1	such	3-4
# ::node	0.0.0.0.1.0.0.0.0.1	real	7-8
# ::node	0.0.0.0.2	possible	12-13
# ::node	0.0.0.0.2.0	you	11-12
# ::node	0.0.0.1	name	38-39
# ::node	0.0.0.1.0	"Nice"	38-39
# ::node	0.1	do-02	29-30
# ::node	0.1.0	anything	30-31
# ::node	0.1.1	let-01	27-28
# ::node	0.1.1.0	you	25-26
# ::node	0.1.1.1	just	26-27
# ::node	0.1.2	you	32-33
# ::root	0	point
(p / point 
      :ARG0-of (f / fool-01 
            :ARG1 (c / city 
                  :ARG0-of (r2 / respect-01 
                        :ARG1 (c2 / course) 
                        :ARG6 (y3 / you 
                              :domain-of (n2 / nice 
                                    :ARG6-of (b2 / bunt-01 
                                          :ARG0 (w / well 
                                                :time-of (t / this 
                                                      :mod (a2 / attitude 
                                                            :mod (b / bad) 
                                                            :quant (s / such)) 
                                                      :time (r / real)))))) 
                        :domain-of (p2 / possible 
                              :calendar (y2 / you))) 
                  :name (n / name 
                        :op1 "Nice"))) 
      :ARG0-of (d / do-02 
            :ARG1 (a / anything) 
            :ARG1-of (l / let-01 
                  :ARG0 (y / you) 
                  :ARG6 (j / just)) 
            :ARG6 (y4 / you)))

# ::snt I don't know if anyone will read this, but I just feel desperate and feel the need to tell someone.
# ::tok I do n't know if anyone will read this , but I just feel desperate and feel the need to tell someone .
# ::alignments 20-21|0.1.0.2.0.0.0 8-9|0.1.1.1 5-6|0.1.1.0 15-16|0.1.0.2 13-14|0.1.0 0-1|0.0 7-8|0.1.1 10-11|0.1 12-13|0.1.0.1 14-15|0.1.0.0 3-4|0 16-17|0.1.0.2.0 18-19|0.1.0.2.0.0 21-22|0.1.0.2.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:41.861
# ::node	0	know-01	3-4
# ::node	0.0	i	0-1
# ::node	0.1	bunt-01	10-11
# ::node	0.1.0	feel-01	13-14
# ::node	0.1.0.0	desperate	14-15
# ::node	0.1.0.1	just	12-13
# ::node	0.1.0.2	and	15-16
# ::node	0.1.0.2.0	feel-01	16-17
# ::node	0.1.0.2.0.0	need-01	18-19
# ::node	0.1.0.2.0.0.0	tell-01	20-21
# ::node	0.1.0.2.0.0.0.0	someone	21-22
# ::node	0.1.1	read-01	7-8
# ::node	0.1.1.0	anyone	5-6
# ::node	0.1.1.1	this	8-9
# ::root	0	know-01
# ::edge	and	op1	feel-01	0.1.0.2	0.1.0	
# ::edge	and	op2	feel-01	0.1.0.2	0.1.0.2.0	
# ::edge	bunt-01	ARG1	know-01	0.1	0	
# ::edge	bunt-01	ARG2	feel-01	0.1	0.1.0	
# ::edge	bunt-01	ARG6	read-01	0.1	0.1.1	
# ::edge	feel-01	ARG1	desperate	0.1.0	0.1.0.0	
# ::edge	feel-01	ARG1	need-01	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	feel-01	ARG6	just	0.1.0	0.1.0.1	
# ::edge	know-01	ARG1	i	0	0.0	
# ::edge	need-01	ARG1	tell-01	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	read-01	ARG0	anyone	0.1.1	0.1.1.0	
# ::edge	read-01	ARG1	this	0.1.1	0.1.1.1	
# ::edge	tell-01	ARG1	someone	0.1.0.2.0.0.0	0.1.0.2.0.0.0.0	
(k / know-01 
      :ARG1 (i / i) 
      :ARG1-of (b / bunt-01 
            :ARG2 (f / feel-01 
                  :ARG1 (d / desperate) 
                  :ARG6 (j / just) 
                  :op-of (a2 / and 
                        :op1 (f2 / feel-01 
                              :ARG1 (n / need-01 
                                    :ARG1 (t / tell-01 
                                          :ARG1 (s / someone)))))) 
            :ARG6 (r / read-01 
                  :ARG0 (a / anyone) 
                  :ARG1 (t2 / this))))

# ::snt This September I left home, and started at University. I was incredibly anxious about doing this, but rather delayed thinking about it until I got here! Now I'm here, and have been for over two weeks, I feel terribly overwhelmed by it all and feel unintelligent and socially awkward.
# ::tok This September I left home , and started at University . I was incredibly anxious about doing this , but rather delayed thinking about it until I got here ! Now I 'm here , and have been for over two weeks , I feel terribly overwhelmed by it all and feel unintelligent and socially awkward .
# ::alignments 6-7|0.0.2.0 41-42|0.0.2.0.7 3-4|0.0.2 0-31|0.0.2.0.1.0.0+0.0.2.0.1.0 54-55|0.0.2.0.2 7-8|0.0.2.0.1 53-54|0.0.2.0.10 4-5|0.0 22-23|0.0.2.0.0.0 35-36|0.0.2.0.5 44-45|0 16-17|0.0.2.0.0 14-15|0.0.2.0.0.1 17-18|0.0.2.0.0.1.0 50-51|0.0.2.0.9 25-26|0.0.2.0.0.0.0 28-29|0.0.2.0.3 49-50|0.0.2.0.8 51-52|0.0.0 21-22|0.0.2.0.0.0.1 39-40|0.0.2.0.6 19-20|0.0.2.0.0.1.0.0 46-47|0.0.1 0-1|0.0.2.0.0.0.1.0.0+0.0.2.0.0.0.1.0 33-34|0.0.2.0.4 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:46.320
# ::node	0	feel-01	44-45
# ::node	0.0	home	4-5
# ::node	0.0.0	feel-01	51-52
# ::node	0.0.1	overwhelm-01	46-47
# ::node	0.0.2	left-01	3-4
# ::node	0.0.2.0	and	6-7
# ::node	0.0.2.0.0	do-02	16-17
# ::node	0.0.2.0.0.0	think-01	22-23
# ::node	0.0.2.0.0.0.0	until	25-26
# ::node	0.0.2.0.0.0.1	delay-01	21-22
# ::node	0.0.2.0.0.0.1.0	date-entity	0-1
# ::node	0.0.2.0.0.0.1.0.0	9	0-1
# ::node	0.0.2.0.0.1	annul-01	14-15
# ::node	0.0.2.0.0.1.0	this	17-18
# ::node	0.0.2.0.0.1.0.0	bunt-01	19-20
# ::node	0.0.2.0.1	start-01	7-8
# ::node	0.0.2.0.1.0	date-entity	0-31
# ::node	0.0.2.0.1.0.0	now	0-31
# ::node	0.0.2.0.10	and	53-54
# ::node	0.0.2.0.2	social	54-55
# ::node	0.0.2.0.3	here	28-29
# ::node	0.0.2.0.4	here	33-34
# ::node	0.0.2.0.5	and	35-36
# ::node	0.0.2.0.6	over	39-40
# ::node	0.0.2.0.7	week	41-42
# ::node	0.0.2.0.8	all	49-50
# ::node	0.0.2.0.9	and	50-51
# ::root	0	feel-01
# ::edge	and	condition	do-02	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	left-01	0.0.2.0	0.0.2	
# ::edge	and	op10	and	0.0.2.0	0.0.2.0.10	
# ::edge	and	op11	social	0.0.2.0	0.0.2.0.2	
# ::edge	and	op2	start-01	0.0.2.0	0.0.2.0.1	
# ::edge	and	op3	here	0.0.2.0	0.0.2.0.3	
# ::edge	and	op4	here	0.0.2.0	0.0.2.0.4	
# ::edge	and	op5	and	0.0.2.0	0.0.2.0.5	
# ::edge	and	op6	over	0.0.2.0	0.0.2.0.6	
# ::edge	and	op7	week	0.0.2.0	0.0.2.0.7	
# ::edge	and	op8	all	0.0.2.0	0.0.2.0.8	
# ::edge	and	op9	and	0.0.2.0	0.0.2.0.9	
# ::edge	annul-01	ARG1	this	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	annul-01	ARG2	do-02	0.0.2.0.0.1	0.0.2.0.0	
# ::edge	bunt-01	ARG1	this	0.0.2.0.0.1.0.0	0.0.2.0.0.1.0	
# ::edge	date-entity	month	9	0.0.2.0.0.0.1.0	0.0.2.0.0.0.1.0.0	
# ::edge	date-entity	time	now	0.0.2.0.1.0	0.0.2.0.1.0.0	
# ::edge	delay-01	ARG0	date-entity	0.0.2.0.0.0.1	0.0.2.0.0.0.1.0	
# ::edge	delay-01	ARG1	think-01	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	do-02	ARG1	think-01	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	feel-01	ARG1	home	0	0.0	
# ::edge	feel-01	ARG1	home	0.0.0	0.0	
# ::edge	left-01	ARG1	home	0.0.2	0.0	
# ::edge	overwhelm-01	ARG1	home	0.0.1	0.0	
# ::edge	start-01	ARG1	date-entity	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	think-01	ARG1	until	0.0.2.0.0.0	0.0.2.0.0.0.0	
(f / feel-01 
      :ARG1 (h / home 
            :ARG1-of (f2 / feel-01) 
            :ARG1-of (o2 / overwhelm-01) 
            :ARG1-of (l / left-01 
                  :op-of (a / and 
                        :condition (d2 / do-02 
                              :ARG1 (t / think-01 
                                    :ARG1 (u / until) 
                                    :ARG1-of (d3 / delay-01 
                                          :ARG0 (d4 / date-entity 
                                                :month 9))) 
                              :ARG2-of (a4 / annul-01 
                                    :ARG1 (t2 / this 
                                          :ARG1-of (b / bunt-01)))) 
                        :op1 (s2 / start-01 
                              :ARG1 (d / date-entity 
                                    :time (n / now))) 
                        :op10 (s / social) 
                        :op2 (h2 / here) 
                        :op3 (h3 / here) 
                        :op4 (a3 / and) 
                        :op5 (o / over) 
                        :op6 (w / week) 
                        :op7 (a6 / all) 
                        :op8 (a5 / and) 
                        :op9 (a2 / and)))))

# ::snt I have been struggling emotionally for the majority of my life since moving to Secondary School, although I did lose my dad at around the age of 9 and always used to blame that for my feelings. I have had two periods of counselling in my life, over roughly 15 months from December 2009 until around March this year.
# ::tok I have been struggling emotionally for the majority of my life since moving to Secondary School , although I did lose my dad at around the age of 9 and always used to blame that for my feelings . I have had two periods of counselling in my life , over roughly 15 months from December 2009 until around March this year .
# ::alignments 48-49|0.2.4 30-31|0.2.1.1 14-15|0.2.0.1.2 11-12|0.2.0.1.3 0-1|0.2.1.2 7-8|0.2.1.0.0 12-13|0.2.0.1 24-25|0.2.0.1.4.1.0 26-27|0.2.0.1.4.1 51-52|0.0+0 10-11|0.2.0.1.0 31-32|0.2.1 57-58|0.2.5 43-44|0.2.2 3-4|0.2.0 58-59|0.2.6 20-21|0.2.0.1.4 22-23|0.2.0.1.4.0 0-53|0.1.0+0.1.1+0.1 0-1|0.2.1.3 37-38|0.2.0.1.1 0-60|0.2.0.0.0+0.2.0.0 29-30|0.2 45-46|0.2.3 33-34|0.2.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:00:58.857
# ::node	0	mean-01	51-52
# ::node	0.0	roughly	51-52
# ::node	0.1	date-entity	0-53
# ::node	0.1.0	3	0-53
# ::node	0.1.1	2011	0-53
# ::node	0.2	and	29-30
# ::node	0.2.0	struggle-02	3-4
# ::node	0.2.0.0	date-entity	0-60
# ::node	0.2.0.0.0	3	0-60
# ::node	0.2.0.1	move-01	12-13
# ::node	0.2.0.1.0	life	10-11
# ::node	0.2.0.1.1	feeling	37-38
# ::node	0.2.0.1.2	secondary	14-15
# ::node	0.2.0.1.3	since	11-12
# ::node	0.2.0.1.4	lose-06	20-21
# ::node	0.2.0.1.4.0	dad	22-23
# ::node	0.2.0.1.4.1	age	26-27
# ::node	0.2.0.1.4.1.0	around	24-25
# ::node	0.2.1	use-01	31-32
# ::node	0.2.1.0	blame-01	33-34
# ::node	0.2.1.0.0	majority	7-8
# ::node	0.2.1.1	always	30-31
# ::node	0.2.1.2	i	0-1
# ::node	0.2.1.3	1	0-1
# ::node	0.2.2	period	43-44
# ::node	0.2.3	counsel-01	45-46
# ::node	0.2.4	life	48-49
# ::node	0.2.5	until	57-58
# ::node	0.2.6	around	58-59
# ::root	0	mean-01
# ::edge	and	op1	struggle-02	0.2	0.2.0	
# ::edge	and	op2	use-01	0.2	0.2.1	
# ::edge	and	op3	period	0.2	0.2.2	
# ::edge	and	op4	counsel-01	0.2	0.2.3	
# ::edge	and	op5	life	0.2	0.2.4	
# ::edge	and	op6	mean-01	0.2	0	
# ::edge	and	op7	until	0.2	0.2.5	
# ::edge	and	op8	around	0.2	0.2.6	
# ::edge	around	op1	age	0.2.0.1.4.1.0	0.2.0.1.4.1	
# ::edge	blame-01	ARG1	majority	0.2.1.0	0.2.1.0.0	
# ::edge	date-entity	month	3	0.1	0.1.0	
# ::edge	date-entity	month	3	0.2.0.0	0.2.0.0.0	
# ::edge	date-entity	year	2011	0.1	0.1.1	
# ::edge	lose-06	ARG1	dad	0.2.0.1.4	0.2.0.1.4.0	
# ::edge	lose-06	time	age	0.2.0.1.4	0.2.0.1.4.1	
# ::edge	mean-01	ARG1	roughly	0	0.0	
# ::edge	mean-01	ARG6	date-entity	0	0.1	
# ::edge	move-01	ARG0	life	0.2.0.1	0.2.0.1.0	
# ::edge	move-01	ARG1	feeling	0.2.0.1	0.2.0.1.1	
# ::edge	move-01	ARG2	secondary	0.2.0.1	0.2.0.1.2	
# ::edge	move-01	time	lose-06	0.2.0.1	0.2.0.1.4	
# ::edge	since	op1	move-01	0.2.0.1.3	0.2.0.1	
# ::edge	struggle-02	ARG1	date-entity	0.2.0	0.2.0.0	
# ::edge	struggle-02	ARG2	move-01	0.2.0	0.2.0.1	
# ::edge	use-01	ARG2	blame-01	0.2.1	0.2.1.0	
# ::edge	use-01	time	1	0.2.1	0.2.1.3	
# ::edge	use-01	time	always	0.2.1	0.2.1.1	
# ::edge	use-01	time	i	0.2.1	0.2.1.2	
(m3 / mean-01 
      :ARG1 (r / roughly) 
      :ARG6 (d2 / date-entity 
            :month 3 
            :year 2011) 
      :op-of (a5 / and 
            :op1 (s3 / struggle-02 
                  :ARG1 (d3 / date-entity 
                        :month 3) 
                  :ARG2 (m2 / move-01 
                        :ARG0 (l2 / life) 
                        :ARG1 (f / feeling) 
                        :ARG2 (s / secondary) 
                        :op-of (s2 / since) 
                        :time (l3 / lose-06 
                              :ARG1 (d / dad) 
                              :time (a3 / age 
                                    :op-of (a2 / around))))) 
            :op2 (u / use-01 
                  :ARG2 (b / blame-01 
                        :ARG1 (m / majority)) 
                  :time (a / always) 
                  :time (i / i) 
                  :time 1) 
            :op3 (p / period) 
            :op4 (c / counsel-01) 
            :op5 (l / life) 
            :op6 (u2 / until) 
            :op7 (a4 / around)))

# ::snt I feel at the moment like the problems in my life are incredibly overwhelming, and are making me ever more doubtful of my always low self-esteem. I have no ability to concentrate on work, often find myself becoming very quiet in social occasions, and doubt myself over anything and everything.
# ::tok I feel at the moment like the problems in my life are incredibly overwhelming , and are making me ever more doubtful of my always low self - esteem . I have no ability to concentrate on work , often find myself becoming very quiet in social occasions , and doubt myself over anything and everything .
# ::alignments 7-8|0.1.0 53-54|0.0.3.0.0.0 44-45|0.0.1.0.1.0 40-41|0.0.0 19-20|0.1.0.0.0.1.0 0-1|0.0 13-14|0.1.0.0 4-5|0.2 38-39|0.0.2 25-26|0.0.1.0.0.0 29-30|0.0.1.1 10-11|0.1 48-49|0.0.3 21-22|0.1.0.0.0 24-25|0.0.1.0.0 18-19|0.1.0.0.0.0 45-46|0.0.1.0.1 51-52|0.0.3.0 15-16|0.1.0.0.1 33-34|0.0.1 47-48|0.0.3.1 52-53|0.0.3.0.0 35-36|0.0.1.0 1-2|0 37-38|0.0.2.0 20-21|0.1.0.0.0.1 41-42|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:02.090
# ::node	0	feel-01	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	become-01	40-41
# ::node	0.0.0.0	very	41-42
# ::node	0.0.1	concentrate-01	33-34
# ::node	0.0.1.0	work-01	35-36
# ::node	0.0.1.0.0	always	24-25
# ::node	0.0.1.0.0.0	low	25-26
# ::node	0.0.1.0.1	occasion	45-46
# ::node	0.0.1.0.1.0	social	44-45
# ::node	0.0.1.1	have-03	29-30
# ::node	0.0.2	find-01	38-39
# ::node	0.0.2.0	often	37-38
# ::node	0.0.3	doubt-01	48-49
# ::node	0.0.3.0	anything	51-52
# ::node	0.0.3.0.0	and	52-53
# ::node	0.0.3.0.0.0	everything	53-54
# ::node	0.0.3.1	and	47-48
# ::node	0.1	life	10-11
# ::node	0.1.0	problem	7-8
# ::node	0.1.0.0	overwhelm-01	13-14
# ::node	0.1.0.0.0	doubt-01	21-22
# ::node	0.1.0.0.0.0	i	18-19
# ::node	0.1.0.0.0.1	more	20-21
# ::node	0.1.0.0.0.1.0	ever	19-20
# ::node	0.1.0.0.1	and	15-16
# ::node	0.2	moment	4-5
# ::root	0	feel-01
# ::edge	and	op1	anything	0.0.3.0.0	0.0.3.0	
# ::edge	and	op1	overwhelm-01	0.1.0.0.1	0.1.0.0	
# ::edge	and	op2	everything	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	become-01	ARG0	i	0.0.0	0.0	
# ::edge	become-01	ARG6	very	0.0.0	0.0.0.0	
# ::edge	concentrate-01	ARG0	i	0.0.1	0.0	
# ::edge	concentrate-01	ARG1	work-01	0.0.1	0.0.1.0	
# ::edge	doubt-01	ARG0	i	0.0.3	0.0	
# ::edge	doubt-01	ARG1	anything	0.0.3	0.0.3.0	
# ::edge	doubt-01	ARG1	overwhelm-01	0.1.0.0.0	0.1.0.0	
# ::edge	doubt-01	ARG6	and	0.0.3	0.0.3.1	
# ::edge	doubt-01	ARG6	i	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	doubt-01	degree	more	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG1	life	0	0.1	
# ::edge	feel-01	ARG2	moment	0	0.2	
# ::edge	find-01	ARG0	i	0.0.2	0.0	
# ::edge	find-01	ARG1	often	0.0.2	0.0.2.0	
# ::edge	have-03	ARG1	concentrate-01	0.0.1.1	0.0.1	
# ::edge	low	time	always	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	more	mod	ever	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	overwhelm-01	ARG1	problem	0.1.0.0	0.1.0	
# ::edge	problem	poss	life	0.1.0	0.1	
# ::edge	social	mod	occasion	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	work-01	ARG0	always	0.0.1.0	0.0.1.0.0	
# ::edge	work-01	ARG1	occasion	0.0.1.0	0.0.1.0.1	
(f2 / feel-01 
      :ARG0 (i / i 
            :ARG0-of (b / become-01 
                  :ARG6 (v / very)) 
            :ARG0-of (c / concentrate-01 
                  :ARG1 (w / work-01 
                        :ARG0 (a / always 
                              :time-of (l / low)) 
                        :ARG1 (o2 / occasion 
                              :mod-of (s / social))) 
                  :ARG1-of (h / have-03)) 
            :ARG0-of (f / find-01 
                  :ARG1 (o3 / often)) 
            :ARG0-of (d / doubt-01 
                  :ARG1 (a2 / anything 
                        :op-of (a5 / and 
                              :op1 (e / everything))) 
                  :ARG6 (a4 / and))) 
      :ARG1 (l2 / life 
            :poss-of (p / problem 
                  :ARG1-of (o / overwhelm-01 
                        :ARG1-of (d2 / doubt-01 
                              :ARG6 (i2 / i) 
                              :degree (m2 / more 
                                    :mod (e2 / ever))) 
                        :op-of (a3 / and)))) 
      :ARG2 (m / moment))

# ::snt Neither of my counsellers have diagnosed me with depression, and both have suggested I do not suffer from it, but it is a huge worry to me, as depression was the cause of my dad's death, suicide.
# ::tok Neither of my counsellers have diagnosed me with depression , and both have suggested I do not suffer from it , but it is a huge worry to me , as depression was the cause of my dad 's death , suicide .
# ::alignments 37-38|0.0.1.0.0 0-1|0.0.0 10-11|0 34-35|0.0.2.0.0.0.0 41-42|0.0.1.0.1 30-31|0.0.2.0.0.1 22-23|0.0.2.1 8-9|0.0.2.0.1.0+0.0.2.0.1 13-14|0.0 31-32|0.0.2.0.0.0.1+0.0.2.0.0.0 11-12|0.0.3 26-27|0.0.2.0.0 17-18|0.0.1 21-22|0.0.2 5-6|0.0.2.0 39-40|0.0.1.0 25-26|0.0.2.0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:04.092
# ::node	0	and	10-11
# ::node	0.0	suggest-01	13-14
# ::node	0.0.0	either	0-1
# ::node	0.0.1	suffer-01	17-18
# ::node	0.0.1.0	detach-01	39-40
# ::node	0.0.1.0.0	dad	37-38
# ::node	0.0.1.0.1	suicide	41-42
# ::node	0.0.2	bunt-01	21-22
# ::node	0.0.2.0	diagnose-01	5-6
# ::node	0.0.2.0.0	worry-01	26-27
# ::node	0.0.2.0.0.0	depression	31-32
# ::node	0.0.2.0.0.0.0	cause-01	34-35
# ::node	0.0.2.0.0.0.1	mean-01	31-32
# ::node	0.0.2.0.0.1	ask-01	30-31
# ::node	0.0.2.0.0.2	huge	25-26
# ::node	0.0.2.0.1	depression	8-9
# ::node	0.0.2.0.1.0	mean-01	8-9
# ::node	0.0.2.1	country	22-23
# ::node	0.0.3	both	11-12
# ::root	0	and
# ::edge	and	op1	suggest-01	0	0.0	
# ::edge	ask-01	ARG1	worry-01	0.0.2.0.0.1	0.0.2.0.0	
# ::edge	bunt-01	ARG1	diagnose-01	0.0.2	0.0.2.0	
# ::edge	bunt-01	ARG2	suggest-01	0.0.2	0.0	
# ::edge	bunt-01	ARG6	country	0.0.2	0.0.2.1	
# ::edge	cause-01	ARG0	depression	0.0.2.0.0.0.0	0.0.2.0.0.0	
# ::edge	detach-01	ARG1	dad	0.0.1.0	0.0.1.0.0	
# ::edge	detach-01	location	suicide	0.0.1.0	0.0.1.0.1	
# ::edge	diagnose-01	ARG1	worry-01	0.0.2.0	0.0.2.0.0	
# ::edge	diagnose-01	location	depression	0.0.2.0	0.0.2.0.1	
# ::edge	mean-01	ARG0	depression	0.0.2.0.0.0.1	0.0.2.0.0.0	
# ::edge	mean-01	ARG0	depression	0.0.2.0.1.0	0.0.2.0.1	
# ::edge	suffer-01	ARG1	detach-01	0.0.1	0.0.1.0	
# ::edge	suggest-01	ARG0	either	0.0	0.0.0	
# ::edge	suggest-01	ARG1	suffer-01	0.0	0.0.1	
# ::edge	suggest-01	ARG6	both	0.0	0.0.3	
# ::edge	worry-01	ARG1	depression	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	worry-01	mod	huge	0.0.2.0.0	0.0.2.0.0.2	
(a / and 
      :op1 (s2 / suggest-01 
            :ARG0 (e / either) 
            :ARG1 (s3 / suffer-01 
                  :ARG1 (d5 / detach-01 
                        :ARG1 (d / dad) 
                        :location (s / suicide))) 
            :ARG2-of (b2 / bunt-01 
                  :ARG1 (d4 / diagnose-01 
                        :ARG1 (w / worry-01 
                              :ARG1 (d3 / depression 
                                    :ARG0-of (c / cause-01) 
                                    :ARG0-of (m2 / mean-01)) 
                              :ARG1-of (a2 / ask-01) 
                              :mod (h / huge)) 
                        :location (d2 / depression 
                              :ARG0-of (m / mean-01))) 
                  :ARG6 (c2 / country)) 
            :ARG6 (b / both)))

# ::snt I have tried to solve my problems before, and have found exercise and meditation particularly useful, and have also tried things like self-help books and tapes. But my general feeling, is, 'Is this what my life will be? My one chance at existance, my one chance of being a young man, I am wasting it!' And these feelings are beating away at me.
# ::tok I have tried to solve my problems before , and have found exercise and meditation particularly useful , and have also tried things like self - help books and tapes . But my general feeling , is , ' Is this what my life will be ? My one chance at existance , my one chance of being a young man , I am wasting it ! ' And these feelings are beating away at me .
# ::alignments 26-27|0.0.3.0.0 70-71|0.0.1 0-1|0.0.3.3.0.1.0 16-17|0.0.0.0 15-16|0.0.0.0.0 9-10|0.0.3.3 12-13|0.0.0 71-72|0.0.11 62-63|0.0.2 68-69|0.0.6 61-62|0 20-21|0.0.3.2 27-28|0.0.3.0 31-32|0.0.4 13-14|0.0.0.1 18-19|0.0 2-3|0.0.3.3.0.1 53-54|0.0.10 4-5|0.0.3.3.0 22-23|0.0.3.1 6-7|0.0.3.3.0.0 29-30|0.0.3.0.0.0 57-58|0.0.5 67-68|0.0.9 21-22|0.0.3 0-1|0.0.3.3.0.1.1 25-26|0.0.3.0.0.1 58-59|0.0.12 41-42|0.0.7 47-48|0.0.8 7-8|0.0.3.3.0.1.2 38-39|0.0.3.3.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:23.025
# ::node	0	be-located-at-91	61-62
# ::node	0.0	and	18-19
# ::node	0.0.0	exercise-01	12-13
# ::node	0.0.0.0	useful	16-17
# ::node	0.0.0.0.0	particular	15-16
# ::node	0.0.0.1	and	13-14
# ::node	0.0.1	beat-02	70-71
# ::node	0.0.10	chance	53-54
# ::node	0.0.11	away	71-72
# ::node	0.0.12	man	58-59
# ::node	0.0.2	waste-01	62-63
# ::node	0.0.3	try-01	21-22
# ::node	0.0.3.0	tape	27-28
# ::node	0.0.3.0.0	and	26-27
# ::node	0.0.3.0.0.0	bunt-01	29-30
# ::node	0.0.3.0.0.1	book	25-26
# ::node	0.0.3.1	thing	22-23
# ::node	0.0.3.2	also	20-21
# ::node	0.0.3.3	and	9-10
# ::node	0.0.3.3.0	solve-01	4-5
# ::node	0.0.3.3.0.0	problem	6-7
# ::node	0.0.3.3.0.1	try-01	2-3
# ::node	0.0.3.3.0.1.0	i	0-1
# ::node	0.0.3.3.0.1.1	1	0-1
# ::node	0.0.3.3.0.1.2	before	7-8
# ::node	0.0.3.3.1	this	38-39
# ::node	0.0.4	general	31-32
# ::node	0.0.5	young	57-58
# ::node	0.0.6	feeling	68-69
# ::node	0.0.7	life	41-42
# ::node	0.0.8	chance	47-48
# ::node	0.0.9	this	67-68
# ::root	0	be-located-at-91
# ::edge	and	mod	book	0.0.3.0.0	0.0.3.0.0.1	
# ::edge	and	op1	exercise-01	0.0.0.1	0.0.0	
# ::edge	and	op1	solve-01	0.0.3.3	0.0.3.3.0	
# ::edge	and	op1	try-01	0.0	0.0.3	
# ::edge	and	op2	try-01	0.0.3.3	0.0.3	
# ::edge	away	purpose	and	0.0.11	0.0	
# ::edge	be-located-at-91	ARG1	and	0	0.0	
# ::edge	beat-02	ARG1	and	0.0.1	0.0	
# ::edge	bunt-01	ARG1	and	0.0.3.0.0.0	0.0.3.0.0	
# ::edge	chance	purpose	and	0.0.10	0.0	
# ::edge	chance	purpose	and	0.0.8	0.0	
# ::edge	exercise-01	ARG1	and	0.0.0	0.0	
# ::edge	exercise-01	mod	useful	0.0.0	0.0.0.0	
# ::edge	feeling	purpose	and	0.0.6	0.0	
# ::edge	general	purpose	and	0.0.4	0.0	
# ::edge	life	purpose	and	0.0.7	0.0	
# ::edge	man	purpose	and	0.0.12	0.0	
# ::edge	solve-01	ARG1	problem	0.0.3.3.0	0.0.3.3.0.0	
# ::edge	tape	mod	and	0.0.3.0	0.0.3.0.0	
# ::edge	this	purpose	and	0.0.3.3.1	0.0.3.3	
# ::edge	this	purpose	and	0.0.9	0.0	
# ::edge	try-01	ARG0	tape	0.0.3	0.0.3.0	
# ::edge	try-01	ARG1	solve-01	0.0.3.3.0.1	0.0.3.3.0	
# ::edge	try-01	ARG1	thing	0.0.3	0.0.3.1	
# ::edge	try-01	mod	also	0.0.3	0.0.3.2	
# ::edge	try-01	time	1	0.0.3.3.0.1	0.0.3.3.0.1.1	
# ::edge	try-01	time	before	0.0.3.3.0.1	0.0.3.3.0.1.2	
# ::edge	try-01	time	i	0.0.3.3.0.1	0.0.3.3.0.1.0	
# ::edge	useful	mod	particular	0.0.0.0	0.0.0.0.0	
# ::edge	waste-01	ARG1	and	0.0.2	0.0	
# ::edge	young	purpose	and	0.0.5	0.0	
(b2 / be-located-at-91 
      :ARG1 (a6 / and 
            :ARG1-of (e / exercise-01 
                  :mod (u / useful 
                        :mod (p / particular)) 
                  :op-of (a5 / and)) 
            :ARG1-of (b / beat-02) 
            :ARG1-of (w / waste-01) 
            :op1 (t5 / try-01 
                  :ARG0 (t / tape 
                        :mod (a / and 
                              :ARG1-of (b3 / bunt-01) 
                              :mod (b4 / book))) 
                  :ARG1 (t3 / thing) 
                  :mod (a4 / also) 
                  :op-of (a2 / and 
                        :op1 (s / solve-01 
                              :ARG1 (p2 / problem) 
                              :ARG1-of (t2 / try-01 
                                    :time (i / i) 
                                    :time 1 
                                    :time (b5 / before))) 
                        :purpose-of (t6 / this))) 
            :purpose-of (g / general) 
            :purpose-of (y / young) 
            :purpose-of (f / feeling) 
            :purpose-of (l / life) 
            :purpose-of (c2 / chance) 
            :purpose-of (t4 / this) 
            :purpose-of (c / chance) 
            :purpose-of (a3 / away) 
            :purpose-of (m / man)))

# ::snt I simply don't know what to do, and when I think of things to do, I never follow through with it. Friends often say I'm lazy, and I can't disagree a lot of the time. I feel like everything anyone could do to help, people have tried, and time and time again I fail.
# ::tok I simply do n't know what to do , and when I think of things to do , I never follow through with it . Friends often say I 'm lazy , and I ca n't disagree a lot of the time . I feel like everything anyone could do to help , people have tried , and time and time again I fail .
# ::alignments 30-31|0.0.11 58-59|0.0.6 7-8|0.0.2.0 47-48|0.0.16 0-1|0.0.9.0 9-10|0.0 12-13|0.0.11.0 49-50|0.0.4.0 44-45|0.0.1 16-17|0.0.11.0.1 26-27|0.0.10 41-42|0.0.14 4-5|0.0.2 20-21|0.0.9 51-52|0.0.4 36-37|0.0.12.0 48-49|0.0.3 34-36|0.0.12.1+0.0.12 59-60|0.0.7 38-39|0.0.13 63-64|0.0.0 57-58|0.0.5 27-28|0 1-2|0.0.11.0.1.0 61-62|0.0.8 46-47|0.0.15 14-15|0.0.11.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:25.001
# ::node	0	say-01	27-28
# ::node	0.0	and	9-10
# ::node	0.0.0	fail-01	63-64
# ::node	0.0.1	feel-01	44-45
# ::node	0.0.10	often	26-27
# ::node	0.0.11	lay-01	30-31
# ::node	0.0.11.0	think-01	12-13
# ::node	0.0.11.0.0	thing	14-15
# ::node	0.0.11.0.1	do-02	16-17
# ::node	0.0.11.0.1.0	simply	1-2
# ::node	0.0.12	possible	34-36
# ::node	0.0.12.0	disagree-01	36-37
# ::node	0.0.12.1	-	34-36
# ::node	0.0.13	lot	38-39
# ::node	0.0.14	time	41-42
# ::node	0.0.15	everything	46-47
# ::node	0.0.16	anyone	47-48
# ::node	0.0.2	know-01	4-5
# ::node	0.0.2.0	do-02	7-8
# ::node	0.0.3	possible	48-49
# ::node	0.0.4	help-01	51-52
# ::node	0.0.4.0	do-02	49-50
# ::node	0.0.5	and	57-58
# ::node	0.0.6	time	58-59
# ::node	0.0.7	and	59-60
# ::node	0.0.8	again	61-62
# ::node	0.0.9	follow-02	20-21
# ::node	0.0.9.0	i	0-1
# ::root	0	say-01
# ::edge	and	op1	know-01	0.0	0.0.2	
# ::edge	and	op10	possible	0.0	0.0.3	
# ::edge	and	op11	help-01	0.0	0.0.4	
# ::edge	and	op12	and	0.0	0.0.5	
# ::edge	and	op13	time	0.0	0.0.6	
# ::edge	and	op14	and	0.0	0.0.7	
# ::edge	and	op15	again	0.0	0.0.8	
# ::edge	and	op2	follow-02	0.0	0.0.9	
# ::edge	and	op3	often	0.0	0.0.10	
# ::edge	and	op4	lay-01	0.0	0.0.11	
# ::edge	and	op5	possible	0.0	0.0.12	
# ::edge	and	op6	lot	0.0	0.0.13	
# ::edge	and	op7	time	0.0	0.0.14	
# ::edge	and	op8	everything	0.0	0.0.15	
# ::edge	and	op9	anyone	0.0	0.0.16	
# ::edge	disagree-01	ARG1	possible	0.0.12.0	0.0.12	
# ::edge	do-02	ARG1	help-01	0.0.4.0	0.0.4	
# ::edge	do-02	ARG1	simply	0.0.11.0.1	0.0.11.0.1.0	
# ::edge	fail-01	ARG1	and	0.0.0	0.0	
# ::edge	feel-01	ARG1	and	0.0.1	0.0	
# ::edge	follow-02	ARG1	i	0.0.9	0.0.9.0	
# ::edge	know-01	ARG1	do-02	0.0.2	0.0.2.0	
# ::edge	lay-01	ARG1	think-01	0.0.11	0.0.11.0	
# ::edge	possible	polarity	-	0.0.12	0.0.12.1	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	think-01	ARG1	thing	0.0.11.0	0.0.11.0.0	
# ::edge	think-01	ARG2	do-02	0.0.11.0	0.0.11.0.1	
(s / say-01 
      :ARG1 (a2 / and 
            :ARG1-of (f3 / fail-01) 
            :ARG1-of (f / feel-01) 
            :op1 (k / know-01 
                  :ARG1 (d / do-02)) 
            :op10 (p / possible) 
            :op11 (h / help-01 
                  :ARG1-of (d2 / do-02)) 
            :op12 (a4 / and) 
            :op13 (t / time) 
            :op14 (a3 / and) 
            :op15 (a5 / again) 
            :op2 (f2 / follow-02 
                  :ARG1 (i / i)) 
            :op3 (o / often) 
            :op4 (l / lay-01 
                  :ARG1 (t2 / think-01 
                        :ARG1 (t4 / thing) 
                        :ARG2 (d3 / do-02 
                              :ARG1 (s2 / simply)))) 
            :op5 (p2 / possible 
                  :ARG1-of (d4 / disagree-01) 
                  :polarity -) 
            :op6 (l2 / lot) 
            :op7 (t3 / time) 
            :op8 (e / everything) 
            :op9 (a / anyone)))

# ::snt Sorry to anyone whose read this jumbled mess, and I feel a bit like a self-seeking moaner, but I truly do feel desperate.
# ::tok Sorry to anyone whose read this jumbled mess , and I feel a bit like a self - seeking moaner , but I truly do feel desperate .
# ::alignments 0-1|0.0.0.2.0 19-20|0.0.0.2 5-6|0.0.0.0.0.0 13-14|0.0.0.1.1 22-23|0.1 23-24|0 10-11|0.0.0.1.0 21-22|0.0.0 11-12|0.0.0.1 24-25|0.0 4-5|0.0.0.0 7-8|0.0.0.0.0 2-3|0.0.0.1.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:25.875
# ::node	0	feel-01	23-24
# ::node	0.0	desperate	24-25
# ::node	0.0.0	truly	21-22
# ::node	0.0.0.0	read-01	4-5
# ::node	0.0.0.0.0	mess	7-8
# ::node	0.0.0.0.0.0	this	5-6
# ::node	0.0.0.1	feel-01	11-12
# ::node	0.0.0.1.0	i	10-11
# ::node	0.0.0.1.1	bit	13-14
# ::node	0.0.0.1.2	anyone	2-3
# ::node	0.0.0.2	bunt-01	19-20
# ::node	0.0.0.2.0	sorry	0-1
# ::node	0.1	do-01	22-23
# ::root	0	feel-01
# ::edge	bunt-01	ARG1	sorry	0.0.0.2	0.0.0.2.0	
# ::edge	do-01	ARG1	feel-01	0.1	0	
# ::edge	feel-01	ARG0	i	0.0.0.1	0.0.0.1.0	
# ::edge	feel-01	ARG1	bit	0.0.0.1	0.0.0.1.1	
# ::edge	feel-01	ARG1	desperate	0	0.0	
# ::edge	feel-01	ARG6	anyone	0.0.0.1	0.0.0.1.2	
# ::edge	mess	mod	this	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	read-01	ARG1	mess	0.0.0.0	0.0.0.0.0	
# ::edge	truly	op1	read-01	0.0.0	0.0.0.0	
# ::edge	truly	op2	feel-01	0.0.0	0.0.0.1	
# ::edge	truly	op3	bunt-01	0.0.0	0.0.0.2	
# ::edge	truly	op4	desperate	0.0.0	0.0	
(f / feel-01 
      :ARG1 (d2 / desperate 
            :op-of (t2 / truly 
                  :op1 (r / read-01 
                        :ARG1 (m / mess 
                              :mod (t / this))) 
                  :op2 (f2 / feel-01 
                        :ARG0 (i / i) 
                        :ARG1 (b2 / bit) 
                        :ARG6 (a / anyone)) 
                  :op3 (b / bunt-01 
                        :ARG1 (s / sorry)))) 
      :ARG1-of (d / do-01))

# ::snt Its not uncommon for people's existing feelings about themselves to become more intense when they are in new situations and feel the pressure to socialise with strangers and fit into new roles, i.e. being a university student.
# ::tok Its not uncommon for people 's existing feelings about themselves to become more intense when they are in new situations and feel the pressure to socialise with strangers and fit into new roles , i.e. being a university student .
# ::alignments 7-8|0.2.0.1 29-30|0.1.0.1.0 18-19|0.2.1.0 23-24|0.1 12-13|0.2.0.0.0 25-26|0.1.0 13-14|0.2.0.0 38-39|0.0.0+0.0 19-20|0.2.1 31-32|0.1.0.1.0.0.0 6-7|0.2.0.1.0 20-21|0.2 11-12|0.2.0 37-38|0.0.0.0 2-3|0.2.0.1.0.0 27-28|0.1.0.0 21-22|0 28-29|0.1.0.1 32-33|0.1.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:27.492
# ::node	0	feel-01	21-22
# ::node	0.0	person	38-39
# ::node	0.0.0	study-01	38-39
# ::node	0.0.0.0	university	37-38
# ::node	0.1	pressure-01	23-24
# ::node	0.1.0	socialize-02	25-26
# ::node	0.1.0.0	stranger	27-28
# ::node	0.1.0.1	and	28-29
# ::node	0.1.0.1.0	fit-01	29-30
# ::node	0.1.0.1.0.0	role	32-33
# ::node	0.1.0.1.0.0.0	new	31-32
# ::node	0.2	and	20-21
# ::node	0.2.0	become-01	11-12
# ::node	0.2.0.0	intense	13-14
# ::node	0.2.0.0.0	more	12-13
# ::node	0.2.0.1	feeling	7-8
# ::node	0.2.0.1.0	exist-01	6-7
# ::node	0.2.0.1.0.0	uncommon	2-3
# ::node	0.2.1	situation	19-20
# ::node	0.2.1.0	new	18-19
# ::root	0	feel-01
# ::edge	and	op1	become-01	0.2	0.2.0	
# ::edge	and	op1	socialize-02	0.1.0.1	0.1.0	
# ::edge	and	op2	fit-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	situation	0.2	0.2.1	
# ::edge	and	op3	feel-01	0.2	0	
# ::edge	become-01	ARG1	intense	0.2.0	0.2.0.0	
# ::edge	exist-01	ARG1	feeling	0.2.0.1.0	0.2.0.1	
# ::edge	exist-01	ARG6	uncommon	0.2.0.1.0	0.2.0.1.0.0	
# ::edge	feel-01	ARG0	person	0	0.0	
# ::edge	feel-01	ARG1	pressure-01	0	0.1	
# ::edge	feeling	condition	become-01	0.2.0.1	0.2.0	
# ::edge	fit-01	ARG1	role	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	intense	degree	more	0.2.0.0	0.2.0.0.0	
# ::edge	pressure-01	ARG1	socialize-02	0.1	0.1.0	
# ::edge	role	mod	new	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	situation	mod	new	0.2.1	0.2.1.0	
# ::edge	socialize-02	ARG1	stranger	0.1.0	0.1.0.0	
# ::edge	study-01	ARG0	person	0.0.0	0.0	
# ::edge	study-01	ARG1	university	0.0.0	0.0.0.0	
(f3 / feel-01 
      :ARG0 (p2 / person 
            :ARG0-of (s2 / study-01 
                  :ARG1 (u / university))) 
      :ARG1 (p / pressure-01 
            :ARG1 (s / socialize-02 
                  :ARG1 (s4 / stranger) 
                  :op-of (a2 / and 
                        :op1 (f2 / fit-01 
                              :ARG1 (r / role 
                                    :mod (n2 / new)))))) 
      :op-of (a / and 
            :op1 (b / become-01 
                  :ARG1 (i / intense 
                        :degree (m / more)) 
                  :condition-of (f / feeling 
                        :ARG1-of (e / exist-01 
                              :ARG6 (u2 / uncommon)))) 
            :op2 (s3 / situation 
                  :mod (n / new))))

# ::snt I am not a health professional and I can only speak from personal experience which is why I strongly suggest you see a qualified health professional about your feelings and worries about depression.
# ::tok I am not a health professional and I can only speak from personal experience which is why I strongly suggest you see a qualified health professional about your feelings and worries about depression .
# ::alignments 27-28|0.0.1.0.0.1.0.0 30-31|0.0.1.0.0.1.0.0.0 6-7|0 18-19|0.0.1.0.1 28-29|0.0.1.0.0.1.0 23-24|0.0.1.0.0.3.0 25-26|0.0.1.0.0.3 21-22|0.0.1.0.0 4-5|0.0.0.0.0.0 0-1|0.0.2 5-6|0.0.0.0.0 9-10|0.0.3 20-21|0.0.1.0.0.0 7-8|0.0.0.0+0.0.0 32-33|0.0.1.0.0.2 24-25|0.0.1.0.0.3.1 29-30|0.0.1.0.0.1 10-11|0.0 19-20|0.0.1.0 12-13|0.0.1.1 13-14|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:01:30.367
# ::node	0	and	6-7
# ::node	0.0	speak-01	10-11
# ::node	0.0.0	person	7-8
# ::node	0.0.0.0	have-org-role-91	7-8
# ::node	0.0.0.0.0	professional	5-6
# ::node	0.0.0.0.0.0	health	4-5
# ::node	0.0.1	experience-01	13-14
# ::node	0.0.1.0	suggest-01	19-20
# ::node	0.0.1.0.0	see-01	21-22
# ::node	0.0.1.0.0.0	you	20-21
# ::node	0.0.1.0.0.1	and	29-30
# ::node	0.0.1.0.0.1.0	feeling	28-29
# ::node	0.0.1.0.0.1.0.0	yoke-01	27-28
# ::node	0.0.1.0.0.1.0.0.0	worry-01	30-31
# ::node	0.0.1.0.0.2	depression	32-33
# ::node	0.0.1.0.0.3	professional	25-26
# ::node	0.0.1.0.0.3.0	qualify-01	23-24
# ::node	0.0.1.0.0.3.1	health	24-25
# ::node	0.0.1.0.1	strong	18-19
# ::node	0.0.1.1	personal	12-13
# ::node	0.0.2	i	0-1
# ::node	0.0.3	only	9-10
# ::root	0	and
# ::edge	and	op1	feeling	0.0.1.0.0.1	0.0.1.0.0.1.0	
# ::edge	and	op1	speak-01	0	0.0	
# ::edge	experience-01	ARG1	suggest-01	0.0.1	0.0.1.0	
# ::edge	experience-01	mod	personal	0.0.1	0.0.1.1	
# ::edge	have-org-role-91	ARG0	person	0.0.0.0	0.0.0	
# ::edge	have-org-role-91	ARG1	professional	0.0.0.0	0.0.0.0.0	
# ::edge	professional	mod	health	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	professional	mod	health	0.0.1.0.0.3	0.0.1.0.0.3.1	
# ::edge	qualify-01	ARG1	professional	0.0.1.0.0.3.0	0.0.1.0.0.3	
# ::edge	see-01	ARG0	you	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	see-01	ARG1	and	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	see-01	ARG2	depression	0.0.1.0.0	0.0.1.0.0.2	
# ::edge	see-01	ARG6	professional	0.0.1.0.0	0.0.1.0.0.3	
# ::edge	speak-01	ARG0	person	0.0	0.0.0	
# ::edge	speak-01	ARG1	experience-01	0.0	0.0.1	
# ::edge	speak-01	ARG6	i	0.0	0.0.2	
# ::edge	speak-01	mod	only	0.0	0.0.3	
# ::edge	suggest-01	ARG1	see-01	0.0.1.0	0.0.1.0.0	
# ::edge	suggest-01	manner	strong	0.0.1.0	0.0.1.0.1	
# ::edge	worry-01	ARG1	yoke-01	0.0.1.0.0.1.0.0.0	0.0.1.0.0.1.0.0	
# ::edge	yoke-01	ARG1	feeling	0.0.1.0.0.1.0.0	0.0.1.0.0.1.0	
(a / and 
      :op1 (s3 / speak-01 
            :ARG0 (p3 / person 
                  :ARG0-of (h2 / have-org-role-91 
                        :ARG1 (p2 / professional 
                              :mod (h / health)))) 
            :ARG1 (e / experience-01 
                  :ARG1 (s4 / suggest-01 
                        :ARG1 (s2 / see-01 
                              :ARG0 (y2 / you) 
                              :ARG1 (a2 / and 
                                    :op1 (f / feeling 
                                          :ARG1-of (y / yoke-01 
                                                :ARG1-of (w / worry-01)))) 
                              :ARG2 (d / depression) 
                              :ARG6 (p / professional 
                                    :ARG1-of (q / qualify-01) 
                                    :mod (h3 / health))) 
                        :manner (s / strong)) 
                  :mod (p4 / personal)) 
            :ARG6 (i / i) 
            :mod (o / only)))

# ::snt Most people feel unintelligent and awkward when they first get to uni- you're definitely not alone there. But I would really recommend that you get an appointment with your uni counselling services. It doesn't really matter whether anyone has told you that you are depressed or not, you are obviously having some problems at the minute and could use some support- labels aren't as important as your experiences. Meditation and exercise are really helpful, so definitely try to do those. But yeah, you will have to engage with help and life in general to get somewhere- but don't beat yourself up about feeling unmotivated to do anything at the minute, lots of people feel like this and hopefully it will pass as you begin to feel better. Being unkind to yourself will only make you feel worse- be kind to yourself and get some help.
# ::tok Most people feel unintelligent and awkward when they first get to uni - you 're definitely not alone there . But I would really recommend that you get an appointment with your uni counselling services . It does n't really matter whether anyone has told you that you are depressed or not , you are obviously having some problems at the minute and could use some support - labels are n't as important as your experiences . Meditation and exercise are really helpful , so definitely try to do those . But yeah , you will have to engage with help and life in general to get somewhere - but do n't beat yourself up about feeling unmotivated to do anything at the minute , lots of people feel like this and hopefully it will pass as you begin to feel better . Being unkind to yourself will only make you feel worse - be kind to yourself and get some help .
# ::alignments 98-99|0.0.1.1.0 130-131|0.0.1.3.0 82-83|0.0.1.13.0.0 159-160|0.0.1.6.0 112-113|0.0.1.1.1.0.0.0.0 131-132|0.0.1.3 140-141|0.0.1.4.0 4-5|0.0.1 55-56|0.0.1.8.2 109-110|0.0.1.1.1.0.0.0 13-14|0.0.1.0.2.0 42-43|0.0.1.9.1.0.0 62-63|0.0.1.9.1 72-73|0.0.1.11 96-97|0.0.1.1.0.0 44-45|0.0.1.9.1.0 120-121|0.0.1.2.0.0 92-93|0.0.1.14.1.0.0+0.0.1.14.1.0 148-149|0.0.1.5.0 27-28|0.0.1.7.0 39-40|0.0.1.9.1.0.0.0.0 57-58|0.0.1.8.0 138-139|0.0.1.4 23-24|0.0.1.7.1 107-108|0.0.1.1.1.0.0.1 40-41|0.0.1.9.1.0.0.0 160-161|0.0.1.6.0.0 0-1|0.0.1.0.0 151-152|0.0.1.5.1 2-3|0.0.1.0 78-79|0.0.1.13 0-123|0.0.1.0.1.0+0.0.1.0.1.1+0.0.1.0.1 161-162|0.0.1.6.0.0.0 81-82|0.0.1.13.0.0.0 64-65|0.0.1.9.0 141-142|0.0.1.4.0.0.0+0.0.1.4.0.0 88-89|0.0.1.14.1 135-136|0.0.1.4.1 102-103|0.0.1.1.2 9-10|0.0.1.0.3 24-25|0.0.1.7 128-129|0+0.0 50-51|0.0.1.7.0.0 0-61|0.0.1.10.0.0+0.0.1.10.0.1+0.0.1.10.0 158-159|0.0.1.6 125-126|0.0.0 29-30|0.0.1.0.3.0.0 65-66|0.0.1.9.0.0 86-87|0.0.1.14 56-57|0.0.1.8 100-101|0.0.1.1.1 0-9|0.0.1.0.3.0.1+0.0.1.0.3.0 79-80|0.0.1.13.0 63-64|0.0.1.9 111-112|0.0.1.1.1.0.0.0.0.0 116-117|0.0.1.2 149-150|0.0.1.5 106-107|0.0.1.1.1.0.0 75-76|0.0.1.12 15-16|0.0.1.0.2 85-86|0.0.1.14.0 58-59|0.0.1.8.1 119-120|0.0.1.2.0 101-102|0.0.1.1 155-156|0.0.1.5.1.0 34-35|0.0.1.8.2.0 66-67|0.0.1.10 104-105|0.0.1.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:06.237
# ::node	0	cause-01	128-129
# ::node	0.0	feel-01	128-129
# ::node	0.0.0	lot	125-126
# ::node	0.0.1	and	4-5
# ::node	0.0.1.0	feel-01	2-3
# ::node	0.0.1.0.0	most	0-1
# ::node	0.0.1.0.1	date-entity	0-123
# ::node	0.0.1.0.1.0	minute	0-123
# ::node	0.0.1.0.1.1	the	0-123
# ::node	0.0.1.0.2	definite	15-16
# ::node	0.0.1.0.2.0	you	13-14
# ::node	0.0.1.0.3	get-01	9-10
# ::node	0.0.1.0.3.0	ordinal-entity	0-9
# ::node	0.0.1.0.3.0.0	appoint-01	29-30
# ::node	0.0.1.0.3.0.1	1	0-9
# ::node	0.0.1.1	and	101-102
# ::node	0.0.1.1.0	engage-01	98-99
# ::node	0.0.1.1.0.0	have-02	96-97
# ::node	0.0.1.1.1	help-01	100-101
# ::node	0.0.1.1.1.0	general	104-105
# ::node	0.0.1.1.1.0.0	get-05	106-107
# ::node	0.0.1.1.1.0.0.0	bunt-01	109-110
# ::node	0.0.1.1.1.0.0.0.0	beat-04	112-113
# ::node	0.0.1.1.1.0.0.0.0.0	-	111-112
# ::node	0.0.1.1.1.0.0.1	somewhere	107-108
# ::node	0.0.1.1.2	life	102-103
# ::node	0.0.1.10	support-01	66-67
# ::node	0.0.1.10.0	date-entity	0-61
# ::node	0.0.1.10.0.0	minute	0-61
# ::node	0.0.1.10.0.1	the	0-61
# ::node	0.0.1.11	important	72-73
# ::node	0.0.1.12	experience	75-76
# ::node	0.0.1.13	and	78-79
# ::node	0.0.1.13.0	exercise-01	79-80
# ::node	0.0.1.13.0.0	help-01	82-83
# ::node	0.0.1.13.0.0.0	really	81-82
# ::node	0.0.1.14	try-01	86-87
# ::node	0.0.1.14.0	definite	85-86
# ::node	0.0.1.14.1	do-02	88-89
# ::node	0.0.1.14.1.0	yeah	92-93
# ::node	0.0.1.14.1.0.0	expressive	92-93
# ::node	0.0.1.2	fell-01	116-117
# ::node	0.0.1.2.0	do-02	119-120
# ::node	0.0.1.2.0.0	anything	120-121
# ::node	0.0.1.3	and	131-132
# ::node	0.0.1.3.0	this	130-131
# ::node	0.0.1.4	begin-01	138-139
# ::node	0.0.1.4.0	feel-01	140-141
# ::node	0.0.1.4.0.0	good	141-142
# ::node	0.0.1.4.0.0.0	more	141-142
# ::node	0.0.1.4.1	pass-01	135-136
# ::node	0.0.1.5	make-02	149-150
# ::node	0.0.1.5.0	only	148-149
# ::node	0.0.1.5.1	feel-03	151-152
# ::node	0.0.1.5.1.0	kind	155-156
# ::node	0.0.1.6	and	158-159
# ::node	0.0.1.6.0	get-01	159-160
# ::node	0.0.1.6.0.0	some	160-161
# ::node	0.0.1.6.0.0.0	help-01	161-162
# ::node	0.0.1.7	recommend-01	24-25
# ::node	0.0.1.7.0	get-01	27-28
# ::node	0.0.1.7.0.0	or	50-51
# ::node	0.0.1.7.1	really	23-24
# ::node	0.0.1.8	have-03	56-57
# ::node	0.0.1.8.0	some	57-58
# ::node	0.0.1.8.1	problem	58-59
# ::node	0.0.1.8.2	obviate-01	55-56
# ::node	0.0.1.8.2.0	service	34-35
# ::node	0.0.1.9	possible	63-64
# ::node	0.0.1.9.0	use-01	64-65
# ::node	0.0.1.9.0.0	some	65-66
# ::node	0.0.1.9.1	and	62-63
# ::node	0.0.1.9.1.0	tell-01	44-45
# ::node	0.0.1.9.1.0.0	anyone	42-43
# ::node	0.0.1.9.1.0.0.0	matter-01	40-41
# ::node	0.0.1.9.1.0.0.0.0	real	39-40
# ::root	0	cause-01
# ::edge	and	op1	exercise-01	0.0.1.13	0.0.1.13.0	
# ::edge	and	op1	feel-01	0.0.1	0.0.1.0	
# ::edge	and	op1	get-01	0.0.1.6	0.0.1.6.0	
# ::edge	and	op1	help-01	0.0.1.1	0.0.1.1.1	
# ::edge	and	op1	possible	0.0.1.9.1	0.0.1.9	
# ::edge	and	op1	this	0.0.1.3	0.0.1.3.0	
# ::edge	and	op10	and	0.0.1	0.0.1.1	
# ::edge	and	op11	fell-01	0.0.1	0.0.1.2	
# ::edge	and	op12	feel-01	0.0.1	0.0	
# ::edge	and	op13	and	0.0.1	0.0.1.3	
# ::edge	and	op14	begin-01	0.0.1	0.0.1.4	
# ::edge	and	op15	make-02	0.0.1	0.0.1.5	
# ::edge	and	op16	and	0.0.1	0.0.1.6	
# ::edge	and	op2	life	0.0.1.1	0.0.1.1.2	
# ::edge	and	op2	recommend-01	0.0.1	0.0.1.7	
# ::edge	and	op3	have-03	0.0.1	0.0.1.8	
# ::edge	and	op4	possible	0.0.1	0.0.1.9	
# ::edge	and	op5	support-01	0.0.1	0.0.1.10	
# ::edge	and	op6	important	0.0.1	0.0.1.11	
# ::edge	and	op7	experience	0.0.1	0.0.1.12	
# ::edge	and	op8	and	0.0.1	0.0.1.13	
# ::edge	and	op9	try-01	0.0.1	0.0.1.14	
# ::edge	appoint-01	ARG1	ordinal-entity	0.0.1.0.3.0.0	0.0.1.0.3.0	
# ::edge	beat-04	ARG0	-	0.0.1.1.1.0.0.0.0	0.0.1.1.1.0.0.0.0.0	
# ::edge	beat-04	ARG1	bunt-01	0.0.1.1.1.0.0.0.0	0.0.1.1.1.0.0.0	
# ::edge	begin-01	ARG1	feel-01	0.0.1.4	0.0.1.4.0	
# ::edge	bunt-01	ARG1	get-05	0.0.1.1.1.0.0.0	0.0.1.1.1.0.0	
# ::edge	cause-01	ARG1	feel-01	0	0.0	
# ::edge	date-entity	time	minute	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	date-entity	time	minute	0.0.1.10.0	0.0.1.10.0.0	
# ::edge	date-entity	time	the	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	date-entity	time	the	0.0.1.10.0	0.0.1.10.0.1	
# ::edge	definite	domain	you	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	do-02	ARG1	anything	0.0.1.2.0	0.0.1.2.0.0	
# ::edge	do-02	ARG1	yeah	0.0.1.14.1	0.0.1.14.1.0	
# ::edge	engage-01	ARG1	and	0.0.1.1.0	0.0.1.1	
# ::edge	exercise-01	ARG1	help-01	0.0.1.13.0	0.0.1.13.0.0	
# ::edge	feel-01	ARG0	most	0.0.1.0	0.0.1.0.0	
# ::edge	feel-01	ARG1	date-entity	0.0.1.0	0.0.1.0.1	
# ::edge	feel-01	ARG1	good	0.0.1.4.0	0.0.1.4.0.0	
# ::edge	feel-01	ARG1	lot	0.0	0.0.0	
# ::edge	feel-01	ARG6	definite	0.0.1.0	0.0.1.0.2	
# ::edge	feel-01	condition	get-01	0.0.1.0	0.0.1.0.3	
# ::edge	feel-03	ARG1	kind	0.0.1.5.1	0.0.1.5.1.0	
# ::edge	fell-01	ARG1	do-02	0.0.1.2	0.0.1.2.0	
# ::edge	get-01	ARG1	or	0.0.1.7.0	0.0.1.7.0.0	
# ::edge	get-01	ARG1	ordinal-entity	0.0.1.0.3	0.0.1.0.3.0	
# ::edge	get-01	ARG1	some	0.0.1.6.0	0.0.1.6.0.0	
# ::edge	get-05	ARG1	general	0.0.1.1.1.0.0	0.0.1.1.1.0	
# ::edge	get-05	ARG6	somewhere	0.0.1.1.1.0.0	0.0.1.1.1.0.0.1	
# ::edge	good	degree	more	0.0.1.4.0.0	0.0.1.4.0.0.0	
# ::edge	have-02	ARG1	engage-01	0.0.1.1.0.0	0.0.1.1.0	
# ::edge	have-03	ARG0	some	0.0.1.8	0.0.1.8.0	
# ::edge	have-03	ARG1	problem	0.0.1.8	0.0.1.8.1	
# ::edge	help-01	ARG1	general	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	help-01	ARG1	really	0.0.1.13.0.0	0.0.1.13.0.0.0	
# ::edge	help-01	ARG1	some	0.0.1.6.0.0.0	0.0.1.6.0.0	
# ::edge	make-02	ARG0	only	0.0.1.5	0.0.1.5.0	
# ::edge	make-02	ARG1	feel-03	0.0.1.5	0.0.1.5.1	
# ::edge	matter-01	ARG1	anyone	0.0.1.9.1.0.0.0	0.0.1.9.1.0.0	
# ::edge	matter-01	time	real	0.0.1.9.1.0.0.0	0.0.1.9.1.0.0.0.0	
# ::edge	obviate-01	ARG0	service	0.0.1.8.2	0.0.1.8.2.0	
# ::edge	obviate-01	ARG1	have-03	0.0.1.8.2	0.0.1.8	
# ::edge	ordinal-entity	value	1	0.0.1.0.3.0	0.0.1.0.3.0.1	
# ::edge	pass-01	ARG1	begin-01	0.0.1.4.1	0.0.1.4	
# ::edge	recommend-01	ARG1	get-01	0.0.1.7	0.0.1.7.0	
# ::edge	recommend-01	ARG6	really	0.0.1.7	0.0.1.7.1	
# ::edge	support-01	ARG1	date-entity	0.0.1.10	0.0.1.10.0	
# ::edge	tell-01	ARG0	anyone	0.0.1.9.1.0	0.0.1.9.1.0.0	
# ::edge	tell-01	ARG1	and	0.0.1.9.1.0	0.0.1.9.1	
# ::edge	try-01	ARG0	definite	0.0.1.14	0.0.1.14.0	
# ::edge	try-01	ARG1	do-02	0.0.1.14	0.0.1.14.1	
# ::edge	use-01	ARG0	some	0.0.1.9.0	0.0.1.9.0.0	
# ::edge	use-01	ARG1	possible	0.0.1.9.0	0.0.1.9	
# ::edge	yeah	mode	expressive	0.0.1.14.1.0	0.0.1.14.1.0.0	
(c / cause-01 
      :ARG1 (f4 / feel-01 
            :ARG1 (l2 / lot) 
            :op-of (a2 / and 
                  :op1 (f3 / feel-01 
                        :ARG0 (m2 / most) 
                        :ARG1 (d / date-entity 
                              :time (m3 / minute) 
                              :time (t3 / the)) 
                        :ARG6 (d4 / definite 
                              :domain (y / you)) 
                        :condition (g4 / get-01 
                              :ARG1 (o4 / ordinal-entity 
                                    :ARG1-of (a8 / appoint-01) 
                                    :value 1))) 
                  :op10 (a9 / and 
                        :ARG1-of (e / engage-01 
                              :ARG1-of (h2 / have-02)) 
                        :op1 (h5 / help-01 
                              :ARG1 (g6 / general 
                                    :ARG1-of (g5 / get-05 
                                          :ARG1-of (b2 / bunt-01 
                                                :ARG1-of (b / beat-04 
                                                      :ARG0 (- / -))) 
                                          :ARG6 (s2 / somewhere)))) 
                        :op2 (l / life)) 
                  :op11 (f5 / fell-01 
                        :ARG1 (d6 / do-02 
                              :ARG1 (a5 / anything))) 
                  :op12 (a / and 
                        :op1 (t / this)) 
                  :op13 (b3 / begin-01 
                        :ARG1 (f / feel-01 
                              :ARG1 (g3 / good 
                                    :degree (m4 / more))) 
                        :ARG1-of (p / pass-01)) 
                  :op14 (m6 / make-02 
                        :ARG0 (o2 / only) 
                        :ARG1 (f2 / feel-03 
                              :ARG1 (k / kind))) 
                  :op15 (a7 / and 
                        :op1 (g / get-01 
                              :ARG1 (s3 / some 
                                    :ARG1-of (h3 / help-01)))) 
                  :op2 (r4 / recommend-01 
                        :ARG1 (g2 / get-01 
                              :ARG1 (o3 / or)) 
                        :ARG6 (r2 / really)) 
                  :op3 (h4 / have-03 
                        :ARG0 (s / some) 
                        :ARG1 (p3 / problem) 
                        :ARG1-of (o / obviate-01 
                              :ARG0 (s5 / service))) 
                  :op4 (p2 / possible 
                        :ARG1-of (u / use-01 
                              :ARG0 (s4 / some)) 
                        :op-of (a4 / and 
                              :ARG1-of (t2 / tell-01 
                                    :ARG0 (a3 / anyone 
                                          :ARG1-of (m / matter-01 
                                                :time (r / real)))))) 
                  :op5 (s6 / support-01 
                        :ARG1 (d3 / date-entity 
                              :time (m5 / minute) 
                              :time (t4 / the))) 
                  :op6 (i / important) 
                  :op7 (e4 / experience) 
                  :op8 (a6 / and 
                        :op1 (e3 / exercise-01 
                              :ARG1 (h / help-01 
                                    :ARG1 (r3 / really)))) 
                  :op9 (t5 / try-01 
                        :ARG0 (d5 / definite) 
                        :ARG1 (d2 / do-02 
                              :ARG1 (y2 / yeah 
                                    :mode (e2 / expressive)))))))

# ::snt Good luck.
# ::tok Good luck .
# ::alignments 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:06.265
# ::node	0	good	0-1
# ::node	0.0	luck	1-2
# ::root	0	good
(g / good 
      :mod-of (l / luck))

# ::snt I think a lot more people feel the same way as you do, but medicate themselves by using friends. Whilst it probably isn't a 'solution' as such, being around friends whilst being depressed is definitely better than being alone and being depressed. Either way, if you fancy a chat, feel free to PM
# ::tok I think a lot more people feel the same way as you do , but medicate themselves by using friends . Whilst it probably is n't a ' solution ' as such , being around friends whilst being depressed is definitely better than being alone and being depressed . Either way , if you fancy a chat , feel free to PM
# ::alignments 9-10|0.0.1.0.0 19-20|0.0.1.0.1.1.0.0 12-13|0.0.1.0.1.0 14-15|0.0.1.0.1 18-19|0.0.1.0.1.1.0 0-1|0.0 57-58|0.1 1-2|0.0.1 8-9|0.0.1.0.0.0 3-4|0.0.1.0.2.0 4-5|0.0.1.0.2 6-7|0.0.1.0 34-35|0.0.4 41-42|0.0.2.0.0+0.0.2.0 45-46|0.0.3 11-12|0.0.1.0.1.0.0 50-51|0.0.0.0 59-60|0.2 15-16|0.0.1.0.1.1 56-57|0.0.0 40-41|0.0.2 58-59|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:19.198
# ::node	0	feel-01	58-59
# ::node	0.0	i	0-1
# ::node	0.0.0	chat-01	56-57
# ::node	0.0.0.0	way	50-51
# ::node	0.0.1	think-01	1-2
# ::node	0.0.1.0	feel-01	6-7
# ::node	0.0.1.0.0	way	9-10
# ::node	0.0.1.0.0.0	shame-01	8-9
# ::node	0.0.1.0.1	bunt-01	14-15
# ::node	0.0.1.0.1.0	do-02	12-13
# ::node	0.0.1.0.1.0.0	you	11-12
# ::node	0.0.1.0.1.1	medicate-01	15-16
# ::node	0.0.1.0.1.1.0	use-01	18-19
# ::node	0.0.1.0.1.1.0.0	friend	19-20
# ::node	0.0.1.0.2	more	4-5
# ::node	0.0.1.0.2.0	lot	3-4
# ::node	0.0.2	definitely	40-41
# ::node	0.0.2.0	good	41-42
# ::node	0.0.2.0.0	more	41-42
# ::node	0.0.3	and	45-46
# ::node	0.0.4	around	34-35
# ::node	0.1	and	57-58
# ::node	0.2	fare-01	59-60
# ::root	0	feel-01
# ::edge	and	poss	i	0.0.3	0.0	
# ::edge	around	poss	i	0.0.4	0.0	
# ::edge	bunt-01	ARG1	feel-01	0.0.1.0.1	0.0.1.0	
# ::edge	bunt-01	ARG2	medicate-01	0.0.1.0.1	0.0.1.0.1.1	
# ::edge	chat-01	ARG0	i	0.0.0	0.0	
# ::edge	chat-01	ARG1	way	0.0.0	0.0.0.0	
# ::edge	definitely	poss	i	0.0.2	0.0	
# ::edge	do-02	ARG0	you	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	do-02	ARG1	bunt-01	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	fare-01	ARG1	feel-01	0.2	0	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG1	and	0	0.1	
# ::edge	feel-01	ARG1	way	0.0.1.0	0.0.1.0.0	
# ::edge	feel-01	ARG6	more	0.0.1.0	0.0.1.0.2	
# ::edge	good	degree	more	0.0.2.0	0.0.2.0.0	
# ::edge	good	op1	definitely	0.0.2.0	0.0.2	
# ::edge	medicate-01	ARG1	use-01	0.0.1.0.1.1	0.0.1.0.1.1.0	
# ::edge	more	calendar	lot	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	shame-01	ARG1	way	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	think-01	ARG0	i	0.0.1	0.0	
# ::edge	think-01	ARG1	feel-01	0.0.1	0.0.1.0	
# ::edge	use-01	ARG1	friend	0.0.1.0.1.1.0	0.0.1.0.1.1.0.0	
(f4 / feel-01 
      :ARG0 (i / i 
            :ARG0-of (c / chat-01 
                  :ARG1 (w2 / way)) 
            :ARG0-of (t / think-01 
                  :ARG1 (f2 / feel-01 
                        :ARG1 (w / way 
                              :ARG1-of (s / shame-01)) 
                        :ARG1-of (b / bunt-01 
                              :ARG1-of (d / do-02 
                                    :ARG0 (y / you)) 
                              :ARG2 (m3 / medicate-01 
                                    :ARG1 (u / use-01 
                                          :ARG1 (f / friend)))) 
                        :ARG6 (m / more 
                              :calendar (l / lot)))) 
            :poss-of (d2 / definitely 
                  :op-of (g / good 
                        :degree (m2 / more))) 
            :poss-of (a3 / and) 
            :poss-of (a2 / around)) 
      :ARG1 (a / and) 
      :ARG1-of (f3 / fare-01))

# ::snt If i were you id focus on an idol. Someone you aspire to (not want to be them but someone who your admire and have respect for) e.g. someone who came from a bad background and ended up successful and happy with a family and married etc etc
# ::tok If i were you id focus on an idol . Someone you aspire to ( not want to be them but someone who your admire and have respect for ) e.g. someone who came from a bad background and ended up successful and happy with a family and married etc etc
# ::alignments 38-39|0.0.0.0.0.1.0 5-6|0.0.0.0.0.0 36-37|0.0.0.0.0.0.1.0.0 43-44|0.0.0 1-2|0.0.0.0.0.0.2.0 4-5|0.0.0.0.0.0.2 42-43|0.0.0.0 39-40|0.0.0.0.0.1 47-48|0 12-13|0.0.0.0.0.0.1.0 31-32|0.0.0.0.0.0.0 41-42|0.0.0.0.0 11-12|0.0.0.0.0.0.1 37-38|0.0.0.0.0.1.0.0 46-47|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:26.458
# ::node	0	and	47-48
# ::node	0.0	family	46-47
# ::node	0.0.0	happen-01	43-44
# ::node	0.0.0.0	and	42-43
# ::node	0.0.0.0.0	succeed-01	41-42
# ::node	0.0.0.0.0.0	focus-01	5-6
# ::node	0.0.0.0.0.0.0	someone	31-32
# ::node	0.0.0.0.0.0.1	you	11-12
# ::node	0.0.0.0.0.0.1.0	aspire-01	12-13
# ::node	0.0.0.0.0.0.1.0.0	bad	36-37
# ::node	0.0.0.0.0.0.2	try-01	4-5
# ::node	0.0.0.0.0.0.2.0	i	1-2
# ::node	0.0.0.0.0.1	end-03	39-40
# ::node	0.0.0.0.0.1.0	and	38-39
# ::node	0.0.0.0.0.1.0.0	background	37-38
# ::root	0	and
# ::edge	and	op1	background	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	and	op1	family	0	0.0	
# ::edge	and	op1	succeed-01	0.0.0.0	0.0.0.0.0	
# ::edge	and	op2	happen-01	0.0.0.0	0.0.0	
# ::edge	aspire-01	ARG0	you	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1	
# ::edge	aspire-01	ARG1	bad	0.0.0.0.0.0.1.0	0.0.0.0.0.0.1.0.0	
# ::edge	end-03	ARG1	and	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	focus-01	ARG0	someone	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	focus-01	ARG1	you	0.0.0.0.0.0	0.0.0.0.0.0.1	
# ::edge	happen-01	ARG1	family	0.0.0	0.0	
# ::edge	succeed-01	ARG1	focus-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	succeed-01	ARG6	end-03	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	try-01	ARG1	focus-01	0.0.0.0.0.0.2	0.0.0.0.0.0	
# ::edge	try-01	ARG6	i	0.0.0.0.0.0.2	0.0.0.0.0.0.2.0	
(a3 / and 
      :op1 (f2 / family 
            :ARG1-of (h / happen-01 
                  :op-of (a2 / and 
                        :op1 (s2 / succeed-01 
                              :ARG1 (f / focus-01 
                                    :ARG0 (s / someone) 
                                    :ARG1 (y / you 
                                          :ARG0-of (a4 / aspire-01 
                                                :ARG1 (b / bad))) 
                                    :ARG1-of (t / try-01 
                                          :ARG6 (i / i))) 
                              :ARG6 (e / end-03 
                                    :ARG1 (a / and 
                                          :op1 (b2 / background))))))))

# ::snt Focus on what you want to achieve in life, you havent stated what your studying, or indeed why....is it because you wanted the experience? Because your mum wanted yo to go? Because u need a degree for the career you want to do?
# ::tok Focus on what you want to achieve in life , you havent stated what your studying , or indeed why .... is it because you wanted the experience ? Because your mum wanted yo to go ? Because u need a degree for the career you want to do ?
# ::alignments 27-28|0.0.0 25-26|0.0 44-45|0.1.0.1.0.0.0.0 46-47|0.1.0.1.0.0 4-5|0.1.0.1 31-32|0.0.0.0 11-12|0.1 6-7|0.1.0 35-36|0.0.0.0.0.0.0 45-46|0.1.0.1.0.0.1 32-33|0.0.0.0.0 8-9|0.1.0.0 17-18|0.2.1 12-13|0 14-15|0.2.0 39-40|0.1.0.1.0.1 48-49|0.1.0.1.0.0.0 41-42|0.1.0.1.0.1.0 0-1|0.1.0.1.0 33-34|0.0.0.0.0.0 15-16|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:34.994
# ::node	0	state-01	12-13
# ::node	0.0	want-01	25-26
# ::node	0.0.0	experience-01	27-28
# ::node	0.0.0.0	muse-01	31-32
# ::node	0.0.0.0.0	want-01	32-33
# ::node	0.0.0.0.0.0	yoke-01	33-34
# ::node	0.0.0.0.0.0.0	go-01	35-36
# ::node	0.1	have-01	11-12
# ::node	0.1.0	achieve-01	6-7
# ::node	0.1.0.0	life	8-9
# ::node	0.1.0.1	want-01	4-5
# ::node	0.1.0.1.0	focus-01	0-1
# ::node	0.1.0.1.0.0	want-01	46-47
# ::node	0.1.0.1.0.0.0	do-01	48-49
# ::node	0.1.0.1.0.0.0.0	career	44-45
# ::node	0.1.0.1.0.0.1	you	45-46
# ::node	0.1.0.1.0.1	need-01	39-40
# ::node	0.1.0.1.0.1.0	degree	41-42
# ::node	0.2	study-01	15-16
# ::node	0.2.0	yoke-01	14-15
# ::node	0.2.1	orbit-01	17-18
# ::root	0	state-01
# ::edge	achieve-01	ARG0	life	0.1.0	0.1.0.0	
# ::edge	achieve-01	ARG1	have-01	0.1.0	0.1	
# ::edge	do-01	ARG1	career	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	focus-01	ARG1	want-01	0.1.0.1.0	0.1.0.1	
# ::edge	go-01	ARG1	yoke-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-01	ARG1	state-01	0.1	0	
# ::edge	muse-01	ARG1	experience-01	0.0.0.0	0.0.0	
# ::edge	need-01	ARG0	focus-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	need-01	ARG1	degree	0.1.0.1.0.1	0.1.0.1.0.1.0	
# ::edge	orbit-01	ARG1	study-01	0.2.1	0.2	
# ::edge	state-01	ARG1	want-01	0	0.0	
# ::edge	study-01	ARG1	state-01	0.2	0	
# ::edge	want-01	ARG0	focus-01	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	want-01	ARG1	achieve-01	0.1.0.1	0.1.0	
# ::edge	want-01	ARG1	do-01	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	want-01	ARG1	experience-01	0.0	0.0.0	
# ::edge	want-01	ARG1	muse-01	0.0.0.0.0	0.0.0.0	
# ::edge	want-01	ARG6	you	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	yoke-01	ARG1	study-01	0.2.0	0.2	
# ::edge	yoke-01	ARG1	want-01	0.0.0.0.0.0	0.0.0.0.0	
(s / state-01 
      :ARG1 (w / want-01 
            :ARG1 (e / experience-01 
                  :ARG1-of (m / muse-01 
                        :ARG1-of (w4 / want-01 
                              :ARG1-of (y3 / yoke-01 
                                    :ARG1-of (g / go-01)))))) 
      :ARG1-of (h / have-01 
            :ARG1-of (a / achieve-01 
                  :ARG0 (l / life) 
                  :ARG1-of (w3 / want-01 
                        :ARG1-of (f / focus-01 
                              :ARG0-of (w2 / want-01 
                                    :ARG1 (d / do-01 
                                          :ARG1 (c / career)) 
                                    :ARG6 (y / you)) 
                              :ARG0-of (n / need-01 
                                    :ARG1 (d2 / degree)))))) 
      :ARG1-of (s2 / study-01 
            :ARG1-of (y2 / yoke-01) 
            :ARG1-of (o / orbit-01)))

# ::snt Either way, sum up why youre there and work your bottom off to get the best grades you can, cos once you get ur degree, you wil have something you can say "hey i didnt fail, it was hard work and i passed"
# ::tok Either way , sum up why youre there and work your bottom off to get the best grades you can , cos once you get ur degree , you wil have something you can say " hey i didnt fail , it was hard work and i passed "
# ::alignments 0-23|0.3.0.1+0.3.0 18-19|0.2.1.0.0.1.0 26-27|0.3.0.0.1 23-24|0.3.0.0.0 28-29|0.3.2.0 29-30|0.3.2 0-1|0.3.1.0.0 9-10|0.2.1 36-37|0.2.0.0 14-15|0.2.1.0.0 1-2|0.3.1.0 37-38|0.1.2 15-16|0.2.1.0.0.0.0.0.0.0+0.2.1.0.0.0.0.0.0+0.2.1.0.0.0.0.0 24-25|0.3.0.0 8-9|0.2.1.1 47-48|0.1.1.0 45-46|0.1.1.0.1 43-44|0.1.0 16-17|0.2.1.0.0.0.0.1+0.2.1.0.0.0.0 39-40|0.1 17-18|0.2.1.0.0.0 35-36|0.2.0+0.2 19-20|0.2.1.0.0.1 11-12|0.2.1.0 31-32|0.3.1 33-34|0.4 44-45|0.1.1 3-4|0.2.1.1.0 46-47|0.1.1.0.0 32-33|0.0 30-31|0.3 34-35|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:48.434
# ::node	0	say-01	34-35
# ::node	0.0	you	32-33
# ::node	0.1	fail-01	39-40
# ::node	0.1.0	hard	43-44
# ::node	0.1.1	work-01	44-45
# ::node	0.1.1.0	pass-01	47-48
# ::node	0.1.1.0.0	i	46-47
# ::node	0.1.1.0.1	and	45-46
# ::node	0.1.2	i	37-38
# ::node	0.2	person	35-36
# ::node	0.2.0	have-org-role-91	35-36
# ::node	0.2.0.0	hey	36-37
# ::node	0.2.1	work-01	9-10
# ::node	0.2.1.0	bottom	11-12
# ::node	0.2.1.0.0	get-01	14-15
# ::node	0.2.1.0.0.0	grade	17-18
# ::node	0.2.1.0.0.0.0	good	16-17
# ::node	0.2.1.0.0.0.0.0	country	15-16
# ::node	0.2.1.0.0.0.0.0.0	name	15-16
# ::node	0.2.1.0.0.0.0.0.0.0	"North"	15-16
# ::node	0.2.1.0.0.0.0.1	most	16-17
# ::node	0.2.1.0.0.1	possible	19-20
# ::node	0.2.1.0.0.1.0	you	18-19
# ::node	0.2.1.1	and	8-9
# ::node	0.2.1.1.0	sum	3-4
# ::node	0.3	have-03	30-31
# ::node	0.3.0	date-entity	0-23
# ::node	0.3.0.0	get-01	24-25
# ::node	0.3.0.0.0	you	23-24
# ::node	0.3.0.0.1	degree	26-27
# ::node	0.3.0.1	once	0-23
# ::node	0.3.1	something	31-32
# ::node	0.3.1.0	way	1-2
# ::node	0.3.1.0.0	either	0-1
# ::node	0.3.2	will-01	29-30
# ::node	0.3.2.0	you	28-29
# ::node	0.4	possible	33-34
# ::root	0	say-01
# ::edge	and	op1	pass-01	0.1.1.0.1	0.1.1.0	
# ::edge	and	op1	sum	0.2.1.1	0.2.1.1.0	
# ::edge	and	op2	work-01	0.2.1.1	0.2.1	
# ::edge	country	name	name	0.2.1.0.0.0.0.0	0.2.1.0.0.0.0.0.0	
# ::edge	date-entity	time	once	0.3.0	0.3.0.1	
# ::edge	either	op1	way	0.3.1.0.0	0.3.1.0	
# ::edge	fail-01	ARG1	hard	0.1	0.1.0	
# ::edge	fail-01	ARG6	i	0.1	0.1.2	
# ::edge	get-01	ARG0	bottom	0.2.1.0.0	0.2.1.0	
# ::edge	get-01	ARG0	you	0.3.0.0	0.3.0.0.0	
# ::edge	get-01	ARG1	degree	0.3.0.0	0.3.0.0.1	
# ::edge	get-01	ARG1	grade	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	get-01	ARG6	date-entity	0.3.0.0	0.3.0	
# ::edge	get-01	ARG6	possible	0.2.1.0.0	0.2.1.0.0.1	
# ::edge	good	calendar	country	0.2.1.0.0.0.0	0.2.1.0.0.0.0.0	
# ::edge	good	degree	most	0.2.1.0.0.0.0	0.2.1.0.0.0.0.1	
# ::edge	grade	mod	good	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	have-03	ARG0	date-entity	0.3	0.3.0	
# ::edge	have-03	ARG1	something	0.3	0.3.1	
# ::edge	have-03	ARG6	say-01	0.3	0	
# ::edge	have-org-role-91	ARG0	person	0.2.0	0.2	
# ::edge	have-org-role-91	ARG1	hey	0.2.0	0.2.0.0	
# ::edge	name	op1	"North"	0.2.1.0.0.0.0.0.0	0.2.1.0.0.0.0.0.0.0	
# ::edge	pass-01	ARG1	work-01	0.1.1.0	0.1.1	
# ::edge	pass-01	ARG6	i	0.1.1.0	0.1.1.0.0	
# ::edge	possible	calendar	you	0.2.1.0.0.1	0.2.1.0.0.1.0	
# ::edge	possible	domain	say-01	0.4	0	
# ::edge	say-01	ARG0	you	0	0.0	
# ::edge	say-01	ARG1	fail-01	0	0.1	
# ::edge	say-01	ARG6	person	0	0.2	
# ::edge	something	poss	way	0.3.1	0.3.1.0	
# ::edge	will-01	ARG0	you	0.3.2	0.3.2.0	
# ::edge	will-01	ARG1	have-03	0.3.2	0.3	
# ::edge	work-01	ARG0	person	0.2.1	0.2	
# ::edge	work-01	ARG1	bottom	0.2.1	0.2.1.0	
# ::edge	work-01	ARG1	fail-01	0.1.1	0.1	
(s3 / say-01 
      :ARG0 (y4 / you) 
      :ARG1 (f / fail-01 
            :ARG1 (h2 / hard) 
            :ARG1-of (w4 / work-01 
                  :ARG1-of (p / pass-01 
                        :ARG6 (i2 / i) 
                        :op-of (a2 / and))) 
            :ARG6 (i / i)) 
      :ARG6 (p2 / person 
            :ARG0-of (h3 / have-org-role-91 
                  :ARG1 (h / hey)) 
            :ARG0-of (w2 / work-01 
                  :ARG1 (b / bottom 
                        :ARG0-of (g / get-01 
                              :ARG1 (g4 / grade 
                                    :mod (g3 / good 
                                          :calendar (c / country 
                                                :name (n / name 
                                                      :op1 "North")) 
                                          :degree (m / most))) 
                              :ARG6 (p3 / possible 
                                    :calendar (y / you)))) 
                  :op-of (a / and 
                        :op1 (s2 / sum)))) 
      :ARG6-of (h4 / have-03 
            :ARG0 (d / date-entity 
                  :ARG6-of (g2 / get-01 
                        :ARG0 (y2 / you) 
                        :ARG1 (d2 / degree)) 
                  :time (o / once)) 
            :ARG1 (s / something 
                  :poss (w3 / way 
                        :op-of (e / either))) 
            :ARG1-of (w / will-01 
                  :ARG0 (y3 / you))) 
      :domain-of (p4 / possible))

# ::snt X
# ::tok X
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:48.449
# ::node	0	amr-empty	0-1
# ::root	0	amr-empty
(a / amr-empty)

# ::snt hope this helps
# ::tok hope this helps
# ::alignments 2-3|0.0 1-2|0.0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:48.485
# ::node	0	hope-01	0-1
# ::node	0.0	help-01	2-3
# ::node	0.0.0	this	1-2
# ::root	0	hope-01
# ::edge	help-01	ARG1	this	0.0	0.0.0	
# ::edge	hope-01	ARG1	help-01	0	0.0	
(h2 / hope-01 
      :ARG1 (h / help-01 
            :ARG1 (t / this)))

# ::snt I'm pretty much non-autistic (not diagnosed with dyspraxia but I think the doctor misdiagnosed), but I walk on my toes nearly all of the time.
# ::tok I 'm pretty much non - autistic ( not diagnosed with dyspraxia but I think the doctor misdiagnosed ) , but I walk on my toes nearly all of the time .
# ::alignments 18-19|0.2 20-21|0 24-25|0.2.0.0 25-26|0.2.0 28-29|0.0 3-4|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:52.142
# ::node	0	walk-01	20-21
# ::node	0.0	time	28-29
# ::node	0.1	much	3-4
# ::node	0.1.0	i	0-1
# ::node	0.2	bunt-01	18-19
# ::node	0.2.0	all	25-26
# ::node	0.2.0.0	nearly	24-25
# ::root	0	walk-01
# ::edge	bunt-01	ARG0	all	0.2	0.2.0	
# ::edge	bunt-01	ARG6	walk-01	0.2	0	
# ::edge	much	calendar	i	0.1	0.1.0	
# ::edge	nearly	calendar	all	0.2.0.0	0.2.0	
# ::edge	walk-01	ARG0	time	0	0.0	
# ::edge	walk-01	ARG1	much	0	0.1	
(w / walk-01 
      :ARG0 (t / time) 
      :ARG1 (m / much 
            :calendar (i / i)) 
      :ARG6-of (b / bunt-01 
            :ARG0 (a / all 
                  :calendar-of (n / nearly))))

# ::snt It's more comfortable to me.
# ::tok It 's more comfortable to me .
# ::alignments 0-1|0.0.0.0 2-3|0.0 3-4|0.0.0 1-2|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:52.262
# ::node	0	be-located-at-91	1-2
# ::node	0.0	more	2-3
# ::node	0.0.0	comfortable	3-4
# ::node	0.0.0.0	it	0-1
# ::root	0	be-located-at-91
# ::edge	be-located-at-91	ARG1	more	0	0.0	
# ::edge	comfortable	degree	more	0.0.0	0.0	
# ::edge	comfortable	domain	it	0.0.0	0.0.0.0	
(b / be-located-at-91 
      :ARG1 (m / more 
            :degree-of (c / comfortable 
                  :domain (i / it))))

# ::snt What made them decide toe-walking is a sign of autism since it seems so random and isn't always indicative?
# ::tok What made them decide toe - walking is a sign of autism since it seems so random and is n't always indicative ?
# ::alignments 3-4|0.1 12-13|0.0.0 14-15|0.0 7-8|0 13-14|0.0.0.0 15-16|0.0.0.0.1 18-19|0.0.0.0.0 10-11|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:52.774
# ::node	0	sign-01	7-8
# ::node	0.0	random	14-15
# ::node	0.0.0	seem-01	12-13
# ::node	0.0.0.0	sob-01	13-14
# ::node	0.0.0.0.0	always	18-19
# ::node	0.0.0.0.1	and	15-16
# ::node	0.1	decide-01	3-4
# ::node	0.2	since	10-11
# ::root	0	sign-01
# ::edge	decide-01	ARG1	sign-01	0.1	0	
# ::edge	seem-01	ARG0	random	0.0.0	0.0	
# ::edge	seem-01	ARG1	sob-01	0.0.0	0.0.0.0	
# ::edge	sign-01	ARG1	random	0	0.0	
# ::edge	sign-01	ARG6	since	0	0.2	
# ::edge	sob-01	ARG1	always	0.0.0.0	0.0.0.0.0	
# ::edge	sob-01	ARG6	and	0.0.0.0	0.0.0.0.1	
(s2 / sign-01 
      :ARG1 (r / random 
            :ARG0-of (s / seem-01 
                  :ARG1 (s3 / sob-01 
                        :ARG1 (a2 / always) 
                        :ARG6 (a / and)))) 
      :ARG1-of (d / decide-01) 
      :ARG6 (s4 / since))

# ::snt Well I might have signs of something on the autism spectrum but who doesn't have one or two?
# ::tok Well I might have signs of something on the autism spectrum but who does n't have one or two ?
# ::alignments 0-1|0.1.0.1 6-7|0.0 4-5|0 17-18|0.1.0.0.0 15-16|0.1.0.0 11-12|0.1.0 3-4|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:53.329
# ::node	0	sign-01	4-5
# ::node	0.0	something	6-7
# ::node	0.1	have-03	3-4
# ::node	0.1.0	bunt-01	11-12
# ::node	0.1.0.0	have-03	15-16
# ::node	0.1.0.0.0	or	17-18
# ::node	0.1.0.1	1	0-1
# ::root	0	sign-01
# ::edge	bunt-01	ARG1	have-03	0.1.0	0.1	
# ::edge	bunt-01	ARG2	have-03	0.1.0	0.1.0.0	
# ::edge	bunt-01	ARG6	1	0.1.0	0.1.0.1	
# ::edge	have-03	ARG1	or	0.1.0.0	0.1.0.0.0	
# ::edge	have-03	ARG1	sign-01	0.1	0	
# ::edge	sign-01	ARG1	something	0	0.0	
(s2 / sign-01 
      :ARG1 (s / something) 
      :ARG1-of (h2 / have-03 
            :ARG1-of (b / bunt-01 
                  :ARG2 (h / have-03 
                        :ARG1 (o / or)) 
                  :ARG6 1)))

# ::snt You guys know what I mean.
# ::tok You guys know what I mean .
# ::alignments 2-3|0 5-6|0.1 0-1|0.1.0 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:53.424
# ::node	0	know-01	2-3
# ::node	0.0	guy	1-2
# ::node	0.1	mean-01	5-6
# ::node	0.1.0	you	0-1
# ::root	0	know-01
# ::edge	know-01	ARG0	guy	0	0.0	
# ::edge	know-01	ARG1	mean-01	0	0.1	
# ::edge	mean-01	ARG1	you	0.1	0.1.0	
(k / know-01 
      :ARG0 (g / guy) 
      :ARG1 (m / mean-01 
            :ARG1 (y / you)))

# ::snt Walking on toes can be a symptom of autism.
# ::tok Walking on toes can be a symptom of autism .
# ::alignments 6-7|0.0 3-4|0 2-3|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:53.535
# ::node	0	possible	3-4
# ::node	0.0	sympathize-01	6-7
# ::node	0.0.0	walk-01	0-1
# ::node	0.0.0.0	toe	2-3
# ::root	0	possible
# ::edge	possible	domain	sympathize-01	0	0.0	
# ::edge	sympathize-01	ARG1	walk-01	0.0	0.0.0	
# ::edge	walk-01	ARG1	toe	0.0.0	0.0.0.0	
(p / possible 
      :domain (s / sympathize-01 
            :ARG1 (w / walk-01 
                  :ARG1 (t / toe))))

# ::snt Having a headache can be a symptom of brain tumours.
# ::tok Having a headache can be a symptom of brain tumours .
# ::alignments 6-7|0.0 0-1|0.0.1 2-3|0.0.1.0 3-4|0 8-9|0.0.1.0.0 9-10|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:53.743
# ::node	0	possible	3-4
# ::node	0.0	sympathize-01	6-7
# ::node	0.0.0	tumour	9-10
# ::node	0.0.1	have-03	0-1
# ::node	0.0.1.0	headache	2-3
# ::node	0.0.1.0.0	brain	8-9
# ::root	0	possible
# ::edge	have-03	ARG1	headache	0.0.1	0.0.1.0	
# ::edge	headache	mod	brain	0.0.1.0	0.0.1.0.0	
# ::edge	possible	domain	sympathize-01	0	0.0	
# ::edge	sympathize-01	ARG1	tumour	0.0	0.0.0	
# ::edge	sympathize-01	ARG6	have-03	0.0	0.0.1	
(p / possible 
      :domain (s / sympathize-01 
            :ARG1 (t / tumour) 
            :ARG6 (h / have-03 
                  :ARG1 (h2 / headache 
                        :mod (b / brain)))))

# ::snt Feeling tired a lot can be a symptom of leukaemia.
# ::tok Feeling tired a lot can be a symptom of leukaemia .
# ::alignments 1-2|0.0.0.0 3-4|0.0.0.0.0 0-1|0.0.0 4-5|0 7-8|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:53.879
# ::node	0	possible	4-5
# ::node	0.0	sympathize-01	7-8
# ::node	0.0.0	feel-01	0-1
# ::node	0.0.0.0	tire-01	1-2
# ::node	0.0.0.0.0	lot	3-4
# ::root	0	possible
# ::edge	feel-01	ARG1	tire-01	0.0.0	0.0.0.0	
# ::edge	possible	domain	sympathize-01	0	0.0	
# ::edge	sympathize-01	ARG1	feel-01	0.0	0.0.0	
# ::edge	tire-01	ARG1	lot	0.0.0.0	0.0.0.0.0	
(p / possible 
      :domain (s / sympathize-01 
            :ARG1 (f / feel-01 
                  :ARG1 (t / tire-01 
                        :ARG1 (l / lot)))))

# ::snt Symptoms don't always apply but if they happen in a lot of cases (which it clearly must do in this instance) it's worth noting, since otherwise nothing would ever get diagnosed.
# ::tok Symptoms do n't always apply but if they happen in a lot of cases ( which it clearly must do in this instance ) it 's worth noting , since otherwise nothing would ever get diagnosed .
# ::alignments 27-28|0.0.0.1 31-32|0.0.0.0 30-31|0+0.1 3-4|0.0.0.1.0.0.2 0-1|0.0.0.1.0 11-12|0.0.0.1.0.0.0.0 13-14|0.0.0.1.0.0.0.0.0 4-5|0.0.0.1.0.0 8-9|0.0.0.1.0.0.0 35-36|0.0.0 34-35|0.0.0.2 33-34|0.0.0.2.0 5-6|0.0.0.1.0.0.1 29-30|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:02:58.773
# ::node	0	have-concession-91	30-31
# ::node	0.0	since	29-30
# ::node	0.0.0	diagnose-01	35-36
# ::node	0.0.0.0	nothing	31-32
# ::node	0.0.0.1	note-01	27-28
# ::node	0.0.0.1.0	symptom	0-1
# ::node	0.0.0.1.0.0	apply-02	4-5
# ::node	0.0.0.1.0.0.0	happen-01	8-9
# ::node	0.0.0.1.0.0.0.0	lot	11-12
# ::node	0.0.0.1.0.0.0.0.0	case	13-14
# ::node	0.0.0.1.0.0.1	bunt-01	5-6
# ::node	0.0.0.1.0.0.2	always	3-4
# ::node	0.0.0.2	get-03	34-35
# ::node	0.0.0.2.0	ever	33-34
# ::node	0.1	contrast-01	30-31
# ::root	0	have-concession-91
# ::edge	apply-02	ARG0	symptom	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	apply-02	ARG1	happen-01	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	apply-02	time	always	0.0.0.1.0.0	0.0.0.1.0.0.2	
# ::edge	bunt-01	ARG1	apply-02	0.0.0.1.0.0.1	0.0.0.1.0.0	
# ::edge	contrast-01	ARG1	have-concession-91	0.1	0	
# ::edge	diagnose-01	ARG1	nothing	0.0.0	0.0.0.0	
# ::edge	get-03	ARG1	diagnose-01	0.0.0.2	0.0.0	
# ::edge	get-03	ARG6	ever	0.0.0.2	0.0.0.2.0	
# ::edge	happen-01	ARG1	lot	0.0.0.1.0.0.0	0.0.0.1.0.0.0.0	
# ::edge	have-concession-91	ARG1	since	0	0.0	
# ::edge	lot	location	case	0.0.0.1.0.0.0.0	0.0.0.1.0.0.0.0.0	
# ::edge	note-01	ARG0	symptom	0.0.0.1	0.0.0.1.0	
# ::edge	note-01	ARG1	diagnose-01	0.0.0.1	0.0.0	
# ::edge	since	op1	diagnose-01	0.0	0.0.0	
(h / have-concession-91 
      :ARG1 (s2 / since 
            :op1 (d / diagnose-01 
                  :ARG1 (n2 / nothing) 
                  :ARG1-of (n / note-01 
                        :ARG0 (s / symptom 
                              :ARG0-of (a2 / apply-02 
                                    :ARG1 (h2 / happen-01 
                                          :ARG1 (l / lot 
                                                :location (c2 / case))) 
                                    :ARG1-of (b / bunt-01) 
                                    :time (a / always)))) 
                  :ARG1-of (g / get-03 
                        :ARG6 (e / ever)))) 
      :ARG1-of (c / contrast-01))

# ::snt I used to walk on my toes, but that was because I was born with strange toes that curled under and had to be straightened with surgery two years ago.
# ::tok I used to walk on my toes , but that was because I was born with strange toes that curled under and had to be straightened with surgery two years ago .
# ::alignments 16-17|0.0.1 3-4|0.2.0.0.0.0.1 1-2|0.2.0.0.0.0 17-18|0.0 6-7|0.2.0.0.0.0.1.1 21-22|0.2 8-9|0.2.0.0.0.0.0 19-20|0 0-1|0.2.0.0.0.0.1.0 20-21|0.1 25-26|0.2.0 0-29|0.2.0.0.0.1+0.2.0.0.0.2+0.2.0.0.0.3+0.2.0.0.0 14-15|0.0.0 27-28|0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:00.551
# ::node	0	photograph-01	19-20
# ::node	0.0	toe	17-18
# ::node	0.0.0	bear-02	14-15
# ::node	0.0.1	strange	16-17
# ::node	0.1	under	20-21
# ::node	0.2	and	21-22
# ::node	0.2.0	straighten-01	25-26
# ::node	0.2.0.0	surge-01	27-28
# ::node	0.2.0.0.0	date-entity	0-29
# ::node	0.2.0.0.0.0	use-01	1-2
# ::node	0.2.0.0.0.0.0	bunt-01	8-9
# ::node	0.2.0.0.0.0.1	walk-01	3-4
# ::node	0.2.0.0.0.0.1.0	i	0-1
# ::node	0.2.0.0.0.0.1.1	toe	6-7
# ::node	0.2.0.0.0.1	ago	0-29
# ::node	0.2.0.0.0.2	year	0-29
# ::node	0.2.0.0.0.3	two	0-29
# ::root	0	photograph-01
# ::edge	and	op1	photograph-01	0.2	0	
# ::edge	bear-02	ARG1	toe	0.0.0	0.0	
# ::edge	bunt-01	ARG1	use-01	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	date-entity	time	ago	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	date-entity	time	two	0.2.0.0.0	0.2.0.0.0.3	
# ::edge	date-entity	time	year	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	photograph-01	ARG1	toe	0	0.0	
# ::edge	photograph-01	location	under	0	0.1	
# ::edge	straighten-01	ARG1	and	0.2.0	0.2	
# ::edge	straighten-01	ARG2	surge-01	0.2.0	0.2.0.0	
# ::edge	surge-01	ARG1	date-entity	0.2.0.0	0.2.0.0.0	
# ::edge	toe	mod	strange	0.0	0.0.1	
# ::edge	use-01	ARG1	date-entity	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	use-01	ARG2	walk-01	0.2.0.0.0.0	0.2.0.0.0.0.1	
# ::edge	walk-01	ARG0	i	0.2.0.0.0.0.1	0.2.0.0.0.0.1.0	
# ::edge	walk-01	ARG1	toe	0.2.0.0.0.0.1	0.2.0.0.0.0.1.1	
(p / photograph-01 
      :ARG1 (t / toe 
            :ARG1-of (b2 / bear-02) 
            :mod (s / strange)) 
      :location (u2 / under) 
      :op-of (a / and 
            :ARG1-of (s2 / straighten-01 
                  :ARG2 (s3 / surge-01 
                        :ARG1 (d / date-entity 
                              :ARG1-of (u / use-01 
                                    :ARG1-of (b / bunt-01) 
                                    :ARG2 (w / walk-01 
                                          :ARG0 (i / i) 
                                          :ARG1 (t2 / toe))) 
                              :time (a2 / ago) 
                              :time (y / year) 
                              :time (t3 / two))))))

# ::snt My brother's autistic but I haven't noticed this with him either, but the spectrum is so broad and I myself probably have mild asperger's because I have problems with communication and don't pick up on social reactions/body language.
# ::tok My brother 's autistic but I have n't noticed this with him either , but the spectrum is so broad and I myself probably have mild asperger 's because I have problems with communication and do n't pick up on social reactions / body language .
# ::alignments 8-9|0.0.0 9-10|0.0.0.1 33-34|0.0.1.0.0.0.0 19-20|0.0.2 14-15|0.0 37-38|0.0.1 20-21|0.0.0.2.0.2 42-43|0.0.0.2.0.0 4-5|0.0.0.2 31-32|0.0.1.0.0.0 18-19|0.0.2.0 1-2|0.0.0.0 12-13|0.1+0 24-25|0.0.0.2.0 34-35|0.0.1.0 30-31|0.0.1.0.0 23-24|0.0.0.2.0.1 40-41|0.0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:02.826
# ::node	0	multi-sentence	12-13
# ::node	0.0	bunt-01	14-15
# ::node	0.0.0	notice-01	8-9
# ::node	0.0.0.0	brother	1-2
# ::node	0.0.0.1	this	9-10
# ::node	0.0.0.2	bunt-01	4-5
# ::node	0.0.0.2.0	have-03	24-25
# ::node	0.0.0.2.0.0	language	42-43
# ::node	0.0.0.2.0.1	probable	23-24
# ::node	0.0.0.2.0.2	and	20-21
# ::node	0.0.1	pick-04	37-38
# ::node	0.0.1.0	and	34-35
# ::node	0.0.1.0.0	have-03	30-31
# ::node	0.0.1.0.0.0	problem	31-32
# ::node	0.0.1.0.0.0.0	communicate-01	33-34
# ::node	0.0.2	broad	19-20
# ::node	0.0.2.0	sob-01	18-19
# ::node	0.0.2.0.0	society	40-41
# ::node	0.1	or	12-13
# ::root	0	multi-sentence
# ::edge	and	op1	have-03	0.0.0.2.0.2	0.0.0.2.0	
# ::edge	and	op1	have-03	0.0.1.0	0.0.1.0.0	
# ::edge	and	op2	pick-04	0.0.1.0	0.0.1	
# ::edge	bunt-01	ARG1	have-03	0.0.0.2	0.0.0.2.0	
# ::edge	bunt-01	ARG1	notice-01	0.0	0.0.0	
# ::edge	bunt-01	ARG2	broad	0.0	0.0.2	
# ::edge	bunt-01	ARG2	notice-01	0.0.0.2	0.0.0	
# ::edge	bunt-01	ARG6	multi-sentence	0.0	0	
# ::edge	have-03	ARG1	language	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	have-03	ARG1	problem	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	multi-sentence	snt1	or	0	0.1	
# ::edge	notice-01	ARG0	brother	0.0.0	0.0.0.0	
# ::edge	notice-01	ARG1	this	0.0.0	0.0.0.1	
# ::edge	pick-04	ARG1	bunt-01	0.0.1	0.0	
# ::edge	probable	domain	have-03	0.0.0.2.0.1	0.0.0.2.0	
# ::edge	problem	mod	communicate-01	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	sob-01	ARG0	society	0.0.2.0	0.0.2.0.0	
# ::edge	sob-01	ARG1	broad	0.0.2.0	0.0.2	
(m / multi-sentence 
      :ARG6-of (b2 / bunt-01 
            :ARG1 (n / notice-01 
                  :ARG0 (b4 / brother) 
                  :ARG1 (t / this) 
                  :ARG2-of (b3 / bunt-01 
                        :ARG1 (h / have-03 
                              :ARG1 (l / language) 
                              :domain-of (p3 / probable) 
                              :op-of (a / and)))) 
            :ARG1-of (p / pick-04 
                  :op-of (a2 / and 
                        :op1 (h2 / have-03 
                              :ARG1 (p2 / problem 
                                    :mod (c / communicate-01))))) 
            :ARG2 (b / broad 
                  :ARG1-of (s / sob-01 
                        :ARG0 (s2 / society)))) 
      :snt1 (o / or))

# ::snt But then I don't have a proper diagnosis and even having some symptoms might not mean you have a certain condition.
# ::tok But then I do n't have a proper diagnosis and even having some symptoms might not mean you have a certain condition .
# ::alignments 21-22|0.1.0.0.0.1 18-19|0.1.0.0.0 5-6|0.0 9-10|0 11-12|0.1 10-11|0.1.1 12-13|0.1.0.1 13-14|0.1.0 16-17|0.1.0.0 0-1|0.0.0 1-2|0.0.0.0 20-21|0.1.0.0.0.1.0 7-8|0.1.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:03.829
# ::node	0	and	9-10
# ::node	0.0	have-03	5-6
# ::node	0.0.0	bunt-01	0-1
# ::node	0.0.0.0	then	1-2
# ::node	0.1	have-03	11-12
# ::node	0.1.0	symptom	13-14
# ::node	0.1.0.0	mean-01	16-17
# ::node	0.1.0.0.0	have-03	18-19
# ::node	0.1.0.0.0.0	proper	7-8
# ::node	0.1.0.0.0.1	condition	21-22
# ::node	0.1.0.0.0.1.0	certain	20-21
# ::node	0.1.0.1	some	12-13
# ::node	0.1.1	even	10-11
# ::root	0	and
# ::edge	and	op1	have-03	0	0.0	
# ::edge	and	op2	have-03	0	0.1	
# ::edge	bunt-01	ARG1	then	0.0.0	0.0.0.0	
# ::edge	condition	mod	certain	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	have-03	ARG0	proper	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-03	ARG1	bunt-01	0.0	0.0.0	
# ::edge	have-03	ARG1	condition	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	have-03	ARG1	symptom	0.1	0.1.0	
# ::edge	have-03	mod	even	0.1	0.1.1	
# ::edge	mean-01	ARG0	symptom	0.1.0.0	0.1.0	
# ::edge	mean-01	ARG1	have-03	0.1.0.0	0.1.0.0.0	
# ::edge	symptom	quant	some	0.1.0	0.1.0.1	
(a / and 
      :op1 (h2 / have-03 
            :ARG1 (b / bunt-01 
                  :ARG1 (t / then))) 
      :op2 (h3 / have-03 
            :ARG1 (s2 / symptom 
                  :ARG0-of (m / mean-01 
                        :ARG1 (h / have-03 
                              :ARG0 (p / proper) 
                              :ARG1 (c / condition 
                                    :mod (c2 / certain)))) 
                  :quant (s / some)) 
            :mod (e / even)))

# ::snt I walk on my toes not as much since years of being told not to.
# ::tok I walk on my toes not as much since years of being told not to .
# ::alignments 6-7|0.2.0 12-13|0.1.0 9-10|0.1 7-8|0.0.0 1-2|0 8-9|0.2 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:04.173
# ::node	0	walk-01	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	much	7-8
# ::node	0.1	year	9-10
# ::node	0.1.0	tell-01	12-13
# ::node	0.2	since	8-9
# ::node	0.2.0	ask-01	6-7
# ::root	0	walk-01
# ::edge	ask-01	ARG1	since	0.2.0	0.2	
# ::edge	much	domain	i	0.0.0	0.0	
# ::edge	tell-01	ARG1	year	0.1.0	0.1	
# ::edge	walk-01	ARG0	i	0	0.0	
# ::edge	walk-01	ARG1	year	0	0.1	
# ::edge	walk-01	time	since	0	0.2	
(w / walk-01 
      :ARG0 (i / i 
            :domain-of (m / much)) 
      :ARG1 (y / year 
            :ARG1-of (t / tell-01)) 
      :time (s / since 
            :ARG1-of (a / ask-01)))

# ::snt I have dyspraxia.
# ::tok I have dyspraxia .
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:04.209
# ::node	0	have-03	1-2
# ::node	0.0	i	0-1
# ::root	0	have-03
# ::edge	have-03	ARG0	i	0	0.0	
(h / have-03 
      :ARG0 (i / i))

# ::snt So maybe you are dyspraxic or have short tendons.
# ::tok So maybe you are dyspraxic or have short tendons .
# ::alignments 1-2|0.0.1.0 0-1|0.0.1 7-8|0.0.0 6-7|0.0 5-6|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:04.342
# ::node	0	or	5-6
# ::node	0.0	have-03	6-7
# ::node	0.0.0	short	7-8
# ::node	0.0.1	so	0-1
# ::node	0.0.1.0	possible	1-2
# ::root	0	or
# ::edge	have-03	ARG1	short	0.0	0.0.0	
# ::edge	have-03	ARG6	so	0.0	0.0.1	
# ::edge	or	op1	have-03	0	0.0	
# ::edge	possible	calendar	so	0.0.1.0	0.0.1	
(o / or 
      :op1 (h / have-03 
            :ARG1 (s2 / short) 
            :ARG6 (s / so 
                  :calendar-of (p / possible))))

# ::snt People who do dance/ gymnastics/ ballet etc have it drilled into them, to the point where I find it more comfortable now =P
# ::tok People who do dance / gymnastics / ballet etc have it drilled into them , to the point where I find it more comfortable now = P
# ::alignments 5-6|0.0.0.1 11-12|0.0 0-25|0.0.0.0.1+0.0.0.0 22-23|0.1.0.0 8-9|0.0.0.1.0.0 23-24|0.1.0 20-21|0.1 7-8|0.0.0.1.0 17-18|0 3-4|0.0.0 25-26|0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:05.206
# ::node	0	point	17-18
# ::node	0.0	drill-01	11-12
# ::node	0.0.0	dance-01	3-4
# ::node	0.0.0.0	date-entity	0-25
# ::node	0.0.0.0.0	x	25-26
# ::node	0.0.0.0.1	now	0-25
# ::node	0.0.0.1	gymnastics	5-6
# ::node	0.0.0.1.0	battle-01	7-8
# ::node	0.0.0.1.0.0	etc	8-9
# ::node	0.1	find-01	20-21
# ::node	0.1.0	comfortable	23-24
# ::node	0.1.0.0	more	22-23
# ::root	0	point
(p / point 
      :ARG2-of (d / drill-01 
            :ARG6 (d3 / dance-01 
                  :ARG1 (d2 / date-entity 
                        :calendar-of (x / x) 
                        :time (n / now)) 
                  :ARG6 (g / gymnastics 
                        :ARG1-of (b / battle-01 
                              :ARG6 (e / etc))))) 
      :ARG6-of (f / find-01 
            :ARG1 (c / comfortable 
                  :degree (m / more))))

# ::snt I wouldn't read too much into random "symptoms" like that
# ::tok I would n't read too much into random " symptoms " like that
# ::alignments 3-4|0 5-6|0.3 4-5|0.2 9-10|0.1 0-1|0.0 7-8|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:07.295
# ::node	0	read-01	3-4
# ::node	0.0	i	0-1
# ::node	0.1	symptom	9-10
# ::node	0.1.0	random	7-8
# ::node	0.2	too	4-5
# ::node	0.3	much	5-6
# ::root	0	read-01
# ::edge	read-01	ARG0	i	0	0.0	
# ::edge	read-01	ARG1	symptom	0	0.1	
# ::edge	read-01	ARG6	too	0	0.2	
# ::edge	read-01	degree	much	0	0.3	
# ::edge	symptom	mod	random	0.1	0.1.0	
(r / read-01 
      :ARG0 (i / i) 
      :ARG1 (s / symptom 
            :mod (r2 / random)) 
      :ARG6 (t / too) 
      :degree (m / much))

# ::snt hello, i am a 12 year old girl (13 in two days) who is addicted to self harming
# ::tok hello , i am a 12 year old girl ( 13 in two days ) who is addicted to self harming
# ::alignments 6-7|0.2.0.1.1 7-8|0.2.0.1.0 20-21|0.2.0.0 2-3|0.2 17-18|0.2.0 0-1|0.1+0.0+0 19-20|0.2.0.0.0 5-6|0.2.0.1.1.0 8-9|0.2.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:11.063
# ::node	0	say-01	0-1
# ::node	0.0	i	0-1
# ::node	0.1	hello	0-1
# ::node	0.2	i	2-3
# ::node	0.2.0	addict-01	17-18
# ::node	0.2.0.0	harm-01	20-21
# ::node	0.2.0.0.0	self	19-20
# ::node	0.2.0.1	girl	8-9
# ::node	0.2.0.1.0	old	7-8
# ::node	0.2.0.1.1	year	6-7
# ::node	0.2.0.1.1.0	12	5-6
# ::root	0	say-01
# ::edge	addict-01	ARG1	harm-01	0.2.0	0.2.0.0	
# ::edge	addict-01	ARG2	girl	0.2.0	0.2.0.1	
# ::edge	addict-01	ARG6	i	0.2.0	0.2	
# ::edge	girl	mod	old	0.2.0.1	0.2.0.1.0	
# ::edge	girl	mod	year	0.2.0.1	0.2.0.1.1	
# ::edge	harm-01	ARG1	self	0.2.0.0	0.2.0.0.0	
# ::edge	say-01	ARG0	i	0	0.0	
# ::edge	say-01	ARG1	hello	0	0.1	
# ::edge	say-01	ARG6	i	0	0.2	
# ::edge	year	quant	12	0.2.0.1.1	0.2.0.1.1.0	
(s / say-01 
      :ARG0 (i2 / i) 
      :ARG1 (h2 / hello) 
      :ARG6 (i / i 
            :ARG6-of (a / addict-01 
                  :ARG1 (h / harm-01 
                        :ARG1 (s2 / self)) 
                  :ARG2 (g / girl 
                        :mod (o / old) 
                        :mod (y / year 
                              :quant 12)))))

# ::snt i started when i was seven as i slit each firnger indevidually with sissors, and from that day i never stopped,
# ::tok i started when i was seven as i slit each firnger indevidually with sissors , and from that day i never stopped ,
# ::alignments 0-1|0.1.0 7-8|0.1.1 9-10|0.1.2 21-22|0.1 18-19|0.1.4 1-2|0.1.0.0 15-16|0 3-4|0.1.0.0.0 19-20|0.1.3 0-1|0.1.0.0.1 13-14|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:12.741
# ::node	0	and	15-16
# ::node	0.0	sissor	13-14
# ::node	0.1	stop-01	21-22
# ::node	0.1.0	1	0-1
# ::node	0.1.0.0	start-01	1-2
# ::node	0.1.0.0.0	i	3-4
# ::node	0.1.0.0.1	i	0-1
# ::node	0.1.1	i	7-8
# ::node	0.1.2	each	9-10
# ::node	0.1.3	i	19-20
# ::node	0.1.4	day	18-19
# ::root	0	and
# ::edge	and	op1	sissor	0	0.0	
# ::edge	and	op2	stop-01	0	0.1	
# ::edge	start-01	ARG0	i	0.1.0.0	0.1.0.0.0	
# ::edge	start-01	manner	1	0.1.0.0	0.1.0	
# ::edge	start-01	manner	i	0.1.0.0	0.1.0.0.1	
# ::edge	stop-01	ARG0	1	0.1	0.1.0	
# ::edge	stop-01	ARG1	i	0.1	0.1.1	
# ::edge	stop-01	ARG2	each	0.1	0.1.2	
# ::edge	stop-01	ARG6	i	0.1	0.1.3	
# ::edge	stop-01	time	day	0.1	0.1.4	
(a / and 
      :op1 (s3 / sissor) 
      :op2 (s / stop-01 
            :ARG0 (1 / 1 
                  :manner-of (s2 / start-01 
                        :ARG0 (i2 / i) 
                        :manner (i4 / i))) 
            :ARG1 (i / i) 
            :ARG2 (e / each) 
            :ARG6 (i3 / i) 
            :time (d / day)))

# ::snt it has got worse as i have a scar on my leg as i slit in my ex boyfriends name with stables,as i wont stop cutting unless i bleed,
# ::tok it has got worse as i have a scar on my leg as i slit in my ex boyfriends name with stables , as i wont stop cutting unless i bleed ,
# ::alignments 21-22|0.0 13-14|0.0.1.0.0.0 29-30|0.0.1.0.0.1 8-9|0.0.0 11-12|0.0.0.0 3-4|0.0.0.1.2.1 6-7|0.0.0.1 5-6|0.0.0.1.1 0-1|0.0.0.1.2.0 19-20|0 2-3|0.0.0.1.2 30-31|0.0.1.0.0 26-27|0.0.1 27-28|0.0.1.0 24-25|0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:13.980
# ::node	0	name-01	19-20
# ::node	0.0	stable	21-22
# ::node	0.0.0	scar-01	8-9
# ::node	0.0.0.0	leg	11-12
# ::node	0.0.0.1	have-03	6-7
# ::node	0.0.0.1.0	i	24-25
# ::node	0.0.0.1.1	i	5-6
# ::node	0.0.0.1.2	get-03	2-3
# ::node	0.0.0.1.2.0	it	0-1
# ::node	0.0.0.1.2.1	more	3-4
# ::node	0.0.1	stop-01	26-27
# ::node	0.0.1.0	cut-01	27-28
# ::node	0.0.1.0.0	bleed-01	30-31
# ::node	0.0.1.0.0.0	i	13-14
# ::node	0.0.1.0.0.1	i	29-30
# ::root	0	name-01
# ::edge	bleed-01	ARG0	i	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	bleed-01	ARG1	i	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	cut-01	time	bleed-01	0.0.1.0	0.0.1.0.0	
# ::edge	get-03	ARG0	it	0.0.0.1.2	0.0.0.1.2.0	
# ::edge	get-03	ARG1	more	0.0.0.1.2	0.0.0.1.2.1	
# ::edge	get-03	condition	have-03	0.0.0.1.2	0.0.0.1	
# ::edge	have-03	ARG0	i	0.0.0.1	0.0.0.1.0	
# ::edge	have-03	ARG1	scar-01	0.0.0.1	0.0.0	
# ::edge	have-03	ARG6	i	0.0.0.1	0.0.0.1.1	
# ::edge	name-01	ARG1	stable	0	0.0	
# ::edge	scar-01	ARG0	stable	0.0.0	0.0	
# ::edge	scar-01	ARG1	leg	0.0.0	0.0.0.0	
# ::edge	stop-01	ARG0	stable	0.0.1	0.0	
# ::edge	stop-01	ARG1	cut-01	0.0.1	0.0.1.0	
(n / name-01 
      :ARG1 (s / stable 
            :ARG0-of (s2 / scar-01 
                  :ARG1 (l / leg) 
                  :ARG1-of (h / have-03 
                        :ARG0 (i5 / i) 
                        :ARG6 (i3 / i) 
                        :condition-of (g / get-03 
                              :ARG0 (i4 / it) 
                              :ARG1 (m / more)))) 
            :ARG0-of (s3 / stop-01 
                  :ARG1 (c / cut-01 
                        :time (b / bleed-01 
                              :ARG0 (i / i) 
                              :ARG1 (i2 / i))))))

# ::snt i have sevral slits on my arm,
# ::tok i have sevral slits on my arm ,
# ::alignments 1-2|0 6-7|0.2 2-3|0.0 0-1|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:14.152
# ::node	0	have-03	1-2
# ::node	0.0	sevral	2-3
# ::node	0.1	i	0-1
# ::node	0.2	arm	6-7
# ::root	0	have-03
# ::edge	have-03	ARG1	sevral	0	0.0	
# ::edge	have-03	ARG6	i	0	0.1	
# ::edge	have-03	location	arm	0	0.2	
(h / have-03 
      :ARG1 (s / sevral) 
      :ARG6 (i / i) 
      :location (a / arm))

# ::snt they healed, then i cut myself with staples i robbed from school and a razor.
# ::tok they healed , then i cut myself with staples i robbed from school and a razor .
# ::alignments 4-5|0.1.1 8-9|0.1.0.0.0.0 13-14|0.1.0 9-10|0.1.0.0.0 0-1|0.0 15-16|0.1.0.2 1-2|0 12-13|0.1.0.1 10-11|0.1.0.0 5-6|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:14.522
# ::node	0	heal-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	cut-05	5-6
# ::node	0.1.0	and	13-14
# ::node	0.1.0.0	rob-01	10-11
# ::node	0.1.0.0.0	i	9-10
# ::node	0.1.0.0.0.0	staple	8-9
# ::node	0.1.0.1	school	12-13
# ::node	0.1.0.2	razor	15-16
# ::node	0.1.1	i	4-5
# ::root	0	heal-01
# ::edge	and	op1	school	0.1.0	0.1.0.1	
# ::edge	and	op2	razor	0.1.0	0.1.0.2	
# ::edge	cut-05	ARG0	and	0.1	0.1.0	
# ::edge	cut-05	ARG6	i	0.1	0.1.1	
# ::edge	heal-01	ARG0	they	0	0.0	
# ::edge	heal-01	ARG1	cut-05	0	0.1	
# ::edge	i	calendar	staple	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	rob-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	rob-01	ARG6	i	0.1.0.0	0.1.0.0.0	
(h / heal-01 
      :ARG0 (t / they) 
      :ARG1 (c / cut-05 
            :ARG0 (a / and 
                  :ARG1-of (r2 / rob-01 
                        :ARG6 (i2 / i 
                              :calendar (s / staple))) 
                  :op1 (s2 / school) 
                  :op2 (r / razor)) 
            :ARG6 (i / i)))

# ::snt when i cant find anything to cut with i take around 5 paracetmols and other drugs and i take them with larger and vodka.
# ::tok when i cant find anything to cut with i take around 5 paracetmols and other drugs and i take them with larger and vodka .
# ::alignments 22-23|0.1.0 18-19|0.3 16-17|0 1-2|0.0.0 17-18|0.3.1 14-15|0.2.0 9-10|0.1 3-4|0.0 0-1|0.0.2 21-22|0.3.0.1+0.3.0 6-7|0.0.1 13-14|0.1.2 12-13|0.1.1 8-9|0.0.1.0 15-16|0.2 23-24|0.3.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:15.287
# ::node	0	and	16-17
# ::node	0.0	find-01	3-4
# ::node	0.0.0	i	1-2
# ::node	0.0.1	cut-01	6-7
# ::node	0.0.1.0	i	8-9
# ::node	0.0.2	1	0-1
# ::node	0.1	take-01	9-10
# ::node	0.1.0	and	22-23
# ::node	0.1.1	paracetmol	12-13
# ::node	0.1.2	and	13-14
# ::node	0.2	drug	15-16
# ::node	0.2.0	other	14-15
# ::node	0.3	take-01	18-19
# ::node	0.3.0	large	21-22
# ::node	0.3.0.0	vodka	23-24
# ::node	0.3.0.1	more	21-22
# ::node	0.3.1	i	17-18
# ::root	0	and
# ::edge	and	condition	find-01	0	0.0	
# ::edge	and	op1	take-01	0	0.1	
# ::edge	and	op1	take-01	0.1.2	0.1	
# ::edge	and	op2	drug	0	0.2	
# ::edge	and	op3	take-01	0	0.3	
# ::edge	cut-01	ARG1	i	0.0.1	0.0.1.0	
# ::edge	drug	mod	other	0.2	0.2.0	
# ::edge	find-01	ARG0	i	0.0	0.0.0	
# ::edge	find-01	ARG1	cut-01	0.0	0.0.1	
# ::edge	find-01	ARG6	1	0.0	0.0.2	
# ::edge	large	calendar	vodka	0.3.0	0.3.0.0	
# ::edge	large	degree	more	0.3.0	0.3.0.1	
# ::edge	take-01	ARG0	and	0.1	0.1.0	
# ::edge	take-01	ARG1	large	0.3	0.3.0	
# ::edge	take-01	ARG1	paracetmol	0.1	0.1.1	
# ::edge	take-01	ARG6	i	0.3	0.3.1	
(a2 / and 
      :condition (f / find-01 
            :ARG0 (i / i) 
            :ARG1 (c / cut-01 
                  :ARG1 (i3 / i)) 
            :ARG6 1) 
      :op1 (t2 / take-01 
            :ARG0 (a / and) 
            :ARG1 (p / paracetmol) 
            :op-of (a3 / and)) 
      :op2 (d / drug 
            :mod (o / other)) 
      :op3 (t / take-01 
            :ARG1 (l / large 
                  :calendar (v / vodka) 
                  :degree (m / more)) 
            :ARG6 (i2 / i)))

# ::snt as im writing this i am really tempted to cut my arm or burn myslef,
# ::tok as im writing this i am really tempted to cut my arm or burn myslef ,
# ::alignments 12-13|0.1 9-10|0.1.0 4-5|0.1.0.1.0.1 1-2|0.1.0.1.0.0.1.0+0.1.0.1.0.0.1+0.1.0.1.0.0 11-12|0.1.0.0 0-1|0.1.0.1.0.0.0 6-7|0.1.0.1.1 2-3|0.1.0.1.0 3-4|0.0 7-8|0.1.0.1 13-14|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:15.873
# ::node	0	burn-01	13-14
# ::node	0.0	this	3-4
# ::node	0.1	or	12-13
# ::node	0.1.0	cut-01	9-10
# ::node	0.1.0.0	arm	11-12
# ::node	0.1.0.1	tempt-01	7-8
# ::node	0.1.0.1.0	write-01	2-3
# ::node	0.1.0.1.0.0	company	1-2
# ::node	0.1.0.1.0.0.0	ask-01	0-1
# ::node	0.1.0.1.0.0.1	name	1-2
# ::node	0.1.0.1.0.0.1.0	"IM"	1-2
# ::node	0.1.0.1.0.1	i	4-5
# ::node	0.1.0.1.1	really	6-7
# ::root	0	burn-01
# ::edge	ask-01	ARG6	company	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	burn-01	ARG1	this	0	0.0	
# ::edge	company	name	name	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	cut-01	ARG1	arm	0.1.0	0.1.0.0	
# ::edge	name	op1	"IM"	0.1.0.1.0.0.1	0.1.0.1.0.0.1.0	
# ::edge	or	op1	cut-01	0.1	0.1.0	
# ::edge	or	op2	burn-01	0.1	0	
# ::edge	tempt-01	ARG1	cut-01	0.1.0.1	0.1.0	
# ::edge	tempt-01	manner	really	0.1.0.1	0.1.0.1.1	
# ::edge	write-01	ARG0	company	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	write-01	ARG1	tempt-01	0.1.0.1.0	0.1.0.1	
# ::edge	write-01	ARG6	i	0.1.0.1.0	0.1.0.1.0.1	
(b / burn-01 
      :ARG1 (t / this) 
      :op-of (o / or 
            :op1 (c / cut-01 
                  :ARG1 (a / arm) 
                  :ARG1-of (t2 / tempt-01 
                        :ARG1-of (w / write-01 
                              :ARG0 (c2 / company 
                                    :ARG6-of (a2 / ask-01) 
                                    :name (n / name 
                                          :op1 "IM")) 
                              :ARG6 (i / i)) 
                        :manner (r / really)))))

# ::snt i am addicted,when ever one heals i cut again
# ::tok i am addicted , when ever one heals i cut again
# ::alignments 5-6|0.0.0.0.0 0-1|0.0.1 9-10|0.0.0 10-11|0.0.0.2 2-3|0.0 0-1|0 8-9|0.0.0.1 7-8|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:16.475
# ::node	0	i	0-1
# ::node	0.0	addict-01	2-3
# ::node	0.0.0	cut-01	9-10
# ::node	0.0.0.0	heal	7-8
# ::node	0.0.0.0.0	ever	5-6
# ::node	0.0.0.1	i	8-9
# ::node	0.0.0.2	again	10-11
# ::node	0.0.1	1	0-1
# ::root	0	i
(i / i 
      :time-of (a2 / addict-01 
            :condition (c / cut-01 
                  :ARG1 (h / heal 
                        :mod (e / ever)) 
                  :ARG6 (i2 / i) 
                  :mod (a / again)) 
            :time 1))

# ::snt it think about it everyday,
# ::tok it think about it everyday ,
# ::alignments 1-2|0 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:16.523
# ::node	0	think-01	1-2
# ::node	0.0	everyday	4-5
# ::root	0	think-01
# ::edge	think-01	ARG1	everyday	0	0.0	
(t / think-01 
      :ARG1 (e / everyday))

# ::snt i am 12 and i am already sick of my life.
# ::tok i am 12 and i am already sick of my life .
# ::alignments 0-1|0.0.2.0.0 3-4|0 4-5|0.0.0 1-2|0.0.2.0 6-7|0.0.3 10-11|0.0.1 0-1|0.0.2 7-8|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:16.881
# ::node	0	and	3-4
# ::node	0.0	stick-01	7-8
# ::node	0.0.0	i	4-5
# ::node	0.0.1	life	10-11
# ::node	0.0.2	i	0-1
# ::node	0.0.2.0	am	1-2
# ::node	0.0.2.0.0	1	0-1
# ::node	0.0.3	already	6-7
# ::root	0	and
(a / and 
      :ARG0-of (s / stick-01 
            :ARG1 (i / i) 
            :ARG2 (l / life) 
            :ARG6 (i2 / i 
                  :calendar (a2 / am 
                        :calendar-of 1)) 
            :mod (a3 / already)))

# ::snt the source of this is that; when i was 7 my dad left,and he doesnt want to know me anymore,
# ::tok the source of this is that ; when i was 7 my dad left , and he doesnt want to know me anymore ,
# ::alignments 0-1|0.0.2 13-14|0.0.1 12-13|0.0.1.0 18-19|0.1.0 20-21|0.1 3-4|0.0.0 22-23|0 1-2|0.0 8-9|0.0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:17.559
# ::node	0	have-part-91	22-23
# ::node	0.0	source-01	1-2
# ::node	0.0.0	this	3-4
# ::node	0.0.1	left-01	13-14
# ::node	0.0.1.0	dad	12-13
# ::node	0.0.1.1	i	8-9
# ::node	0.0.2	1	0-1
# ::node	0.1	know-01	20-21
# ::node	0.1.0	want-01	18-19
# ::root	0	have-part-91
# ::edge	have-part-91	ARG1	source-01	0	0.0	
# ::edge	know-01	ARG1	have-part-91	0.1	0	
# ::edge	left-01	ARG0	dad	0.0.1	0.0.1.0	
# ::edge	left-01	ARG1	source-01	0.0.1	0.0	
# ::edge	left-01	ARG6	i	0.0.1	0.0.1.1	
# ::edge	source-01	ARG1	this	0.0	0.0.0	
# ::edge	source-01	ARG6	1	0.0	0.0.2	
# ::edge	want-01	ARG1	know-01	0.1.0	0.1	
(h / have-part-91 
      :ARG1 (s / source-01 
            :ARG1 (t / this) 
            :ARG1-of (l / left-01 
                  :ARG0 (d / dad) 
                  :ARG6 (i / i)) 
            :ARG6 1) 
      :ARG1-of (k / know-01 
            :ARG1-of (w / want-01)))

# ::snt he just cares about his new little girl and wife,his new life, where im not wanted.
# ::tok he just cares about his new little girl and wife , his new life , where im not wanted .
# ::alignments 7-8|0.1 9-10|0.1.2.0 16-17|0.1.2.1.0.0.0.0.0+0.1.2.1.0.0.0.0+0.1.2.1.0.0.0 6-7|0.1.0 0-1|0.0 1-2|0.2 8-9|0.1.2 5-6|0.1.1 2-3|0 12-13|0.1.2.1 18-19|0.1.2.1.0.0 13-14|0.1.2.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:17.986
# ::node	0	care-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	girl	7-8
# ::node	0.1.0	little	6-7
# ::node	0.1.1	new	5-6
# ::node	0.1.2	and	8-9
# ::node	0.1.2.0	wife	9-10
# ::node	0.1.2.1	new	12-13
# ::node	0.1.2.1.0	life	13-14
# ::node	0.1.2.1.0.0	want-01	18-19
# ::node	0.1.2.1.0.0.0	company	16-17
# ::node	0.1.2.1.0.0.0.0	name	16-17
# ::node	0.1.2.1.0.0.0.0.0	"IM"	16-17
# ::node	0.2	just	1-2
# ::root	0	care-01
# ::edge	and	op1	girl	0.1.2	0.1	
# ::edge	and	op2	wife	0.1.2	0.1.2.0	
# ::edge	and	op3	new	0.1.2	0.1.2.1	
# ::edge	care-01	ARG0	he	0	0.0	
# ::edge	care-01	ARG1	girl	0	0.1	
# ::edge	care-01	ARG6	just	0	0.2	
# ::edge	company	name	name	0.1.2.1.0.0.0	0.1.2.1.0.0.0.0	
# ::edge	girl	degree	little	0.1	0.1.0	
# ::edge	girl	mod	new	0.1	0.1.1	
# ::edge	life	mod	new	0.1.2.1.0	0.1.2.1	
# ::edge	name	op1	"IM"	0.1.2.1.0.0.0.0	0.1.2.1.0.0.0.0.0	
# ::edge	want-01	ARG0	company	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	want-01	ARG1	life	0.1.2.1.0.0	0.1.2.1.0	
(c2 / care-01 
      :ARG0 (h / he) 
      :ARG1 (g / girl 
            :degree (l / little) 
            :mod (n2 / new) 
            :op-of (a / and 
                  :op1 (w / wife) 
                  :op2 (n3 / new 
                        :mod-of (l2 / life 
                              :ARG1-of (w2 / want-01 
                                    :ARG0 (c / company 
                                          :name (n / name 
                                                :op1 "IM"))))))) 
      :ARG6 (j / just))

# ::snt my best mate died when i was 10
# ::tok my best mate died when i was 10
# ::alignments 5-6|0.2 1-2|0.0.0+0.0 3-4|0 7-8|0.1.0.0+0.1.0+0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:18.180
# ::node	0	die-01	3-4
# ::node	0.0	good	1-2
# ::node	0.0.0	most	1-2
# ::node	0.1	ethnic-group	7-8
# ::node	0.1.0	name	7-8
# ::node	0.1.0.0	"Kurd"	7-8
# ::node	0.2	i	5-6
# ::root	0	die-01
# ::edge	die-01	ARG0	good	0	0.0	
# ::edge	die-01	ARG1	ethnic-group	0	0.1	
# ::edge	die-01	ARG6	i	0	0.2	
# ::edge	ethnic-group	name	name	0.1	0.1.0	
# ::edge	good	degree	most	0.0	0.0.0	
# ::edge	name	op1	"Kurd"	0.1.0	0.1.0.0	
(d / die-01 
      :ARG0 (g / good 
            :degree (m / most)) 
      :ARG1 (e / ethnic-group 
            :name (n / name 
                  :op1 "Kurd")) 
      :ARG6 (i / i))

# ::snt i had a reltionship with a boy who is 16 and i am forbidden to speak to him because of what happend and the age diffrience
# ::tok i had a reltionship with a boy who is 16 and i am forbidden to speak to him because of what happend and the age diffrience
# ::alignments 0-1|0.0.0.0.0.0.1 21-22|0.1 22-23|0 13-14|0.0.0.0 3-4|0.0.0.0.0.0 6-7|0.0.0.0.0 15-16|0.0.0.0.1 10-11|0.0 11-12|0.0.0 24-25|0.0.0.0.1.0 0-1|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:20.680
# ::node	0	and	22-23
# ::node	0.0	and	10-11
# ::node	0.0.0	i	11-12
# ::node	0.0.0.0	forbid-01	13-14
# ::node	0.0.0.0.0	boy	6-7
# ::node	0.0.0.0.0.0	relish-01	3-4
# ::node	0.0.0.0.0.0.0	i	0-1
# ::node	0.0.0.0.0.0.1	1	0-1
# ::node	0.0.0.0.1	speak-01	15-16
# ::node	0.0.0.0.1.0	age	24-25
# ::node	0.1	happend-01	21-22
# ::root	0	and
# ::edge	1	op1	relish-01	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	and	op1	and	0	0.0	
# ::edge	and	op2	happend-01	0	0.1	
# ::edge	forbid-01	ARG0	boy	0.0.0.0	0.0.0.0.0	
# ::edge	forbid-01	ARG1	speak-01	0.0.0.0	0.0.0.0.1	
# ::edge	forbid-01	ARG6	i	0.0.0.0	0.0.0	
# ::edge	i	calendar	and	0.0.0	0.0	
# ::edge	i	op1	relish-01	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	relish-01	ARG1	boy	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	speak-01	ARG1	age	0.0.0.0.1	0.0.0.0.1.0	
(a / and 
      :op1 (a2 / and 
            :calendar-of (i / i 
                  :ARG6-of (f / forbid-01 
                        :ARG0 (b / boy 
                              :ARG1-of (r / relish-01 
                                    :op-of (i2 / i) 
                                    :op-of 1)) 
                        :ARG1 (s / speak-01 
                              :ARG1 (a3 / age))))) 
      :op2 (h / happend-01))

# ::snt also my mum suffers from bi polar and i have depression
# ::tok also my mum suffers from bi polar and i have depression
# ::alignments 9-10|0.1 3-4|0.0 10-11|0.1.0.0+0.1.0 7-8|0 0-1|0.0.0 8-9|0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:20.862
# ::node	0	and	7-8
# ::node	0.0	suffer-01	3-4
# ::node	0.0.0	also	0-1
# ::node	0.1	have-03	9-10
# ::node	0.1.0	depression	10-11
# ::node	0.1.0.0	mean-01	10-11
# ::node	0.1.0.0.0	i	8-9
# ::root	0	and
# ::edge	and	op1	have-03	0	0.1	
# ::edge	have-03	ARG1	depression	0.1	0.1.0	
# ::edge	mean-01	ARG0	depression	0.1.0.0	0.1.0	
# ::edge	mean-01	ARG1	i	0.1.0.0	0.1.0.0.0	
# ::edge	suffer-01	ARG1	and	0.0	0	
# ::edge	suffer-01	mod	also	0.0	0.0.0	
(a / and 
      :ARG1-of (s / suffer-01 
            :mod (a2 / also)) 
      :op1 (h / have-03 
            :ARG1 (d / depression 
                  :ARG0-of (m / mean-01 
                        :ARG1 (i / i)))))

# ::snt i dont what to stop,
# ::tok i dont what to stop ,
# ::alignments 4-5|0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:20.928
# ::node	0	i	0-1
# ::node	0.0	stop-01	4-5
# ::node	0.1	-	1-2
# ::root	0	i
# ::edge	i	calendar	-	0	0.1	
# ::edge	stop-01	ARG1	i	0.0	0	
(i / i 
      :ARG1-of (s / stop-01) 
      :calendar (- / -))

# ::snt i dont care what i do to myself,i want to do it again and again to tourture myslef,i hate me.
# ::tok i dont care what i do to myself , i want to do it again and again to tourture myslef , i hate me .
# ::alignments 7-8|0.1.1.2.0 23-24|0.2 2-3|0.1 10-11|0.1.1 15-16|0.1.1.0 22-23|0 12-13|0.1.1.0.0 0-1|0.1.0.0 14-15|0.1.1.0.0.0 21-22|0.0 1-2|0.1.0 4-5|0.1.1.2.1 5-6|0.1.1.2 9-10|0.1.1.1 16-17|0.1.1.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:23.084
# ::node	0	hate-01	22-23
# ::node	0.0	i	21-22
# ::node	0.1	care-01	2-3
# ::node	0.1.0	-	1-2
# ::node	0.1.0.0	i	0-1
# ::node	0.1.1	want-01	10-11
# ::node	0.1.1.0	and	15-16
# ::node	0.1.1.0.0	do-02	12-13
# ::node	0.1.1.0.0.0	again	14-15
# ::node	0.1.1.0.0.1	again	16-17
# ::node	0.1.1.1	i	9-10
# ::node	0.1.1.2	do-02	5-6
# ::node	0.1.1.2.0	myself	7-8
# ::node	0.1.1.2.1	i	4-5
# ::node	0.2	i	23-24
# ::root	0	hate-01
# ::edge	-	mod	i	0.1.0	0.1.0.0	
# ::edge	and	op1	do-02	0.1.1.0	0.1.1.0.0	
# ::edge	care-01	ARG0	-	0.1	0.1.0	
# ::edge	care-01	ARG1	want-01	0.1	0.1.1	
# ::edge	do-02	ARG1	again	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	do-02	ARG1	myself	0.1.1.2	0.1.1.2.0	
# ::edge	do-02	ARG6	again	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	do-02	ARG6	i	0.1.1.2	0.1.1.2.1	
# ::edge	hate-01	ARG0	i	0	0.0	
# ::edge	hate-01	ARG1	care-01	0	0.1	
# ::edge	hate-01	ARG6	i	0	0.2	
# ::edge	want-01	ARG1	and	0.1.1	0.1.1.0	
# ::edge	want-01	ARG6	i	0.1.1	0.1.1.1	
# ::edge	want-01	purpose	do-02	0.1.1	0.1.1.2	
(h / hate-01 
      :ARG0 (i3 / i) 
      :ARG1 (c / care-01 
            :ARG0 (- / - 
                  :mod (i2 / i)) 
            :ARG1 (w / want-01 
                  :ARG1 (a / and 
                        :op1 (d / do-02 
                              :ARG1 (a2 / again) 
                              :ARG6 (a3 / again))) 
                  :ARG6 (i5 / i) 
                  :purpose (d2 / do-02 
                        :ARG1 (m / myself) 
                        :ARG6 (i4 / i)))) 
      :ARG6 (i / i))

# ::snt however,my best mate,i love him,loads,he means the world to me and if i do anything then he will,
# ::tok however , my best mate , i love him , loads , he means the world to me and if i do anything then he will ,
# ::alignments 3-4|0.0.0.0.0+0.0.0.0 13-14|0.1 23-24|0.1.2.0 17-18|0.2 0-1|0.1.0.0.0+0.1.0.0+0.1.0 6-7|0.0.1 10-11|0.0.0 21-22|0.1.2 20-21|0.1.2.2 22-23|0.1.2.1 7-8|0.0 18-19|0 15-16|0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:24.189
# ::node	0	and	18-19
# ::node	0.0	love-01	7-8
# ::node	0.0.0	load-01	10-11
# ::node	0.0.0.0	good	3-4
# ::node	0.0.0.0.0	most	3-4
# ::node	0.0.1	i	6-7
# ::node	0.1	mean-01	13-14
# ::node	0.1.0	country	0-1
# ::node	0.1.0.0	name	0-1
# ::node	0.1.0.0.0	"Russia"	0-1
# ::node	0.1.1	world	15-16
# ::node	0.1.2	do-02	21-22
# ::node	0.1.2.0	then	23-24
# ::node	0.1.2.1	anything	22-23
# ::node	0.1.2.2	i	20-21
# ::node	0.2	i	17-18
# ::root	0	and
# ::edge	and	op1	love-01	0	0.0	
# ::edge	and	op2	mean-01	0	0.1	
# ::edge	and	op3	i	0	0.2	
# ::edge	country	name	name	0.1.0	0.1.0.0	
# ::edge	do-02	ARG0	then	0.1.2	0.1.2.0	
# ::edge	do-02	ARG1	anything	0.1.2	0.1.2.1	
# ::edge	do-02	ARG2	i	0.1.2	0.1.2.2	
# ::edge	good	degree	most	0.0.0.0	0.0.0.0.0	
# ::edge	load-01	ARG1	good	0.0.0	0.0.0.0	
# ::edge	love-01	ARG1	load-01	0.0	0.0.0	
# ::edge	love-01	manner	i	0.0	0.0.1	
# ::edge	mean-01	ARG0	country	0.1	0.1.0	
# ::edge	mean-01	ARG1	world	0.1	0.1.1	
# ::edge	mean-01	ARG6	do-02	0.1	0.1.2	
# ::edge	name	op1	"Russia"	0.1.0.0	0.1.0.0.0	
(a2 / and 
      :op1 (l2 / love-01 
            :ARG1 (l / load-01 
                  :ARG1 (g / good 
                        :degree (m / most))) 
            :manner (i2 / i)) 
      :op2 (m2 / mean-01 
            :ARG0 (c / country 
                  :name (n / name 
                        :op1 "Russia")) 
            :ARG1 (w / world) 
            :ARG6 (d / do-02 
                  :ARG0 (t / then) 
                  :ARG1 (a / anything) 
                  :ARG2 (i3 / i))) 
      :op3 (i / i))

# ::snt i dont tell him but he finds out,
# ::tok i dont tell him but he finds out ,
# ::alignments 4-5|0.0 1-2|0.0.0.0 3-4|0.0.0.2 2-3|0.0.0 6-7|0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:24.371
# ::node	0	find-02	6-7
# ::node	0.0	bunt-01	4-5
# ::node	0.0.0	tell-01	2-3
# ::node	0.0.0.0	-	1-2
# ::node	0.0.0.1	i	0-1
# ::node	0.0.0.2	hew-01	3-4
# ::root	0	find-02
# ::edge	bunt-01	ARG1	tell-01	0.0	0.0.0	
# ::edge	find-02	ARG1	bunt-01	0	0.0	
# ::edge	hew-01	ARG1	tell-01	0.0.0.2	0.0.0	
# ::edge	tell-01	ARG0	-	0.0.0	0.0.0.0	
# ::edge	tell-01	ARG1	i	0.0.0	0.0.0.1	
(f / find-02 
      :ARG1 (b / bunt-01 
            :ARG1 (t / tell-01 
                  :ARG0 (- / -) 
                  :ARG1 (i / i) 
                  :ARG1-of (h / hew-01))))

# ::snt i dont want to hurt him,i dont want him to hurt himself
# ::tok i dont want to hurt him , i dont want him to hurt himself
# ::alignments 9-10|0 1-2|0.2.0.0 4-5|0.2.0.1 12-13|0.1 7-8|0.2.0.1.0 2-3|0.2.0 8-9|0.0 0-1|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:24.559
# ::node	0	want-01	9-10
# ::node	0.0	-	8-9
# ::node	0.1	hurt-01	12-13
# ::node	0.2	i	0-1
# ::node	0.2.0	want-01	2-3
# ::node	0.2.0.0	-	1-2
# ::node	0.2.0.1	hurt-01	4-5
# ::node	0.2.0.1.0	i	7-8
# ::root	0	want-01
# ::edge	hurt-01	ARG1	i	0.2.0.1	0.2.0.1.0	
# ::edge	i	op1	want-01	0.2	0.2.0	
# ::edge	want-01	ARG0	-	0	0.0	
# ::edge	want-01	ARG0	-	0.2.0	0.2.0.0	
# ::edge	want-01	ARG1	hurt-01	0	0.1	
# ::edge	want-01	ARG1	hurt-01	0.2.0	0.2.0.1	
# ::edge	want-01	time	i	0	0.2	
(w / want-01 
      :ARG0 (-2 / -) 
      :ARG1 (h2 / hurt-01) 
      :time (i2 / i 
            :op1 (w2 / want-01 
                  :ARG0 (- / -) 
                  :ARG1 (h / hurt-01 
                        :ARG1 (i / i)))))

# ::snt what do i do
# ::tok what do i do
# ::alignments 2-3|0.0 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:24.587
# ::node	0	do-02	3-4
# ::node	0.0	i	2-3
# ::root	0	do-02
# ::edge	do-02	ARG1	i	0	0.0	
(d / do-02 
      :ARG1 (i / i))

# ::snt thanks you for reading
# ::tok thanks you for reading
# ::alignments 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:24.627
# ::node	0	thank-01	0-1
# ::node	0.0	read-01	3-4
# ::root	0	thank-01
# ::edge	thank-01	ARG1	read-01	0	0.0	
(t / thank-01 
      :ARG1 (r / read-01))

# ::snt Are you on any drugs or getting any therapy?
# ::tok Are you on any drugs or getting any therapy ?
# ::alignments 7-8|0.1.0.1 1-2|0.1.1 3-4|0.1.0.0 4-5|0.0 5-6|0 6-7|0.1 8-9|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:24.911
# ::node	0	or	5-6
# ::node	0.0	drug	4-5
# ::node	0.1	get-01	6-7
# ::node	0.1.0	teeter-01	8-9
# ::node	0.1.0.0	any	3-4
# ::node	0.1.0.1	any	7-8
# ::node	0.1.1	you	1-2
# ::root	0	or
# ::edge	get-01	ARG1	teeter-01	0.1	0.1.0	
# ::edge	get-01	ARG6	you	0.1	0.1.1	
# ::edge	or	op1	drug	0	0.0	
# ::edge	or	op2	get-01	0	0.1	
# ::edge	teeter-01	ARG1	any	0.1.0	0.1.0.0	
# ::edge	teeter-01	mod	any	0.1.0	0.1.0.1	
(o / or 
      :op1 (d / drug) 
      :op2 (g / get-01 
            :ARG1 (t / teeter-01 
                  :ARG1 (a2 / any) 
                  :mod (a / any)) 
            :ARG6 (y / you)))

# ::snt It might be an idea to talk to your school nurse or your GP and tell them what's going on.
# ::tok It might be an idea to talk to your school nurse or your GP and tell them what 's going on .
# ::alignments 0-1|0.0.1.0.0.0 6-7|0.0 14-15|0.0.1 15-16|0.0.1.0 9-10|0.0.0.0.0 10-11|0.0.0.0+0.0.0 11-12|0.0.0.1 4-5|0 19-20|0.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:25.518
# ::node	0	idea	4-5
# ::node	0.0	talk-01	6-7
# ::node	0.0.0	person	10-11
# ::node	0.0.0.0	nurse-01	10-11
# ::node	0.0.0.0.0	school	9-10
# ::node	0.0.0.1	or	11-12
# ::node	0.0.1	and	14-15
# ::node	0.0.1.0	tell-01	15-16
# ::node	0.0.1.0.0	go-15	19-20
# ::node	0.0.1.0.0.0	it	0-1
# ::root	0	idea
(i2 / idea 
      :ARG1-of (t / talk-01 
            :ARG2 (p / person 
                  :ARG0-of (n / nurse-01 
                        :ARG1 (s / school)) 
                  :op-of (o / or)) 
            :op-of (a / and 
                  :op1 (t2 / tell-01 
                        :ARG1 (g / go-15 
                              :ARG1 (i / it))))))

# ::snt Perhaps there's a teacher at school who you trust and could tell.
# ::tok Perhaps there 's a teacher at school who you trust and could tell .
# ::alignments 12-13|0.0.2 0-1|0 10-11|0.0 4-5|0.0.2.0 8-9|0.0.0.0 11-12|0.0.1 6-7|0.0.0.1 9-10|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:25.840
# ::node	0	possible	0-1
# ::node	0.0	and	10-11
# ::node	0.0.0	trust-02	9-10
# ::node	0.0.0.0	you	8-9
# ::node	0.0.0.1	school	6-7
# ::node	0.0.1	possible	11-12
# ::node	0.0.2	tell-01	12-13
# ::node	0.0.2.0	teacher	4-5
# ::root	0	possible
(p / possible 
      :op-of (a / and 
            :op1 (t3 / trust-02 
                  :ARG0 (y / you) 
                  :ARG1 (s / school)) 
            :op2 (p2 / possible) 
            :op3 (t / tell-01 
                  :ARG1 (t2 / teacher))))

# ::snt If you tell people they can help you,
# ::tok If you tell people they can help you ,
# ::alignments 5-6|0.1.1 7-8|0.1.0 2-3|0 1-2|0.0 6-7|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:25.936
# ::node	0	tell-01	2-3
# ::node	0.0	you	1-2
# ::node	0.1	help-01	6-7
# ::node	0.1.0	you	7-8
# ::node	0.1.1	possible	5-6
# ::root	0	tell-01
# ::edge	help-01	ARG1	you	0.1	0.1.0	
# ::edge	possible	domain	help-01	0.1.1	0.1	
# ::edge	tell-01	ARG0	you	0	0.0	
# ::edge	tell-01	ARG1	help-01	0	0.1	
(t / tell-01 
      :ARG0 (y2 / you) 
      :ARG1 (h / help-01 
            :ARG1 (y / you) 
            :domain-of (p / possible)))

# ::snt if you keep it bottled up inside it's likely to only get worse.
# ::tok if you keep it bottled up inside it 's likely to only get worse .
# ::alignments 13-14|0.0.1 1-2|0.2.0 4-5|0.2.1 12-13|0.0 7-8|0.1 2-3|0.2 9-10|0 6-7|0.2.1.0 11-12|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:26.317
# ::node	0	likely	9-10
# ::node	0.0	get-03	12-13
# ::node	0.0.0	only	11-12
# ::node	0.0.1	more	13-14
# ::node	0.1	country	7-8
# ::node	0.2	keep-02	2-3
# ::node	0.2.0	you	1-2
# ::node	0.2.1	bottle-01	4-5
# ::node	0.2.1.0	inside	6-7
# ::root	0	likely
# ::edge	bottle-01	ARG1	inside	0.2.1	0.2.1.0	
# ::edge	get-03	ARG0	only	0.0	0.0.0	
# ::edge	get-03	ARG1	likely	0.0	0	
# ::edge	get-03	ARG6	more	0.0	0.0.1	
# ::edge	keep-02	ARG0	you	0.2	0.2.0	
# ::edge	keep-02	ARG1	bottle-01	0.2	0.2.1	
# ::edge	likely	domain	country	0	0.1	
# ::edge	likely	time	keep-02	0	0.2	
(l / likely 
      :ARG1-of (g / get-03 
            :ARG0 (o / only) 
            :ARG6 (m / more)) 
      :domain (c / country) 
      :time (k / keep-02 
            :ARG0 (y / you) 
            :ARG1 (b / bottle-01 
                  :ARG1 (i / inside))))

# ::snt Trust me, it's better to get these things as early as possible rather than let them get even worse.
# ::tok Trust me , it 's better to get these things as early as possible rather than let them get even worse .
# ::alignments 8-9|0.0.0.1.1 3-4|0.0.0.0 5-6|0.0.0.3.0+0.0.0.3 13-14|0 7-8|0.0.0 11-12|0.0 0-1|0.0.0.3.1 20-21|0.0.0.1.0.1.0 18-19|0.0.0.1.0.1 10-11|0.0.0.2 9-10|0.0.0.1 16-17|0.0.0.1.0 19-20|0.0.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:27.070
# ::node	0	possible	13-14
# ::node	0.0	early	11-12
# ::node	0.0.0	get-01	7-8
# ::node	0.0.0.0	country	3-4
# ::node	0.0.0.1	thing	9-10
# ::node	0.0.0.1.0	let-01	16-17
# ::node	0.0.0.1.0.0	even-if	19-20
# ::node	0.0.0.1.0.1	get-01	18-19
# ::node	0.0.0.1.0.1.0	more	20-21
# ::node	0.0.0.1.1	this	8-9
# ::node	0.0.0.2	as-well	10-11
# ::node	0.0.0.3	good	5-6
# ::node	0.0.0.3.0	more	5-6
# ::node	0.0.0.3.1	country	0-1
# ::root	0	possible
(p / possible 
      :degree-of (e / early 
            :manner-of (g2 / get-01 
                  :ARG0 (c / country) 
                  :ARG1 (t2 / thing 
                        :ARG1-of (l / let-01 
                              :ARG0 (e2 / even-if) 
                              :ARG6 (g3 / get-01 
                                    :ARG1 (m2 / more))) 
                        :mod (t / this)) 
                  :ARG2 (a / as-well) 
                  :ARG6 (g / good 
                        :degree (m / more) 
                        :domain (c2 / country)))))

# ::snt Please don't do this,
# ::tok Please do n't do this ,
# ::alignments 3-4|0 0-1|0.0 4-5|0.1 1-2|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:27.165
# ::node	0	do-02	3-4
# ::node	0.0	please-01	0-1
# ::node	0.1	this	4-5
# ::node	0.2	do-01	1-2
# ::root	0	do-02
# ::edge	do-01	ARG1	do-02	0.2	0	
# ::edge	do-02	ARG0	please-01	0	0.0	
# ::edge	do-02	ARG1	this	0	0.1	
(d / do-02 
      :ARG0 (p / please-01) 
      :ARG1 (t / this) 
      :ARG1-of (d2 / do-01))

# ::snt I'm 17 I started self harming last year, mainly cutting my arms, but I have stopped since the last few months,
# ::tok I 'm 17 I started self harming last year , mainly cutting my arms , but I have stopped since the last few months ,
# ::alignments 23-24|0.0.0.1.1.0.1+0.0.0.1.1.0 0-8|0+0.0.1+0.0 18-19|0.0.0.1 4-5|0.0.0.0 0-1|0.0.0.0.0 10-11|0.0.0.1.0.1 0-1|0.0.0.0.2 11-12|0.0.0.1.0 15-16|0.0.0 19-20|0.0.0.1.1 21-22|0.0.0.1.1.0.1.0 6-7|0.0.0.0.1 13-14|0.0.0.1.0.0 5-6|0.0.0.0.1.0 22-23|0.0.0.1.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:29.305
# ::node	0	year	0-8
# ::node	0.0	date-entity	0-8
# ::node	0.0.0	bunt-01	15-16
# ::node	0.0.0.0	start-01	4-5
# ::node	0.0.0.0.0	i	0-1
# ::node	0.0.0.0.1	harm-01	6-7
# ::node	0.0.0.0.1.0	sight-01	5-6
# ::node	0.0.0.0.2	1	0-1
# ::node	0.0.0.1	stop-01	18-19
# ::node	0.0.0.1.0	cut-02	11-12
# ::node	0.0.0.1.0.0	arm	13-14
# ::node	0.0.0.1.0.1	main	10-11
# ::node	0.0.0.1.1	since	19-20
# ::node	0.0.0.1.1.0	temporal-quantity	23-24
# ::node	0.0.0.1.1.0.0	few	22-23
# ::node	0.0.0.1.1.0.1	month	23-24
# ::node	0.0.0.1.1.0.1.0	last	21-22
# ::node	0.0.1	last	0-8
# ::root	0	year
(y / year 
      :time-of (d / date-entity 
            :ARG0-of (b / bunt-01 
                  :ARG1 (s2 / start-01 
                        :ARG0 (i / i) 
                        :ARG1 (h / harm-01 
                              :ARG1 (s4 / sight-01)) 
                        :ARG6 1) 
                  :ARG2 (s / stop-01 
                        :ARG1 (c / cut-02 
                              :ARG1 (a / arm) 
                              :manner (m2 / main)) 
                        :time (s3 / since 
                              :op1 (t / temporal-quantity 
                                    :op-of (f / few) 
                                    :unit (m / month 
                                          :mod (l2 / last)))))) 
            :time (l / last)))

# ::snt its hard but you can do it.
# ::tok its hard but you can do it .
# ::alignments 1-2|0.0.0.0 2-3|0.0.0 5-6|0.0 4-5|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:29.396
# ::node	0	possible	4-5
# ::node	0.0	do-02	5-6
# ::node	0.0.0	bunt-01	2-3
# ::node	0.0.0.0	hard	1-2
# ::root	0	possible
# ::edge	bunt-01	ARG1	hard	0.0.0	0.0.0.0	
# ::edge	do-02	ARG1	bunt-01	0.0	0.0.0	
# ::edge	possible	domain	do-02	0	0.0	
(p / possible 
      :domain (d / do-02 
            :ARG1 (b / bunt-01 
                  :ARG1 (h / hard))))

# ::snt I feel so much happier, but seeing the scars is both a painful reminder of how I felt at that time, how strong my feelings were that I would want to do such a thing to myself!
# ::tok I feel so much happier , but seeing the scars is both a painful reminder of how I felt at that time , how strong my feelings were that I would want to do such a thing to myself !
# ::alignments 21-22|0.1.0.0 34-35|0.1.0.1.0.0.0.0 26-27|0.1.0.1 13-14|0.1.1 31-32|0.1.0.1.0 38-39|0.1.0.1.0.0.1 23-24|0.1.0.1.1.0 24-25|0.1.0.1.1 0-1|0.0 33-34|0.1.0.1.0.0 18-19|0.1.0 1-2|0 2-3|0.3 14-15|0.1 36-37|0.1.0.1.0.0.0 9-10|0.2.0.0 3-4|0.4 6-7|0.2 7-8|0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:31.000
# ::node	0	feel-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	remind-01	14-15
# ::node	0.1.0	felt-01	18-19
# ::node	0.1.0.0	time	21-22
# ::node	0.1.0.1	fling-01	26-27
# ::node	0.1.0.1.0	want-01	31-32
# ::node	0.1.0.1.0.0	do-02	33-34
# ::node	0.1.0.1.0.0.0	thing	36-37
# ::node	0.1.0.1.0.0.0.0	such	34-35
# ::node	0.1.0.1.0.0.1	myself	38-39
# ::node	0.1.0.1.1	strong	24-25
# ::node	0.1.0.1.1.0	thing	23-24
# ::node	0.1.1	painful	13-14
# ::node	0.2	bunt-01	6-7
# ::node	0.2.0	see-01	7-8
# ::node	0.2.0.0	scar	9-10
# ::node	0.3	sob-01	2-3
# ::node	0.4	much	3-4
# ::root	0	feel-01
# ::edge	bunt-01	ARG1	feel-01	0.2	0	
# ::edge	bunt-01	ARG2	see-01	0.2	0.2.0	
# ::edge	do-02	ARG1	thing	0.1.0.1.0.0	0.1.0.1.0.0.0	
# ::edge	do-02	ARG6	myself	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG1	remind-01	0	0.1	
# ::edge	feel-01	ARG6	much	0	0.4	
# ::edge	felt-01	ARG0	time	0.1.0	0.1.0.0	
# ::edge	felt-01	ARG1	fling-01	0.1.0	0.1.0.1	
# ::edge	fling-01	ARG1	strong	0.1.0.1	0.1.0.1.1	
# ::edge	remind-01	ARG1	felt-01	0.1	0.1.0	
# ::edge	remind-01	mod	painful	0.1	0.1.1	
# ::edge	see-01	ARG1	scar	0.2.0	0.2.0.0	
# ::edge	sob-01	ARG1	feel-01	0.3	0	
# ::edge	thing	calendar	strong	0.1.0.1.1.0	0.1.0.1.1	
# ::edge	thing	mod	such	0.1.0.1.0.0.0	0.1.0.1.0.0.0.0	
# ::edge	want-01	ARG0	fling-01	0.1.0.1.0	0.1.0.1	
# ::edge	want-01	ARG1	do-02	0.1.0.1.0	0.1.0.1.0.0	
(f3 / feel-01 
      :ARG0 (i / i) 
      :ARG1 (r / remind-01 
            :ARG1 (f2 / felt-01 
                  :ARG0 (t / time) 
                  :ARG1 (f / fling-01 
                        :ARG0-of (w / want-01 
                              :ARG1 (d / do-02 
                                    :ARG1 (t3 / thing 
                                          :mod (s / such)) 
                                    :ARG6 (m / myself))) 
                        :ARG1 (s2 / strong 
                              :calendar-of (t2 / thing)))) 
            :mod (p / painful)) 
      :ARG1-of (b / bunt-01 
            :ARG2 (s5 / see-01 
                  :ARG1 (s4 / scar))) 
      :ARG1-of (s3 / sob-01) 
      :ARG6 (m2 / much))

# ::snt And, also strength, you can do it, I found salvation in poetry writing and keeping a journal,
# ::tok And , also strength , you can do it , I found salvation in poetry writing and keeping a journal ,
# ::alignments 2-3|0.0.2.0 17-18|0.0.1.0.0 3-4|0.0.2 16-17|0.0.1.0 7-8|0.0 15-16|0.0.1 5-6|0.0.0 6-7|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:31.627
# ::node	0	possible	6-7
# ::node	0.0	do-02	7-8
# ::node	0.0.0	you	5-6
# ::node	0.0.1	write-01	15-16
# ::node	0.0.1.0	and	16-17
# ::node	0.0.1.0.0	keep-01	17-18
# ::node	0.0.2	strength	3-4
# ::node	0.0.2.0	also	2-3
# ::root	0	possible
# ::edge	and	op1	write-01	0.0.1.0	0.0.1	
# ::edge	and	op2	keep-01	0.0.1.0	0.0.1.0.0	
# ::edge	do-02	ARG0	you	0.0	0.0.0	
# ::edge	do-02	ARG6	strength	0.0	0.0.2	
# ::edge	possible	domain	do-02	0	0.0	
# ::edge	strength	calendar	also	0.0.2	0.0.2.0	
# ::edge	write-01	ARG1	do-02	0.0.1	0.0	
(p / possible 
      :domain (d / do-02 
            :ARG0 (y / you) 
            :ARG1-of (w / write-01 
                  :op-of (a2 / and 
                        :op1 (k / keep-01))) 
            :ARG6 (s / strength 
                  :calendar (a / also))))

# ::snt self harming is addictive, but you can overcome it,
# ::tok self harming is addictive , but you can overcome it ,
# ::alignments 7-8|0 6-7|0.0.0 5-6|0.0.1 8-9|0.0 1-2|0.0.1.0.0 3-4|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:31.949
# ::node	0	possible	7-8
# ::node	0.0	overcome-01	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.1	bunt-01	5-6
# ::node	0.0.1.0	addict-01	3-4
# ::node	0.0.1.0.0	harm-01	1-2
# ::root	0	possible
(p / possible 
      :mod-of (o / overcome-01 
            :ARG0 (y / you) 
            :ARG1-of (b / bunt-01 
                  :ARG6 (a / addict-01 
                        :ARG1 (h / harm-01)))))

# ::snt remember your self harming does not define who you are.
# ::tok remember your self harming does not define who you are .
# ::alignments 6-7|0 2-3|0.0.0.0 0-1|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:32.049
# ::node	0	define-01	6-7
# ::node	0.0	remember-01	0-1
# ::node	0.0.0	harm-01	3-4
# ::node	0.0.0.0	self	2-3
# ::root	0	define-01
# ::edge	define-01	ARG1	remember-01	0	0.0	
# ::edge	harm-01	ARG1	self	0.0.0	0.0.0.0	
# ::edge	remember-01	ARG1	harm-01	0.0	0.0.0	
(d / define-01 
      :ARG1 (r / remember-01 
            :ARG1 (h / harm-01 
                  :ARG1 (s / self))))

# ::snt You can overcome it.
# ::tok You can overcome it .
# ::alignments 1-2|0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:32.091
# ::node	0	possible	1-2
# ::node	0.0	overcome-01	2-3
# ::node	0.0.0	you	0-1
# ::root	0	possible
(p / possible 
      :mod-of (o / overcome-01 
            :ARG0 (y / you)))

# ::snt So I think Ive got a form of OCD because for the past year, I've found that everytime I go out, especially to Uni, I'm always checking my belongings to make sure I haven't lost or left anything.
# ::tok So I think Ive got a form of OCD because for the past year , I 've found that everytime I go out , especially to Uni , I 'm always checking my belongings to make sure I have n't lost or left anything .
# ::alignments 0-12|0.0.2.0+0.0.2.1+0.0.2.2+0.0.2 6-7|0.0.1.0.0 36-37|0.0.0.0 31-32|0 30-31|0.1 8-9|0.0.1.0.0.0 19-20|0.0.0.0.0.1.0.1 4-5|0.0.1.0 2-3|0.0.1 42-43|0.0.0.0.0.1 35-36|0.0.0 33-34|0.0 24-25|0.0.0.0.0.1.0.0 40-41|0.0.0.0.0.0 41-42|0.0.0.0.0 0-1|0.0.1.1 21-22|0.0.0.0.0.1.0 43-44|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:34.531
# ::node	0	check-01	31-32
# ::node	0.0	belongings	33-34
# ::node	0.0.0	make-04	35-36
# ::node	0.0.0.0	surge-01	36-37
# ::node	0.0.0.0.0	or	41-42
# ::node	0.0.0.0.0.0	lose-02	40-41
# ::node	0.0.0.0.0.0.0	anything	43-44
# ::node	0.0.0.0.0.1	left-01	42-43
# ::node	0.0.0.0.0.1.0	go-01	21-22
# ::node	0.0.0.0.0.1.0.0	especially	24-25
# ::node	0.0.0.0.0.1.0.1	everytime	19-20
# ::node	0.0.1	think-01	2-3
# ::node	0.0.1.0	get-01	4-5
# ::node	0.0.1.0.0	form	6-7
# ::node	0.0.1.0.0.0	or	8-9
# ::node	0.0.1.1	so	0-1
# ::node	0.0.2	date-entity	0-12
# ::node	0.0.2.0	year	0-12
# ::node	0.0.2.1	past	0-12
# ::node	0.0.2.2	the	0-12
# ::node	0.1	always	30-31
# ::root	0	check-01
# ::edge	belongings	domain	date-entity	0.0	0.0.2	
# ::edge	belongings	domain	think-01	0.0	0.0.1	
# ::edge	check-01	ARG1	belongings	0	0.0	
# ::edge	check-01	time	always	0	0.1	
# ::edge	date-entity	time	past	0.0.2	0.0.2.1	
# ::edge	date-entity	time	the	0.0.2	0.0.2.2	
# ::edge	date-entity	time	year	0.0.2	0.0.2.0	
# ::edge	everytime	calendar	go-01	0.0.0.0.0.1.0.1	0.0.0.0.0.1.0	
# ::edge	form	mod	or	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	get-01	ARG1	form	0.0.1.0	0.0.1.0.0	
# ::edge	go-01	ARG1	especially	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	left-01	ARG1	go-01	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	lose-02	ARG1	anything	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	make-04	ARG0	belongings	0.0.0	0.0	
# ::edge	make-04	ARG1	surge-01	0.0.0	0.0.0.0	
# ::edge	or	op1	lose-02	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	or	op2	left-01	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	so	op1	think-01	0.0.1.1	0.0.1	
# ::edge	surge-01	ARG1	or	0.0.0.0	0.0.0.0.0	
# ::edge	think-01	ARG1	get-01	0.0.1	0.0.1.0	
(c / check-01 
      :ARG1 (b / belongings 
            :ARG0-of (m / make-04 
                  :ARG1 (s / surge-01 
                        :ARG1 (o2 / or 
                              :op1 (l2 / lose-02 
                                    :ARG1 (a2 / anything)) 
                              :op2 (l / left-01 
                                    :ARG1 (g2 / go-01 
                                          :ARG1 (e2 / especially) 
                                          :calendar-of (e / everytime)))))) 
            :domain (t2 / think-01 
                  :ARG1 (g / get-01 
                        :ARG1 (f / form 
                              :mod (o / or))) 
                  :op-of (s2 / so)) 
            :domain (d / date-entity 
                  :time (y / year) 
                  :time (p / past) 
                  :time (t / the))) 
      :time (a / always))

# ::snt I often have to check twice at one go, then after 30 seconds for some reason I cant resist checking again!
# ::tok I often have to check twice at one go , then after 30 seconds for some reason I cant resist checking again !
# ::alignments 5-6|0.0.0.0 19-20|0.0.1.1 12-13|0.0.1.0 2-3|0 21-22|0.0.1.1.1.0 4-5|0.0 20-21|0.0.1.1.1 8-9|0.0.0 15-16|0.0.1.1.2 1-2|0.1 0-1|0.3 0-1|0.2 11-12|0.0.1 13-14|0.0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:35.899
# ::node	0	have-02	2-3
# ::node	0.0	check-01	4-5
# ::node	0.0.0	go-01	8-9
# ::node	0.0.0.0	2	5-6
# ::node	0.0.1	after	11-12
# ::node	0.0.1.0	30	12-13
# ::node	0.0.1.1	resist-01	19-20
# ::node	0.0.1.1.0	seconds	13-14
# ::node	0.0.1.1.1	check-01	20-21
# ::node	0.0.1.1.1.0	again	21-22
# ::node	0.0.1.1.2	some	15-16
# ::node	0.1	often	1-2
# ::node	0.2	1	0-1
# ::node	0.3	i	0-1
# ::root	0	have-02
# ::edge	after	op1	30	0.0.1	0.0.1.0	
# ::edge	after	op2	resist-01	0.0.1	0.0.1.1	
# ::edge	check-01	ARG1	again	0.0.1.1.1	0.0.1.1.1.0	
# ::edge	check-01	ARG1	go-01	0.0	0.0.0	
# ::edge	check-01	time	after	0.0	0.0.1	
# ::edge	go-01	ARG1	2	0.0.0	0.0.0.0	
# ::edge	have-02	ARG1	check-01	0	0.0	
# ::edge	have-02	frequency	often	0	0.1	
# ::edge	have-02	time	1	0	0.2	
# ::edge	have-02	time	i	0	0.3	
# ::edge	resist-01	ARG0	seconds	0.0.1.1	0.0.1.1.0	
# ::edge	resist-01	ARG1	check-01	0.0.1.1	0.0.1.1.1	
# ::edge	resist-01	ARG6	some	0.0.1.1	0.0.1.1.2	
(h / have-02 
      :ARG1 (c / check-01 
            :ARG1 (g / go-01 
                  :ARG1 2) 
            :time (a2 / after 
                  :op1 30 
                  :op2 (r / resist-01 
                        :ARG0 (s2 / seconds) 
                        :ARG1 (c2 / check-01 
                              :ARG1 (a / again)) 
                        :ARG6 (s / some)))) 
      :frequency (o / often) 
      :time 1 
      :time (i / i))

# ::snt Why is this!?
# ::tok Why is this ! ?
# ::alignments 3-4|0.1 2-3|0.1.0 0-1|0+0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:35.951
# ::node	0	cause-01	0-1
# ::node	0.0	thing	0-1
# ::node	0.1	x	3-4
# ::node	0.1.0	this	2-3
# ::root	0	cause-01
# ::edge	cause-01	ARG0	thing	0	0.0	
# ::edge	cause-01	ARG1	x	0	0.1	
# ::edge	x	mod	this	0.1	0.1.0	
(c / cause-01 
      :ARG0 (t2 / thing) 
      :ARG1 (x / x 
            :mod (t / this)))

# ::snt Am I going crazy or something?
# ::tok Am I going crazy or something ?
# ::alignments 4-5|0.2 2-3|0 3-4|0.0 5-6|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:36.082
# ::node	0	go-08	2-3
# ::node	0.0	crazy	3-4
# ::node	0.1	something	5-6
# ::node	0.2	or	4-5
# ::root	0	go-08
# ::edge	go-08	ARG1	crazy	0	0.0	
# ::edge	go-08	ARG6	something	0	0.1	
# ::edge	or	op1	go-08	0.2	0	
(g / go-08 
      :ARG1 (c / crazy) 
      :ARG6 (s / something) 
      :op-of (o / or))

# ::snt It happens most often when I'm carrying many things, but that is rarely and even still daily I'm checking many times. And is this OCD to any extent?
# ::tok It happens most often when I 'm carrying many things , but that is rarely and even still daily I 'm checking many times . And is this OCD to any extent ?
# ::alignments 28-29|0.4 1-2|0.0 3-4|0.0.1.0.1 7-8|0.0.1.0 30-31|0.5 21-22|0.2 15-16|0 31-32|0.6 0-1|0.0.0 2-3|0.0.1.0.1.0 18-19|0.2.0.0.0.0+0.2.0.0.0+0.2.0.0 22-23|0.2.1 23-24|0.2.0 14-15|0.1 9-10|0.0.1.0.0 17-18|0.2.2 27-28|0.3 8-9|0.0.1.0.0.0 11-12|0.0.1 16-17|0.2.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:37.676
# ::node	0	and	15-16
# ::node	0.0	happen-01	1-2
# ::node	0.0.0	it	0-1
# ::node	0.0.1	bunt-01	11-12
# ::node	0.0.1.0	carry-01	7-8
# ::node	0.0.1.0.0	thing	9-10
# ::node	0.0.1.0.0.0	many	8-9
# ::node	0.0.1.0.1	often	3-4
# ::node	0.0.1.0.1.0	most	2-3
# ::node	0.1	rare	14-15
# ::node	0.2	check-01	21-22
# ::node	0.2.0	time	23-24
# ::node	0.2.0.0	rate-entity-91	18-19
# ::node	0.2.0.0.0	temporal-quantity	18-19
# ::node	0.2.0.0.0.0	day	18-19
# ::node	0.2.0.0.1	even	16-17
# ::node	0.2.1	many	22-23
# ::node	0.2.2	still	17-18
# ::node	0.3	this	27-28
# ::node	0.4	or	28-29
# ::node	0.5	any	30-31
# ::node	0.6	extent	31-32
# ::root	0	and
# ::edge	and	op1	happen-01	0	0.0	
# ::edge	and	op2	rare	0	0.1	
# ::edge	and	op3	check-01	0	0.2	
# ::edge	and	op4	this	0	0.3	
# ::edge	and	op5	or	0	0.4	
# ::edge	and	op6	any	0	0.5	
# ::edge	and	op7	extent	0	0.6	
# ::edge	bunt-01	ARG1	carry-01	0.0.1	0.0.1.0	
# ::edge	carry-01	ARG1	thing	0.0.1.0	0.0.1.0.0	
# ::edge	carry-01	frequency	often	0.0.1.0	0.0.1.0.1	
# ::edge	check-01	ARG1	time	0.2	0.2.0	
# ::edge	check-01	ARG6	many	0.2	0.2.1	
# ::edge	check-01	mod	still	0.2	0.2.2	
# ::edge	happen-01	ARG0	it	0.0	0.0.0	
# ::edge	happen-01	ARG1	bunt-01	0.0	0.0.1	
# ::edge	often	degree	most	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	rate-entity-91	ARG1	time	0.2.0.0	0.2.0	
# ::edge	rate-entity-91	ARG3	temporal-quantity	0.2.0.0	0.2.0.0.0	
# ::edge	rate-entity-91	ARG6	even	0.2.0.0	0.2.0.0.1	
# ::edge	temporal-quantity	unit	day	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	thing	quant	many	0.0.1.0.0	0.0.1.0.0.0	
(a2 / and 
      :op1 (h / happen-01 
            :ARG0 (i / it) 
            :ARG1 (b / bunt-01 
                  :ARG1 (c / carry-01 
                        :ARG1 (t3 / thing 
                              :quant (m3 / many)) 
                        :frequency (o2 / often 
                              :degree (m / most))))) 
      :op2 (r2 / rare) 
      :op3 (c2 / check-01 
            :ARG1 (t2 / time 
                  :ARG1-of (r / rate-entity-91 
                        :ARG3 (t / temporal-quantity 
                              :unit (d / day)) 
                        :ARG6 (e2 / even))) 
            :ARG6 (m2 / many) 
            :mod (s / still)) 
      :op4 (t4 / this) 
      :op5 (o / or) 
      :op6 (a / any) 
      :op7 (e / extent))

# ::snt What can I do about this?
# ::tok What can I do about this ?
# ::alignments 5-6|0.0.0 3-4|0.0 1-2|0 4-5|0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:37.770
# ::node	0	possible	1-2
# ::node	0.0	do-02	3-4
# ::node	0.0.0	this	5-6
# ::node	0.0.1	thing	4-5
# ::node	0.0.1.0	develop-01	4-5
# ::root	0	possible
# ::edge	develop-01	ARG1	thing	0.0.1.0	0.0.1	
# ::edge	do-02	ARG0	this	0.0	0.0.0	
# ::edge	do-02	ARG1	thing	0.0	0.0.1	
# ::edge	possible	domain	do-02	0	0.0	
(p / possible 
      :domain (d / do-02 
            :ARG0 (t / this) 
            :ARG1 (t2 / thing 
                  :ARG1-of (d2 / develop-01))))

# ::snt If I don't check, I get very very anxious, which does sort of go away after 15-30 mins, but often the anxiety is so much that I can't wait that long.
# ::tok If I do n't check , I get very very anxious , which does sort of go away after 15-30 mins , but often the anxiety is so much that I ca n't wait that long .
# ::alignments 10-11|0.1.1.0 28-29|0.1 33-34|0.0 31-32|0 4-5|0.1.1.0.1.0.0 18-19|0.1.1.1.0 23-24|0.0.0 25-26|0.1.2 27-28|0.1.0 0-1|0.1.1.0.1.0.0.0 17-18|0.1.1.1.0.0.1 7-8|0.1.1.0.1.0 8-9|0.1.1.0.0 20-21|0.1.1.1 16-17|0.1.1.1.0.0 22-23|0.1.1 9-10|0.1.1.0.1 14-15|0.1.1.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:39.366
# ::node	0	possible	31-32
# ::node	0.0	wait-01	33-34
# ::node	0.0.0	often	23-24
# ::node	0.1	much	28-29
# ::node	0.1.0	sob-01	27-28
# ::node	0.1.1	bunt-01	22-23
# ::node	0.1.1.0	annul-01	10-11
# ::node	0.1.1.0.0	very	8-9
# ::node	0.1.1.0.1	very	9-10
# ::node	0.1.1.0.1.0	get-05	7-8
# ::node	0.1.1.0.1.0.0	check-01	4-5
# ::node	0.1.1.0.1.0.0.0	1	0-1
# ::node	0.1.1.1	min	20-21
# ::node	0.1.1.1.0	after	18-19
# ::node	0.1.1.1.0.0	go-01	16-17
# ::node	0.1.1.1.0.0.0	sort	14-15
# ::node	0.1.1.1.0.0.1	away	17-18
# ::node	0.1.2	anxiety	25-26
# ::root	0	possible
# ::edge	1	op1	check-01	0.1.1.0.1.0.0.0	0.1.1.0.1.0.0	
# ::edge	after	op1	min	0.1.1.1.0	0.1.1.1	
# ::edge	annul-01	ARG1	very	0.1.1.0	0.1.1.0.0	
# ::edge	annul-01	degree	very	0.1.1.0	0.1.1.0.1	
# ::edge	bunt-01	ARG1	annul-01	0.1.1	0.1.1.0	
# ::edge	bunt-01	ARG2	much	0.1.1	0.1	
# ::edge	bunt-01	ARG6	min	0.1.1	0.1.1.1	
# ::edge	check-01	ARG1	get-05	0.1.1.0.1.0.0	0.1.1.0.1.0	
# ::edge	get-05	ARG1	very	0.1.1.0.1.0	0.1.1.0.1	
# ::edge	go-01	ARG0	sort	0.1.1.1.0.0	0.1.1.1.0.0.0	
# ::edge	go-01	mod	away	0.1.1.1.0.0	0.1.1.1.0.0.1	
# ::edge	go-01	time	after	0.1.1.1.0.0	0.1.1.1.0	
# ::edge	much	domain	anxiety	0.1	0.1.2	
# ::edge	much	domain	possible	0.1	0	
# ::edge	possible	domain	wait-01	0	0.0	
# ::edge	sob-01	ARG1	much	0.1.0	0.1	
# ::edge	wait-01	ARG1	often	0.0	0.0.0	
(p / possible 
      :domain (w / wait-01 
            :ARG1 (o / often)) 
      :domain-of (m / much 
            :ARG1-of (s / sob-01) 
            :ARG2-of (b / bunt-01 
                  :ARG1 (a / annul-01 
                        :ARG1 (v / very) 
                        :degree (v2 / very 
                              :ARG1-of (g / get-05 
                                    :ARG1-of (c / check-01 
                                          :op-of 1)))) 
                  :ARG6 (m2 / min 
                        :op-of (a2 / after 
                              :time-of (g2 / go-01 
                                    :ARG0 (s2 / sort) 
                                    :mod (a4 / away))))) 
            :domain (a3 / anxiety)))

# ::snt I feel if I lost my wallet or phone, then I'm doomed or so I feel.
# ::tok I feel if I lost my wallet or phone , then I 'm doomed or so I feel .
# ::alignments 13-14|0.1.1.0 7-8|0.1.0 8-9|0.1.1.1 1-2|0 14-15|0.1.1 17-18|0.1.1.2 4-5|0.1 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:39.725
# ::node	0	feel-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	lose-02	4-5
# ::node	0.1.0	or	7-8
# ::node	0.1.1	or	14-15
# ::node	0.1.1.0	doom-01	13-14
# ::node	0.1.1.1	phone	8-9
# ::node	0.1.1.2	feel-01	17-18
# ::root	0	feel-01
# ::edge	doom-01	ARG1	or	0.1.1.0	0.1.1	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG1	lose-02	0	0.1	
# ::edge	lose-02	ARG1	or	0.1	0.1.0	
# ::edge	or	op1	lose-02	0.1.1	0.1	
# ::edge	or	op2	phone	0.1.1	0.1.1.1	
# ::edge	or	op3	feel-01	0.1.1	0.1.1.2	
(f / feel-01 
      :ARG0 (i / i) 
      :ARG1 (l / lose-02 
            :ARG1 (o / or) 
            :op-of (o2 / or 
                  :ARG1-of (d / doom-01) 
                  :op1 (p / phone) 
                  :op2 (f2 / feel-01))))

# ::snt I just wish I could go out without worrying every 2 mins whether I've left or lost something.
# ::tok I just wish I could go out without worrying every 2 mins whether I 've left or lost something .
# ::alignments 2-3|0 8-9|0.1.0.0 1-2|0.2 11-12|0.1.0.0.1 16-17|0.1.0.0.0 5-6|0.1.0 18-19|0.1.0.0.0.1.0 4-5|0.1 15-16|0.1.0.0.0.0 17-18|0.1.0.0.0.1 0-1|0.0 10-11|0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:40.546
# ::node	0	wish-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	possible	4-5
# ::node	0.1.0	go-01	5-6
# ::node	0.1.0.0	worry-01	8-9
# ::node	0.1.0.0.0	or	16-17
# ::node	0.1.0.0.0.0	left-01	15-16
# ::node	0.1.0.0.0.0.0	2	10-11
# ::node	0.1.0.0.0.1	lose-02	17-18
# ::node	0.1.0.0.0.1.0	something	18-19
# ::node	0.1.0.0.1	min	11-12
# ::node	0.2	just	1-2
# ::root	0	wish-01
# ::edge	go-01	ARG1	worry-01	0.1.0	0.1.0.0	
# ::edge	left-01	ARG1	2	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	lose-02	ARG1	something	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	or	op1	left-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	or	op2	lose-02	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	possible	domain	go-01	0.1	0.1.0	
# ::edge	wish-01	ARG0	i	0	0.0	
# ::edge	wish-01	ARG1	possible	0	0.1	
# ::edge	wish-01	ARG6	just	0	0.2	
# ::edge	worry-01	ARG0	or	0.1.0.0	0.1.0.0.0	
# ::edge	worry-01	ARG1	min	0.1.0.0	0.1.0.0.1	
(w / wish-01 
      :ARG0 (i / i) 
      :ARG1 (p / possible 
            :domain (g / go-01 
                  :ARG1 (w2 / worry-01 
                        :ARG0 (o / or 
                              :op1 (l / left-01 
                                    :ARG1 2) 
                              :op2 (l2 / lose-02 
                                    :ARG1 (s / something))) 
                        :ARG1 (m / min)))) 
      :ARG6 (j / just))

# ::snt I really dont know what to do, and am afraid of going to the GP.
# ::tok I really dont know what to do , and am afraid of going to the GP .
# ::alignments 6-7|0.1.0.0 8-9|0.1 3-4|0.1.0.0.0 12-13|0.0 2-3|0.1.0 1-2|0.1.0.1 15-16|0.0.0 9-10|0 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:40.882
# ::node	0	be-located-at-91	9-10
# ::node	0.0	go-10	12-13
# ::node	0.0.0	gp	15-16
# ::node	0.1	and	8-9
# ::node	0.1.0	-	2-3
# ::node	0.1.0.0	do-02	6-7
# ::node	0.1.0.0.0	know-01	3-4
# ::node	0.1.0.0.0.0	i	0-1
# ::node	0.1.0.1	really	1-2
# ::root	0	be-located-at-91
(b / be-located-at-91 
      :ARG1-of (g / go-10 
            :ARG4 (g2 / gp)) 
      :op-of (a / and 
            :op1 (- / - 
                  :ARG1-of (d / do-02 
                        :ARG1-of (k / know-01 
                              :ARG0 (i / i))) 
                  :mod (r / really))))

# ::snt They've probably never heard of some compulsion like this and I just dont know what to do
# ::tok They 've probably never heard of some compulsion like this and I just dont know what to do
# ::alignments 12-13|0.1.2 6-7|0.2.0 4-5|0 14-15|0.1 2-3|0.0.0 0-1|0.0 7-8|0.2 9-10|0.1.1.0 10-11|0.1.1 13-14|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:41.192
# ::node	0	hear-01	4-5
# ::node	0.0	they	0-1
# ::node	0.0.0	probable	2-3
# ::node	0.1	know-01	14-15
# ::node	0.1.0	-	13-14
# ::node	0.1.1	and	10-11
# ::node	0.1.1.0	this	9-10
# ::node	0.1.2	just	12-13
# ::node	0.2	compulsion	7-8
# ::node	0.2.0	some	6-7
# ::root	0	hear-01
# ::edge	and	calendar	this	0.1.1	0.1.1.0	
# ::edge	compulsion	quant	some	0.2	0.2.0	
# ::edge	hear-01	ARG0	they	0	0.0	
# ::edge	hear-01	ARG1	know-01	0	0.1	
# ::edge	hear-01	location	compulsion	0	0.2	
# ::edge	know-01	ARG0	-	0.1	0.1.0	
# ::edge	know-01	ARG1	and	0.1	0.1.1	
# ::edge	know-01	frequency	just	0.1	0.1.2	
# ::edge	probable	domain	they	0.0.0	0.0	
(h / hear-01 
      :ARG0 (t / they 
            :domain-of (p / probable)) 
      :ARG1 (k / know-01 
            :ARG0 (- / -) 
            :ARG1 (a / and 
                  :calendar (t2 / this)) 
            :frequency (j / just)) 
      :location (c / compulsion 
            :quant (s / some)))

# ::snt Do any of you have a similar 'ritual'?
# ::tok Do any of you have a similar ' ritual ' ?
# ::alignments 4-5|0 6-7|0.1.0 0-1|0.2 1-2|0.2.0 8-9|0.1 3-4|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:43.279
# ::node	0	have-03	4-5
# ::node	0.0	you	3-4
# ::node	0.1	ritual	8-9
# ::node	0.1.0	simmer-01	6-7
# ::node	0.2	do-02	0-1
# ::node	0.2.0	any	1-2
# ::root	0	have-03
# ::edge	do-02	ARG1	have-03	0.2	0	
# ::edge	do-02	ARG6	any	0.2	0.2.0	
# ::edge	have-03	ARG0	you	0	0.0	
# ::edge	have-03	ARG1	ritual	0	0.1	
# ::edge	simmer-01	ARG1	ritual	0.1.0	0.1	
(h / have-03 
      :ARG0 (y / you) 
      :ARG1 (r / ritual 
            :ARG1-of (s / simmer-01)) 
      :ARG1-of (d / do-02 
            :ARG6 (a / any)))

# ::snt People would think I'm crazy, but it's very strangely difficult to get yourself out of this.
# ::tok People would think I 'm crazy , but it 's very strangely difficult to get yourself out of this .
# ::alignments 15-16|0.1.0.1.1 14-15|0.1.0.1 12-13|0.1.0 10-11|0.1.0.0 8-9|0.0 7-8|0.1 18-19|0.1.0.1.0 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:43.597
# ::node	0	think-01	2-3
# ::node	0.0	country	8-9
# ::node	0.1	bunt-01	7-8
# ::node	0.1.0	difficult	12-13
# ::node	0.1.0.0	very	10-11
# ::node	0.1.0.1	get-05	14-15
# ::node	0.1.0.1.0	this	18-19
# ::node	0.1.0.1.1	you	15-16
# ::root	0	think-01
# ::edge	bunt-01	ARG1	think-01	0.1	0	
# ::edge	bunt-01	ARG2	difficult	0.1	0.1.0	
# ::edge	difficult	degree	very	0.1.0	0.1.0.0	
# ::edge	difficult	domain	get-05	0.1.0	0.1.0.1	
# ::edge	get-05	ARG0	this	0.1.0.1	0.1.0.1.0	
# ::edge	get-05	ARG1	you	0.1.0.1	0.1.0.1.1	
# ::edge	think-01	ARG1	country	0	0.0	
(t2 / think-01 
      :ARG1 (c / country) 
      :ARG1-of (b / bunt-01 
            :ARG2 (d / difficult 
                  :degree (v / very) 
                  :domain (g / get-05 
                        :ARG0 (t / this) 
                        :ARG1 (y / you)))))

# ::snt What advice could you give me?
# ::tok What advice could you give me ?
# ::alignments 5-6|0.0.2 1-2|0.0.1 2-3|0 3-4|0.0.0 4-5|0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:43.728
# ::node	0	possible	2-3
# ::node	0.0	give-01	4-5
# ::node	0.0.0	you	3-4
# ::node	0.0.1	advice	1-2
# ::node	0.0.1.0	amr-unknown	0-1
# ::node	0.0.2	i	5-6
# ::root	0	possible
# ::edge	amr-unknown	calendar	advice	0.0.1.0	0.0.1	
# ::edge	give-01	ARG0	you	0.0	0.0.0	
# ::edge	give-01	ARG1	advice	0.0	0.0.1	
# ::edge	give-01	ARG6	i	0.0	0.0.2	
# ::edge	possible	domain	give-01	0	0.0	
(p / possible 
      :domain (g / give-01 
            :ARG0 (y / you) 
            :ARG1 (a / advice 
                  :calendar-of (a2 / amr-unknown)) 
            :ARG6 (i / i)))

# ::snt I used to do this on my way to college-I had a list of items I knew I had on me and used to check compulsively on the bus.
# ::tok I used to do this on my way to college - I had a list of items I knew I had on me and used to check compulsively on the bus .
# ::alignments 3-4|0.0.0 1-2|0 16-17|0.1.1.0 22-23|0.1 12-13|0.0.0.1.0.0 21-22|0.1.1 9-10|0.0.0.1 4-5|0.0.0.0 0-1|0.0 7-8|0.0.0.0.0 14-15|0.1.1.0.0 20-21|0.1.0 28-29|0.0.0.1.0.1 24-25|0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:44.569
# ::node	0	use-03	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	do-02	3-4
# ::node	0.0.0.0	this	4-5
# ::node	0.0.0.0.0	way	7-8
# ::node	0.0.0.1	college-i	9-10
# ::node	0.0.0.1.0	check-01	24-25
# ::node	0.0.0.1.0.0	list	12-13
# ::node	0.0.0.1.0.1	bus	28-29
# ::node	0.1	use-01	22-23
# ::node	0.1.0	i	20-21
# ::node	0.1.1	and	21-22
# ::node	0.1.1.0	know-01	16-17
# ::node	0.1.1.0.0	item	14-15
# ::root	0	use-03
# ::edge	check-01	ARG0	list	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	check-01	ARG1	college-i	0.0.0.1.0	0.0.0.1	
# ::edge	check-01	time	bus	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	do-02	ARG0	i	0.0.0	0.0	
# ::edge	do-02	ARG1	this	0.0.0	0.0.0.0	
# ::edge	do-02	ARG2	college-i	0.0.0	0.0.0.1	
# ::edge	know-01	ARG1	and	0.1.1.0	0.1.1	
# ::edge	know-01	consist	item	0.1.1.0	0.1.1.0.0	
# ::edge	use-01	ARG1	i	0.1	0.1.0	
# ::edge	use-01	ARG6	and	0.1	0.1.1	
# ::edge	use-03	ARG0	i	0	0.0	
# ::edge	use-03	ARG1	use-01	0	0.1	
# ::edge	way	mod	this	0.0.0.0.0	0.0.0.0	
(u / use-03 
      :ARG0 (i / i 
            :ARG0-of (d / do-02 
                  :ARG1 (t / this 
                        :mod-of (w / way)) 
                  :ARG2 (c / college-i 
                        :ARG1-of (c2 / check-01 
                              :ARG0 (l / list) 
                              :time (b / bus))))) 
      :ARG1 (u2 / use-01 
            :ARG1 (i3 / i) 
            :ARG6 (a / and 
                  :ARG1-of (k / know-01 
                        :consist (i2 / item)))))

# ::snt I now have more severe anxiety and think this was just a warning sign so just try and wean yourself out of the habit while it's relatively fresh-definitely visit your doctor but also tell yourself not to keep checking these things (easier said than done I know).
# ::tok I now have more severe anxiety and think this was just a warning sign so just try and wean yourself out of the habit while it 's relatively fresh - definitely visit your doctor but also tell yourself not to keep checking these things ( easier said than done I know ) .
# ::alignments 6-7|0.0.2 14-15|0.1.0.0 24-25|0.3.1.0 12-13|0.0.2.0.1.0.0 15-16|0.1.0 10-11|0.0.2.0.1.1 3-4|0.0.1.0.0 7-8|0.0.2.0 0-1|0.0.0 13-14|0.0.2.0.1.0 4-5|0.0.1.0 31-32|0.3.0 34-35|0.2.2 39-40|0.0.2.0.1.0.0.0.1 5-6|0.0.1 19-20|0.2.1 0-2|0.0.2.0.0.0+0.0.2.0.0 40-41|0.0.2.0.1.0.0.0.2 8-9|0.0.2.0.1 2-3|0.0 33-34|0.3.0.0 23-24|0.2.0 16-17|0.1 27-28|0.3.1 18-19|0.2 38-39|0.0.2.0.1.0.0.0 29-30|0.3 35-36|0.2.2.0 32-33|0.3.0.0.0 41-42|0.0.2.0.1.0.0.0.0 17-18|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:59.160
# ::node	0	and	17-18
# ::node	0.0	have-03	2-3
# ::node	0.0.0	i	0-1
# ::node	0.0.1	anxiety	5-6
# ::node	0.0.1.0	severe	4-5
# ::node	0.0.1.0.0	more	3-4
# ::node	0.0.2	and	6-7
# ::node	0.0.2.0	think-01	7-8
# ::node	0.0.2.0.0	date-entity	0-2
# ::node	0.0.2.0.0.0	now	0-2
# ::node	0.0.2.0.1	this	8-9
# ::node	0.0.2.0.1.0	sign-01	13-14
# ::node	0.0.2.0.1.0.0	warn-01	12-13
# ::node	0.0.2.0.1.0.0.0	keep-02	38-39
# ::node	0.0.2.0.1.0.0.0.0	thing	41-42
# ::node	0.0.2.0.1.0.0.0.1	check-01	39-40
# ::node	0.0.2.0.1.0.0.0.2	this	40-41
# ::node	0.0.2.0.1.1	just	10-11
# ::node	0.1	try-01	16-17
# ::node	0.1.0	just	15-16
# ::node	0.1.0.0	so	14-15
# ::node	0.2	wean-01	18-19
# ::node	0.2.0	habit	23-24
# ::node	0.2.1	outsell-01	19-20
# ::node	0.2.2	tell-01	34-35
# ::node	0.2.2.0	outsell-01	35-36
# ::node	0.3	visit-01	29-30
# ::node	0.3.0	doctor	31-32
# ::node	0.3.0.0	also	33-34
# ::node	0.3.0.0.0	bunt-01	32-33
# ::node	0.3.1	relative	27-28
# ::node	0.3.1.0	will-01	24-25
# ::root	0	and
# ::edge	and	op1	have-03	0	0.0	
# ::edge	and	op1	have-03	0.0.2	0.0	
# ::edge	and	op2	think-01	0.0.2	0.0.2.0	
# ::edge	and	op2	try-01	0	0.1	
# ::edge	and	op3	wean-01	0	0.2	
# ::edge	and	op4	visit-01	0	0.3	
# ::edge	anxiety	mod	severe	0.0.1	0.0.1.0	
# ::edge	bunt-01	ARG1	also	0.3.0.0.0	0.3.0.0	
# ::edge	check-01	ARG1	keep-02	0.0.2.0.1.0.0.0.1	0.0.2.0.1.0.0.0	
# ::edge	date-entity	time	now	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	doctor	calendar	also	0.3.0	0.3.0.0	
# ::edge	have-03	ARG0	i	0.0	0.0.0	
# ::edge	have-03	ARG1	anxiety	0.0	0.0.1	
# ::edge	just	degree	so	0.1.0	0.1.0.0	
# ::edge	keep-02	ARG1	thing	0.0.2.0.1.0.0.0	0.0.2.0.1.0.0.0.0	
# ::edge	keep-02	ARG6	this	0.0.2.0.1.0.0.0	0.0.2.0.1.0.0.0.2	
# ::edge	outsell-01	ARG1	tell-01	0.2.2.0	0.2.2	
# ::edge	outsell-01	ARG1	wean-01	0.2.1	0.2	
# ::edge	severe	degree	more	0.0.1.0	0.0.1.0.0	
# ::edge	sign-01	ARG1	warn-01	0.0.2.0.1.0	0.0.2.0.1.0.0	
# ::edge	tell-01	ARG1	wean-01	0.2.2	0.2	
# ::edge	think-01	ARG0	date-entity	0.0.2.0	0.0.2.0.0	
# ::edge	think-01	ARG1	this	0.0.2.0	0.0.2.0.1	
# ::edge	this	mod	sign-01	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	this	time	just	0.0.2.0.1	0.0.2.0.1.1	
# ::edge	try-01	ARG1	just	0.1	0.1.0	
# ::edge	visit-01	ARG1	doctor	0.3	0.3.0	
# ::edge	visit-01	mod	relative	0.3	0.3.1	
# ::edge	warn-01	ARG1	keep-02	0.0.2.0.1.0.0	0.0.2.0.1.0.0.0	
# ::edge	wean-01	ARG1	habit	0.2	0.2.0	
# ::edge	will-01	ARG1	relative	0.3.1.0	0.3.1	
(a4 / and 
      :op1 (h / have-03 
            :ARG0 (i / i) 
            :ARG1 (a2 / anxiety 
                  :mod (s3 / severe 
                        :degree (m / more))) 
            :op-of (a / and 
                  :op1 (t / think-01 
                        :ARG0 (d2 / date-entity 
                              :time (n / now)) 
                        :ARG1 (t4 / this 
                              :mod (s2 / sign-01 
                                    :ARG1 (w2 / warn-01 
                                          :ARG1 (k / keep-02 
                                                :ARG1 (t6 / thing) 
                                                :ARG1-of (c / check-01) 
                                                :ARG6 (t3 / this)))) 
                              :time (j2 / just))))) 
      :op2 (t5 / try-01 
            :ARG1 (j / just 
                  :degree (s / so))) 
      :op3 (w3 / wean-01 
            :ARG1 (h2 / habit) 
            :ARG1-of (o / outsell-01) 
            :ARG1-of (t2 / tell-01 
                  :ARG1-of (o2 / outsell-01))) 
      :op4 (v / visit-01 
            :ARG1 (d / doctor 
                  :calendar (a3 / also 
                        :ARG1-of (b / bunt-01))) 
            :mod (r / relative 
                  :ARG1-of (w / will-01))))

# ::snt Doctors will have seen much worse cases so don't worry about that!
# ::tok Doctors will have seen much worse cases so do n't worry about that !
# ::alignments 5-6|0.1.0 6-7|0.1 4-5|0.1.0.0 3-4|0 0-1|0.0 10-11|0.2 7-8|0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:59.338
# ::node	0	see-01	3-4
# ::node	0.0	doctor	0-1
# ::node	0.1	case	6-7
# ::node	0.1.0	more	5-6
# ::node	0.1.0.0	much	4-5
# ::node	0.2	worry-02	10-11
# ::node	0.2.0	so	7-8
# ::root	0	see-01
# ::edge	case	mod	more	0.1	0.1.0	
# ::edge	more	degree	much	0.1.0	0.1.0.0	
# ::edge	see-01	ARG0	doctor	0	0.0	
# ::edge	see-01	ARG1	case	0	0.1	
# ::edge	see-01	condition	worry-02	0	0.2	
# ::edge	worry-02	ARG1	so	0.2	0.2.0	
(s / see-01 
      :ARG0 (d / doctor) 
      :ARG1 (c / case 
            :mod (m / more 
                  :degree (m2 / much))) 
      :condition (w / worry-02 
            :ARG1 (s2 / so)))

# ::snt I did about OCD in psycology today :P
# ::tok I did about OCD in psycology today : P
# ::alignments 8-9|0.1 0-7|0.2.1+0.2 3-4|0.0 5-6|0 0-1|0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:03:59.423
# ::node	0	multi-sentence	5-6
# ::node	0.0	or	3-4
# ::node	0.1	p	8-9
# ::node	0.2	date-entity	0-7
# ::node	0.2.0	i	0-1
# ::node	0.2.1	today	0-7
# ::root	0	multi-sentence
# ::edge	date-entity	mod	i	0.2	0.2.0	
# ::edge	date-entity	time	today	0.2	0.2.1	
# ::edge	multi-sentence	mod	date-entity	0	0.2	
# ::edge	or	location	multi-sentence	0.0	0	
# ::edge	p	location	multi-sentence	0.1	0	
(m / multi-sentence 
      :location-of (o / or) 
      :location-of (p / p) 
      :mod (d / date-entity 
            :mod (i / i) 
            :time (t / today)))

# ::snt To get rid of it, one way could be just to avoid the compulsive act so don't check to see whether you have lost something, just leave it (:
# ::tok To get rid of it , one way could be just to avoid the compulsive act so do n't check to see whether you have lost something , just leave it ( :
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:08.654
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.NullPointerException
# 	at nlp.experiments.AMRPipeline$1.lambda$new$11(AMRPipeline.java:163)
# 	at nlp.experiments.AMRPipeline$1$$Lambda$12/306115458.apply(Unknown Source)
# 	at nlp.experiments.LinearPipe.featurize(LinearPipe.java:82)
# 	at nlp.experiments.LinearPipe.predict(LinearPipe.java:468)
# 	at nlp.experiments.AMRPipeline.predictClusters(AMRPipeline.java:925)
# 	at nlp.experiments.SequenceSystem.getSpans(SequenceSystem.java:157)
# 	at edu.cmu.lti.nlp.amr.StanfordDecoder.Decoder$.decode(Decoder.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:210)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:195)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:195)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:79)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:195)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:193)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:193)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Even though your anxiety levels would increase for a duration, they will gradualy decrease so hopefully, overtime your OCD will disappear (:
# ::tok Even though your anxiety levels would increase for a duration , they will gradualy decrease so hopefully , overtime your OCD will disappear ( :
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:12.286
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.NullPointerException
# 	at nlp.experiments.AMRPipeline$1.lambda$new$11(AMRPipeline.java:163)
# 	at nlp.experiments.AMRPipeline$1$$Lambda$12/306115458.apply(Unknown Source)
# 	at nlp.experiments.LinearPipe.featurize(LinearPipe.java:82)
# 	at nlp.experiments.LinearPipe.predict(LinearPipe.java:468)
# 	at nlp.experiments.AMRPipeline.predictClusters(AMRPipeline.java:925)
# 	at nlp.experiments.SequenceSystem.getSpans(SequenceSystem.java:157)
# 	at edu.cmu.lti.nlp.amr.StanfordDecoder.Decoder$.decode(Decoder.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:210)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:195)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:195)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:79)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:195)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:193)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:193)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To me that just sounds like you being overly anxious, as opposed to having really bad OCD.
# ::tok To me that just sounds like you being overly anxious , as opposed to having really bad OCD .
# ::alignments 3-4|0.2 9-10|0.0 12-13|0.0.0.0 15-16|0.0.0.0.0.1 1-2|0.1 4-5|0 16-17|0.0.0.0.0.0.0 14-15|0.0.0.0.0 11-12|0.0.0 17-18|0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:12.807
# ::node	0	sound-01	4-5
# ::node	0.0	annul-01	9-10
# ::node	0.0.0	ask-01	11-12
# ::node	0.0.0.0	oppose-01	12-13
# ::node	0.0.0.0.0	have-03	14-15
# ::node	0.0.0.0.0.0	ocd	17-18
# ::node	0.0.0.0.0.0.0	bad	16-17
# ::node	0.0.0.0.0.1	really	15-16
# ::node	0.1	i	1-2
# ::node	0.2	just	3-4
# ::root	0	sound-01
# ::edge	annul-01	ARG1	ask-01	0.0	0.0.0	
# ::edge	ask-01	ARG1	oppose-01	0.0.0	0.0.0.0	
# ::edge	have-03	ARG1	ocd	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-03	ARG6	really	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	ocd	mod	bad	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	oppose-01	ARG1	have-03	0.0.0.0	0.0.0.0.0	
# ::edge	sound-01	ARG1	annul-01	0	0.0	
# ::edge	sound-01	ARG6	i	0	0.1	
# ::edge	sound-01	mod	just	0	0.2	
(s / sound-01 
      :ARG1 (a / annul-01 
            :ARG1 (a2 / ask-01 
                  :ARG1 (o / oppose-01 
                        :ARG1 (h / have-03 
                              :ARG1 (o2 / ocd 
                                    :mod (b / bad)) 
                              :ARG6 (r / really))))) 
      :ARG6 (i / i) 
      :mod (j / just))

# ::snt I am very obsessional to the point where I get up 20 times a night to check the locks in my house are all locked a particular way.
# ::tok I am very obsessional to the point where I get up 20 times a night to check the locks in my house are all locked a particular way .
# ::alignments 2-3|0.0 23-24|0.5 24-25|0 9-10|0.3 26-27|0.1.0 27-28|0.1 0-1|0.0.0 16-17|0.2 6-7|0.3.0 0-1|0.0.1 21-22|0.4.0 14-15|0.2.0 18-19|0.4 10-11|0.3.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:14.671
# ::node	0	lock-01	24-25
# ::node	0.0	very	2-3
# ::node	0.0.0	i	0-1
# ::node	0.0.1	1	0-1
# ::node	0.1	way	27-28
# ::node	0.1.0	particular	26-27
# ::node	0.2	check-01	16-17
# ::node	0.2.0	night	14-15
# ::node	0.3	get-05	9-10
# ::node	0.3.0	point	6-7
# ::node	0.3.1	up-to	10-11
# ::node	0.4	lock	18-19
# ::node	0.4.0	house	21-22
# ::node	0.5	all	23-24
# ::root	0	lock-01
# ::edge	check-01	ARG0	night	0.2	0.2.0	
# ::edge	check-01	ARG1	lock-01	0.2	0	
# ::edge	get-05	ARG1	point	0.3	0.3.0	
# ::edge	get-05	ARG2	lock-01	0.3	0	
# ::edge	get-05	ARG6	up-to	0.3	0.3.1	
# ::edge	lock	poss	house	0.4	0.4.0	
# ::edge	lock-01	ARG0	very	0	0.0	
# ::edge	lock-01	ARG1	way	0	0.1	
# ::edge	lock-01	ARG6	lock	0	0.4	
# ::edge	lock-01	manner	all	0	0.5	
# ::edge	very	domain	1	0.0	0.0.1	
# ::edge	very	domain	i	0.0	0.0.0	
# ::edge	way	mod	particular	0.1	0.1.0	
(l / lock-01 
      :ARG0 (v / very 
            :domain (i / i) 
            :domain 1) 
      :ARG1 (w / way 
            :mod (p / particular)) 
      :ARG1-of (c / check-01 
            :ARG0 (n / night)) 
      :ARG2-of (g / get-05 
            :ARG1 (p2 / point) 
            :ARG6 (u / up-to)) 
      :ARG6 (l2 / lock 
            :poss (h / house)) 
      :manner (a / all))

# ::snt Sometimes although I know they're locked I'm convinced they're not.
# ::tok Sometimes although I know they 're locked I 'm convinced they 're not .
# ::alignments 6-7|0.1 0-1|0.0 3-4|0.1.0 9-10|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:14.812
# ::node	0	convince-01	9-10
# ::node	0.0	sometimes	0-1
# ::node	0.1	lock-01	6-7
# ::node	0.1.0	know-01	3-4
# ::root	0	convince-01
# ::edge	convince-01	ARG1	sometimes	0	0.0	
# ::edge	know-01	ARG1	lock-01	0.1.0	0.1	
# ::edge	lock-01	ARG1	convince-01	0.1	0	
(c / convince-01 
      :ARG1 (s / sometimes) 
      :ARG1-of (l / lock-01 
            :ARG1-of (k / know-01)))

# ::snt I think it becomes a real problem when the obsession starts to really interrupt your everyday routine.
# ::tok I think it becomes a real problem when the obsession starts to really interrupt your everyday routine .
# ::alignments 1-2|0 12-13|0.1.0.0.0.1 3-4|0.1 10-11|0.1.0.0 16-17|0.1.0.0.0.0 15-16|0.1.0.0.0.0.0 6-7|0.1.0 5-6|0.1.0.1 13-14|0.1.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:15.373
# ::node	0	think-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	become-01	3-4
# ::node	0.1.0	problem	6-7
# ::node	0.1.0.0	start-01	10-11
# ::node	0.1.0.0.0	interrupt-01	13-14
# ::node	0.1.0.0.0.0	routine	16-17
# ::node	0.1.0.0.0.0.0	everyday	15-16
# ::node	0.1.0.0.0.1	real	12-13
# ::node	0.1.0.1	real	5-6
# ::root	0	think-01
# ::edge	become-01	ARG1	problem	0.1	0.1.0	
# ::edge	interrupt-01	ARG1	routine	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	interrupt-01	manner	real	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	problem	mod	real	0.1.0	0.1.0.1	
# ::edge	routine	mod	everyday	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	start-01	ARG1	interrupt-01	0.1.0.0	0.1.0.0.0	
# ::edge	start-01	ARG2	problem	0.1.0.0	0.1.0	
# ::edge	think-01	ARG0	i	0	0.0	
# ::edge	think-01	ARG1	become-01	0	0.1	
(t / think-01 
      :ARG0 (i2 / i) 
      :ARG1 (b / become-01 
            :ARG1 (p / problem 
                  :ARG2-of (s / start-01 
                        :ARG1 (i / interrupt-01 
                              :ARG1 (r2 / routine 
                                    :mod (e / everyday)) 
                              :manner (r / real))) 
                  :mod (r3 / real))))

# ::snt You definitely aren't crazy though don't worry and your GP will be understanding of the issue I'm sure.
# ::tok You definitely are n't crazy though do n't worry and your GP will be understanding of the issue I 'm sure .
# ::alignments 20-21|0.1.0.0 8-9|0.0 1-2|0.0.0.0 4-5|0.0.0 14-15|0.1 17-18|0.1.0 0-1|0.1.1 9-10|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:15.815
# ::node	0	and	9-10
# ::node	0.0	worry-01	8-9
# ::node	0.0.0	crazy	4-5
# ::node	0.0.0.0	definite	1-2
# ::node	0.1	understand-01	14-15
# ::node	0.1.0	issue	17-18
# ::node	0.1.0.0	surge-01	20-21
# ::node	0.1.1	you	0-1
# ::root	0	and
# ::edge	and	op1	understand-01	0	0.1	
# ::edge	crazy	domain	worry-01	0.0.0	0.0	
# ::edge	crazy	mod	definite	0.0.0	0.0.0.0	
# ::edge	surge-01	ARG1	issue	0.1.0.0	0.1.0	
# ::edge	understand-01	ARG0	issue	0.1	0.1.0	
# ::edge	understand-01	ARG1	you	0.1	0.1.1	
# ::edge	worry-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (w / worry-01 
            :domain-of (c / crazy 
                  :mod (d / definite))) 
      :op1 (u / understand-01 
            :ARG0 (i / issue 
                  :ARG1-of (s / surge-01)) 
            :ARG1 (y / you)))

# ::snt I go to therapy (for other reasons also) and they have encouraged me to pick a number of times to check, obviously that is less than 20, and to stick to it and cut down that way.
# ::tok I go to therapy ( for other reasons also ) and they have encouraged me to pick a number of times to check , obviously that is less than 20 , and to stick to it and cut down that way .
# ::alignments 28-29|0.1.1.0.0.1.0.1.0+0.1.1.0.0.1.0.1+0.1.1.0.0.1.0 10-11|0 16-17|0.1.1 31-32|0.1.1.0 33-34|0.1.1.0.1.1.0 13-14|0.1 18-19|0.1.1.0.1.1.0.0 36-37|0.1.1.0.1.1 0-1|0.0.1 0-1|0.0.2 1-2|0.0 22-23|0.1.1.0.0 11-12|0.1.0 26-27|0.1.1.0.0.1 27-28|0.1.1.0.0.1.0.0 20-21|0.1.1.0.0.0 14-15|0.1.1.1 37-38|0.1.1.0.1 3-4|0.0.0 40-41|0.1.1.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:24.828
# ::node	0	and	10-11
# ::node	0.0	go-02	1-2
# ::node	0.0.0	teeter-01	3-4
# ::node	0.0.1	i	0-1
# ::node	0.0.2	1	0-1
# ::node	0.1	encourage-01	13-14
# ::node	0.1.0	country	11-12
# ::node	0.1.1	pick-01	16-17
# ::node	0.1.1.0	and	31-32
# ::node	0.1.1.0.0	check-01	22-23
# ::node	0.1.1.0.0.0	time	20-21
# ::node	0.1.1.0.0.1	be-02	26-27
# ::node	0.1.1.0.0.1.0	person	28-29
# ::node	0.1.1.0.0.1.0.0	less-than	27-28
# ::node	0.1.1.0.0.1.0.1	name	28-29
# ::node	0.1.1.0.0.1.0.1.0	"Than"	28-29
# ::node	0.1.1.0.1	cut-02	37-38
# ::node	0.1.1.0.1.0	way	40-41
# ::node	0.1.1.0.1.1	and	36-37
# ::node	0.1.1.0.1.1.0	stick-01	33-34
# ::node	0.1.1.0.1.1.0.0	number	18-19
# ::node	0.1.1.1	i	14-15
# ::root	0	and
# ::edge	and	op1	check-01	0.1.1.0	0.1.1.0.0	
# ::edge	and	op1	go-02	0	0.0	
# ::edge	and	op1	stick-01	0.1.1.0.1.1	0.1.1.0.1.1.0	
# ::edge	and	op2	cut-02	0.1.1.0	0.1.1.0.1	
# ::edge	and	op2	cut-02	0.1.1.0.1.1	0.1.1.0.1	
# ::edge	and	op2	encourage-01	0	0.1	
# ::edge	be-02	ARG1	person	0.1.1.0.0.1	0.1.1.0.0.1.0	
# ::edge	check-01	ARG0	time	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	check-01	ARG1	be-02	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	cut-02	ARG1	way	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	encourage-01	ARG0	country	0.1	0.1.0	
# ::edge	encourage-01	ARG2	pick-01	0.1	0.1.1	
# ::edge	go-02	ARG4	teeter-01	0.0	0.0.0	
# ::edge	go-02	manner	1	0.0	0.0.2	
# ::edge	go-02	manner	i	0.0	0.0.1	
# ::edge	less-than	calendar	person	0.1.1.0.0.1.0.0	0.1.1.0.0.1.0	
# ::edge	name	op1	"Than"	0.1.1.0.0.1.0.1	0.1.1.0.0.1.0.1.0	
# ::edge	person	name	name	0.1.1.0.0.1.0	0.1.1.0.0.1.0.1	
# ::edge	pick-01	ARG1	and	0.1.1	0.1.1.0	
# ::edge	pick-01	ARG6	i	0.1.1	0.1.1.1	
# ::edge	stick-01	ARG1	number	0.1.1.0.1.1.0	0.1.1.0.1.1.0.0	
(a / and 
      :op1 (g / go-02 
            :ARG4 (t2 / teeter-01) 
            :manner (i / i) 
            :manner 1) 
      :op2 (e / encourage-01 
            :ARG0 (c2 / country) 
            :ARG2 (p2 / pick-01 
                  :ARG1 (a2 / and 
                        :op1 (c / check-01 
                              :ARG0 (t / time) 
                              :ARG1 (b / be-02 
                                    :ARG1 (p / person 
                                          :calendar-of (l / less-than) 
                                          :name (n / name 
                                                :op1 "Than")))) 
                        :op2 (c3 / cut-02 
                              :ARG1 (w / way) 
                              :op-of (a3 / and 
                                    :op1 (s / stick-01 
                                          :ARG1 (n2 / number))))) 
                  :ARG6 (i2 / i))))

# ::snt I think the idea is to teach me, I'm still 'okay' if I check 5 times or 20 times.
# ::tok I think the idea is to teach me , I 'm still ' okay ' if I check 5 times or 20 times .
# ::alignments 7-8|0.0.0.0.0 13-14|0 12-13|0.3 0-1|0.0.2 22-23|0.2.1.0 20-21|0.2.1 0-1|0.0.1 1-2|0.0 17-18|0.2 3-4|0.0.0 6-7|0.0.0.0 19-20|0.2.0 11-12|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:28.040
# ::node	0	okay-01	13-14
# ::node	0.0	think-01	1-2
# ::node	0.0.0	idea	3-4
# ::node	0.0.0.0	teach-01	6-7
# ::node	0.0.0.0.0	i	7-8
# ::node	0.0.1	1	0-1
# ::node	0.0.2	i	0-1
# ::node	0.1	still	11-12
# ::node	0.2	check-01	17-18
# ::node	0.2.0	time	19-20
# ::node	0.2.1	or	20-21
# ::node	0.2.1.0	time	22-23
# ::node	0.3	x	12-13
# ::root	0	okay-01
# ::edge	check-01	ARG1	time	0.2	0.2.0	
# ::edge	check-01	ARG2	or	0.2	0.2.1	
# ::edge	okay-01	ARG0	think-01	0	0.0	
# ::edge	okay-01	ARG1	still	0	0.1	
# ::edge	okay-01	ARG2	check-01	0	0.2	
# ::edge	okay-01	ARG6	x	0	0.3	
# ::edge	or	op1	time	0.2.1	0.2.1.0	
# ::edge	teach-01	ARG0	idea	0.0.0.0	0.0.0	
# ::edge	teach-01	ARG1	i	0.0.0.0	0.0.0.0.0	
# ::edge	think-01	ARG1	idea	0.0	0.0.0	
# ::edge	think-01	manner	1	0.0	0.0.1	
# ::edge	think-01	manner	i	0.0	0.0.2	
(o / okay-01 
      :ARG0 (t2 / think-01 
            :ARG1 (i3 / idea 
                  :ARG0-of (t3 / teach-01 
                        :ARG1 (i / i))) 
            :manner 1 
            :manner (i2 / i)) 
      :ARG1 (s / still) 
      :ARG2 (c / check-01 
            :ARG1 (t4 / time) 
            :ARG2 (o2 / or 
                  :op1 (t / time))) 
      :ARG6 (x / x))

# ::snt So far I have been a lot better, I think there is definitely hope of improvement for anyone that wants it.
# ::tok So far I have been a lot better , I think there is definitely hope of improvement for anyone that wants it .
# ::alignments 16-17|0.0.0.1 20-21|0.0.0.0 6-7|0.1.0 14-15|0.0.0 0-1|0.0.0.0.0 7-8|0.1.1+0.1 10-11|0 13-14|0.0 18-19|0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:28.535
# ::node	0	think-01	10-11
# ::node	0.0	definite	13-14
# ::node	0.0.0	hope-01	14-15
# ::node	0.0.0.0	want-01	20-21
# ::node	0.0.0.0.0	so	0-1
# ::node	0.0.0.1	improve-01	16-17
# ::node	0.0.0.1.0	anyone	18-19
# ::node	0.1	good	7-8
# ::node	0.1.0	lot	6-7
# ::node	0.1.1	more	7-8
# ::root	0	think-01
# ::edge	good	calendar	lot	0.1	0.1.0	
# ::edge	good	degree	more	0.1	0.1.1	
# ::edge	hope-01	ARG1	improve-01	0.0.0	0.0.0.1	
# ::edge	hope-01	ARG6	definite	0.0.0	0.0	
# ::edge	improve-01	ARG1	anyone	0.0.0.1	0.0.0.1.0	
# ::edge	think-01	ARG0	definite	0	0.0	
# ::edge	think-01	ARG6	good	0	0.1	
# ::edge	want-01	ARG0	hope-01	0.0.0.0	0.0.0	
# ::edge	want-01	ARG1	so	0.0.0.0	0.0.0.0.0	
(t / think-01 
      :ARG0 (d / definite 
            :ARG6-of (h / hope-01 
                  :ARG0-of (w / want-01 
                        :ARG1 (s / so)) 
                  :ARG1 (i / improve-01 
                        :ARG1 (a / anyone)))) 
      :ARG6 (g / good 
            :calendar (l / lot) 
            :degree (m / more)))

# ::snt Usually I'm pretty calm about things and like to take things as they come and not to worry too much.
# ::tok Usually I 'm pretty calm about things and like to take things as they come and not to worry too much .
# ::alignments 0-1|0.1.0.0 14-15|0 20-21|0.0.0.1.0.1 19-20|0.0.0.1.0.0 10-11|0.0.0 12-13|0.0 4-5|0.1.0 6-7|0.1.0.1 18-19|0.0.0.1.0 7-8|0.1 15-16|0.0.0.1 11-12|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:29.183
# ::node	0	come-01	14-15
# ::node	0.0	ask-01	12-13
# ::node	0.0.0	take-01	10-11
# ::node	0.0.0.0	thing	11-12
# ::node	0.0.0.1	and	15-16
# ::node	0.0.0.1.0	worry-01	18-19
# ::node	0.0.0.1.0.0	too	19-20
# ::node	0.0.0.1.0.1	much	20-21
# ::node	0.1	and	7-8
# ::node	0.1.0	calm-01	4-5
# ::node	0.1.0.0	usual	0-1
# ::node	0.1.0.1	thing	6-7
# ::root	0	come-01
# ::edge	and	op1	calm-01	0.1	0.1.0	
# ::edge	and	op1	take-01	0.0.0.1	0.0.0	
# ::edge	and	op2	worry-01	0.0.0.1	0.0.0.1.0	
# ::edge	ask-01	ARG0	come-01	0.0	0	
# ::edge	ask-01	ARG1	take-01	0.0	0.0.0	
# ::edge	calm-01	ARG1	usual	0.1.0	0.1.0.0	
# ::edge	calm-01	ARG2	thing	0.1.0	0.1.0.1	
# ::edge	come-01	ARG1	and	0	0.1	
# ::edge	take-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	worry-01	ARG1	too	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	worry-01	degree	much	0.0.0.1.0	0.0.0.1.0.1	
(c / come-01 
      :ARG0-of (a / ask-01 
            :ARG1 (t2 / take-01 
                  :ARG1 (t4 / thing) 
                  :op-of (a3 / and 
                        :op1 (w / worry-01 
                              :ARG1 (t / too) 
                              :degree (m / much))))) 
      :ARG1 (a2 / and 
            :op1 (c2 / calm-01 
                  :ARG1 (u / usual) 
                  :ARG2 (t3 / thing))))

# ::snt However, over the last month or two I've found myself becoming really anxious about things, and I'm not talking about a mere out of the blue feeling of nervousness.
# ::tok However , over the last month or two I 've found myself becoming really anxious about things , and I 'm not talking about a mere out of the blue feeling of nervousness .
# ::alignments 13-14|0.3.1 6-7|0.4.1 2-3|0.4 0-1|0.1.0.0+0.1.0+0.1 16-17|0.2 12-13|0 29-30|0.4.1.0.0.0.0 0-1|0.0 22-23|0.4.0 0-4|0.4.1.0.1+0.4.1.0.2+0.4.1.0.3+0.4.1.0 14-15|0.3 25-26|0.3.0 24-25|0.4.1.0.0 30-31|0.4.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:30.615
# ::node	0	become-01	12-13
# ::node	0.0	1	0-1
# ::node	0.1	country	0-1
# ::node	0.1.0	name	0-1
# ::node	0.1.0.0	"Russia"	0-1
# ::node	0.2	thing	16-17
# ::node	0.3	annul-01	14-15
# ::node	0.3.0	mere	25-26
# ::node	0.3.1	really	13-14
# ::node	0.4	over	2-3
# ::node	0.4.0	talk-01	22-23
# ::node	0.4.1	or	6-7
# ::node	0.4.1.0	date-entity	0-4
# ::node	0.4.1.0.0	ah-01	24-25
# ::node	0.4.1.0.0.0	fling-01	30-31
# ::node	0.4.1.0.0.0.0	blue	29-30
# ::node	0.4.1.0.1	month	0-4
# ::node	0.4.1.0.2	last	0-4
# ::node	0.4.1.0.3	the	0-4
# ::root	0	become-01
# ::edge	ah-01	ARG1	date-entity	0.4.1.0.0	0.4.1.0	
# ::edge	annul-01	ARG1	mere	0.3	0.3.0	
# ::edge	annul-01	mod	really	0.3	0.3.1	
# ::edge	become-01	ARG0	1	0	0.0	
# ::edge	become-01	ARG1	country	0	0.1	
# ::edge	become-01	ARG2	thing	0	0.2	
# ::edge	become-01	ARG6	annul-01	0	0.3	
# ::edge	become-01	time	over	0	0.4	
# ::edge	country	name	name	0.1	0.1.0	
# ::edge	date-entity	op1	or	0.4.1.0	0.4.1	
# ::edge	date-entity	time	last	0.4.1.0	0.4.1.0.2	
# ::edge	date-entity	time	month	0.4.1.0	0.4.1.0.1	
# ::edge	date-entity	time	the	0.4.1.0	0.4.1.0.3	
# ::edge	fling-01	ARG1	ah-01	0.4.1.0.0.0	0.4.1.0.0	
# ::edge	fling-01	mod	blue	0.4.1.0.0.0	0.4.1.0.0.0.0	
# ::edge	name	op1	"Russia"	0.1.0	0.1.0.0	
# ::edge	over	calendar	or	0.4	0.4.1	
# ::edge	talk-01	ARG1	over	0.4.0	0.4	
(b / become-01 
      :ARG0 1 
      :ARG1 (c / country 
            :name (n / name 
                  :op1 "Russia")) 
      :ARG2 (t / thing) 
      :ARG6 (a / annul-01 
            :ARG1 (m2 / mere) 
            :mod (r / really)) 
      :time (o2 / over 
            :ARG1-of (t2 / talk-01) 
            :calendar (o / or 
                  :op-of (d / date-entity 
                        :ARG1-of (a2 / ah-01 
                              :ARG1-of (f / fling-01 
                                    :mod (b2 / blue))) 
                        :time (m / month) 
                        :time (l / last) 
                        :time (t3 / the)))))

# ::snt I have begun to feel irrationally panicky about a variety of things which beforehand wouldn't worry me too much or even cross my mind as something to cause alarm bells to ring in my head.
# ::tok I have begun to feel irrationally panicky about a variety of things which beforehand would n't worry me too much or even cross my mind as something to cause alarm bells to ring in my head .
# ::alignments 28-29|0 4-5|0.1.0.0.0.1 30-31|0.1 18-19|0.0.0.2.0.0.1 17-18|0.0.0.2.0.0.0 26-27|0.0.1 22-23|0.0.0 32-33|0.1.0 0-1|0.1.0.0.0.1.0.0 11-12|0.0.0.0 35-36|0.1.0.0 24-25|0.0 20-21|0.0.0.2 6-7|0.1.0.0.0.0 2-3|0.1.0.0.0.1.0 29-30|0.1.1 16-17|0.0.0.2.0 9-10|0.1.0.0.0 19-20|0.0.0.2.0.0 21-22|0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:32.591
# ::node	0	cause-01	28-29
# ::node	0.0	mind	24-25
# ::node	0.0.0	cross-04	22-23
# ::node	0.0.0.0	thing	11-12
# ::node	0.0.0.1	even	21-22
# ::node	0.0.0.2	or	20-21
# ::node	0.0.0.2.0	worry-02	16-17
# ::node	0.0.0.2.0.0	much	19-20
# ::node	0.0.0.2.0.0.0	i	17-18
# ::node	0.0.0.2.0.0.1	too	18-19
# ::node	0.0.1	something	26-27
# ::node	0.1	bell	30-31
# ::node	0.1.0	ring-01	32-33
# ::node	0.1.0.0	head-01	35-36
# ::node	0.1.0.0.0	variety	9-10
# ::node	0.1.0.0.0.0	panic-01	6-7
# ::node	0.1.0.0.0.1	feel-01	4-5
# ::node	0.1.0.0.0.1.0	begin-01	2-3
# ::node	0.1.0.0.0.1.0.0	i	0-1
# ::node	0.1.1	alarm-01	29-30
# ::root	0	cause-01
# ::edge	alarm-01	ARG1	bell	0.1.1	0.1	
# ::edge	begin-01	ARG0	i	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	begin-01	ARG1	feel-01	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	cause-01	ARG0	mind	0	0.0	
# ::edge	cause-01	ARG1	bell	0	0.1	
# ::edge	cross-04	ARG0	thing	0.0.0	0.0.0.0	
# ::edge	cross-04	ARG1	mind	0.0.0	0.0	
# ::edge	cross-04	manner	even	0.0.0	0.0.0.1	
# ::edge	feel-01	ARG1	variety	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	head-01	ARG1	variety	0.1.0.0	0.1.0.0.0	
# ::edge	mind	location	something	0.0	0.0.1	
# ::edge	much	domain	i	0.0.0.2.0.0	0.0.0.2.0.0.0	
# ::edge	or	op1	worry-02	0.0.0.2	0.0.0.2.0	
# ::edge	or	op2	cross-04	0.0.0.2	0.0.0	
# ::edge	panic-01	ARG1	variety	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	ring-01	ARG1	bell	0.1.0	0.1	
# ::edge	ring-01	concession	head-01	0.1.0	0.1.0.0	
# ::edge	too	quant	much	0.0.0.2.0.0.1	0.0.0.2.0.0	
# ::edge	worry-02	ARG1	much	0.0.0.2.0	0.0.0.2.0.0	
(c / cause-01 
      :ARG0 (m / mind 
            :ARG1-of (c2 / cross-04 
                  :ARG0 (t2 / thing) 
                  :manner (e / even) 
                  :op-of (o / or 
                        :op1 (w / worry-02 
                              :ARG1 (m2 / much 
                                    :domain (i / i) 
                                    :quant-of (t / too))))) 
            :location (s / something)) 
      :ARG1 (b / bell 
            :ARG1-of (r / ring-01 
                  :concession (h / head-01 
                        :ARG1 (v / variety 
                              :ARG1-of (p / panic-01) 
                              :ARG1-of (f / feel-01 
                                    :ARG1-of (b2 / begin-01 
                                          :ARG0 (i2 / i)))))) 
            :ARG1-of (a / alarm-01)))

# ::snt I'm not sure if it's the change in lifestyle (going from care-free student to unemployed graduate) that is causing this or if it's a sign of other issues, but it's beginning to bug me as it's affecting my confidence and happiness.
# ::tok I 'm not sure if it 's the change in lifestyle ( going from care - free student to unemployed graduate ) that is causing this or if it 's a sign of other issues , but it 's beginning to bug me as it 's affecting my confidence and happiness .
# ::alignments 37-38|0.0.0.2.0 46-47|0.0.0.0.0 31-32|0.0 22-23|0.0.0.0.0.1.0 34-35|0.0.0.2 44-45|0.0.0.0 23-24|0.0.0.0.0.1.0.1 39-40|0.0.0.2.0.1 24-25|0.0.0.0.0.1.0.0 47-48|0.0.0.0.0.1 8-9|0.0.0.1 3-4|0.0.0.1.0.0 0-1|0.0.0.1.0 29-30|0 48-49|0.0.0.0.0.0 5-6|0.0.0.1.0.0.0 26-27|0.0.0 35-36|0.0.0.2.0.0 32-33|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:39.098
# ::node	0	sign-01	29-30
# ::node	0.0	other	31-32
# ::node	0.0.0	country	26-27
# ::node	0.0.0.0	affect-01	44-45
# ::node	0.0.0.0.0	confidence	46-47
# ::node	0.0.0.0.0.0	happiness	48-49
# ::node	0.0.0.0.0.1	and	47-48
# ::node	0.0.0.0.0.1.0	cause-01	22-23
# ::node	0.0.0.0.0.1.0.0	or	24-25
# ::node	0.0.0.0.0.1.0.1	this	23-24
# ::node	0.0.0.1	change-01	8-9
# ::node	0.0.0.1.0	i	0-1
# ::node	0.0.0.1.0.0	surge-01	3-4
# ::node	0.0.0.1.0.0.0	country	5-6
# ::node	0.0.0.2	bunt-01	34-35
# ::node	0.0.0.2.0	begin-01	37-38
# ::node	0.0.0.2.0.0	country	35-36
# ::node	0.0.0.2.0.1	bug	39-40
# ::node	0.1	issue	32-33
# ::root	0	sign-01
# ::edge	affect-01	ARG1	country	0.0.0.0	0.0.0	
# ::edge	affect-01	ARG6	confidence	0.0.0.0	0.0.0.0.0	
# ::edge	begin-01	ARG0	country	0.0.0.2.0	0.0.0.2.0.0	
# ::edge	begin-01	ARG1	bug	0.0.0.2.0	0.0.0.2.0.1	
# ::edge	bunt-01	ARG1	begin-01	0.0.0.2	0.0.0.2.0	
# ::edge	cause-01	ARG0	and	0.0.0.0.0.1.0	0.0.0.0.0.1	
# ::edge	cause-01	ARG1	or	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	cause-01	ARG6	this	0.0.0.0.0.1.0	0.0.0.0.0.1.0.1	
# ::edge	change-01	ARG1	i	0.0.0.1	0.0.0.1.0	
# ::edge	confidence	calendar	happiness	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	confidence	poss	and	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	country	op1	change-01	0.0.0	0.0.0.1	
# ::edge	country	op2	other	0.0.0	0.0	
# ::edge	country	op3	bunt-01	0.0.0	0.0.0.2	
# ::edge	sign-01	ARG1	other	0	0.0	
# ::edge	sign-01	ARG6	issue	0	0.1	
# ::edge	surge-01	ARG1	i	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	surge-01	ARG6	country	0.0.0.1.0.0	0.0.0.1.0.0.0	
(s2 / sign-01 
      :ARG1 (o / other 
            :op-of (c5 / country 
                  :ARG1-of (a / affect-01 
                        :ARG6 (c / confidence 
                              :calendar (h / happiness) 
                              :poss (a2 / and 
                                    :ARG0-of (c2 / cause-01 
                                          :ARG1 (o2 / or) 
                                          :ARG6 (t / this))))) 
                  :op1 (c3 / change-01 
                        :ARG1 (i / i 
                              :ARG1-of (s / surge-01 
                                    :ARG6 (c4 / country)))) 
                  :op2 (b2 / bunt-01 
                        :ARG1 (b / begin-01 
                              :ARG0 (c6 / country) 
                              :ARG1 (b3 / bug))))) 
      :ARG6 (i2 / issue))

# ::snt I've spoken to a few people about it including my parents but they all think the same: that I'm going through a random phase and that I should hold off taking action until it is clear that it is a serious problem
# ::tok I 've spoken to a few people about it including my parents but they all think the same : that I 'm going through a random phase and that I should hold off taking action until it is clear that it is a serious problem
# ::alignments 12-13|0.2.1 29-30|0.2.1.0.2.0.0 17-18|0.2.1.1.1 26-27|0.2.1.0.1 27-28|0.2.1.0.2 44-45|0.2.1.0.0 13-14|0.2.1.1.0 34-35|0.2.1.0.2.0.1 2-3|0 31-32|0.2.1.0.2.0 43-44|0.2.1.0.0.0 6-7|0.1 0-1|0.0 9-10|0.2 22-23|0.2.1.0 11-12|0.2.0 25-26|0.2.1.0.1.0 5-6|0.1.0 38-39|0.2.1.1.1.0 30-31|0.2.1.0.2.0.2 14-15|0.2.1.1.2 15-16|0.2.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:42.028
# ::node	0	speak-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	person	6-7
# ::node	0.1.0	few	5-6
# ::node	0.2	include-01	9-10
# ::node	0.2.0	parent	11-12
# ::node	0.2.1	bunt-01	12-13
# ::node	0.2.1.0	go-12	22-23
# ::node	0.2.1.0.0	problem	44-45
# ::node	0.2.1.0.0.0	serious	43-44
# ::node	0.2.1.0.1	phase	26-27
# ::node	0.2.1.0.1.0	random	25-26
# ::node	0.2.1.0.2	and	27-28
# ::node	0.2.1.0.2.0	hold-08	31-32
# ::node	0.2.1.0.2.0.0	i	29-30
# ::node	0.2.1.0.2.0.1	action	34-35
# ::node	0.2.1.0.2.0.2	shoulder-01	30-31
# ::node	0.2.1.1	think-01	15-16
# ::node	0.2.1.1.0	country	13-14
# ::node	0.2.1.1.1	shame-01	17-18
# ::node	0.2.1.1.1.0	clear	38-39
# ::node	0.2.1.1.2	all	14-15
# ::root	0	speak-01
# ::edge	and	op1	go-12	0.2.1.0.2	0.2.1.0	
# ::edge	and	op2	hold-08	0.2.1.0.2	0.2.1.0.2.0	
# ::edge	bunt-01	ARG1	go-12	0.2.1	0.2.1.0	
# ::edge	bunt-01	ARG2	think-01	0.2.1	0.2.1.1	
# ::edge	bunt-01	ARG6	include-01	0.2.1	0.2	
# ::edge	go-12	ARG1	problem	0.2.1.0	0.2.1.0.0	
# ::edge	go-12	ARG2	phase	0.2.1.0	0.2.1.0.1	
# ::edge	hold-08	ARG0	i	0.2.1.0.2.0	0.2.1.0.2.0.0	
# ::edge	hold-08	ARG1	action	0.2.1.0.2.0	0.2.1.0.2.0.1	
# ::edge	include-01	ARG1	parent	0.2	0.2.0	
# ::edge	person	quant	few	0.1	0.1.0	
# ::edge	phase	mod	random	0.2.1.0.1	0.2.1.0.1.0	
# ::edge	problem	mod	serious	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	shame-01	ARG0	clear	0.2.1.1.1	0.2.1.1.1.0	
# ::edge	shoulder-01	ARG1	hold-08	0.2.1.0.2.0.2	0.2.1.0.2.0	
# ::edge	speak-01	ARG0	i	0	0.0	
# ::edge	speak-01	ARG1	person	0	0.1	
# ::edge	speak-01	ARG2	include-01	0	0.2	
# ::edge	think-01	ARG0	country	0.2.1.1	0.2.1.1.0	
# ::edge	think-01	ARG1	shame-01	0.2.1.1	0.2.1.1.1	
# ::edge	think-01	ARG6	all	0.2.1.1	0.2.1.1.2	
(s2 / speak-01 
      :ARG0 (i2 / i) 
      :ARG1 (p3 / person 
            :quant (f / few)) 
      :ARG2 (i3 / include-01 
            :ARG1 (p4 / parent) 
            :ARG6-of (b / bunt-01 
                  :ARG1 (g / go-12 
                        :ARG1 (p2 / problem 
                              :mod (s3 / serious)) 
                        :ARG2 (p / phase 
                              :mod (r / random)) 
                        :op-of (a / and 
                              :op1 (h / hold-08 
                                    :ARG0 (i / i) 
                                    :ARG1 (a2 / action) 
                                    :ARG1-of (s4 / shoulder-01)))) 
                  :ARG2 (t / think-01 
                        :ARG0 (c / country) 
                        :ARG1 (s / shame-01 
                              :ARG0 (c2 / clear)) 
                        :ARG6 (a3 / all)))))

# ::snt So was wondering what's the best thing to do?
# ::tok So was wondering what 's the best thing to do ?
# ::alignments 6-7|0.0.0.1.0+0.0.0.1 7-8|0.0.0 0-1|0.1 5-6|0.0.1.0+0.0.1+0.0 9-10|0.0.0.0 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:42.275
# ::node	0	wonder-01	2-3
# ::node	0.0	country	5-6
# ::node	0.0.0	thing	7-8
# ::node	0.0.0.0	do-02	9-10
# ::node	0.0.0.1	good	6-7
# ::node	0.0.0.1.0	most	6-7
# ::node	0.0.1	name	5-6
# ::node	0.0.1.0	"North"	5-6
# ::node	0.1	so	0-1
# ::root	0	wonder-01
# ::edge	country	name	name	0.0	0.0.1	
# ::edge	do-02	ARG1	thing	0.0.0.0	0.0.0	
# ::edge	good	degree	most	0.0.0.1	0.0.0.1.0	
# ::edge	name	op1	"North"	0.0.1	0.0.1.0	
# ::edge	thing	mod	country	0.0.0	0.0	
# ::edge	thing	mod	good	0.0.0	0.0.0.1	
# ::edge	wonder-01	ARG1	country	0	0.0	
# ::edge	wonder-01	mod	so	0	0.1	
(w / wonder-01 
      :ARG1 (c / country 
            :mod-of (t / thing 
                  :ARG1-of (d / do-02) 
                  :mod (g / good 
                        :degree (m / most))) 
            :name (n / name 
                  :op1 "North")) 
      :mod (s / so))

# ::snt Speak to a doctor about it and see if anti-anxiety pills could take the edge off of things?
# ::tok Speak to a doctor about it and see if anti - anxiety pills could take the edge off of things ?
# ::alignments 6-7|0 10-11|0.1.0.0.0.0 12-13|0.1.0.0 3-4|0.0.0 17-18|0.1.0.1 14-15|0.1.0 11-12|0.1.0.0.0 0-1|0.0 7-8|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:42.589
# ::node	0	and	6-7
# ::node	0.0	speak-01	0-1
# ::node	0.0.0	doctor	3-4
# ::node	0.1	see-01	7-8
# ::node	0.1.0	edge-01	14-15
# ::node	0.1.0.0	take-01	12-13
# ::node	0.1.0.0.0	possible	11-12
# ::node	0.1.0.0.0.0	pill	10-11
# ::node	0.1.0.1	thing	17-18
# ::root	0	and
# ::edge	and	op1	speak-01	0	0.0	
# ::edge	and	op2	see-01	0	0.1	
# ::edge	edge-01	ARG1	take-01	0.1.0	0.1.0.0	
# ::edge	edge-01	mod	thing	0.1.0	0.1.0.1	
# ::edge	possible	mod	pill	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	see-01	ARG1	edge-01	0.1	0.1.0	
# ::edge	speak-01	ARG1	doctor	0.0	0.0.0	
# ::edge	take-01	ARG1	possible	0.1.0.0	0.1.0.0.0	
(a / and 
      :op1 (s / speak-01 
            :ARG1 (d / doctor)) 
      :op2 (s2 / see-01 
            :ARG1 (e / edge-01 
                  :ARG1 (t / take-01 
                        :ARG1 (p2 / possible 
                              :mod (p / pill))) 
                  :mod (t2 / thing))))

# ::snt See if I can speak to a counsellor?
# ::tok See if I can speak to a counsellor ?
# ::alignments 0-1|0 4-5|0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:42.666
# ::node	0	see-01	0-1
# ::node	0.0	possible	3-4
# ::node	0.0.0	speak-01	4-5
# ::root	0	see-01
# ::edge	possible	domain	speak-01	0.0	0.0.0	
# ::edge	see-01	ARG1	possible	0	0.0	
(s / see-01 
      :ARG1 (p / possible 
            :domain (s2 / speak-01)))

# ::snt Or should I take the advice given by the close people around me and just keep an eye on the anxiety until it becomes a problem?
# ::tok Or should I take the advice given by the close people around me and just keep an eye on the anxiety until it becomes a problem ?
# ::alignments 14-15|0.1.1 2-3|0.0.0 11-12|0.0.1.0 1-2|0.0.2 20-21|0.1.0.0 5-6|0.0.1 21-22|0.1.3 17-18|0.1.0 15-16|0.1 23-24|0.1.3.0 3-4|0.0 25-26|0.1.3.0.1 13-14|0 0-1|0.1.2 9-10|0.1.3.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:43.839
# ::node	0	and	13-14
# ::node	0.0	take-01	3-4
# ::node	0.0.0	i	2-3
# ::node	0.0.1	advise-01	5-6
# ::node	0.0.1.0	around	11-12
# ::node	0.0.2	shoulder-01	1-2
# ::node	0.1	keep-01	15-16
# ::node	0.1.0	eye-01	17-18
# ::node	0.1.0.0	anxiety	20-21
# ::node	0.1.1	just	14-15
# ::node	0.1.2	or	0-1
# ::node	0.1.3	until	21-22
# ::node	0.1.3.0	become-01	23-24
# ::node	0.1.3.0.0	close	9-10
# ::node	0.1.3.0.1	problem	25-26
# ::root	0	and
# ::edge	advise-01	ARG1	around	0.0.1	0.0.1.0	
# ::edge	and	op1	take-01	0	0.0	
# ::edge	and	op2	keep-01	0	0.1	
# ::edge	become-01	ARG0	close	0.1.3.0	0.1.3.0.0	
# ::edge	become-01	ARG1	problem	0.1.3.0	0.1.3.0.1	
# ::edge	eye-01	ARG1	anxiety	0.1.0	0.1.0.0	
# ::edge	keep-01	ARG1	eye-01	0.1	0.1.0	
# ::edge	keep-01	ARG6	just	0.1	0.1.1	
# ::edge	keep-01	time	until	0.1	0.1.3	
# ::edge	or	op1	keep-01	0.1.2	0.1	
# ::edge	shoulder-01	ARG1	take-01	0.0.2	0.0	
# ::edge	take-01	ARG0	i	0.0	0.0.0	
# ::edge	take-01	ARG1	advise-01	0.0	0.0.1	
# ::edge	until	op1	become-01	0.1.3	0.1.3.0	
(a4 / and 
      :op1 (t / take-01 
            :ARG0 (i / i) 
            :ARG1 (a3 / advise-01 
                  :ARG1 (a / around)) 
            :ARG1-of (s / shoulder-01)) 
      :op2 (k / keep-01 
            :ARG1 (e / eye-01 
                  :ARG1 (a2 / anxiety)) 
            :ARG6 (j / just) 
            :op-of (o / or) 
            :time (u / until 
                  :op1 (b / become-01 
                        :ARG0 (c / close) 
                        :ARG1 (p / problem)))))

# ::snt Well I woudnt try to keep an eye on ur anxiety for a start because that will make u tense and more likely to become more panicky (circle of demise there)
# ::tok Well I woudnt try to keep an eye on ur anxiety for a start because that will make u tense and more likely to become more panicky ( circle of demise there )
# ::alignments 3-4|0.0.0 24-25|0.2.1 5-6|0.0.0.0 25-26|0.2.1.0.0 20-21|0 13-14|0.0.0.0.0.0.0 17-18|0.0 21-22|0.2.0 10-11|0.0.0.0.0.0 19-20|0.1 7-8|0.0.0.0.0 26-27|0.2.1.0 22-23|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:49.638
# ::node	0	and	20-21
# ::node	0.0	make-01	17-18
# ::node	0.0.0	try-01	3-4
# ::node	0.0.0.0	keep-01	5-6
# ::node	0.0.0.0.0	eye-01	7-8
# ::node	0.0.0.0.0.0	anxiety	10-11
# ::node	0.0.0.0.0.0.0	start	13-14
# ::node	0.1	tense	19-20
# ::node	0.2	likely	22-23
# ::node	0.2.0	more	21-22
# ::node	0.2.1	become-01	24-25
# ::node	0.2.1.0	panic-01	26-27
# ::node	0.2.1.0.0	more	25-26
# ::root	0	and
# ::edge	and	op1	tense	0	0.1	
# ::edge	and	op2	likely	0	0.2	
# ::edge	anxiety	poss	start	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	become-01	ARG1	panic-01	0.2.1	0.2.1.0	
# ::edge	eye-01	ARG1	anxiety	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	keep-01	ARG1	eye-01	0.0.0.0	0.0.0.0.0	
# ::edge	likely	degree	more	0.2	0.2.0	
# ::edge	likely	domain	become-01	0.2	0.2.1	
# ::edge	make-01	ARG1	and	0.0	0	
# ::edge	panic-01	ARG6	more	0.2.1.0	0.2.1.0.0	
# ::edge	try-01	ARG1	keep-01	0.0.0	0.0.0.0	
# ::edge	try-01	condition	make-01	0.0.0	0.0	
(a / and 
      :ARG1-of (m2 / make-01 
            :condition-of (t / try-01 
                  :ARG1 (k / keep-01 
                        :ARG1 (e / eye-01 
                              :ARG1 (a2 / anxiety 
                                    :poss (s / start)))))) 
      :op1 (t2 / tense) 
      :op2 (l / likely 
            :degree (m3 / more) 
            :domain (b / become-01 
                  :ARG1 (p / panic-01 
                        :ARG6 (m / more)))))

# ::snt what I would try to do is focus on something that is garunteed to make you smile or feel happier as soon as you start to feel a bit panicky about anything.
# ::tok what I would try to do is focus on something that is garunteed to make you smile or feel happier as soon as you start to feel a bit panicky about anything .
# ::alignments 21-22|0.2.1.0.1 24-25|0.2.1.0.0 23-24|0.2.1.0.0.0.0 31-32|0.2.0.0 3-4|0.1.0 17-18|0.2.1 28-29|0.2.1.0.0.0.1 18-19|0.2.1.0 9-10|0.0 12-13|0.2.0 7-8|0 5-6|0.1 14-15|0.2 26-27|0.2.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:51.559
# ::node	0	focus-01	7-8
# ::node	0.0	something	9-10
# ::node	0.1	do-01	5-6
# ::node	0.1.0	try-01	3-4
# ::node	0.2	make-02	14-15
# ::node	0.2.0	garunteed-01	12-13
# ::node	0.2.0.0	anything	31-32
# ::node	0.2.1	or	17-18
# ::node	0.2.1.0	feel-01	18-19
# ::node	0.2.1.0.0	start-01	24-25
# ::node	0.2.1.0.0.0	feel-01	26-27
# ::node	0.2.1.0.0.0.0	you	23-24
# ::node	0.2.1.0.0.0.1	bit	28-29
# ::node	0.2.1.0.1	soon	21-22
# ::root	0	focus-01
# ::edge	do-01	ARG1	focus-01	0.1	0	
# ::edge	feel-01	ARG0	you	0.2.1.0.0.0	0.2.1.0.0.0.0	
# ::edge	feel-01	ARG1	bit	0.2.1.0.0.0	0.2.1.0.0.0.1	
# ::edge	feel-01	purpose	start-01	0.2.1.0	0.2.1.0.0	
# ::edge	feel-01	time	soon	0.2.1.0	0.2.1.0.1	
# ::edge	focus-01	ARG1	something	0	0.0	
# ::edge	garunteed-01	ARG0	anything	0.2.0	0.2.0.0	
# ::edge	garunteed-01	ARG1	make-02	0.2.0	0.2	
# ::edge	make-02	ARG1	focus-01	0.2	0	
# ::edge	or	op1	make-02	0.2.1	0.2	
# ::edge	or	op2	feel-01	0.2.1	0.2.1.0	
# ::edge	start-01	ARG1	feel-01	0.2.1.0.0	0.2.1.0.0.0	
# ::edge	try-01	ARG1	do-01	0.1.0	0.1	
(f2 / focus-01 
      :ARG1 (s3 / something) 
      :ARG1-of (d / do-01 
            :ARG1-of (t / try-01)) 
      :ARG1-of (m / make-02 
            :ARG1-of (g / garunteed-01 
                  :ARG0 (a / anything)) 
            :op-of (o / or 
                  :op1 (f / feel-01 
                        :purpose (s2 / start-01 
                              :ARG1 (f3 / feel-01 
                                    :ARG0 (y / you) 
                                    :ARG1 (b / bit))) 
                        :time (s / soon)))))

# ::snt Or if u cant do that-when you start to feel panicky, get one of your friends to make you laugh (it works for me and i suffer from random panic attacks lol
# ::tok Or if u cant do that - when you start to feel panicky , get one of your friends to make you laugh ( it works for me and i suffer from random panic attacks lol
# ::alignments 0-1|0.1.0.0.1 11-12|0.0 9-10|0 18-19|0.0.0.0.0 7-8|0.1 0-1|0.1.0.0.2 5-6|0.1.0.0 16-17|0.0.0.0.0.0 12-13|0.0.0 4-5|0.1.0.0.0 6-7|0.1.0 20-21|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:56.388
# ::node	0	feel-01	9-10
# ::node	0.0	and	11-12
# ::node	0.0.0	get-01	12-13
# ::node	0.0.0.0	laugh-01	20-21
# ::node	0.0.0.0.0	make-02	18-19
# ::node	0.0.0.0.0.0	friend	16-17
# ::node	0.1	start-01	7-8
# ::node	0.1.0	y	6-7
# ::node	0.1.0.0	thaw-01	5-6
# ::node	0.1.0.0.0	do-02	4-5
# ::node	0.1.0.0.1	1	0-1
# ::node	0.1.0.0.2	or	0-1
# ::root	0	feel-01
# ::edge	1	op1	thaw-01	0.1.0.0.1	0.1.0.0	
# ::edge	do-02	ARG1	thaw-01	0.1.0.0.0	0.1.0.0	
# ::edge	feel-01	ARG1	and	0	0.0	
# ::edge	friend	op1	make-02	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	get-01	ARG1	and	0.0.0	0.0	
# ::edge	laugh-01	ARG1	get-01	0.0.0.0	0.0.0	
# ::edge	make-02	ARG1	laugh-01	0.0.0.0.0	0.0.0.0	
# ::edge	or	op1	thaw-01	0.1.0.0.2	0.1.0.0	
# ::edge	start-01	ARG1	y	0.1	0.1.0	
# ::edge	start-01	ARG6	feel-01	0.1	0	
# ::edge	thaw-01	ARG1	y	0.1.0.0	0.1.0	
(f / feel-01 
      :ARG1 (a / and 
            :ARG1-of (g / get-01 
                  :ARG1-of (l / laugh-01 
                        :ARG1-of (m / make-02 
                              :op-of (f2 / friend))))) 
      :ARG6-of (s / start-01 
            :ARG1 (y / y 
                  :ARG1-of (t / thaw-01 
                        :ARG1-of (d / do-02) 
                        :op-of 1 
                        :op-of (o / or)))))

# ::snt This started happening to me, where I'd just start being really anxious over tiny things, although from the sound of things, not as severely as you.
# ::tok This started happening to me , where I 'd just start being really anxious over tiny things , although from the sound of things , not as severely as you .
# ::alignments 0-1|0.0 9-10|0.2.1 10-11|0.2 27-28|0.2.0.0 23-24|0.1.0 12-13|0.2.0.2 21-22|0.1.0.0 1-2|0 15-16|0.2.0.1.0 16-17|0.2.0.1 13-14|0.2.0 2-3|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:57.140
# ::node	0	start-01	1-2
# ::node	0.0	this	0-1
# ::node	0.1	happen-01	2-3
# ::node	0.1.0	thing	23-24
# ::node	0.1.0.0	sound	21-22
# ::node	0.2	start-01	10-11
# ::node	0.2.0	annul-01	13-14
# ::node	0.2.0.0	severe	27-28
# ::node	0.2.0.1	thing	16-17
# ::node	0.2.0.1.0	tiny	15-16
# ::node	0.2.0.2	really	12-13
# ::node	0.2.1	just	9-10
# ::root	0	start-01
# ::edge	annul-01	ARG1	severe	0.2.0	0.2.0.0	
# ::edge	annul-01	ARG2	thing	0.2.0	0.2.0.1	
# ::edge	annul-01	mod	really	0.2.0	0.2.0.2	
# ::edge	happen-01	ARG1	thing	0.1	0.1.0	
# ::edge	sound	mod	thing	0.1.0.0	0.1.0	
# ::edge	start-01	ARG0	this	0	0.0	
# ::edge	start-01	ARG1	annul-01	0.2	0.2.0	
# ::edge	start-01	ARG1	happen-01	0	0.1	
# ::edge	start-01	condition	start-01	0	0.2	
# ::edge	start-01	mod	just	0.2	0.2.1	
# ::edge	thing	mod	tiny	0.2.0.1	0.2.0.1.0	
(s4 / start-01 
      :ARG0 (t / this) 
      :ARG1 (h / happen-01 
            :ARG1 (t2 / thing 
                  :mod-of (s3 / sound))) 
      :condition (s / start-01 
            :ARG1 (a / annul-01 
                  :ARG1 (s2 / severe) 
                  :ARG2 (t4 / thing 
                        :mod (t3 / tiny)) 
                  :mod (r / really)) 
            :mod (j / just)))

# ::snt What I find helps is just talking about what is making you anxious to someone else.
# ::tok What I find helps is just talking about what is making you anxious to someone else .
# ::alignments 2-3|0.0.0 3-4|0 6-7|0.0 12-13|0.0.1.0 14-15|0.0.1.0.0 15-16|0.0.0.0 11-12|0.0.1.0.1 5-6|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:04:57.472
# ::node	0	help-01	3-4
# ::node	0.0	talk-01	6-7
# ::node	0.0.0	find-01	2-3
# ::node	0.0.0.0	else	15-16
# ::node	0.0.1	just	5-6
# ::node	0.0.1.0	annul-01	12-13
# ::node	0.0.1.0.0	someone	14-15
# ::node	0.0.1.0.1	you	11-12
# ::root	0	help-01
# ::edge	annul-01	ARG0	just	0.0.1.0	0.0.1	
# ::edge	annul-01	ARG1	someone	0.0.1.0	0.0.1.0.0	
# ::edge	annul-01	ARG6	you	0.0.1.0	0.0.1.0.1	
# ::edge	find-01	ARG1	else	0.0.0	0.0.0.0	
# ::edge	help-01	ARG1	talk-01	0	0.0	
# ::edge	talk-01	ARG1	find-01	0.0	0.0.0	
# ::edge	talk-01	ARG6	just	0.0	0.0.1	
(h / help-01 
      :ARG1 (t / talk-01 
            :ARG1 (f / find-01 
                  :ARG1 (e / else)) 
            :ARG6 (j / just 
                  :ARG0-of (a / annul-01 
                        :ARG1 (s / someone) 
                        :ARG6 (y / you)))))

# ::snt Perhaps not in a moany way but I found that mentioning the thing that I was worried about to my mum and seeing her react to the situation in a calm way (like I should have been reacting) made me feel better about it because I knew it wasn't a big deal and I didn't need to be anxious about it.
# ::tok Perhaps not in a moany way but I found that mentioning the thing that I was worried about to my mum and seeing her react to the situation in a calm way ( like I should have been reacting ) made me feel better about it because I knew it was n't a big deal and I did n't need to be anxious about it .
# ::alignments 22-23|0.1.0.2 0-1|0.1.0.0 43-44|0.0.0+0.0 12-13|0.1.0.1.0 31-32|0.1.0.2.0.0.0 48-49|0.2 21-22|0.1.0 5-6|0.1.0.0.0 59-60|0.2.0.0 10-11|0.1.0.1 53-54|0.2.0.1 54-55|0.2.0 16-17|0.1 24-25|0.1.0.2.0 62-63|0.2.0.0.0 27-28|0.1.0.2.0.0 6-7|0.1.0.0.0.0 42-43|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:10.138
# ::node	0	feel-01	42-43
# ::node	0.0	good	43-44
# ::node	0.0.0	more	43-44
# ::node	0.1	worry-02	16-17
# ::node	0.1.0	and	21-22
# ::node	0.1.0.0	possible	0-1
# ::node	0.1.0.0.0	way	5-6
# ::node	0.1.0.0.0.0	bunt-01	6-7
# ::node	0.1.0.1	mention-01	10-11
# ::node	0.1.0.1.0	thing	12-13
# ::node	0.1.0.2	see-01	22-23
# ::node	0.1.0.2.0	react-01	24-25
# ::node	0.1.0.2.0.0	situation	27-28
# ::node	0.1.0.2.0.0.0	way	31-32
# ::node	0.2	know-01	48-49
# ::node	0.2.0	deal-01	54-55
# ::node	0.2.0.0	need-01	59-60
# ::node	0.2.0.0.0	annul-01	62-63
# ::node	0.2.0.1	big	53-54
# ::root	0	feel-01
# ::edge	and	op1	possible	0.1.0	0.1.0.0	
# ::edge	and	op2	mention-01	0.1.0	0.1.0.1	
# ::edge	and	op3	worry-02	0.1.0	0.1	
# ::edge	and	op4	see-01	0.1.0	0.1.0.2	
# ::edge	bunt-01	ARG1	way	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	deal-01	ARG1	need-01	0.2.0	0.2.0.0	
# ::edge	deal-01	mod	big	0.2.0	0.2.0.1	
# ::edge	feel-01	ARG1	good	0	0.0	
# ::edge	feel-01	purpose	know-01	0	0.2	
# ::edge	good	degree	more	0.0	0.0.0	
# ::edge	know-01	ARG1	deal-01	0.2	0.2.0	
# ::edge	mention-01	ARG1	thing	0.1.0.1	0.1.0.1.0	
# ::edge	need-01	ARG1	annul-01	0.2.0.0	0.2.0.0.0	
# ::edge	react-01	ARG1	situation	0.1.0.2.0	0.1.0.2.0.0	
# ::edge	see-01	ARG1	react-01	0.1.0.2	0.1.0.2.0	
# ::edge	situation	location	way	0.1.0.2.0.0	0.1.0.2.0.0.0	
# ::edge	way	time	possible	0.1.0.0.0	0.1.0.0	
# ::edge	worry-02	ARG1	feel-01	0.1	0	
(f / feel-01 
      :ARG1 (g / good 
            :degree (m / more)) 
      :ARG1-of (w3 / worry-02 
            :op-of (a / and 
                  :op1 (p / possible 
                        :time-of (w2 / way 
                              :ARG1-of (b2 / bunt-01))) 
                  :op2 (m2 / mention-01 
                        :ARG1 (t / thing)) 
                  :op3 (s / see-01 
                        :ARG1 (r / react-01 
                              :ARG1 (s2 / situation 
                                    :location (w / way)))))) 
      :purpose (k / know-01 
            :ARG1 (d / deal-01 
                  :ARG1 (n / need-01 
                        :ARG1 (a2 / annul-01)) 
                  :mod (b / big))))

# ::snt However, if it gets worse, then yes, go to the doctor's.
# ::tok However , if it gets worse , then yes , go to the doctor 's .
# ::alignments 3-4|0.1.0 8-9|0.3.0+0.3 4-5|0.1 10-11|0 0-1|0.4.0.0+0.4.0+0.4 13-14|0.2 9-10|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:10.415
# ::node	0	go-01	10-11
# ::node	0.0	and	9-10
# ::node	0.1	get-03	4-5
# ::node	0.1.0	country	3-4
# ::node	0.2	doctor	13-14
# ::node	0.3	yes	8-9
# ::node	0.3.0	expressive	8-9
# ::node	0.4	country	0-1
# ::node	0.4.0	name	0-1
# ::node	0.4.0.0	"Russia"	0-1
# ::root	0	go-01
# ::edge	country	name	name	0.4	0.4.0	
# ::edge	get-03	ARG0	country	0.1	0.1.0	
# ::edge	get-03	ARG1	go-01	0.1	0	
# ::edge	go-01	ARG1	and	0	0.0	
# ::edge	go-01	ARG4	doctor	0	0.2	
# ::edge	go-01	ARG6	yes	0	0.3	
# ::edge	go-01	time	country	0	0.4	
# ::edge	name	op1	"Russia"	0.4.0	0.4.0.0	
# ::edge	yes	mode	expressive	0.3	0.3.0	
(g2 / go-01 
      :ARG1 (a / and) 
      :ARG1-of (g / get-03 
            :ARG0 (c / country)) 
      :ARG4 (d / doctor) 
      :ARG6 (y / yes 
            :mode (e / expressive)) 
      :time (c2 / country 
            :name (n / name 
                  :op1 "Russia")))

# ::snt I have a friend who suffers from severe anxiety that can prevent her from leaving the house and doing things because she's so worried about what can go wrong.
# ::tok I have a friend who suffers from severe anxiety that can prevent her from leaving the house and doing things because she 's so worried about what can go wrong .
# ::alignments 8-9|0.0.1.0.0.0.1.0.0 1-2|0.0.1.0.0.0 5-6|0.0.1.0.0.0.1.0 10-11|0.0.1.0.0.0.1.0.0.0.1 24-25|0.0.1 18-19|0.0.1.0.0.0.1.0.0.0.0.1.0 3-4|0.0.1.0.0.0.1 0-1|0.0.1.0.0.0.0 7-8|0.0.0.0 20-21|0.0.1.0.0 16-17|0.0.1.0.0.0.1.0.0.0.0.0 23-24|0.0.1.0 11-12|0.0.1.0.0.0.1.0.0.0 14-15|0.0.1.0.0.0.1.0.0.0.0 29-30|0.0.0 27-28|0 17-18|0.0.1.0.0.0.1.0.0.0.0.1 19-20|0.0.1.0.0.0.1.0.0.0.0.1.0.0 28-29|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:11.918
# ::node	0	possible	27-28
# ::node	0.0	go-08	28-29
# ::node	0.0.0	wrong-01	29-30
# ::node	0.0.0.0	severe	7-8
# ::node	0.0.1	worry-02	24-25
# ::node	0.0.1.0	sob-01	23-24
# ::node	0.0.1.0.0	accuse-01	20-21
# ::node	0.0.1.0.0.0	have-03	1-2
# ::node	0.0.1.0.0.0.0	i	0-1
# ::node	0.0.1.0.0.0.1	friend	3-4
# ::node	0.0.1.0.0.0.1.0	suffer-01	5-6
# ::node	0.0.1.0.0.0.1.0.0	anxiety	8-9
# ::node	0.0.1.0.0.0.1.0.0.0	prevent-01	11-12
# ::node	0.0.1.0.0.0.1.0.0.0.0	leave-01	14-15
# ::node	0.0.1.0.0.0.1.0.0.0.0.0	house	16-17
# ::node	0.0.1.0.0.0.1.0.0.0.0.1	and	17-18
# ::node	0.0.1.0.0.0.1.0.0.0.0.1.0	do-02	18-19
# ::node	0.0.1.0.0.0.1.0.0.0.0.1.0.0	thing	19-20
# ::node	0.0.1.0.0.0.1.0.0.0.1	possible	10-11
# ::root	0	possible
# ::edge	accuse-01	ARG1	sob-01	0.0.1.0.0	0.0.1.0	
# ::edge	and	op1	leave-01	0.0.1.0.0.0.1.0.0.0.0.1	0.0.1.0.0.0.1.0.0.0.0	
# ::edge	and	op2	do-02	0.0.1.0.0.0.1.0.0.0.0.1	0.0.1.0.0.0.1.0.0.0.0.1.0	
# ::edge	do-02	ARG1	thing	0.0.1.0.0.0.1.0.0.0.0.1.0	0.0.1.0.0.0.1.0.0.0.0.1.0.0	
# ::edge	go-08	ARG1	wrong-01	0.0	0.0.0	
# ::edge	have-03	ARG0	i	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	have-03	ARG1	friend	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	have-03	time	accuse-01	0.0.1.0.0.0	0.0.1.0.0	
# ::edge	leave-01	ARG1	house	0.0.1.0.0.0.1.0.0.0.0	0.0.1.0.0.0.1.0.0.0.0.0	
# ::edge	possible	domain	go-08	0	0.0	
# ::edge	possible	domain	prevent-01	0.0.1.0.0.0.1.0.0.0.1	0.0.1.0.0.0.1.0.0.0	
# ::edge	prevent-01	ARG0	anxiety	0.0.1.0.0.0.1.0.0.0	0.0.1.0.0.0.1.0.0	
# ::edge	prevent-01	ARG1	leave-01	0.0.1.0.0.0.1.0.0.0	0.0.1.0.0.0.1.0.0.0.0	
# ::edge	sob-01	ARG1	worry-02	0.0.1.0	0.0.1	
# ::edge	suffer-01	ARG0	friend	0.0.1.0.0.0.1.0	0.0.1.0.0.0.1	
# ::edge	suffer-01	ARG1	anxiety	0.0.1.0.0.0.1.0	0.0.1.0.0.0.1.0.0	
# ::edge	worry-02	ARG1	go-08	0.0.1	0.0	
# ::edge	wrong-01	ARG1	severe	0.0.0	0.0.0.0	
(p3 / possible 
      :domain (g / go-08 
            :ARG1 (w2 / wrong-01 
                  :ARG1 (s2 / severe)) 
            :ARG1-of (w / worry-02 
                  :ARG1-of (s3 / sob-01 
                        :ARG1-of (a2 / accuse-01 
                              :time-of (h / have-03 
                                    :ARG0 (i / i) 
                                    :ARG1 (f / friend 
                                          :ARG0-of (s / suffer-01 
                                                :ARG1 (a / anxiety 
                                                      :ARG0-of (p2 / prevent-01 
                                                            :ARG1 (l / leave-01 
                                                                  :ARG1 (h2 / house) 
                                                                  :op-of (a3 / and 
                                                                        :op1 (d / do-02 
                                                                              :ARG1 (t / thing)))) 
                                                            :domain-of (p / possible)))))))))))

# ::snt The doctors gave her medication and it's made her much better.
# ::tok The doctors gave her medication and it 's made her much better .
# ::alignments 4-5|0.0.0 6-7|0.0 11-12|0.1+0 1-2|0.0.0.0 10-11|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:12.055
# ::node	0	good	11-12
# ::node	0.0	country	6-7
# ::node	0.0.0	medication	4-5
# ::node	0.0.0.0	doctor	1-2
# ::node	0.1	more	11-12
# ::node	0.1.0	much	10-11
# ::root	0	good
# ::edge	good	calendar	country	0	0.0	
# ::edge	good	degree	more	0	0.1	
# ::edge	medication	calendar	country	0.0.0	0.0	
# ::edge	medication	poss	doctor	0.0.0	0.0.0.0	
# ::edge	more	degree	much	0.1	0.1.0	
(g / good 
      :calendar (c / country 
            :calendar-of (m / medication 
                  :poss (d / doctor))) 
      :degree (m2 / more 
            :degree (m3 / much)))

