Stage1 features = List(bias, length, fromNERTagger, conceptGivenPhrase)
features = List(rootConcept, rootDependencyPathv1, bias, typeBias, self, fragHead, edgeCount, distance, logDistance, posPathv3, dependencyPathv4, conceptBigram)
connected = true
Reading weights
done
Sentence: 2007-08-21

Oracle Span 1:  2007-08-21 => (date-entity :day 21 :month 8 :year 2007)
mkDayMonthYear(2007-08-21,21,08,2007)
Registering annotator regexner2 with class edu.stanford.nlp.pipeline.TokensRegexNERAnnotator
Registering annotator regexner1 with class edu.stanford.nlp.pipeline.TokensRegexNERAnnotator
Adding annotator tokenize
TokenizerAnnotator: No tokenizer type provided. Defaulting to PTBTokenizer.
Adding annotator ssplit
edu.stanford.nlp.curator.CuratorAnnotatorImplementations:
Adding annotator pos
Reading POS tagger model from edu/stanford/nlp/models/pos-tagger/english-left3words/english-left3words-distsim.tagger ... done [0.8 sec].
Adding annotator lemma
Adding annotator ner
Loading classifier from edu/stanford/nlp/models/ner/english.all.3class.distsim.crf.ser.gz ... done [4.5 sec].
Loading classifier from edu/stanford/nlp/models/ner/english.muc.7class.distsim.crf.ser.gz ... done [3.0 sec].
Loading classifier from edu/stanford/nlp/models/ner/english.conll.4class.distsim.crf.ser.gz ... done [3.0 sec].
sutime.binder.1.
Initializing JollyDayHoliday for sutime with classpath:edu/stanford/nlp/models/sutime/jollyday/Holidays_sutime.xml
Reading TokensRegex rules from edu/stanford/nlp/models/sutime/defs.sutime.txt
Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.sutime.txt
Feb 17, 2015 1:28:29 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules
INFO: Ignoring inactive rule: null
Feb 17, 2015 1:28:29 PM edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor appendRules
INFO: Ignoring inactive rule: temporal-composite-8:ranges
Reading TokensRegex rules from edu/stanford/nlp/models/sutime/english.holidays.sutime.txt
Adding annotator regexner1
TokensRegexNERAnnotator regexner1: Replace duplicate entry (higher priority): old=Entry{Deist RELIGION [ORGANIZATION, PERSON, MISC] 1.0}, new=Entry{Deist RELIGION [ORGANIZATION, PERSON, MISC] 3.0}
TokensRegexNERAnnotator regexner1: Entry has multiple types: murder	CRIMINAL_CHARGE,CAUSE_OF_DEATH	11.  Taking type to be CRIMINAL_CHARGE
TokensRegexNERAnnotator regexner1: Entry has multiple types: New York	CITY,STATE_OR_PROVINCE	LOCATION	2.  Taking type to be CITY
TokensRegexNERAnnotator regexner1: Entry has multiple types: England	COUNTRY,STATE_OR_PROVINCE	LOCATION	1.  Taking type to be COUNTRY
TokensRegexNERAnnotator regexner1: Entry has multiple types: Scotland	COUNTRY,STATE_OR_PROVINCE	LOCATION	1.  Taking type to be COUNTRY
TokensRegexNERAnnotator regexner1: Replace duplicate entry (higher priority): old=Entry{SANDER TITLE [1] 0.0}, new=Entry{sander CITY [LOCATION] 1.0}
TokensRegexNERAnnotator regexner1: Replace duplicate entry (higher priority): old=Entry{WINDER TITLE [1] 0.0}, new=Entry{winder CITY [LOCATION] 1.0}
TokensRegexNERAnnotator regexner1: Replace duplicate entry (higher priority): old=Entry{CARVER TITLE [1] 0.0}, new=Entry{carver CITY [LOCATION] 1.0}
TokensRegexNERAnnotator regexner1: Read 56933 unique entries out of 73409 from data/kbp_regexner_mapping_nocase.tab, 0 TokensRegex patterns.
Adding annotator regexner2
TokensRegexNERAnnotator regexner2: Read 478 unique entries out of 481 from data/kbp_regexner_mapping.tab, 0 TokensRegex patterns.
Adding annotator parse
Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ...done [0.7 sec].
Adding annotator dcoref
Adding annotator srl
Adding annotator nom
Adding annotator prep
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Spans:
Span 0-1:  2007-08-21 => (date-entity :year 2007 :month 8 :day 21)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2007-08-21 => (date-entity :day 21 :month 8 :year 2007)

Dependencies:
1	2007-08-21	_	NNP	NNP	_	0	root	_	_

Oracle:
(d / date-entity, day, 21)
(d / date-entity, month, 8)
(d / date-entity, year, 2007)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2007-08-21,(date-entity :year 2007 :month 8 :day 21),false)),Map(2 -> 8, 1 -> 2007, 0 -> date-entity, 3 -> 21),Map(2 -> 2007, 8 -> 8, d -> date-entity, 22 -> 21))),[Ljava.lang.String;@e6521dc,Annotation([Ljava.lang.String;@5bcda4c8,[Ljava.lang.String;@3cf1011a,[Ljava.lang.String;@50cd8f2d),Annotation([Ljava.lang.String;@77812f29,[Ljava.lang.String;@41dc2ef5,[Ledu.cmu.lti.nlp.amr.Dependency;@75911e05),Annotation([Ljava.lang.String;@4919437d,[Ljava.lang.String;@379fd510,[Ljava.lang.String;@1714fe90),Annotation([Ljava.lang.String;@6a88ab41,[Ljava.lang.String;@69091fc6,[Ledu.cmu.lti.nlp.amr.Entity;@20f770a2))
AMR:
(d / date-entity, day, 22 / 21)
(d / date-entity, month, 8 / 8)
(d / date-entity, year, 2 / 2007)

Decoded in 29,668,971 microseconds
Sentence: Iran (Islamic Republic of) (IR)

WARNING ADDING ANOTHER SPAN TO NODE 0.0.1
ArrayBuffer(0) + 1
WARNING ADDING ANOTHER SPAN TO NODE 0.0.2
ArrayBuffer(0) + 2
WARNING ADDING ANOTHER SPAN TO NODE 0.0.3
ArrayBuffer(0) + 3
Oracle Span 1:  Iran => "Iran"
Oracle Span 2:  Iran ( Islamic Republic of => (country :name (name :op "Iran" :op "of" :op "Republic" :op "Islamic"))
Oracle Span 3:  of => "of"
Oracle Span 4:  Republic => "Republic"
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 0-1:  Iran => (country :name (name :op "Iran"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
WARNING ADDING ANOTHER SPAN TO NODE 0.0.1
ArrayBuffer(0) + 1
WARNING ADDING ANOTHER SPAN TO NODE 0.0.2
ArrayBuffer(0) + 2
WARNING ADDING ANOTHER SPAN TO NODE 0.0.3
ArrayBuffer(0) + 3
Oracle Span 0-1:  Iran => "Iran"
Oracle Span 0-5:  Iran ( Islamic Republic of => (country :name (name :op "Iran" :op "of" :op "Republic" :op "Islamic"))
Oracle Span 4-5:  of => "of"
Oracle Span 3-4:  Republic => "Republic"

Dependencies:
1	Iran	_	NNP	NNP	_	0	root	_	_
2	(	_	(	(	_	4	punct	_	_
3	Islamic	_	NNP	NNP	_	4	nn	_	_
4	Republic	_	NNP	NNP	_	1	dep	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	)	_	)	)	_	4	punct	_	_
7	(	_	(	(	_	8	punct	_	_
8	IR	_	NNP	NNP	_	1	appos	_	_
9	)	_	)	)	_	8	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Islamic")
(n / name, op, I / "Iran")
(n / name, op, R / "Republic")
(n / name, op, o / "of")

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Iran,(country :name (name :op "Iran")),false)),Map(2 -> "Iran", 1 -> name, 0 -> country),Map(n -> name, c -> country))),[Ljava.lang.String;@79c6d64c,Annotation([Ljava.lang.String;@14f1c51e,[Ljava.lang.String;@b70252e,[Ljava.lang.String;@6bb463d2),Annotation([Ljava.lang.String;@240fbc5e,[Ljava.lang.String;@3ecc54f4,[Ledu.cmu.lti.nlp.amr.Dependency;@341f5f56),Annotation([Ljava.lang.String;@7cfd10f4,[Ljava.lang.String;@2549ae79,[Ljava.lang.String;@797e25d0),Annotation([Ljava.lang.String;@37d53046,[Ljava.lang.String;@23bbecf8,[Ledu.cmu.lti.nlp.amr.Entity;@4b69a490))
AMR:
(c / country, name, n / name)
(n / name, op, "Iran")

Decoded in 381,743 microseconds
Sentence: International; weapons; politics; proliferation; energy

Oracle Span 1:  ; => and
Oracle Span 2:  energy => energy
Oracle Span 3:  International => international
Oracle Span 4:  politics => politics
Oracle Span 5:  proliferation => proliferate-01
Oracle Span 6:  weapons => weapon
Spans:
Span 8-9:   => energy
Span 6-7:   => proliferate-01
Span 4-5:  energy => politics
Span 0-1:  International; => international
Span 2-3:  politics; => weapon
Span 1-2:  weapons; => and

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 8-9:  energy => energy
Oracle Span 0-1:  International => international
Oracle Span 4-5:  politics => politics
Oracle Span 6-7:  proliferation => proliferate-01
Oracle Span 2-3:  weapons => weapon

Dependencies:
1	International	_	NNP	NNP	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	weapons	_	NNS	NNS	_	1	dep	_	_
4	;	_	:	:	_	3	punct	_	_
5	politics	_	NNS	NNS	_	3	dep	_	_
6	;	_	:	:	_	3	punct	_	_
7	proliferation	_	NN	NN	_	3	dep	_	_
8	;	_	:	:	_	7	punct	_	_
9	energy	_	NN	NN	_	7	dep	_	_

Oracle:
(a / and, op, e / energy)
(a / and, op, i / international)
(a / and, op, p / politics)
(a / and, op, p2 / proliferate-01)
(a / and, op, w / weapon)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),,energy,false), Span(6,7,List(1),,proliferate-01,false), Span(2,3,List(2),politics;,weapon,false), Span(4,5,List(3),energy,politics,false), Span(0,1,List(4),International;,international,false), Span(1,2,List(5),weapons;,and,false)),Map(2 -> weapon, 5 -> and, 1 -> proliferate-01, 4 -> international, 0 -> energy, 3 -> politics),Map(w -> weapon, e -> energy, p2 -> politics, p -> proliferate-01, a -> and, i -> international))),[Ljava.lang.String;@6c047f6b,Annotation([Ljava.lang.String;@341e1c66,[Ljava.lang.String;@2c24e9ae,[Ljava.lang.String;@469b64de),Annotation([Ljava.lang.String;@92ba441,[Ljava.lang.String;@4d12642e,[Ledu.cmu.lti.nlp.amr.Dependency;@46f09dbb),Annotation([Ljava.lang.String;@5b50ac2f,[Ljava.lang.String;@f8d12a8,[Ljava.lang.String;@51603463),Annotation([Ljava.lang.String;@133f76b1,[Ljava.lang.String;@4d50812d,[Ledu.cmu.lti.nlp.amr.Entity;@2a2fd27d))
AMR:
(a / and, op, e / energy)
(a / and, op, i / international)
(a / and, op, p / proliferate-01)
(a / and, op, p2 / politics)
(a / and, op, w / weapon)

Decoded in 274,854 microseconds
Sentence: The International Atomic Energy Agency reached an agreement with Iranian officials that stated there were no remaining issues and ambiguities regarding Iran's nuclear program and activities.

Oracle Span 1:  activities => activity
Oracle Span 2:  agreement => agree-01
Oracle Span 3:  ambiguities => ambiguity
Oracle Span 4:  and => and
Oracle Span 5:  and => and
Oracle Span 6:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 7:  Iran => (country :name (name :op "Iran"))
Oracle Span 8:  issues => issue
Oracle Span 9:  no => -
Oracle Span 10:  nuclear => nucleus
Oracle Span 11:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 12:  program => program
Oracle Span 13:  reached => reach-01
Oracle Span 14:  regarding => regard-01
Oracle Span 15:  remaining => remain-01
Oracle Span 16:  stated => state-01
NER Entity: (organization :name (name :op "International" :op "Atomic" :op "Energy" :op "Agency"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 26-27:   => activity
Span 25-26:  activities. => and
Span 7-8:  agreement => agree-01
Span 19-20:  ambiguities => ambiguity
Span 24-25:  and => program
Span 18-19:  and => and
Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency"))
Span 9-10:  Iranian => (country :name (name :op "Iran"))
Span 17-18:  issues => issue
Span 10-11:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 23-24:  program => nucleus
Span 5-6:  reached => reach-01
Span 16-17:  remaining => remain-01
Span 12-13:  stated => state-01

Langrangian relaxation converged after 51 iterations. Delta = 0.0
Oracle Span 26-27:  activities => activity
Oracle Span 7-8:  agreement => agree-01
Oracle Span 19-20:  ambiguities => ambiguity
Oracle Span 18-19:  and => and
Oracle Span 25-26:  and => and
Oracle Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 21-22:  Iran => (country :name (name :op "Iran"))
Oracle Span 17-18:  issues => issue
Oracle Span 15-16:  no => -
Oracle Span 23-24:  nuclear => nucleus
Oracle Span 10-11:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 24-25:  program => program
Oracle Span 5-6:  reached => reach-01
Oracle Span 20-21:  regarding => regard-01
Oracle Span 16-17:  remaining => remain-01
Oracle Span 12-13:  stated => state-01

Dependencies:
1	The	_	DT	DT	_	5	det	_	_
2	International	_	NNP	NNP	_	5	nn	_	_
3	Atomic	_	NNP	NNP	_	5	nn	_	_
4	Energy	_	NNP	NNP	_	5	nn	_	_
5	Agency	_	NNP	NNP	_	6	nsubj	_	_
6	reached	_	VBD	VBD	_	0	root	_	_
7	an	_	DT	DT	_	8	det	_	_
8	agreement	_	NN	NN	_	6	dobj	_	_
9	with	_	IN	IN	_	6	prep	_	_
10	Iranian	_	JJ	JJ	_	11	amod	_	_
11	officials	_	NNS	NNS	_	9	pobj	_	_
12	that	_	WDT	WDT	_	13	nsubj	_	_
13	stated	_	VBD	VBD	_	11	rcmod	_	_
14	there	_	EX	EX	_	15	expl	_	_
15	were	_	VBD	VBD	_	13	ccomp	_	_
16	no	_	DT	DT	_	18	neg	_	_
17	remaining	_	VBG	VBG	_	18	amod	_	_
18	issues	_	NNS	NNS	_	15	nsubj	_	_
19	and	_	CC	CC	_	18	cc	_	_
20	ambiguities	_	NNS	NNS	_	18	conj	_	_
21	regarding	_	VBG	VBG	_	20	prep	_	_
22	Iran	_	NNP	NNP	_	25	poss	_	_
23	's	_	POS	POS	_	22	possessive	_	_
24	nuclear	_	JJ	JJ	_	25	amod	_	_
25	program	_	NN	NN	_	21	pobj	_	_
26	and	_	CC	CC	_	25	cc	_	_
27	activities	_	NNS	NNS	_	25	conj	_	_
28	.	_	.	.	_	6	punct	_	_

Oracle:
(a / agree-01, ARG0, o / organization)
(a2 / and, op, a3 / ambiguity)
(a2 / and, op, i / issue)
(a4 / and, op, a5 / activity)
(a4 / and, op, p / program)
(a5 / activity, mod, n3 / nucleus)
(a5 / activity, poss, c / country)
(c / country, name, n2 / name)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o2 / official)
(i / issue, polarity, - / -)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n2 / name, op, "Iran")
(o / organization, name, n / name)
(p / program, mod, n3 / nucleus)
(p / program, poss, c / country)
(r / remain-01, ARG1, a3 / ambiguity)
(r / remain-01, ARG1, i / issue)
(r2 / regard-01, ARG0, a2 / and)
(r2 / regard-01, ARG1, a4 / and)
(r3 / reach-01, ARG0, o / organization)
(r3 / reach-01, ARG1, a / agree-01)
(s / state-01, ARG0, a / agree-01)
(s / state-01, ARG1, a2 / and)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),agreement,agree-01,false), Span(26,27,List(1),,activity,false), Span(19,20,List(2),ambiguities,ambiguity,false), Span(9,10,List(5, 4, 3),Iranian,(country :name (name :op "Iran")),false), Span(10,11,List(8, 7, 6),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(5,6,List(9),reached,reach-01,false), Span(16,17,List(10),remaining,remain-01,false), Span(25,26,List(11),activities.,and,false), Span(1,5,List(17, 16, 15, 14, 13, 12),International Atomic Energy Agency,(organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency")),false), Span(23,24,List(18),program,nucleus,false), Span(12,13,List(19),stated,state-01,false), Span(24,25,List(20),and,program,false), Span(17,18,List(21),issues,issue,false), Span(18,19,List(22),and,and,false)),Map(2 -> ambiguity, 5 -> "Iran", 12 -> organization, 15 -> "International", 8 -> official, 21 -> issue, 18 -> nucleus, 7 -> have-org-role-91, 17 -> "Agency", 1 -> activity, 4 -> name, 11 -> and, 14 -> "Atomic", 20 -> program, 6 -> person, 22 -> and, 0 -> agree-01, 9 -> reach-01, 16 -> "Energy", 19 -> state-01, 3 -> country, 10 -> remain-01, 13 -> name),Map(n -> name, h -> have-org-role-91, p2 -> program, a3 -> ambiguity, s -> state-01, p -> person, r2 -> remain-01, n3 -> nucleus, a -> agree-01, a5 -> and, o2 -> organization, i -> issue, a2 -> activity, r -> reach-01, c -> country, o -> official, n2 -> name, a4 -> and))),[Ljava.lang.String;@33d6a5a9,Annotation([Ljava.lang.String;@7a99d61a,[Ljava.lang.String;@ea10948,[Ljava.lang.String;@464981a6),Annotation([Ljava.lang.String;@40348f2b,[Ljava.lang.String;@7429a831,[Ledu.cmu.lti.nlp.amr.Dependency;@724404b5),Annotation([Ljava.lang.String;@788aefea,[Ljava.lang.String;@1c237a07,[Ljava.lang.String;@25722192),Annotation([Ljava.lang.String;@77c1f825,[Ljava.lang.String;@581bbc88,[Ledu.cmu.lti.nlp.amr.Entity;@5f6f06ce))
AMR:
(a / agree-01, ARG0, o2 / organization)
(a / agree-01, ARG1, n3 / nucleus)
(a4 / and, op, a2 / activity)
(a4 / and, op, p2 / program)
(a4 / and, op, r2 / remain-01)
(a5 / and, op, a3 / ambiguity)
(a5 / and, op, i / issue)
(c / country, name, n / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Iran")
(n2 / name, op, "Agency")
(n2 / name, op, "Atomic")
(n2 / name, op, "Energy")
(n2 / name, op, "International")
(o2 / organization, name, n2 / name)
(r / reach-01, ARG0, p / person)
(r / reach-01, ARG1, a / agree-01)
(r2 / remain-01, ARG1, i / issue)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a5 / and)

Decoded in 8,663,307 microseconds
Sentence: U.S. and European officials suspect that Iran's civilian nuclear energy program masks an effort to obtain technology that could be used in the production of an atomic bomb.

Oracle Span 1:  and => and
Oracle Span 2:  atomic => atom
Oracle Span 3:  bomb => bomb
Oracle Span 4:  civilian => civilian
Oracle Span 5:  could => possible
Oracle Span 6:  effort => effort
Oracle Span 7:  energy => energy
Oracle Span 8:  European => (continent :name (name :op "Europe"))
Oracle Span 9:  Iran => (country :name (name :op "Iran"))
Oracle Span 10:  masks => mask-01
Oracle Span 11:  nuclear => nucleus
Oracle Span 12:  obtain => obtain-01
Oracle Span 13:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 14:  production => produce-01
Oracle Span 15:  program => program
Oracle Span 16:  suspect => suspect-01
Oracle Span 17:  technology => technology
Oracle Span 18:  U.S. => (have-org-role-91 :ARG1 (country :name (name :op "U.S.")))
Oracle Span 19:  used => use-01
NER Entity: (country :name (name :op "U.S."))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "European"))
Spans:
Span 28-29:   => bomb
Span 12-13:  an => (thing :ARG2-of mask-01)
Span 1-2:  and => and
Span 19-20:  be => possible
Span 27-28:  bomb. => atom
Span 2-3:  European => (organization :name (name :op "European"))
Span 21-22:  in => use-01
Span 11-12:  masks => program
Span 8-9:  nuclear => civilian
Span 24-25:  of => produce-01
Span 3-4:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 10-11:  program => energy
Span 4-5:  suspect => suspect-01
Span 16-17:  technology => obtain-01
Span 17-18:  that => technology
Span 14-15:  to => effort
Span 0-1:  U.S. => (country :name (name :op "U.S."))

Langrangian relaxation converged after 38 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 27-28:  atomic => atom
Oracle Span 28-29:  bomb => bomb
Oracle Span 8-9:  civilian => civilian
Oracle Span 19-20:  could => possible
Oracle Span 14-15:  effort => effort
Oracle Span 10-11:  energy => energy
Oracle Span 2-3:  European => (continent :name (name :op "Europe"))
Oracle Span 6-7:  Iran => (country :name (name :op "Iran"))
Oracle Span 12-13:  masks => mask-01
Oracle Span 9-10:  nuclear => nucleus
Oracle Span 16-17:  obtain => obtain-01
Oracle Span 3-4:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 24-25:  production => produce-01
Oracle Span 11-12:  program => program
Oracle Span 4-5:  suspect => suspect-01
Oracle Span 17-18:  technology => technology
Oracle Span 0-1:  U.S. => (have-org-role-91 :ARG1 (country :name (name :op "U.S.")))
Oracle Span 21-22:  used => use-01

Dependencies:
1	U.S.	_	NNP	NNP	_	4	nn	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	European	_	JJ	JJ	_	1	conj	_	_
4	officials	_	NNS	NNS	_	5	nsubj	_	_
5	suspect	_	VBP	VBP	_	0	root	_	_
6	that	_	IN	IN	_	13	mark	_	_
7	Iran	_	NNP	NNP	_	12	poss	_	_
8	's	_	POS	POS	_	7	possessive	_	_
9	civilian	_	JJ	JJ	_	12	amod	_	_
10	nuclear	_	JJ	JJ	_	12	amod	_	_
11	energy	_	NN	NN	_	12	nn	_	_
12	program	_	NN	NN	_	13	nsubj	_	_
13	masks	_	VBZ	VBZ	_	5	ccomp	_	_
14	an	_	DT	DT	_	15	det	_	_
15	effort	_	NN	NN	_	13	dobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	obtain	_	VB	VB	_	15	vmod	_	_
18	technology	_	NN	NN	_	17	dobj	_	_
19	that	_	WDT	WDT	_	22	nsubjpass	_	_
20	could	_	MD	MD	_	22	aux	_	_
21	be	_	VB	VB	_	22	auxpass	_	_
22	used	_	VBN	VBN	_	18	rcmod	_	_
23	in	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	production	_	NN	NN	_	23	pobj	_	_
26	of	_	IN	IN	_	25	prep	_	_
27	an	_	DT	DT	_	29	det	_	_
28	atomic	_	JJ	JJ	_	29	amod	_	_
29	bomb	_	NN	NN	_	26	pobj	_	_
30	.	_	.	.	_	5	punct	_	_

Oracle:
(b / bomb, mod, a2 / atom)
(c / country, name, n / name)
(c2 / continent, name, n2 / name)
(c4 / country, name, n4 / name)
(e / energy, mod, c3 / civilian)
(e / energy, mod, n3 / nucleus)
(e2 / effort, purpose, o2 / obtain-01)
(h / have-org-role-91, ARG1, c / country)
(h2 / have-org-role-91, ARG1, c2 / continent)
(h2 / have-org-role-91, ARG2, o3 / official)
(m / mask-01, ARG1, e2 / effort)
(m / mask-01, ARG2, p / program)
(n / name, op, "U.S.")
(n2 / name, op, "Europe")
(n4 / name, op, "Iran")
(o2 / obtain-01, ARG1, t / technology)
(p / program, mod, e / energy)
(p / program, poss, c4 / country)
(p2 / produce-01, ARG1, b / bomb)
(s / suspect-01, ARG0, a / and)
(s / suspect-01, ARG1, m / mask-01)
(u2 / use-01, ARG1, t / technology)
(u2 / use-01, ARG2, p2 / produce-01)
(u2 / use-01, mod, p4 / possible)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),that,technology,false), Span(4,5,List(1),suspect,suspect-01,false), Span(10,11,List(2),program,energy,false), Span(14,15,List(3),to,effort,false), Span(0,1,List(6, 5, 4),U.S.,(country :name (name :op "U.S.")),false), Span(2,3,List(9, 8, 7),European,(organization :name (name :op "European")),false), Span(19,20,List(10),be,possible,false), Span(16,17,List(11),technology,obtain-01,false), Span(28,29,List(12),,bomb,false), Span(8,9,List(13),nuclear,civilian,false), Span(24,25,List(14),of,produce-01,false), Span(3,4,List(17, 16, 15),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(11,12,List(18),masks,program,false), Span(12,13,List(20, 19),an,(thing :ARG2-of mask-01),false), Span(27,28,List(21),bomb.,atom,false), Span(21,22,List(22),in,use-01,false), Span(1,2,List(23),and,and,false)),Map(2 -> energy, 5 -> name, 12 -> bomb, 15 -> person, 8 -> name, 21 -> atom, 18 -> program, 7 -> organization, 17 -> official, 1 -> suspect-01, 23 -> and, 4 -> country, 11 -> obtain-01, 14 -> produce-01, 20 -> mask-01, 6 -> "U.S.", 22 -> use-01, 0 -> technology, 9 -> "European", 16 -> have-org-role-91, 19 -> thing, 3 -> effort, 10 -> possible, 13 -> civilian),Map(e -> energy, n -> name, h -> have-org-role-91, t -> technology, b -> bomb, o3 -> official, e2 -> effort, p2 -> produce-01, s -> suspect-01, m -> mask-01, p -> possible, a -> atom, p4 -> program, o2 -> obtain-01, t2 -> thing, a2 -> and, c -> country, u -> use-01, o -> organization, p3 -> person, n2 -> name, c2 -> civilian))),[Ljava.lang.String;@31c824df,Annotation([Ljava.lang.String;@7740e9b9,[Ljava.lang.String;@6df332a,[Ljava.lang.String;@2ba2fde1),Annotation([Ljava.lang.String;@5bbcca96,[Ljava.lang.String;@2b41fd79,[Ledu.cmu.lti.nlp.amr.Dependency;@54f8dd58),Annotation([Ljava.lang.String;@68897fd3,[Ljava.lang.String;@555cf02e,[Ljava.lang.String;@71d275c9),Annotation([Ljava.lang.String;@63d264b6,[Ljava.lang.String;@4006e8f8,[Ledu.cmu.lti.nlp.amr.Entity;@72e9bd56))
AMR:
(a2 / and, op, c / country)
(a2 / and, op, p3 / person)
(b / bomb, mod, a / atom)
(c / country, name, n / name)
(e2 / effort, purpose, o2 / obtain-01)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, o3 / official)
(m / mask-01, ARG0, p4 / program)
(m / mask-01, ARG1, e2 / effort)
(m / mask-01, ARG2, t2 / thing)
(n / name, op, "U.S.")
(n2 / name, op, "European")
(o / organization, name, n2 / name)
(o2 / obtain-01, ARG1, t / technology)
(p / possible, domain, u / use-01)
(p2 / produce-01, ARG1, b / bomb)
(p4 / program, mod, c2 / civilian)
(p4 / program, mod, e / energy)
(s / suspect-01, ARG0, p3 / person)
(s / suspect-01, ARG1, t2 / thing)
(u / use-01, ARG1, t / technology)
(u / use-01, ARG2, p2 / produce-01)

Decoded in 2,138,280 microseconds
Sentence: U.S. and European officials suspect that Iran's civilian nuclear energy program masks an effort to obtain technology that could be used in the production of an atomic bomb.

Oracle Span 1:  and => and
Oracle Span 2:  atomic => atom
Oracle Span 3:  bomb => bomb
Oracle Span 4:  civilian => civilian
Oracle Span 5:  could => possible
Oracle Span 6:  effort => effort
Oracle Span 7:  energy => energy
Oracle Span 8:  European => (continent :name (name :op "Europe"))
Oracle Span 9:  Iran => (country :name (name :op "Iran"))
Oracle Span 10:  masks => mask-01
Oracle Span 11:  nuclear => nucleus
Oracle Span 12:  obtain => obtain-01
Oracle Span 13:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 14:  production => produce-01
Oracle Span 15:  program => program
Oracle Span 16:  suspect => suspect-01
Oracle Span 17:  technology => technology
Oracle Span 18:  U.S. => (have-org-role-91 :ARG1 (country :name (name :op "U.S.")))
Oracle Span 19:  used => use-01
NER Entity: (country :name (name :op "U.S."))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "European"))
Spans:
Span 28-29:   => bomb
Span 12-13:  an => (thing :ARG2-of mask-01)
Span 1-2:  and => and
Span 19-20:  be => possible
Span 27-28:  bomb. => atom
Span 2-3:  European => (organization :name (name :op "European"))
Span 21-22:  in => use-01
Span 11-12:  masks => program
Span 8-9:  nuclear => civilian
Span 24-25:  of => produce-01
Span 3-4:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 10-11:  program => energy
Span 4-5:  suspect => suspect-01
Span 16-17:  technology => obtain-01
Span 17-18:  that => technology
Span 14-15:  to => effort
Span 0-1:  U.S. => (country :name (name :op "U.S."))

Langrangian relaxation converged after 38 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 27-28:  atomic => atom
Oracle Span 28-29:  bomb => bomb
Oracle Span 8-9:  civilian => civilian
Oracle Span 19-20:  could => possible
Oracle Span 14-15:  effort => effort
Oracle Span 10-11:  energy => energy
Oracle Span 2-3:  European => (continent :name (name :op "Europe"))
Oracle Span 6-7:  Iran => (country :name (name :op "Iran"))
Oracle Span 12-13:  masks => mask-01
Oracle Span 9-10:  nuclear => nucleus
Oracle Span 16-17:  obtain => obtain-01
Oracle Span 3-4:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 24-25:  production => produce-01
Oracle Span 11-12:  program => program
Oracle Span 4-5:  suspect => suspect-01
Oracle Span 17-18:  technology => technology
Oracle Span 0-1:  U.S. => (have-org-role-91 :ARG1 (country :name (name :op "U.S.")))
Oracle Span 21-22:  used => use-01

Dependencies:
1	U.S.	_	NNP	NNP	_	4	nn	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	European	_	JJ	JJ	_	1	conj	_	_
4	officials	_	NNS	NNS	_	5	nsubj	_	_
5	suspect	_	VBP	VBP	_	0	root	_	_
6	that	_	IN	IN	_	13	mark	_	_
7	Iran	_	NNP	NNP	_	12	poss	_	_
8	's	_	POS	POS	_	7	possessive	_	_
9	civilian	_	JJ	JJ	_	12	amod	_	_
10	nuclear	_	JJ	JJ	_	12	amod	_	_
11	energy	_	NN	NN	_	12	nn	_	_
12	program	_	NN	NN	_	13	nsubj	_	_
13	masks	_	VBZ	VBZ	_	5	ccomp	_	_
14	an	_	DT	DT	_	15	det	_	_
15	effort	_	NN	NN	_	13	dobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	obtain	_	VB	VB	_	15	vmod	_	_
18	technology	_	NN	NN	_	17	dobj	_	_
19	that	_	WDT	WDT	_	22	nsubjpass	_	_
20	could	_	MD	MD	_	22	aux	_	_
21	be	_	VB	VB	_	22	auxpass	_	_
22	used	_	VBN	VBN	_	18	rcmod	_	_
23	in	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	production	_	NN	NN	_	23	pobj	_	_
26	of	_	IN	IN	_	25	prep	_	_
27	an	_	DT	DT	_	29	det	_	_
28	atomic	_	JJ	JJ	_	29	amod	_	_
29	bomb	_	NN	NN	_	26	pobj	_	_
30	.	_	.	.	_	5	punct	_	_

Oracle:
(b / bomb, mod, a2 / atom)
(c / country, name, n / name)
(c2 / continent, name, n2 / name)
(c4 / country, name, n4 / name)
(e / energy, mod, c3 / civilian)
(e / energy, mod, n3 / nucleus)
(e2 / effort, purpose, o2 / obtain-01)
(h / have-org-role-91, ARG1, c / country)
(h2 / have-org-role-91, ARG1, c2 / continent)
(h2 / have-org-role-91, ARG2, o3 / official)
(m / mask-01, ARG1, e2 / effort)
(m / mask-01, ARG2, p / program)
(n / name, op, "U.S.")
(n2 / name, op, "Europe")
(n4 / name, op, "Iran")
(o2 / obtain-01, ARG1, t / technology)
(p / program, mod, e / energy)
(p / program, poss, c4 / country)
(p2 / produce-01, ARG1, b / bomb)
(s / suspect-01, ARG0, a / and)
(s / suspect-01, ARG1, m / mask-01)
(u2 / use-01, ARG1, t / technology)
(u2 / use-01, ARG2, p2 / produce-01)
(u2 / use-01, mod, p4 / possible)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),that,technology,false), Span(4,5,List(1),suspect,suspect-01,false), Span(10,11,List(2),program,energy,false), Span(14,15,List(3),to,effort,false), Span(0,1,List(6, 5, 4),U.S.,(country :name (name :op "U.S.")),false), Span(2,3,List(9, 8, 7),European,(organization :name (name :op "European")),false), Span(19,20,List(10),be,possible,false), Span(16,17,List(11),technology,obtain-01,false), Span(28,29,List(12),,bomb,false), Span(8,9,List(13),nuclear,civilian,false), Span(24,25,List(14),of,produce-01,false), Span(3,4,List(17, 16, 15),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(11,12,List(18),masks,program,false), Span(12,13,List(20, 19),an,(thing :ARG2-of mask-01),false), Span(27,28,List(21),bomb.,atom,false), Span(21,22,List(22),in,use-01,false), Span(1,2,List(23),and,and,false)),Map(2 -> energy, 5 -> name, 12 -> bomb, 15 -> person, 8 -> name, 21 -> atom, 18 -> program, 7 -> organization, 17 -> official, 1 -> suspect-01, 23 -> and, 4 -> country, 11 -> obtain-01, 14 -> produce-01, 20 -> mask-01, 6 -> "U.S.", 22 -> use-01, 0 -> technology, 9 -> "European", 16 -> have-org-role-91, 19 -> thing, 3 -> effort, 10 -> possible, 13 -> civilian),Map(e -> energy, n -> name, h -> have-org-role-91, t -> technology, b -> bomb, o3 -> official, e2 -> effort, p2 -> produce-01, s -> suspect-01, m -> mask-01, p -> possible, a -> atom, p4 -> program, o2 -> obtain-01, t2 -> thing, a2 -> and, c -> country, u -> use-01, o -> organization, p3 -> person, n2 -> name, c2 -> civilian))),[Ljava.lang.String;@3bd5b3bd,Annotation([Ljava.lang.String;@3b1aeb4e,[Ljava.lang.String;@7db40d04,[Ljava.lang.String;@32ca91d),Annotation([Ljava.lang.String;@1572ba9e,[Ljava.lang.String;@795e63e5,[Ledu.cmu.lti.nlp.amr.Dependency;@24df9de7),Annotation([Ljava.lang.String;@42ddbc20,[Ljava.lang.String;@42fb58af,[Ljava.lang.String;@48304a5e),Annotation([Ljava.lang.String;@10d8d61a,[Ljava.lang.String;@3f4b449d,[Ledu.cmu.lti.nlp.amr.Entity;@276d5dfb))
AMR:
(a2 / and, op, c / country)
(a2 / and, op, p3 / person)
(b / bomb, mod, a / atom)
(c / country, name, n / name)
(e2 / effort, purpose, o2 / obtain-01)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, o3 / official)
(m / mask-01, ARG0, p4 / program)
(m / mask-01, ARG1, e2 / effort)
(m / mask-01, ARG2, t2 / thing)
(n / name, op, "U.S.")
(n2 / name, op, "European")
(o / organization, name, n2 / name)
(o2 / obtain-01, ARG1, t / technology)
(p / possible, domain, u / use-01)
(p2 / produce-01, ARG1, b / bomb)
(p4 / program, mod, c2 / civilian)
(p4 / program, mod, e / energy)
(s / suspect-01, ARG0, p3 / person)
(s / suspect-01, ARG1, t2 / thing)
(u / use-01, ARG1, t / technology)
(u / use-01, ARG2, p2 / produce-01)

Decoded in 2,020,650 microseconds
Sentence: U.S. and European officials may impose a 4th round of sanctions on Tehran when the U.N. Security Council considers the issue of Iran's nuclear energy program most likely in September 2007.

Oracle Span 1:  and => and
Oracle Span 2:  considers => consider-02
Oracle Span 3:  energy => energy
Oracle Span 4:  European => (continent :name (name :op "Europe"))
Oracle Span 5:  impose => impose-01
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  issue => issue
Oracle Span 8:  likely => likely
Oracle Span 9:  may => possible
Oracle Span 10:  most => most
Oracle Span 11:  nuclear => nucleus
Oracle Span 12:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 13:  program => program
Oracle Span 14:  round => round
Oracle Span 15:  sanctions => sanction-02
Oracle Span 16:  September 2007 => (date-entity :month 9 :year 2007)
Oracle Span 17:  Tehran => (city :name (name :op "Tehran"))
Oracle Span 18:  U.N. Security Council => (organization :name (name :op "Council" :op "Security" :op "U.N."))
Oracle Span 19:  U.S. => (have-org-role-91 :ARG1 (country :name (name :op "U.S.")))
NER Entity: (country :name (name :op "U.S."))
NER Entity: (country :name (name :op "Tehran"))
NER Entity: (organization :name (name :op "U.N."))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "European"))
Spans:
Span 1-2:  and => and
Span 18-19:  considers => consider-01
Span 24-25:  energy => nucleus
Span 2-3:  European => (organization :name (name :op "European"))
Span 5-6:  impose => impose-01
Span 28-29:  in => likely
Span 20-21:  issue => issue
Span 27-28:  likely => most
Span 26-27:  most => program
Span 3-4:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 25-26:  program => energy
Span 8-9:  round => round
Span 10-11:  sanctions => sanction-01
Span 12-13:  Tehran => (city :name (name :op "Tehran"))
Span 15-18:  U.N. Security Council => (organization :name (name :op "U.N." :op "Security" :op "Council"))
Span 0-1:  U.S. => (country :name (name :op "U.S."))
Span 0-8:  U.S. and European officials may impose a 4th => (ordinal-entity :value 32.0)
Span 0-31:  U.S. and European officials may impose a 4th round of sanctions on Tehran when the U.N. Security Council considers the issue of Iran's nuclear energy program most likely in September 2007. => (date-entity :year 2007 :month 9)

Langrangian relaxation converged after 52 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 18-19:  considers => consider-02
Oracle Span 25-26:  energy => energy
Oracle Span 2-3:  European => (continent :name (name :op "Europe"))
Oracle Span 5-6:  impose => impose-01
Oracle Span 22-23:  Iran => (country :name (name :op "Iran"))
Oracle Span 20-21:  issue => issue
Oracle Span 28-29:  likely => likely
Oracle Span 4-5:  may => possible
Oracle Span 27-28:  most => most
Oracle Span 24-25:  nuclear => nucleus
Oracle Span 3-4:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 26-27:  program => program
Oracle Span 8-9:  round => round
Oracle Span 10-11:  sanctions => sanction-02
Oracle Span 30-32:  September 2007 => (date-entity :month 9 :year 2007)
Oracle Span 12-13:  Tehran => (city :name (name :op "Tehran"))
Oracle Span 15-18:  U.N. Security Council => (organization :name (name :op "Council" :op "Security" :op "U.N."))
Oracle Span 0-1:  U.S. => (have-org-role-91 :ARG1 (country :name (name :op "U.S.")))

Dependencies:
1	U.S.	_	NNP	NNP	_	4	nn	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	European	_	JJ	JJ	_	1	conj	_	_
4	officials	_	NNS	NNS	_	6	nsubj	_	_
5	may	_	MD	MD	_	6	aux	_	_
6	impose	_	VB	VB	_	0	root	_	_
7	a	_	DT	DT	_	9	det	_	_
8	4th	_	JJ	JJ	_	9	amod	_	_
9	round	_	NN	NN	_	6	dobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	sanctions	_	NNS	NNS	_	10	pobj	_	_
12	on	_	IN	IN	_	11	prep	_	_
13	Tehran	_	NNP	NNP	_	12	pobj	_	_
14	when	_	WRB	WRB	_	19	advmod	_	_
15	the	_	DT	DT	_	18	det	_	_
16	U.N.	_	NNP	NNP	_	18	nn	_	_
17	Security	_	NNP	NNP	_	18	nn	_	_
18	Council	_	NNP	NNP	_	19	nsubj	_	_
19	considers	_	VBZ	VBZ	_	6	advcl	_	_
20	the	_	DT	DT	_	21	det	_	_
21	issue	_	NN	NN	_	19	dobj	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	Iran	_	NNP	NNP	_	27	poss	_	_
24	's	_	POS	POS	_	23	possessive	_	_
25	nuclear	_	JJ	JJ	_	27	amod	_	_
26	energy	_	NN	NN	_	27	nn	_	_
27	program	_	NN	NN	_	22	pobj	_	_
28	most	_	RBS	RBS	_	29	advmod	_	_
29	likely	_	JJ	JJ	_	27	amod	_	_
30	in	_	IN	IN	_	19	prep	_	_
31	September	_	NNP	NNP	_	30	pobj	_	_
32	2007	_	CD	CD	_	31	num	_	_
33	.	_	.	.	_	6	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / continent, name, n2 / name)
(c3 / city, name, n3 / name)
(c4 / consider-02, ARG0, o2 / organization)
(c4 / consider-02, ARG1, i2 / issue)
(c4 / consider-02, time, d / date-entity)
(c5 / country, name, n6 / name)
(d / date-entity, mod, l / likely)
(d / date-entity, month, 9)
(d / date-entity, year, 2007)
(e / energy, mod, n5 / nucleus)
(h / have-org-role-91, ARG1, c / country)
(h2 / have-org-role-91, ARG1, c2 / continent)
(h2 / have-org-role-91, ARG2, o4 / official)
(i / impose-01, ARG0, a2 / and)
(i / impose-01, ARG1, r / round)
(i2 / issue, topic, p2 / program)
(l / likely, mod, m / most)
(n / name, op, "U.S.")
(n2 / name, op, "Europe")
(n3 / name, op, "Tehran")
(n4 / name, op, "Council")
(n4 / name, op, "Security")
(n4 / name, op, "U.N.")
(n6 / name, op, "Iran")
(o2 / organization, name, n4 / name)
(p / possible, domain, i / impose-01)
(p2 / program, mod, e / energy)
(p2 / program, poss, c5 / country)
(s / sanction-02, ARG0, a2 / and)
(s / sanction-02, ARG1, c3 / city)
(s / sanction-02, ARG2, r / round)
(s / sanction-02, time, c4 / consider-02)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),sanctions,sanction-01,false), Span(28,29,List(1),in,likely,false), Span(12,13,List(4, 3, 2),Tehran,(city :name (name :op "Tehran")),false), Span(20,21,List(5),issue,issue,false), Span(0,1,List(8, 7, 6),U.S.,(country :name (name :op "U.S.")),false), Span(8,9,List(9),round,round,false), Span(24,25,List(10),energy,nucleus,false), Span(27,28,List(11),likely,most,false), Span(25,26,List(12),program,energy,false), Span(26,27,List(13),most,program,false), Span(2,3,List(16, 15, 14),European,(organization :name (name :op "European")),false), Span(0,31,List(19, 18, 17),U.S. and European officials may impose a 4th round of sanctions on Tehran when the U.N. Security Council considers the issue of Iran's nuclear energy program most likely in September 2007.,(date-entity :year 2007 :month 9),false), Span(5,6,List(20),impose,impose-01,false), Span(0,8,List(22, 21),U.S. and European officials may impose a 4th,(ordinal-entity :value 32.0),false), Span(15,18,List(27, 26, 25, 24, 23),U.N. Security Council,(organization :name (name :op "U.N." :op "Security" :op "Council")),false), Span(18,19,List(28),considers,consider-01,false), Span(3,4,List(31, 30, 29),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(1,2,List(32),and,and,false)),Map(30 -> have-org-role-91, 2 -> city, 5 -> issue, 27 -> "Council", 12 -> energy, 8 -> "U.S.", 15 -> name, 21 -> ordinal-entity, 18 -> 2007, 24 -> name, 7 -> name, 1 -> likely, 17 -> date-entity, 23 -> organization, 26 -> "Security", 4 -> "Tehran", 11 -> most, 32 -> and, 14 -> organization, 29 -> person, 20 -> impose-01, 28 -> consider-01, 6 -> country, 9 -> round, 0 -> sanction-01, 22 -> 32.0, 16 -> "European", 19 -> 9, 10 -> nucleus, 3 -> name, 31 -> official, 25 -> "U.N.", 13 -> program),Map(e -> energy, n -> name, h -> have-org-role-91, 2 -> 2007, o3 -> organization, p2 -> person, n4 -> name, s -> sanction-01, m -> most, d -> date-entity, p -> program, a -> and, n3 -> nucleus, c3 -> consider-01, o2 -> ordinal-entity, i2 -> impose-01, r -> round, i -> issue, c -> city, l -> likely, 9 -> 9, o -> organization, o4 -> official, 3 -> 32.0, n2 -> name, c2 -> country, n5 -> name))),[Ljava.lang.String;@3d0496cd,Annotation([Ljava.lang.String;@3184b0c3,[Ljava.lang.String;@d39d75e,[Ljava.lang.String;@402f3fac),Annotation([Ljava.lang.String;@59847b9a,[Ljava.lang.String;@4d92dac1,[Ledu.cmu.lti.nlp.amr.Dependency;@e52770a),Annotation([Ljava.lang.String;@37b9fb33,[Ljava.lang.String;@4d9b0ef5,[Ljava.lang.String;@16049155),Annotation([Ljava.lang.String;@b734eb8,[Ljava.lang.String;@73eb4c86,[Ledu.cmu.lti.nlp.amr.Entity;@669218a8))
AMR:
(a / and, op, c2 / country)
(a / and, op, p2 / person)
(a / and, time, d / date-entity)
(c / city, name, n / name)
(c2 / country, name, n2 / name)
(c3 / consider-01, ARG0, o3 / organization)
(c3 / consider-01, ARG1, i / issue)
(d / date-entity, month, 9 / 9)
(d / date-entity, year, 2 / 2007)
(e / energy, mod, n3 / nucleus)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, o4 / official)
(i / issue, poss, p / program)
(i2 / impose-01, ARG0, p2 / person)
(i2 / impose-01, ARG1, r / round)
(i2 / impose-01, time, c3 / consider-01)
(l / likely, degree, m / most)
(m / most, calendar, p / program)
(n / name, op, "Tehran")
(n2 / name, op, "U.S.")
(n4 / name, op, "European")
(n5 / name, op, "Council")
(n5 / name, op, "Security")
(n5 / name, op, "U.N.")
(o / organization, name, n4 / name)
(o2 / ordinal-entity, condition, c3 / consider-01)
(o2 / ordinal-entity, value, 3 / 32.0)
(o3 / organization, name, n5 / name)
(p / program, mod, e / energy)
(s / sanction-01, ARG0, p2 / person)
(s / sanction-01, ARG1, c / city)

Decoded in 4,061,280 microseconds
Sentence: The International Atomic Energy Agency distributed limited copies of the IAEA report before a meeting on 11 September 2007 of the 35 members of the IAEA board.

Oracle Span 1:  11 September 2007 => (date-entity :day 11 :month 9 :year 2007)
Oracle Span 2:  35 => 35
Oracle Span 3:  before => before
Oracle Span 4:  board => board
Oracle Span 5:  copies => copy-01
Oracle Span 6:  distributed => distribute-01
Oracle Span 7:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 8:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 9:  limited => limit-01
Oracle Span 10:  meeting => meet-03
Oracle Span 11:  members => (have-org-role-91 :ARG2 member)
Oracle Span 12:  report => (thing :ARG1-of report-01)
NER Entity: (organization :name (name :op "International" :op "Atomic" :op "Energy" :op "Agency"))
NER Entity: (organization :name (name :op "IAEA"))
mkDayMonthYear(11	September	2007,11,September,2007)
Spans:
Span 12-13:  before => before
Span 7-8:  copies => copy
Span 5-6:  distributed => distribute-01
Span 25-27:  IAEA board. => (organization :name (name :op "Board" :op "IAEA"))
Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency"))
Span 6-7:  limited => limit-01
Span 14-15:  meeting => meet-01
Span 22-23:  members => (have-org-role-91 :ARG2 member)
Span 11-12:  report => report-01
Span 0-1:  The => 1
Span 0-17:  The International Atomic Energy Agency distributed limited copies of the IAEA report before a meeting on 11 => (date-entity :year 2007 :month 9 :day 11)

Langrangian relaxation converged after 44 iterations. Delta = 0.0
Oracle Span 16-19:  11 September 2007 => (date-entity :day 11 :month 9 :year 2007)
Oracle Span 21-22:  35 => 35
Oracle Span 12-13:  before => before
Oracle Span 26-27:  board => board
Oracle Span 7-8:  copies => copy-01
Oracle Span 5-6:  distributed => distribute-01
Oracle Span 10-11:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 6-7:  limited => limit-01
Oracle Span 14-15:  meeting => meet-03
Oracle Span 22-23:  members => (have-org-role-91 :ARG2 member)
Oracle Span 11-12:  report => (thing :ARG1-of report-01)

Dependencies:
1	The	_	DT	DT	_	5	det	_	_
2	International	_	NNP	NNP	_	5	nn	_	_
3	Atomic	_	NNP	NNP	_	5	nn	_	_
4	Energy	_	NNP	NNP	_	5	nn	_	_
5	Agency	_	NNP	NNP	_	6	nsubj	_	_
6	distributed	_	VBD	VBD	_	0	root	_	_
7	limited	_	JJ	JJ	_	8	amod	_	_
8	copies	_	NNS	NNS	_	6	dobj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	12	det	_	_
11	IAEA	_	NNP	NNP	_	12	nn	_	_
12	report	_	NN	NN	_	9	pobj	_	_
13	before	_	IN	IN	_	6	prep	_	_
14	a	_	DT	DT	_	15	det	_	_
15	meeting	_	NN	NN	_	13	pobj	_	_
16	on	_	IN	IN	_	15	prep	_	_
17	11	_	CD	CD	_	18	num	_	_
18	September	_	NNP	NNP	_	16	pobj	_	_
19	2007	_	CD	CD	_	18	num	_	_
20	of	_	IN	IN	_	18	prep	_	_
21	the	_	DT	DT	_	23	det	_	_
22	35	_	CD	CD	_	23	num	_	_
23	members	_	NNS	NNS	_	20	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	the	_	DT	DT	_	27	det	_	_
26	IAEA	_	NNP	NNP	_	27	nn	_	_
27	board	_	NN	NN	_	24	pobj	_	_
28	.	_	.	.	_	6	punct	_	_

Oracle:
(b / before, op, m / meet-03)
(b2 / board, poss, o / organization)
(c / copy-01, ARG1, t / thing)
(d / distribute-01, ARG0, o / organization)
(d / distribute-01, time, b / before)
(d2 / date-entity, day, 11)
(d2 / date-entity, month, 9)
(d2 / date-entity, year, 2007)
(h / have-org-role-91, ARG1, b2 / board)
(h / have-org-role-91, ARG2, m2 / member)
(m / meet-03, time, d2 / date-entity)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n2 / name, op, "IAEA")
(o / organization, name, n / name)
(o2 / organization, name, n2 / name)
(r / report-01, ARG0, o2 / organization)
(r / report-01, ARG1, t / thing)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),The,1,false), Span(1,5,List(6, 5, 4, 3, 2, 1),International Atomic Energy Agency,(organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency")),false), Span(14,15,List(7),meeting,meet-01,false), Span(11,12,List(8),report,report-01,false), Span(7,8,List(9),copies,copy,false), Span(6,7,List(10),limited,limit-01,false), Span(25,27,List(14, 13, 12, 11),IAEA board.,(organization :name (name :op "Board" :op "IAEA")),false), Span(12,13,List(15),before,before,false), Span(22,23,List(17, 16),members,(have-org-role-91 :ARG2 member),false), Span(5,6,List(18),distributed,distribute-01,false), Span(0,17,List(22, 21, 20, 19),The International Atomic Energy Agency distributed limited copies of the IAEA report before a meeting on 11,(date-entity :year 2007 :month 9 :day 11),false)),Map(2 -> name, 5 -> "Energy", 12 -> name, 15 -> before, 8 -> report-01, 21 -> 9, 18 -> distribute-01, 7 -> meet-01, 17 -> member, 1 -> organization, 4 -> "International", 11 -> organization, 14 -> "IAEA", 20 -> 2007, 6 -> "Agency", 22 -> 11, 0 -> 1, 9 -> copy, 16 -> have-org-role-91, 19 -> date-entity, 3 -> "Atomic", 10 -> limit-01, 13 -> "Board"),Map(n -> name, h -> have-org-role-91, 2 -> 2007, 12 -> 11, b -> before, m2 -> member, m -> meet-01, d -> distribute-01, 1 -> 1, d2 -> date-entity, o2 -> organization, r -> report-01, c -> copy, l -> limit-01, 9 -> 9, o -> organization, n2 -> name))),[Ljava.lang.String;@68c21eca,Annotation([Ljava.lang.String;@3f7e5fca,[Ljava.lang.String;@40541900,[Ljava.lang.String;@2a5341d7),Annotation([Ljava.lang.String;@521f2e19,[Ljava.lang.String;@1f52bb9f,[Ledu.cmu.lti.nlp.amr.Dependency;@7fae3d6c),Annotation([Ljava.lang.String;@4fc396b7,[Ljava.lang.String;@648716b0,[Ljava.lang.String;@6e83d7fc),Annotation([Ljava.lang.String;@60c8d21d,[Ljava.lang.String;@33ed969d,[Ledu.cmu.lti.nlp.amr.Entity;@6f8324c6))
AMR:
(b / before, op, m / meet-01)
(d / distribute-01, ARG0, o / organization)
(d / distribute-01, ARG1, c / copy)
(d / distribute-01, time, b / before)
(d2 / date-entity, day, 12 / 11)
(d2 / date-entity, month, 9 / 9)
(d2 / date-entity, year, 2 / 2007)
(h / have-org-role-91, ARG1, o2 / organization)
(h / have-org-role-91, ARG2, m2 / member)
(l / limit-01, ARG1, c / copy)
(m / meet-01, ARG1, d2 / date-entity)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n2 / name, op, "Board")
(n2 / name, op, "IAEA")
(o / organization, mod, 1 / 1)
(o / organization, name, n / name)
(o2 / organization, name, n2 / name)
(r / report-01, ARG1, b / before)
(r / report-01, time, h / have-org-role-91)

Decoded in 2,275,650 microseconds
Sentence: The findings reflect an agency agreement on 21 August 2007 with Tehran that Iranian officials began publicizing the week of 12 August 2007.

Oracle Span 1:  12 August 2007 => (date-entity :day 12 :month 8 :year 2007)
Oracle Span 2:  21 August 2007 => (date-entity :day 21 :month 8 :year 2007)
Oracle Span 3:  agency => agency
Oracle Span 4:  agreement => agree-01
Oracle Span 5:  began => begin-01
Oracle Span 6:  findings => (thing :ARG1-of find-01)
Oracle Span 7:  Iranian => (country :name (name :op "Iran"))
Oracle Span 8:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 9:  publicizing => publicize-01
Oracle Span 10:  reflect => reflect-01
Oracle Span 11:  Tehran => (city :name (name :op "Tehran"))
Oracle Span 12:  week => week
NER Entity: (country :name (name :op "Tehran"))
NER Entity: (thing :name (name :op "Iranian"))
mkDayMonthYear(21	August	2007,21,August,2007)
mkDayMonthYear(12	August	2007,12,August,2007)
Spans:
Span 4-5:  agency => agency
Span 5-6:  agreement => agreement
Span 15-16:  began => begin-01
Span 1-2:  findings => find-01
Span 13-14:  Iranian => (country :name (name :op "Iran"))
Span 14-15:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 16-17:  publicizing => publicize-01
Span 2-3:  reflect => reflect-01
Span 11-12:  Tehran => (city :name (name :op "Tehran"))
Span 0-8:  The findings reflect an agency agreement on 21 => (date-entity :year 2007 :month 8 :day 21)
Span 0-18:  The findings reflect an agency agreement on 21 August 2007 with Tehran that Iranian officials began publicizing the => (date-entity :month 8 :day 12)

Langrangian relaxation converged after 23 iterations. Delta = 0.0
Oracle Span 20-23:  12 August 2007 => (date-entity :day 12 :month 8 :year 2007)
Oracle Span 7-10:  21 August 2007 => (date-entity :day 21 :month 8 :year 2007)
Oracle Span 4-5:  agency => agency
Oracle Span 5-6:  agreement => agree-01
Oracle Span 15-16:  began => begin-01
Oracle Span 1-2:  findings => (thing :ARG1-of find-01)
Oracle Span 13-14:  Iranian => (country :name (name :op "Iran"))
Oracle Span 14-15:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 16-17:  publicizing => publicize-01
Oracle Span 2-3:  reflect => reflect-01
Oracle Span 11-12:  Tehran => (city :name (name :op "Tehran"))
Oracle Span 18-19:  week => week

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	findings	_	NNS	NNS	_	3	nsubj	_	_
3	reflect	_	VBP	VBP	_	0	root	_	_
4	an	_	DT	DT	_	6	det	_	_
5	agency	_	NN	NN	_	6	nn	_	_
6	agreement	_	NN	NN	_	3	dobj	_	_
7	on	_	IN	IN	_	3	prep	_	_
8	21	_	CD	CD	_	7	pobj	_	_
9	August	_	NNP	NNP	_	8	tmod	_	_
10	2007	_	CD	CD	_	9	num	_	_
11	with	_	IN	IN	_	8	prep	_	_
12	Tehran	_	NNP	NNP	_	11	pobj	_	_
13	that	_	IN	IN	_	16	mark	_	_
14	Iranian	_	JJ	JJ	_	15	amod	_	_
15	officials	_	NNS	NNS	_	16	nsubj	_	_
16	began	_	VBD	VBD	_	3	ccomp	_	_
17	publicizing	_	VBG	VBG	_	16	xcomp	_	_
18	the	_	DT	DT	_	19	det	_	_
19	week	_	NN	NN	_	17	dobj	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	12	_	CD	CD	_	20	pobj	_	_
22	August	_	NNP	NNP	_	17	tmod	_	_
23	2007	_	CD	CD	_	22	num	_	_
24	.	_	.	.	_	3	punct	_	_

Oracle:
(a / agree-01, ARG0, a2 / agency)
(a / agree-01, ARG2, c / city)
(a / agree-01, time, d / date-entity)
(b / begin-01, ARG0, o / official)
(b / begin-01, ARG1, p / publicize-01)
(c / city, name, n / name)
(c2 / country, name, n2 / name)
(d / date-entity, day, 21)
(d / date-entity, month, 8)
(d / date-entity, year, 2007)
(d2 / date-entity, day, 12)
(d2 / date-entity, month, 8)
(d2 / date-entity, year, 2007)
(f / find-01, ARG1, t / thing)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Tehran")
(n2 / name, op, "Iran")
(p / publicize-01, ARG1, a / agree-01)
(p / publicize-01, time, w / week)
(r / reflect-01, ARG1, t / thing)
(r / reflect-01, ARG2, a / agree-01)
(w / week, mod, d2 / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(2, 1, 0),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(2,3,List(3),reflect,reflect-01,false), Span(16,17,List(4),publicizing,publicize-01,false), Span(5,6,List(5),agreement,agreement,false), Span(0,18,List(8, 7, 6),The findings reflect an agency agreement on 21 August 2007 with Tehran that Iranian officials began publicizing the,(date-entity :month 8 :day 12),false), Span(4,5,List(9),agency,agency,false), Span(0,8,List(13, 12, 11, 10),The findings reflect an agency agreement on 21,(date-entity :year 2007 :month 8 :day 21),false), Span(11,12,List(16, 15, 14),Tehran,(city :name (name :op "Tehran")),false), Span(13,14,List(19, 18, 17),Iranian,(country :name (name :op "Iran")),false), Span(15,16,List(20),began,begin-01,false), Span(1,2,List(21),findings,find-01,false)),Map(2 -> official, 5 -> agreement, 12 -> 8, 15 -> name, 8 -> 12, 21 -> find-01, 18 -> name, 7 -> 8, 17 -> country, 1 -> have-org-role-91, 4 -> publicize-01, 11 -> 2007, 14 -> city, 20 -> begin-01, 6 -> date-entity, 0 -> person, 9 -> agency, 16 -> "Tehran", 19 -> "Iran", 3 -> reflect-01, 10 -> date-entity, 13 -> 21),Map(n -> name, h -> have-org-role-91, 2 -> 2007, b -> begin-01, 8 -> 8, p2 -> publicize-01, d -> date-entity, 1 -> 12, p -> person, a -> agreement, d2 -> date-entity, 82 -> 8, r -> reflect-01, a2 -> agency, c -> city, f -> find-01, 22 -> 21, o -> official, n2 -> name, c2 -> country))),[Ljava.lang.String;@688ecae0,Annotation([Ljava.lang.String;@38142597,[Ljava.lang.String;@5150798e,[Ljava.lang.String;@4a70fb20),Annotation([Ljava.lang.String;@54b7f144,[Ljava.lang.String;@4d164ed8,[Ledu.cmu.lti.nlp.amr.Dependency;@1f58d2fd),Annotation([Ljava.lang.String;@52bc93cd,[Ljava.lang.String;@39ea650f,[Ljava.lang.String;@46759c64),Annotation([Ljava.lang.String;@1fe3616d,[Ljava.lang.String;@29f7bba7,[Ledu.cmu.lti.nlp.amr.Entity;@43df618b))
AMR:
(a / agreement, mod, a2 / agency)
(b / begin-01, ARG0, p / person)
(b / begin-01, ARG1, p2 / publicize-01)
(c / city, name, n / name)
(c2 / country, name, n2 / name)
(d / date-entity, day, 1 / 12)
(d / date-entity, month, 8 / 8)
(d2 / date-entity, day, 22 / 21)
(d2 / date-entity, month, 82 / 8)
(d2 / date-entity, year, 2 / 2007)
(f / find-01, ARG1, d2 / date-entity)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Tehran")
(n2 / name, op, "Iran")
(p2 / publicize-01, ARG0, c / city)
(p2 / publicize-01, ARG1, d / date-entity)
(r / reflect-01, ARG0, f / find-01)
(r / reflect-01, ARG1, b / begin-01)
(r / reflect-01, ARG2, a / agreement)

Decoded in 1,276,811 microseconds
Sentence: The accord said that there were no remaining issues and ambiguities regarding Iran's nuclear program and activities.

Oracle Span 1:  accord => accord
Oracle Span 2:  activities => activity
Oracle Span 3:  ambiguities => ambiguity
Oracle Span 4:  and => and
Oracle Span 5:  and => and
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  issues => issue
Oracle Span 8:  no => -
Oracle Span 9:  nuclear => nucleus
Oracle Span 10:  program => program
Oracle Span 11:  regarding => regard-01
Oracle Span 12:  remaining => remain-01
Oracle Span 13:  said => say-01
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 17-18:   => activity
Span 1-2:  accord => accord
Span 16-17:  activities. => and
Span 10-11:  ambiguities => ambiguity
Span 15-16:  and => program
Span 9-10:  and => and
Span 8-9:  issues => issue
Span 14-15:  program => nucleus
Span 7-8:  remaining => remain-01
Span 2-3:  said => say-01

Langrangian relaxation converged after 19 iterations. Delta = 0.0
Oracle Span 1-2:  accord => accord
Oracle Span 17-18:  activities => activity
Oracle Span 10-11:  ambiguities => ambiguity
Oracle Span 9-10:  and => and
Oracle Span 16-17:  and => and
Oracle Span 12-13:  Iran => (country :name (name :op "Iran"))
Oracle Span 8-9:  issues => issue
Oracle Span 6-7:  no => -
Oracle Span 14-15:  nuclear => nucleus
Oracle Span 15-16:  program => program
Oracle Span 11-12:  regarding => regard-01
Oracle Span 7-8:  remaining => remain-01
Oracle Span 2-3:  said => say-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	accord	_	NN	NN	_	3	nsubj	_	_
3	said	_	VBD	VBD	_	0	root	_	_
4	that	_	IN	IN	_	6	mark	_	_
5	there	_	EX	EX	_	6	expl	_	_
6	were	_	VBD	VBD	_	3	ccomp	_	_
7	no	_	DT	DT	_	9	neg	_	_
8	remaining	_	VBG	VBG	_	9	amod	_	_
9	issues	_	NNS	NNS	_	6	nsubj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	ambiguities	_	NNS	NNS	_	9	conj	_	_
12	regarding	_	VBG	VBG	_	11	prep	_	_
13	Iran	_	NNP	NNP	_	16	poss	_	_
14	's	_	POS	POS	_	13	possessive	_	_
15	nuclear	_	JJ	JJ	_	16	amod	_	_
16	program	_	NN	NN	_	12	pobj	_	_
17	and	_	CC	CC	_	16	cc	_	_
18	activities	_	NNS	NNS	_	16	conj	_	_
19	.	_	.	.	_	3	punct	_	_

Oracle:
(a2 / and, op, a3 / ambiguity)
(a2 / and, op, i / issue)
(a4 / and, op, a5 / activity)
(a4 / and, op, p / program)
(a5 / activity, mod, n / nucleus)
(a5 / activity, poss, c2 / country)
(c2 / country, name, n2 / name)
(i / issue, polarity, - / -)
(n2 / name, op, "Iran")
(p / program, mod, n / nucleus)
(p / program, poss, c2 / country)
(r / remain-01, ARG1, a3 / ambiguity)
(r / remain-01, ARG1, i / issue)
(r2 / regard-01, ARG0, a3 / ambiguity)
(r2 / regard-01, ARG0, i / issue)
(r2 / regard-01, ARG1, a4 / and)
(s / say-01, ARG0, a / accord)
(s / say-01, ARG1, a2 / and)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),ambiguities,ambiguity,false), Span(16,17,List(1),activities.,and,false), Span(1,2,List(2),accord,accord,false), Span(17,18,List(3),,activity,false), Span(7,8,List(4),remaining,remain-01,false), Span(14,15,List(5),program,nucleus,false), Span(15,16,List(6),and,program,false), Span(2,3,List(7),said,say-01,false), Span(8,9,List(8),issues,issue,false), Span(9,10,List(9),and,and,false)),Map(2 -> accord, 5 -> nucleus, 8 -> issue, 7 -> say-01, 1 -> and, 4 -> remain-01, 6 -> program, 9 -> and, 0 -> ambiguity, 3 -> activity),Map(n -> nucleus, s -> say-01, a3 -> accord, p -> program, a -> ambiguity, a5 -> and, i -> issue, r -> remain-01, a2 -> and, a4 -> activity))),[Ljava.lang.String;@61d51e70,Annotation([Ljava.lang.String;@41bdc9cb,[Ljava.lang.String;@2169ee8,[Ljava.lang.String;@37f53c98),Annotation([Ljava.lang.String;@7e1a8288,[Ljava.lang.String;@51c6ff11,[Ledu.cmu.lti.nlp.amr.Dependency;@6711da1f),Annotation([Ljava.lang.String;@799e2b99,[Ljava.lang.String;@53bae8e0,[Ljava.lang.String;@3562abf1),Annotation([Ljava.lang.String;@5cca5e60,[Ljava.lang.String;@54806483,[Ledu.cmu.lti.nlp.amr.Entity;@50f97b1b))
AMR:
(a2 / and, op, a4 / activity)
(a2 / and, op, p / program)
(a5 / and, op, a / ambiguity)
(a5 / and, op, i / issue)
(p / program, mod, n / nucleus)
(r / remain-01, ARG0, a3 / accord)
(r / remain-01, ARG1, i / issue)
(s / say-01, ARG0, a3 / accord)
(s / say-01, ARG1, a2 / and)

Decoded in 469,202 microseconds
Sentence: According to an account by Reuters news agency the IAEA report said the work plan is a significant step forward.

Oracle Span 1:  account => account-01
Oracle Span 2:  agency => agency
Oracle Span 3:  forward => forward
Oracle Span 4:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 5:  news => news
Oracle Span 6:  plan => plan-01
Oracle Span 7:  report => (thing :ARG1-of report-01)
Oracle Span 8:  Reuters => (name :op "Reuters")
Oracle Span 9:  said => say-01
Oracle Span 10:  significant => significant
Oracle Span 11:  step => step-01
Oracle Span 12:  work => work
NER Entity: (organization :name (name :op "Reuters"))
NER Entity: (organization :name (name :op "IAEA"))
Spans:
Span 0-1:  According => accord-01
Span 3-4:  account => account
Span 19-20:  forward. => forward
Span 6-7:  news => news
Span 14-15:  plan => plan-01
Span 10-11:  report => report-01
Span 11-12:  said => say-01
Span 17-18:  significant => significant
Span 18-19:  step => step-01
Span 13-14:  work => work-01

Langrangian relaxation converged after 22 iterations. Delta = 0.0
Oracle Span 3-4:  account => account-01
Oracle Span 7-8:  agency => agency
Oracle Span 19-20:  forward => forward
Oracle Span 9-10:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 6-7:  news => news
Oracle Span 14-15:  plan => plan-01
Oracle Span 10-11:  report => (thing :ARG1-of report-01)
Oracle Span 5-6:  Reuters => (name :op "Reuters")
Oracle Span 11-12:  said => say-01
Oracle Span 17-18:  significant => significant
Oracle Span 18-19:  step => step-01
Oracle Span 13-14:  work => work

Dependencies:
1	According	_	VBG	VBG	_	12	prep	_	_
2	to	_	TO	TO	_	1	pcomp	_	_
3	an	_	DT	DT	_	4	det	_	_
4	account	_	NN	NN	_	2	pobj	_	_
5	by	_	IN	IN	_	4	prep	_	_
6	Reuters	_	NNP	NNP	_	8	nn	_	_
7	news	_	NN	NN	_	8	nn	_	_
8	agency	_	NN	NN	_	5	pobj	_	_
9	the	_	DT	DT	_	11	det	_	_
10	IAEA	_	NNP	NNP	_	11	nn	_	_
11	report	_	NN	NN	_	12	nsubj	_	_
12	said	_	VBD	VBD	_	0	root	_	_
13	the	_	DT	DT	_	15	det	_	_
14	work	_	NN	NN	_	15	nn	_	_
15	plan	_	NN	NN	_	19	nsubj	_	_
16	is	_	VBZ	VBZ	_	19	cop	_	_
17	a	_	DT	DT	_	19	det	_	_
18	significant	_	JJ	JJ	_	19	amod	_	_
19	step	_	NN	NN	_	12	ccomp	_	_
20	forward	_	RB	RB	_	19	advmod	_	_
21	.	_	.	.	_	12	punct	_	_

Oracle:
(a / account-01, ARG0, a2 / agency)
(a2 / agency, mod, n / news)
(a2 / agency, name, n2 / name)
(n2 / name, op, "Reuters")
(n3 / name, op, "IAEA")
(o / organization, name, n3 / name)
(p / plan-01, ARG1, w / work)
(r / report-01, ARG0, o / organization)
(r / report-01, ARG1, t / thing)
(s / say-01, ARG0, a / account-01)
(s3 / step-01, ARG1, p / plan-01)
(s3 / step-01, ARG2, f / forward)
(s3 / step-01, manner, s4 / significant)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),account,account,false), Span(18,19,List(1),step,step-01,false), Span(11,12,List(2),said,say-01,false), Span(13,14,List(3),work,work-01,false), Span(19,20,List(4),forward.,forward,false), Span(17,18,List(5),significant,significant,false), Span(0,1,List(6),According,accord-01,false), Span(6,7,List(7),news,news,false), Span(10,11,List(8),report,report-01,false), Span(14,15,List(9),plan,plan-01,false)),Map(2 -> say-01, 5 -> significant, 8 -> report-01, 7 -> news, 1 -> step-01, 4 -> forward, 6 -> accord-01, 9 -> plan-01, 0 -> account, 3 -> work-01),Map(n -> news, w -> work-01, s2 -> say-01, s -> step-01, p -> plan-01, a -> account, r -> report-01, a2 -> accord-01, s3 -> significant, f -> forward))),[Ljava.lang.String;@6c393676,Annotation([Ljava.lang.String;@44dcbf99,[Ljava.lang.String;@51850e3f,[Ljava.lang.String;@ae5726a),Annotation([Ljava.lang.String;@2fca7fc6,[Ljava.lang.String;@ecb3dd1,[Ledu.cmu.lti.nlp.amr.Dependency;@77c62ec1),Annotation([Ljava.lang.String;@56917471,[Ljava.lang.String;@2a59052a,[Ljava.lang.String;@7dab8005),Annotation([Ljava.lang.String;@3b5d1957,[Ljava.lang.String;@66b2d0b1,[Ledu.cmu.lti.nlp.amr.Entity;@4a0e918))
AMR:
(a2 / accord-01, ARG1, n / news)
(a2 / accord-01, ARG2, a / account)
(p / plan-01, ARG1, f / forward)
(p / plan-01, mod, s / step-01)
(s / step-01, ARG1, a2 / accord-01)
(s / step-01, mod, s3 / significant)
(s2 / say-01, ARG0, r / report-01)
(s2 / say-01, ARG1, s / step-01)
(w / work-01, ARG1, p / plan-01)

Decoded in 479,819 microseconds
Sentence: Reuters quoted a senior U.N. official as stating the Iranian government's efforts to enrich uranium had slowed.

Oracle Span 1:  efforts => effort
Oracle Span 2:  enrich => enrich-01
Oracle Span 3:  government => (government-organization :ARG0-of govern-01)
Oracle Span 4:  had => (person :ARG0-of have-org-role-91)
Oracle Span 5:  Iranian => (country :name (name :op "Iran"))
Oracle Span 6:  official => official
Oracle Span 7:  quoted => quote-01
Oracle Span 8:  Reuters => (publication :name (name :op "Reuters"))
Oracle Span 9:  senior => senior
Oracle Span 10:  slowed => slow-01
Oracle Span 11:  stating => state-01
Oracle Span 12:  U.N. => (organization :name (name :op "U.N."))
Oracle Span 13:  uranium => uranium
NER Entity: (organization :name (name :op "Reuters"))
NER Entity: (organization :name (name :op "U.N."))
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 17-18:   => slow-01
Span 10-11:  government's => (government-organization :ARG0-of govern-01)
Span 15-16:  had => uranium
Span 5-6:  official => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 1-2:  quoted => quote-01
Span 3-4:  senior => senior
Span 7-8:  stating => state-01
Span 12-13:  to => effort
Span 4-5:  U.N. => (organization :name (name :op "U.N."))
Span 14-15:  uranium => enrich-01

Langrangian relaxation converged after 6 iterations. Delta = 0.0
Oracle Span 12-13:  efforts => effort
Oracle Span 14-15:  enrich => enrich-01
Oracle Span 10-11:  government => (government-organization :ARG0-of govern-01)
Oracle Span 16-17:  had => (person :ARG0-of have-org-role-91)
Oracle Span 9-10:  Iranian => (country :name (name :op "Iran"))
Oracle Span 5-6:  official => official
Oracle Span 1-2:  quoted => quote-01
Oracle Span 0-1:  Reuters => (publication :name (name :op "Reuters"))
Oracle Span 3-4:  senior => senior
Oracle Span 17-18:  slowed => slow-01
Oracle Span 7-8:  stating => state-01
Oracle Span 4-5:  U.N. => (organization :name (name :op "U.N."))
Oracle Span 15-16:  uranium => uranium

Dependencies:
1	Reuters	_	NNP	NNP	_	18	nsubj	_	_
2	quoted	_	VBN	VBN	_	1	vmod	_	_
3	a	_	DT	DT	_	6	det	_	_
4	senior	_	JJ	JJ	_	6	amod	_	_
5	U.N.	_	NNP	NNP	_	6	nn	_	_
6	official	_	NN	NN	_	2	dobj	_	_
7	as	_	IN	IN	_	2	prep	_	_
8	stating	_	VBG	VBG	_	7	pcomp	_	_
9	the	_	DT	DT	_	11	det	_	_
10	Iranian	_	JJ	JJ	_	11	amod	_	_
11	government	_	NN	NN	_	13	poss	_	_
12	's	_	POS	POS	_	11	possessive	_	_
13	efforts	_	NNS	NNS	_	8	dobj	_	_
14	to	_	TO	TO	_	8	prep	_	_
15	enrich	_	JJ	JJ	_	16	amod	_	_
16	uranium	_	NN	NN	_	14	pobj	_	_
17	had	_	VBD	VBD	_	18	aux	_	_
18	slowed	_	VBN	VBN	_	0	root	_	_
19	.	_	.	.	_	18	punct	_	_

Oracle:
(c / country, name, n3 / name)
(e / effort, poss, g / government-organization)
(e / effort, purpose, e2 / enrich-01)
(e2 / enrich-01, ARG0, g / government-organization)
(e2 / enrich-01, ARG1, u / uranium)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, o2 / organization)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Reuters")
(n2 / name, op, "U.N.")
(n3 / name, op, "Iran")
(o / official, mod, s / senior)
(o2 / organization, name, n2 / name)
(p / publication, name, n / name)
(q / quote-01, ARG0, p / publication)
(q / quote-01, ARG1, p2 / person)
(q / quote-01, ARG2, s2 / state-01)
(s2 / state-01, ARG0, o / official)
(s2 / state-01, ARG1, s3 / slow-01)
(s3 / slow-01, ARG1, e / effort)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(1, 0),government's,(government-organization :ARG0-of govern-01),false), Span(1,2,List(2),quoted,quote-01,false), Span(3,4,List(3),senior,senior,false), Span(17,18,List(4),,slow-01,false), Span(12,13,List(5),to,effort,false), Span(4,5,List(8, 7, 6),U.N.,(organization :name (name :op "U.N.")),false), Span(14,15,List(9),uranium,enrich-01,false), Span(5,6,List(12, 11, 10),official,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(7,8,List(13),stating,state-01,false), Span(15,16,List(14),had,uranium,false)),Map(2 -> quote-01, 5 -> effort, 12 -> official, 8 -> "U.N.", 7 -> name, 1 -> govern-01, 4 -> slow-01, 11 -> have-org-role-91, 14 -> uranium, 6 -> organization, 0 -> government-organization, 9 -> enrich-01, 3 -> senior, 10 -> person, 13 -> state-01),Map(e -> effort, n -> name, h -> have-org-role-91, q -> quote-01, s2 -> slow-01, e2 -> enrich-01, s -> senior, g2 -> govern-01, g -> government-organization, p -> person, o2 -> official, s3 -> state-01, u -> uranium, o -> organization))),[Ljava.lang.String;@37b2741,Annotation([Ljava.lang.String;@17d1ecd0,[Ljava.lang.String;@2a7f2165,[Ljava.lang.String;@652d6ca4),Annotation([Ljava.lang.String;@3fb61e6f,[Ljava.lang.String;@2719c225,[Ledu.cmu.lti.nlp.amr.Dependency;@74bebbaa),Annotation([Ljava.lang.String;@7a78a1d5,[Ljava.lang.String;@75b28d93,[Ljava.lang.String;@1c5371ea),Annotation([Ljava.lang.String;@1d31fa21,[Ljava.lang.String;@22f8865b,[Ledu.cmu.lti.nlp.amr.Entity;@43475982))
AMR:
(e / effort, poss, g / government-organization)
(e2 / enrich-01, ARG1, u / uranium)
(g2 / govern-01, ARG0, g / government-organization)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, o2 / official)
(n / name, op, "U.N.")
(o / organization, name, n / name)
(o2 / official, mod, s / senior)
(q / quote-01, ARG1, s2 / slow-01)
(q / quote-01, ARG2, s3 / state-01)
(s2 / slow-01, ARG1, u / uranium)
(s3 / state-01, ARG0, p / person)
(s3 / state-01, ARG1, e / effort)

Decoded in 410,753 microseconds
Sentence: The IAEA report stated that Iranian officials must continue to build confidence about the scope and nature of Iran's present and future nuclear program.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  build => build-02
Oracle Span 4:  confidence => confidence
Oracle Span 5:  continue => continue-01
Oracle Span 6:  future => future
Oracle Span 7:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 8:  Iran => (country :name (name :op "Iran"))
Oracle Span 9:  nature => nature
Oracle Span 10:  nuclear => nucleus
Oracle Span 11:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 12:  present => present
Oracle Span 13:  program => program
Oracle Span 14:  report => (thing :ARG1-of report-01)
Oracle Span 15:  scope => scope
Oracle Span 16:  stated => state-01
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 24-25:   => program
Span 15-16:  and => and
Span 10-11:  build => build-01
Span 11-12:  confidence => confidence
Span 8-9:  continue => continue-01
Span 21-22:  future => and
Span 1-2:  IAEA => (organization :name (name :op "IAEA"))
Span 5-6:  Iranian => (country :name (name :op "Iran"))
Span 7-8:  must => muster-01
Span 16-17:  nature => nature
Span 6-7:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 23-24:  program. => nucleus
Span 2-3:  report => report-01
Span 14-15:  scope => scope
Span 3-4:  stated => state-01
Span 0-21:  The IAEA report stated that Iranian officials must continue to build confidence about the scope and nature of Iran's present and => (date-entity :time present)
Span 0-23:  The IAEA report stated that Iranian officials must continue to build confidence about the scope and nature of Iran's present and future nuclear => (date-entity :time future)

Langrangian relaxation converged after 67 iterations. Delta = 0.0
Oracle Span 15-16:  and => and
Oracle Span 21-22:  and => and
Oracle Span 10-11:  build => build-02
Oracle Span 11-12:  confidence => confidence
Oracle Span 8-9:  continue => continue-01
Oracle Span 22-23:  future => future
Oracle Span 1-2:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 18-19:  Iran => (country :name (name :op "Iran"))
Oracle Span 16-17:  nature => nature
Oracle Span 23-24:  nuclear => nucleus
Oracle Span 6-7:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 20-21:  present => present
Oracle Span 24-25:  program => program
Oracle Span 2-3:  report => (thing :ARG1-of report-01)
Oracle Span 14-15:  scope => scope
Oracle Span 3-4:  stated => state-01

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	IAEA	_	NNP	NNP	_	3	nn	_	_
3	report	_	NN	NN	_	4	nsubj	_	_
4	stated	_	VBD	VBD	_	0	root	_	_
5	that	_	IN	IN	_	9	mark	_	_
6	Iranian	_	JJ	JJ	_	7	amod	_	_
7	officials	_	NNS	NNS	_	9	nsubj	_	_
8	must	_	MD	MD	_	9	aux	_	_
9	continue	_	VB	VB	_	4	ccomp	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	build	_	VB	VB	_	9	xcomp	_	_
12	confidence	_	NN	NN	_	11	dobj	_	_
13	about	_	IN	IN	_	11	prep	_	_
14	the	_	DT	DT	_	15	det	_	_
15	scope	_	NN	NN	_	13	pobj	_	_
16	and	_	CC	CC	_	15	cc	_	_
17	nature	_	NN	NN	_	15	conj	_	_
18	of	_	IN	IN	_	15	prep	_	_
19	Iran	_	NNP	NNP	_	21	poss	_	_
20	's	_	POS	POS	_	19	possessive	_	_
21	present	_	NN	NN	_	18	pobj	_	_
22	and	_	CC	CC	_	21	cc	_	_
23	future	_	JJ	JJ	_	25	amod	_	_
24	nuclear	_	JJ	JJ	_	25	amod	_	_
25	program	_	NN	NN	_	21	conj	_	_
26	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, n3 / nature)
(a / and, op, s2 / scope)
(a2 / and, op, f / future)
(a2 / and, op, p2 / present)
(b / build-02, ARG0, o2 / official)
(b / build-02, ARG1, c3 / confidence)
(c / continue-01, ARG1, b / build-02)
(c2 / country, name, n2 / name)
(c3 / confidence, topic, a / and)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o2 / official)
(n / name, op, "IAEA")
(n2 / name, op, "Iran")
(n3 / nature, poss, p / program)
(o3 / organization, name, n / name)
(p / program, mod, n4 / nucleus)
(p / program, poss, c2 / country)
(p / program, time, a2 / and)
(r / report-01, ARG0, o3 / organization)
(r / report-01, ARG1, t / thing)
(s / state-01, ARG0, t / thing)
(s2 / scope, poss, p / program)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(2, 1, 0),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(7,8,List(3),must,muster-01,false), Span(1,2,List(6, 5, 4),IAEA,(organization :name (name :op "IAEA")),false), Span(3,4,List(7),stated,state-01,false), Span(14,15,List(8),scope,scope,false), Span(0,23,List(10, 9),The IAEA report stated that Iranian officials must continue to build confidence about the scope and nature of Iran's present and future nuclear,(date-entity :time future),false), Span(21,22,List(11),future,and,false), Span(0,21,List(13, 12),The IAEA report stated that Iranian officials must continue to build confidence about the scope and nature of Iran's present and,(date-entity :time present),false), Span(15,16,List(14),and,and,false), Span(5,6,List(17, 16, 15),Iranian,(country :name (name :op "Iran")),false), Span(2,3,List(18),report,report-01,false), Span(16,17,List(19),nature,nature,false), Span(23,24,List(20),program.,nucleus,false), Span(8,9,List(21),continue,continue-01,false), Span(11,12,List(22),confidence,confidence,false), Span(10,11,List(23),build,build-01,false), Span(24,25,List(24),,program,false)),Map(2 -> official, 5 -> name, 12 -> date-entity, 8 -> scope, 15 -> country, 21 -> continue-01, 18 -> report-01, 24 -> program, 7 -> state-01, 1 -> have-org-role-91, 17 -> "Iran", 23 -> build-01, 4 -> organization, 11 -> and, 14 -> and, 20 -> nucleus, 6 -> "IAEA", 9 -> date-entity, 0 -> person, 22 -> confidence, 16 -> name, 19 -> nature, 10 -> future, 3 -> muster-01, 13 -> present),Map(n -> name, h -> have-org-role-91, s2 -> scope, b -> build-01, p2 -> present, n4 -> nucleus, s -> state-01, m -> muster-01, d -> date-entity, p -> person, c3 -> confidence, n3 -> nature, a -> and, o2 -> organization, d2 -> date-entity, r -> report-01, a2 -> and, c -> country, f -> future, o -> official, p3 -> program, c2 -> continue-01, n2 -> name))),[Ljava.lang.String;@345de26a,Annotation([Ljava.lang.String;@98dedad,[Ljava.lang.String;@3c26bd69,[Ljava.lang.String;@574a8e5d),Annotation([Ljava.lang.String;@cdf786c,[Ljava.lang.String;@6ad90cdf,[Ledu.cmu.lti.nlp.amr.Dependency;@631d3918),Annotation([Ljava.lang.String;@60266b40,[Ljava.lang.String;@174d6330,[Ljava.lang.String;@35502af2),Annotation([Ljava.lang.String;@3f0f10b9,[Ljava.lang.String;@6c200073,[Ledu.cmu.lti.nlp.amr.Entity;@1008ba24))
AMR:
(a / and, op, d2 / date-entity)
(a / and, op, s2 / scope)
(a2 / and, op, n3 / nature)
(a2 / and, op, s2 / scope)
(b / build-01, ARG0, p / person)
(b / build-01, ARG1, c3 / confidence)
(b / build-01, ARG2, s2 / scope)
(c / country, name, n2 / name)
(c2 / continue-01, ARG1, b / build-01)
(d / date-entity, time, f / future)
(d2 / date-entity, time, p2 / present)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(m / muster-01, ARG1, c2 / continue-01)
(n / name, op, "IAEA")
(n2 / name, op, "Iran")
(n4 / nucleus, calendar, d / date-entity)
(o2 / organization, name, n / name)
(p3 / program, example, a / and)
(r / report-01, ARG0, o2 / organization)
(r / report-01, ARG1, d / date-entity)
(s / state-01, ARG0, r / report-01)
(s / state-01, ARG1, c2 / continue-01)

Decoded in 3,199,345 microseconds
Sentence: Iranian officials on 30 August 2007 stated cooperation with the IAEA possibly to prevent a further round of international sanctions.

Oracle Span 1:  30 August 2007 => (date-entity :day 30 :month 8 :year 2007)
Oracle Span 2:  cooperation => cooperate-01
Oracle Span 3:  further => further
Oracle Span 4:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 5:  international => international
Oracle Span 6:  Iranian => (country :name (name :op "Iran"))
Oracle Span 7:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 8:  possibly => possible
Oracle Span 9:  prevent => prevent-01
Oracle Span 10:  round => round
Oracle Span 11:  sanctions => sanction-02
Oracle Span 12:  stated => state-01
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (thing :name (name :op "Iranian"))
mkDayMonthYear(30	August	2007,30,August,2007)
Spans:
Span 7-8:  cooperation => cooperate-01
Span 15-16:  further => further
Span 10-11:  IAEA => (organization :name (name :op "IAEA"))
Span 18-19:  international => international
Span 0-1:  Iranian => (country :name (name :op "Iran"))
Span 0-4:  Iranian officials on 30 => (date-entity :year 2007 :month 8 :day 30)
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 11-12:  possibly => possibly
Span 13-14:  prevent => prevent-01
Span 16-17:  round => round
Span 19-20:  sanctions. => (thing :ARG2-of sanction-02)
Span 6-7:  stated => state-01

Langrangian relaxation converged after 46 iterations. Delta = 0.0
Oracle Span 3-6:  30 August 2007 => (date-entity :day 30 :month 8 :year 2007)
Oracle Span 7-8:  cooperation => cooperate-01
Oracle Span 15-16:  further => further
Oracle Span 10-11:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 18-19:  international => international
Oracle Span 0-1:  Iranian => (country :name (name :op "Iran"))
Oracle Span 1-2:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 11-12:  possibly => possible
Oracle Span 13-14:  prevent => prevent-01
Oracle Span 16-17:  round => round
Oracle Span 19-20:  sanctions => sanction-02
Oracle Span 6-7:  stated => state-01

Dependencies:
1	Iranian	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	7	nsubj	_	_
3	on	_	IN	IN	_	2	prep	_	_
4	30	_	CD	CD	_	3	pobj	_	_
5	August	_	NNP	NNP	_	2	tmod	_	_
6	2007	_	CD	CD	_	5	num	_	_
7	stated	_	VBD	VBD	_	0	root	_	_
8	cooperation	_	NN	NN	_	7	dobj	_	_
9	with	_	IN	IN	_	7	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	IAEA	_	NNP	NNP	_	9	pobj	_	_
12	possibly	_	RB	RB	_	14	advmod	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	prevent	_	VB	VB	_	7	vmod	_	_
15	a	_	DT	DT	_	17	det	_	_
16	further	_	JJ	JJ	_	17	amod	_	_
17	round	_	NN	NN	_	14	dobj	_	_
18	of	_	IN	IN	_	17	prep	_	_
19	international	_	JJ	JJ	_	20	amod	_	_
20	sanctions	_	NNS	NNS	_	18	pobj	_	_
21	.	_	.	.	_	7	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / cooperate-01, ARG0, o / official)
(c2 / cooperate-01, ARG1, o2 / organization)
(c2 / cooperate-01, purpose, p / possible)
(d / date-entity, day, 30)
(d / date-entity, month, 8)
(d / date-entity, year, 2007)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Iran")
(n2 / name, op, "IAEA")
(o2 / organization, name, n2 / name)
(p / possible, domain, p2 / prevent-01)
(p2 / prevent-01, ARG1, r / round)
(r / round, degree, f / further)
(s / state-01, ARG1, c2 / cooperate-01)
(s / state-01, time, d / date-entity)
(s2 / sanction-02, consist, r / round)
(s2 / sanction-02, mod, i / international)

Input(Some(Graph(null,ArrayBuffer(Span(0,4,List(3, 2, 1, 0),Iranian officials on 30,(date-entity :year 2007 :month 8 :day 30),false), Span(11,12,List(4),possibly,possibly,false), Span(1,2,List(7, 6, 5),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(6,7,List(8),stated,state-01,false), Span(18,19,List(9),international,international,false), Span(7,8,List(10),cooperation,cooperate-01,false), Span(0,1,List(13, 12, 11),Iranian,(country :name (name :op "Iran")),false), Span(16,17,List(14),round,round,false), Span(10,11,List(17, 16, 15),IAEA,(organization :name (name :op "IAEA")),false), Span(13,14,List(18),prevent,prevent-01,false), Span(19,20,List(20, 19),sanctions.,(thing :ARG2-of sanction-02),false), Span(15,16,List(21),further,further,false)),Map(2 -> 8, 5 -> person, 12 -> name, 15 -> organization, 8 -> state-01, 21 -> further, 18 -> prevent-01, 7 -> official, 17 -> "IAEA", 1 -> 2007, 4 -> possibly, 11 -> country, 14 -> round, 20 -> sanction-02, 6 -> have-org-role-91, 0 -> date-entity, 9 -> international, 16 -> name, 19 -> thing, 3 -> 30, 10 -> cooperate-01, 13 -> "Iran"),Map(n -> name, h -> have-org-role-91, 2 -> 2007, s2 -> sanction-02, t -> thing, 8 -> 8, p2 -> person, s -> state-01, d -> date-entity, p -> possibly, o2 -> organization, r -> round, i -> international, c -> cooperate-01, f -> further, o -> official, p3 -> prevent-01, 3 -> 30, n2 -> name, c2 -> country))),[Ljava.lang.String;@64e8a65,Annotation([Ljava.lang.String;@11a01e54,[Ljava.lang.String;@4c854872,[Ljava.lang.String;@128caa8),Annotation([Ljava.lang.String;@7347754a,[Ljava.lang.String;@628497c8,[Ledu.cmu.lti.nlp.amr.Dependency;@4249532),Annotation([Ljava.lang.String;@431e7294,[Ljava.lang.String;@bbba298,[Ljava.lang.String;@4d475ef0),Annotation([Ljava.lang.String;@6d6adf6f,[Ljava.lang.String;@5dd09a84,[Ledu.cmu.lti.nlp.amr.Entity;@b294cc4))
AMR:
(c / cooperate-01, ARG0, o2 / organization)
(c / cooperate-01, ARG1, p3 / prevent-01)
(c2 / country, name, n / name)
(d / date-entity, day, 3 / 30)
(d / date-entity, month, 8 / 8)
(d / date-entity, year, 2 / 2007)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Iran")
(n2 / name, op, "IAEA")
(o2 / organization, name, n2 / name)
(p3 / prevent-01, ARG0, d / date-entity)
(p3 / prevent-01, ARG1, r / round)
(p3 / prevent-01, ARG6, p / possibly)
(r / round, mod, f / further)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, c / cooperate-01)
(s2 / sanction-02, ARG1, c2 / country)
(s2 / sanction-02, ARG2, t / thing)
(s2 / sanction-02, mod, i / international)

Decoded in 1,769,783 microseconds
Sentence: Iran's representative to the IAEA Ali Asghar SOLTANIEH stated to Tehran's Fars news agency that the report emphasized that there exists no sign or evidence indicating diversion of Iran's nuclear activities and that all of Iran's nuclear materials have been audited.

Oracle Span 1:  activities => activity
Oracle Span 2:  Ali Asghar SOLTANIEH => (person :name (name :op "Soltanieh" :op "Asghar" :op "Ali"))
Oracle Span 3:  all => all
Oracle Span 4:  and => and
Oracle Span 5:  audited => audit-01
Oracle Span 6:  diversion => divert-01
Oracle Span 7:  emphasized => emphasize-01
Oracle Span 8:  evidence => evidence-01
Oracle Span 9:  exists => exist-01
Oracle Span 10:  Fars news agency => (publication :name (name :op "Agency" :op "News" :op "Fars"))
Oracle Span 11:  have => have-org-role-91
Oracle Span 12:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 13:  indicating => indicate-01
Oracle Span 14:  Iran => (country :name (name :op "Iran"))
Oracle Span 15:  materials => material
Oracle Span 16:  no => -
Oracle Span 17:  nuclear => nucleus
Oracle Span 18:  or => or
Oracle Span 19:  report => (thing :ARG0-of report-01)
Oracle Span 20:  representative => represent-01
Oracle Span 21:  sign => sign
Oracle Span 22:  stated => state-01
Oracle Span 23:  Tehran => (city :name (name :op "Tehran"))
NER Entity: (person :name (name :op "Ali" :op "Asghar"))
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (organization :name (name :op "Fars"))
NER Entity: (country :name (name :op "Tehran"))
Spans:
Span 41-42:   => material
Span 44-45:   => audit-01
Span 5-6:  Ali => (organization :name (name :op "IAEA"))
Span 33-34:  all => activity
Span 6-9:  Asghar SOLTANIEH stated => (person :name (name :op "Ali" :op "Asghar" :op "SOLTANIEH"))
Span 40-41:  audited. => nucleus
Span 26-27:  diversion => (thing :ARG0-of evidence-01)
Span 24-25:  evidence => sign-01
Span 11-12:  Fars => (city :name (name :op "Tehran"))
Span 25-26:  indicating => or
Span 0-1:  Iran's => (country :name (name :op "Iran"))
Span 28-29:  Iran's => diversify-01
Span 36-37:  nuclear => all
Span 27-28:  of => indicate-01
Span 34-35:  of => and
Span 22-23:  sign => exist-01
Span 18-19:  that => report
Span 14-15:  that => (name :op "News")
Span 32-33:  that => nucleus
Span 19-20:  there => emphasize-01
Span 2-3:  to => represent-01
Span 9-10:  to => state-01

Langrangian relaxation converged after 44 iterations. Delta = 0.0
Oracle Span 33-34:  activities => activity
Oracle Span 6-9:  Ali Asghar SOLTANIEH => (person :name (name :op "Soltanieh" :op "Asghar" :op "Ali"))
Oracle Span 36-37:  all => all
Oracle Span 34-35:  and => and
Oracle Span 44-45:  audited => audit-01
Oracle Span 28-29:  diversion => divert-01
Oracle Span 19-20:  emphasized => emphasize-01
Oracle Span 26-27:  evidence => evidence-01
Oracle Span 22-23:  exists => exist-01
Oracle Span 13-16:  Fars news agency => (publication :name (name :op "Agency" :op "News" :op "Fars"))
Oracle Span 42-43:  have => have-org-role-91
Oracle Span 5-6:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 27-28:  indicating => indicate-01
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 41-42:  materials => material
Oracle Span 23-24:  no => -
Oracle Span 32-33:  nuclear => nucleus
Oracle Span 25-26:  or => or
Oracle Span 18-19:  report => (thing :ARG0-of report-01)
Oracle Span 2-3:  representative => represent-01
Oracle Span 24-25:  sign => sign
Oracle Span 9-10:  stated => state-01
Oracle Span 11-12:  Tehran => (city :name (name :op "Tehran"))

Dependencies:
1	Iran	_	NNP	NNP	_	3	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	representative	_	NN	NN	_	10	nsubj	_	_
4	to	_	TO	TO	_	3	prep	_	_
5	the	_	DT	DT	_	9	det	_	_
6	IAEA	_	NNP	NNP	_	9	nn	_	_
7	Ali	_	NNP	NNP	_	9	nn	_	_
8	Asghar	_	NNP	NNP	_	9	nn	_	_
9	SOLTANIEH	_	NNP	NNP	_	4	pobj	_	_
10	stated	_	VBD	VBD	_	0	root	_	_
11	to	_	TO	TO	_	10	prep	_	_
12	Tehran	_	NNP	NNP	_	16	poss	_	_
13	's	_	POS	POS	_	12	possessive	_	_
14	Fars	_	NNP	NNP	_	16	nn	_	_
15	news	_	NN	NN	_	16	nn	_	_
16	agency	_	NN	NN	_	11	pobj	_	_
17	that	_	IN	IN	_	20	mark	_	_
18	the	_	DT	DT	_	19	det	_	_
19	report	_	NN	NN	_	20	nsubj	_	_
20	emphasized	_	VBD	VBD	_	10	ccomp	_	_
21	that	_	IN	IN	_	23	mark	_	_
22	there	_	EX	EX	_	23	expl	_	_
23	exists	_	VBZ	VBZ	_	20	ccomp	_	_
24	no	_	DT	DT	_	25	neg	_	_
25	sign	_	NN	NN	_	23	dobj	_	_
26	or	_	CC	CC	_	25	cc	_	_
27	evidence	_	NN	NN	_	25	conj	_	_
28	indicating	_	VBG	VBG	_	25	vmod	_	_
29	diversion	_	NN	NN	_	28	dobj	_	_
30	of	_	IN	IN	_	29	prep	_	_
31	Iran	_	NNP	NNP	_	34	poss	_	_
32	's	_	POS	POS	_	31	possessive	_	_
33	nuclear	_	JJ	JJ	_	34	amod	_	_
34	activities	_	NNS	NNS	_	30	pobj	_	_
35	and	_	CC	CC	_	23	cc	_	_
36	that	_	IN	IN	_	45	mark	_	_
37	all	_	DT	DT	_	45	nsubjpass	_	_
38	of	_	IN	IN	_	37	prep	_	_
39	Iran	_	NNP	NNP	_	42	poss	_	_
40	's	_	POS	POS	_	39	possessive	_	_
41	nuclear	_	JJ	JJ	_	42	amod	_	_
42	materials	_	NNS	NNS	_	38	pobj	_	_
43	have	_	VBP	VBP	_	45	aux	_	_
44	been	_	VBN	VBN	_	45	auxpass	_	_
45	audited	_	VBN	VBN	_	23	conj	_	_
46	.	_	.	.	_	10	punct	_	_

Oracle:
(a / activity, mod, n6 / nucleus)
(a / activity, poss, c / country)
(a2 / and, op, a3 / audit-01)
(a2 / and, op, e2 / exist-01)
(a3 / audit-01, ARG1, m / material)
(c / country, name, n3 / name)
(c2 / city, name, n5 / name)
(d / divert-01, ARG1, a / activity)
(e / emphasize-01, ARG0, t / thing)
(e / emphasize-01, ARG1, a2 / and)
(e2 / exist-01, ARG1, o2 / or)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG3, r / represent-01)
(i / indicate-01, ARG0, e3 / evidence-01)
(i / indicate-01, ARG0, s2 / sign)
(i / indicate-01, ARG1, d / divert-01)
(m / material, mod, n6 / nucleus)
(m / material, poss, c / country)
(m / material, quant, a4 / all)
(n / name, op, "Ali")
(n / name, op, "Asghar")
(n / name, op, "Soltanieh")
(n2 / name, op, "IAEA")
(n3 / name, op, "Iran")
(n5 / name, op, "Tehran")
(n7 / name, op, "Agency")
(n7 / name, op, "Fars")
(n7 / name, op, "News")
(o / organization, name, n2 / name)
(o2 / or, op, e3 / evidence-01)
(o2 / or, op, s2 / sign)
(p / person, name, n / name)
(p2 / publication, location, c2 / city)
(p2 / publication, name, n7 / name)
(r / represent-01, ARG1, c / country)
(r2 / report-01, ARG0, t / thing)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, e / emphasize-01)
(s / state-01, ARG2, p2 / publication)
(s2 / sign, polarity, - / -)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),to,represent-01,false), Span(9,10,List(1),to,state-01,false), Span(18,19,List(2),that,report,false), Span(19,20,List(3),there,emphasize-01,false), Span(41,42,List(4),,material,false), Span(6,9,List(9, 8, 7, 6, 5),Asghar SOLTANIEH stated,(person :name (name :op "Ali" :op "Asghar" :op "SOLTANIEH")),false), Span(27,28,List(10),of,indicate-01,false), Span(0,1,List(13, 12, 11),Iran's,(country :name (name :op "Iran")),false), Span(14,15,List(15, 14),that,(name :op "News"),false), Span(40,41,List(16),audited.,nucleus,false), Span(22,23,List(17),sign,exist-01,false), Span(24,25,List(18),evidence,sign-01,false), Span(25,26,List(19),indicating,or,false), Span(33,34,List(20),all,activity,false), Span(36,37,List(21),nuclear,all,false), Span(5,6,List(24, 23, 22),Ali,(organization :name (name :op "IAEA")),false), Span(34,35,List(25),of,and,false), Span(26,27,List(27, 26),diversion,(thing :ARG0-of evidence-01),false), Span(32,33,List(28),that,nucleus,false), Span(28,29,List(29),Iran's,diversify-01,false), Span(11,12,List(32, 31, 30),Fars,(city :name (name :op "Tehran")),false), Span(44,45,List(33),,audit-01,false)),Map(30 -> city, 2 -> report, 5 -> person, 33 -> audit-01, 27 -> evidence-01, 12 -> name, 8 -> "Asghar", 15 -> "News", 21 -> all, 18 -> sign-01, 24 -> "IAEA", 7 -> "Ali", 1 -> state-01, 17 -> exist-01, 23 -> name, 26 -> thing, 4 -> material, 11 -> country, 32 -> "Tehran", 14 -> name, 29 -> diversify-01, 20 -> activity, 28 -> nucleus, 6 -> name, 9 -> "SOLTANIEH", 0 -> represent-01, 22 -> organization, 16 -> nucleus, 19 -> or, 10 -> indicate-01, 3 -> emphasize-01, 31 -> name, 25 -> and, 13 -> "Iran"),Map(e -> emphasize-01, n -> name, s2 -> sign-01, t -> thing, n7 -> name, e2 -> exist-01, n4 -> nucleus, a3 -> and, s -> state-01, m -> material, d -> diversify-01, r2 -> report, p -> person, n3 -> name, a -> activity, o2 -> organization, n6 -> nucleus, i -> indicate-01, r -> represent-01, a2 -> all, c -> country, o -> or, e3 -> evidence-01, n2 -> name, c2 -> city, a4 -> audit-01, n5 -> name))),[Ljava.lang.String;@c773c3c,Annotation([Ljava.lang.String;@25b6d9d0,[Ljava.lang.String;@3e25e99d,[Ljava.lang.String;@5275c589),Annotation([Ljava.lang.String;@67d68527,[Ljava.lang.String;@743da854,[Ledu.cmu.lti.nlp.amr.Dependency;@65c5de4f),Annotation([Ljava.lang.String;@196006f3,[Ljava.lang.String;@4a4c5745,[Ljava.lang.String;@532a2950),Annotation([Ljava.lang.String;@1856b2dc,[Ljava.lang.String;@19878bb,[Ledu.cmu.lti.nlp.amr.Entity;@2946e1b2))
AMR:
(a / activity, mod, n6 / nucleus)
(a3 / and, op, a4 / audit-01)
(a3 / and, op, d / diversify-01)
(a3 / and, op, e2 / exist-01)
(a4 / audit-01, ARG1, a2 / all)
(c / country, name, n2 / name)
(c2 / city, name, n7 / name)
(d / diversify-01, ARG1, a / activity)
(e / emphasize-01, ARG0, r2 / report)
(e / emphasize-01, ARG1, a3 / and)
(e2 / exist-01, ARG1, s2 / sign-01)
(e3 / evidence-01, ARG0, t / thing)
(e3 / evidence-01, ARG1, n4 / nucleus)
(i / indicate-01, ARG1, d / diversify-01)
(n / name, op, "Ali")
(n / name, op, "Asghar")
(n / name, op, "SOLTANIEH")
(n2 / name, op, "Iran")
(n3 / name, op, "News")
(n3 / name, poss, c2 / city)
(n5 / name, op, "IAEA")
(n7 / name, op, "Tehran")
(o / or, op, s2 / sign-01)
(o / or, op, t / thing)
(o2 / organization, name, n5 / name)
(p / person, name, n / name)
(p / person, poss, o2 / organization)
(r / represent-01, ARG0, c / country)
(r / represent-01, ARG1, p / person)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, e / emphasize-01)
(s / state-01, ARG6, c2 / city)
(s2 / sign-01, ARG1, m / material)

Decoded in 3,707,466 microseconds
Sentence: Some Nonproliferation Experts stated the IAEA was ceding too much to Iran.

Oracle Span 1:  ceding => cede-01
Oracle Span 2:  Experts => (person :ARG1-of expert-41)
Oracle Span 3:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5:  much => much
Oracle Span 6:  Some => some
Oracle Span 7:  stated => state-01
Oracle Span 8:  too => too
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 7-8:  ceding => (cede-01 :ARG1-of cause-01)
Span 2-3:  Experts => (person :ARG1-of expert-41)
Span 5-6:  IAEA => (organization :name (name :op "IAEA"))
Span 11-12:  Iran. => (country :name (name :op "Iran"))
Span 9-10:  much => much
Span 0-1:  Some => some
Span 3-4:  stated => state-01
Span 8-9:  too => too

Langrangian relaxation converged after 15 iterations. Delta = 0.0
Oracle Span 7-8:  ceding => cede-01
Oracle Span 2-3:  Experts => (person :ARG1-of expert-41)
Oracle Span 5-6:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 11-12:  Iran => (country :name (name :op "Iran"))
Oracle Span 9-10:  much => much
Oracle Span 0-1:  Some => some
Oracle Span 3-4:  stated => state-01
Oracle Span 8-9:  too => too

Dependencies:
1	Some	_	DT	DT	_	3	det	_	_
2	Nonproliferation	_	NNP	NNP	_	3	nn	_	_
3	Experts	_	NNS	NNS	_	4	nsubj	_	_
4	stated	_	VBD	VBD	_	0	root	_	_
5	the	_	DT	DT	_	6	det	_	_
6	IAEA	_	NNP	NNP	_	8	nsubj	_	_
7	was	_	VBD	VBD	_	8	aux	_	_
8	ceding	_	VBG	VBG	_	4	ccomp	_	_
9	too	_	RB	RB	_	10	advmod	_	_
10	much	_	RB	RB	_	8	advmod	_	_
11	to	_	TO	TO	_	8	prep	_	_
12	Iran	_	NNP	NNP	_	11	pobj	_	_
13	.	_	.	.	_	4	punct	_	_

Oracle:
(c / cede-01, ARG0, o / organization)
(c / cede-01, ARG1, m / much)
(c / cede-01, ARG2, c2 / country)
(c2 / country, name, n2 / name)
(e / expert-41, ARG1, p / person)
(m / much, degree, t / too)
(n / name, op, "IAEA")
(n2 / name, op, "Iran")
(o / organization, name, n / name)
(p / person, quant, s2 / some)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c / cede-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),stated,state-01,false), Span(8,9,List(1),too,too,false), Span(11,12,List(4, 3, 2),Iran.,(country :name (name :op "Iran")),false), Span(5,6,List(7, 6, 5),IAEA,(organization :name (name :op "IAEA")),false), Span(0,1,List(8),Some,some,false), Span(2,3,List(10, 9),Experts,(person :ARG1-of expert-41),false), Span(7,8,List(12, 11),ceding,(cede-01 :ARG1-of cause-01),false), Span(9,10,List(13),much,much,false)),Map(2 -> country, 5 -> organization, 12 -> cause-01, 8 -> some, 7 -> "IAEA", 1 -> too, 4 -> "Iran", 11 -> cede-01, 6 -> name, 0 -> state-01, 9 -> person, 3 -> name, 10 -> expert-41, 13 -> much),Map(e -> expert-41, n -> name, s2 -> some, t -> too, s -> state-01, m -> much, p -> person, c3 -> cause-01, c -> country, o -> organization, c2 -> cede-01, n2 -> name))),[Ljava.lang.String;@85761a6,Annotation([Ljava.lang.String;@77a9185f,[Ljava.lang.String;@47c57f8b,[Ljava.lang.String;@1909e0bc),Annotation([Ljava.lang.String;@2ae0e86a,[Ljava.lang.String;@15b47689,[Ledu.cmu.lti.nlp.amr.Dependency;@79617a93),Annotation([Ljava.lang.String;@2f3b7903,[Ljava.lang.String;@2356736,[Ljava.lang.String;@340349c7),Annotation([Ljava.lang.String;@46c40836,[Ljava.lang.String;@32c3828c,[Ledu.cmu.lti.nlp.amr.Entity;@1be65f35))
AMR:
(c / country, name, n / name)
(c2 / cede-01, ARG0, o / organization)
(c2 / cede-01, ARG1, c / country)
(c2 / cede-01, ARG6, t / too)
(c2 / cede-01, degree, m / much)
(c3 / cause-01, ARG1, c2 / cede-01)
(e / expert-41, ARG1, p / person)
(e / expert-41, ARG6, s2 / some)
(n / name, op, "Iran")
(n2 / name, op, "IAEA")
(o / organization, name, n2 / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c2 / cede-01)

Decoded in 405,892 microseconds
Sentence: Arms-control experts David Albright and Jacqueline Shire of the Washington-based Institute for Science and International Security wrote in a criticism published the week of 19 August 2007 that the idea of closing files violates fundamental safeguards principles and that the agreement does not specify that Iranian officials would provide the IAEA access to key people, facilities, and documents that are needed to verify Iranian answers to the IAEA's questions.

Oracle Span 1:  19 August 2007 => (date-entity :day 19 :month 8 :year 2007)
Oracle Span 2:  access => access-01
Oracle Span 3:  agreement => agree-01
Oracle Span 4:  and => and
Oracle Span 5:  and => and
Oracle Span 6:  and => and
Oracle Span 7:  answers => answer-01
Oracle Span 8:  Arms => arm
Oracle Span 9:  based => base-01
Oracle Span 10:  closing => close-01
Oracle Span 11:  control => control-01
Oracle Span 12:  criticism => criticize-01
Oracle Span 13:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 14:  documents => document
Oracle Span 15:  experts => expert-41
Oracle Span 16:  facilities => facility
Oracle Span 17:  files => file
Oracle Span 18:  fundamental => fundamental
Oracle Span 19:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 20:  idea => idea
Oracle Span 21:  Institute for Science and International Security => (have-org-role-91 :ARG1 (organization :name (name :op "Security" :op "International" :op "and" :op "Science" :op "for" :op "Institute")))
Oracle Span 22:  Iranian => (country :name (name :op "Iran"))
Oracle Span 23:  Jacqueline Shire => (person :name (name :op "Shire" :op "Jacqueline"))
Oracle Span 24:  key => key
Oracle Span 25:  needed => (person :ARG1-of need-01)
Oracle Span 26:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 27:  principles => principle
Oracle Span 28:  provide => provide-01
Oracle Span 29:  published => publish-01
Oracle Span 30:  questions => question-01
Oracle Span 31:  safeguards => safeguard-01
Oracle Span 32:  specify => specify-01
Oracle Span 33:  verify => verify-01
Oracle Span 34:  violates => violate-01
Oracle Span 35:  Washington => (city :name (name :op "Washington"))
Oracle Span 36:  week => week
Oracle Span 37:  wrote => write-01
mkDayMonthYear(19	August	2007,19,August,2007)
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (person :name (name :op "David" :op "Albright"))
Spans:
Span 71-72:   => question
Span 51-52:  access => access-01
Span 40-41:  agreement => agree-01
Span 56-57:  and => facility
Span 13-14:  and => (and :op (person :ARG0-of have-org-role-91))
Span 4-5:  and => and
Span 37-38:  and => and
Span 64-65:  answers => verify-01
Span 59-60:  are => document
Span 0-22:  Arms-control experts David Albright and Jacqueline Shire of the Washington-based Institute for Science and International Security wrote in a criticism published the => (date-entity :month 8 :day 19)
Span 31-32:  closing => close-01
Span 19-20:  criticism => criticize-01
Span 2-4:  David Albright => (person :name (name :op "David" :op "Albright"))
Span 55-56:  facilities, => and
Span 32-33:  files => file
Span 11-12:  for => person
Span 34-35:  fundamental => fundamental
Span 50-51:  IAEA => (organization :name (name :op "IAEA"))
Span 29-30:  idea => idea
Span 10-11:  Institute => institute
Span 14-15:  International => (event :name (name :op "International"))
Span 45-46:  Iranian => (country :name (name :op "Iran"))
Span 5-7:  Jacqueline Shire => (person :name (name :op "Jacqueline" :op "Shire"))
Span 53-54:  key => key
Span 46-47:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 36-37:  principles => principle
Span 48-49:  provide => provide-01
Span 20-21:  published => publish-01
Span 35-36:  safeguards => safeguard-01
Span 12-13:  Science => r2
Span 15-16:  Security => security
Span 43-44:  specify => specify-01
Span 58-59:  that => and
Span 66-67:  the => answer-01
Span 65-66:  to => (country :name (name :op "Iran"))
Span 62-63:  verify => need-01
Span 33-34:  violates => violate-01
Span 16-17:  wrote => write-01

Langrangian relaxation converged after 48 iterations. Delta = 0.0
Oracle Span 28-31:  19 August 2007 => (date-entity :day 19 :month 8 :year 2007)
Oracle Span 55-56:  access => access-01
Oracle Span 44-45:  agreement => agree-01
Oracle Span 6-7:  and => and
Oracle Span 41-42:  and => and
Oracle Span 62-63:  and => and
Oracle Span 70-71:  answers => answer-01
Oracle Span 0-1:  Arms => arm
Oracle Span 13-14:  based => base-01
Oracle Span 35-36:  closing => close-01
Oracle Span 2-3:  control => control-01
Oracle Span 23-24:  criticism => criticize-01
Oracle Span 4-6:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 63-64:  documents => document
Oracle Span 3-4:  experts => expert-41
Oracle Span 60-61:  facilities => facility
Oracle Span 36-37:  files => file
Oracle Span 38-39:  fundamental => fundamental
Oracle Span 54-55:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 33-34:  idea => idea
Oracle Span 14-20:  Institute for Science and International Security => (have-org-role-91 :ARG1 (organization :name (name :op "Security" :op "International" :op "and" :op "Science" :op "for" :op "Institute")))
Oracle Span 49-50:  Iranian => (country :name (name :op "Iran"))
Oracle Span 7-9:  Jacqueline Shire => (person :name (name :op "Shire" :op "Jacqueline"))
Oracle Span 57-58:  key => key
Oracle Span 66-67:  needed => (person :ARG1-of need-01)
Oracle Span 50-51:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 40-41:  principles => principle
Oracle Span 52-53:  provide => provide-01
Oracle Span 24-25:  published => publish-01
Oracle Span 75-76:  questions => question-01
Oracle Span 39-40:  safeguards => safeguard-01
Oracle Span 47-48:  specify => specify-01
Oracle Span 68-69:  verify => verify-01
Oracle Span 37-38:  violates => violate-01
Oracle Span 11-12:  Washington => (city :name (name :op "Washington"))
Oracle Span 26-27:  week => week
Oracle Span 20-21:  wrote => write-01

Dependencies:
1	Arms-control	_	NNP	NNP	_	4	nn	_	_
2	experts	_	NNS	NNS	_	4	nn	_	_
3	David	_	NNP	NNP	_	4	nn	_	_
4	Albright	_	NNP	NNP	_	17	nsubj	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	Jacqueline	_	NNP	NNP	_	7	nn	_	_
7	Shire	_	NNP	NNP	_	4	conj	_	_
8	of	_	IN	IN	_	4	prep	_	_
9	the	_	DT	DT	_	11	det	_	_
10	Washington-based	_	JJ	JJ	_	11	amod	_	_
11	Institute	_	NNP	NNP	_	8	pobj	_	_
12	for	_	IN	IN	_	11	prep	_	_
13	Science	_	NNP	NNP	_	16	nn	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	International	_	NNP	NNP	_	13	conj	_	_
16	Security	_	NNP	NNP	_	12	pobj	_	_
17	wrote	_	VBD	VBD	_	0	root	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	a	_	DT	DT	_	20	det	_	_
20	criticism	_	NN	NN	_	18	pobj	_	_
21	published	_	VBN	VBN	_	20	vmod	_	_
22	the	_	DT	DT	_	23	det	_	_
23	week	_	NN	NN	_	21	dobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	19	_	CD	CD	_	24	pobj	_	_
26	August	_	NNP	NNP	_	21	tmod	_	_
27	2007	_	CD	CD	_	26	num	_	_
28	that	_	IN	IN	_	34	mark	_	_
29	the	_	DT	DT	_	30	det	_	_
30	idea	_	NN	NN	_	34	nsubj	_	_
31	of	_	IN	IN	_	30	prep	_	_
32	closing	_	VBG	VBG	_	33	amod	_	_
33	files	_	NNS	NNS	_	31	pobj	_	_
34	violates	_	VBZ	VBZ	_	21	ccomp	_	_
35	fundamental	_	JJ	JJ	_	37	amod	_	_
36	safeguards	_	NNS	NNS	_	37	nn	_	_
37	principles	_	NNS	NNS	_	34	dobj	_	_
38	and	_	CC	CC	_	34	cc	_	_
39	that	_	IN	IN	_	44	mark	_	_
40	the	_	DT	DT	_	41	det	_	_
41	agreement	_	NN	NN	_	44	nsubj	_	_
42	does	_	VBZ	VBZ	_	44	aux	_	_
43	not	_	RB	RB	_	44	neg	_	_
44	specify	_	VB	VB	_	34	conj	_	_
45	that	_	IN	IN	_	49	mark	_	_
46	Iranian	_	JJ	JJ	_	47	amod	_	_
47	officials	_	NNS	NNS	_	49	nsubj	_	_
48	would	_	MD	MD	_	49	aux	_	_
49	provide	_	VB	VB	_	44	ccomp	_	_
50	the	_	DT	DT	_	52	det	_	_
51	IAEA	_	NNP	NNP	_	52	nn	_	_
52	access	_	NN	NN	_	49	dobj	_	_
53	to	_	TO	TO	_	49	prep	_	_
54	key	_	JJ	JJ	_	55	amod	_	_
55	people	_	NNS	NNS	_	53	pobj	_	_
56	,	_	,	,	_	20	punct	_	_
57	facilities	_	NNS	NNS	_	20	conj	_	_
58	,	_	,	,	_	20	punct	_	_
59	and	_	CC	CC	_	20	cc	_	_
60	documents	_	NNS	NNS	_	20	conj	_	_
61	that	_	WDT	WDT	_	63	nsubjpass	_	_
62	are	_	VBP	VBP	_	63	auxpass	_	_
63	needed	_	VBN	VBN	_	60	rcmod	_	_
64	to	_	TO	TO	_	65	aux	_	_
65	verify	_	VB	VB	_	63	xcomp	_	_
66	Iranian	_	JJ	JJ	_	67	amod	_	_
67	answers	_	NNS	NNS	_	65	dobj	_	_
68	to	_	TO	TO	_	65	prep	_	_
69	the	_	DT	DT	_	70	det	_	_
70	IAEA	_	NNP	NNP	_	72	poss	_	_
71	's	_	POS	POS	_	70	possessive	_	_
72	questions	_	NNS	NNS	_	68	pobj	_	_
73	.	_	.	.	_	17	punct	_	_

Oracle:
(a / and, op, p / person)
(a / and, op, p2 / person)
(a3 / and, op, s2 / specify-01)
(a3 / and, op, v / violate-01)
(a5 / access-01, ARG0, n6 / name)
(a5 / access-01, ARG1, a6 / and)
(a6 / and, op, d / document)
(a6 / and, op, f3 / facility)
(a6 / and, op, p5 / person)
(a7 / answer-01, ARG0, n5 / name)
(a7 / answer-01, ARG1, q / question-01)
(b / base-01, ARG1, o / organization)
(b / base-01, location, c2 / city)
(c / control-01, ARG1, a2 / arm)
(c2 / city, name, n3 / name)
(c3 / close-01, ARG1, f / file)
(c4 / country, name, n5 / name)
(d2 / date-entity, day, 19)
(d2 / date-entity, month, 8)
(d2 / date-entity, year, 2007)
(e2 / expert-41, ARG1, p2 / person)
(e2 / expert-41, ARG2, c / control-01)
(h / have-org-role-91, ARG1, c4 / country)
(h / have-org-role-91, ARG2, o2 / official)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG1, o / organization)
(i / idea, topic, c3 / close-01)
(n / name, op, "Albright")
(n / name, op, "David")
(n2 / name, op, "Institute")
(n2 / name, op, "International")
(n2 / name, op, "Science")
(n2 / name, op, "Security")
(n2 / name, op, "and")
(n2 / name, op, "for")
(n3 / name, op, "Washington")
(n4 / name, op, "Jacqueline")
(n4 / name, op, "Shire")
(n5 / name, op, "Iran")
(n6 / name, op, "IAEA")
(n7 / need-01, ARG1, d / document)
(n7 / need-01, ARG1, f3 / facility)
(n7 / need-01, ARG1, p5 / person)
(n7 / need-01, purpose, v2 / verify-01)
(o / organization, name, n2 / name)
(o3 / organization, name, n6 / name)
(p / person, name, n / name)
(p2 / person, name, n4 / name)
(p3 / principle, mod, f2 / fundamental)
(p4 / provide-01, ARG1, a5 / access-01)
(p4 / provide-01, ARG2, o3 / organization)
(p5 / person, mod, k / key)
(p6 / publish-01, ARG1, c5 / criticize-01)
(p6 / publish-01, time, w2 / week)
(q / question-01, ARG0, o3 / organization)
(s / safeguard-01, ARG1, p3 / principle)
(s2 / specify-01, ARG0, a4 / agree-01)
(s2 / specify-01, ARG1, p4 / provide-01)
(v / violate-01, ARG0, i / idea)
(v / violate-01, ARG1, p3 / principle)
(v2 / verify-01, ARG1, a7 / answer-01)
(w / write-01, ARG0, a / and)
(w / write-01, ARG1, a3 / and)
(w / write-01, location, c5 / criticize-01)
(w2 / week, mod, d2 / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),Security,security,false), Span(48,49,List(1),provide,provide-01,false), Span(62,63,List(2),verify,need-01,false), Span(40,41,List(3),agreement,agree-01,false), Span(12,13,List(4),Science,r2,false), Span(32,33,List(5),files,file,false), Span(56,57,List(6),and,facility,false), Span(11,12,List(7),for,person,false), Span(14,15,List(10, 9, 8),International,(event :name (name :op "International")),false), Span(58,59,List(11),that,and,false), Span(51,52,List(12),access,access-01,false), Span(13,14,List(15, 14, 13),and,(and :op (person :ARG0-of have-org-role-91)),false), Span(50,51,List(18, 17, 16),IAEA,(organization :name (name :op "IAEA")),false), Span(4,5,List(19),and,and,false), Span(0,22,List(22, 21, 20),Arms-control experts David Albright and Jacqueline Shire of the Washington-based Institute for Science and International Security wrote in a criticism published the,(date-entity :month 8 :day 19),false), Span(33,34,List(23),violates,violate-01,false), Span(46,47,List(26, 25, 24),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(53,54,List(27),key,key,false), Span(29,30,List(28),idea,idea,false), Span(66,67,List(29),the,answer-01,false), Span(55,56,List(30),facilities,,and,false), Span(36,37,List(31),principles,principle,false), Span(10,11,List(32),Institute,institute,false), Span(5,7,List(36, 35, 34, 33),Jacqueline Shire,(person :name (name :op "Jacqueline" :op "Shire")),false), Span(64,65,List(37),answers,verify-01,false), Span(71,72,List(38),,question,false), Span(2,4,List(42, 41, 40, 39),David Albright,(person :name (name :op "David" :op "Albright")),false), Span(37,38,List(43),and,and,false), Span(59,60,List(44),are,document,false), Span(20,21,List(45),published,publish-01,false), Span(31,32,List(46),closing,close-01,false), Span(19,20,List(47),criticism,criticize-01,false), Span(16,17,List(48),wrote,write-01,false), Span(65,66,List(51, 50, 49),to,(country :name (name :op "Iran")),false), Span(35,36,List(52),safeguards,safeguard-01,false), Span(45,46,List(55, 54, 53),Iranian,(country :name (name :op "Iran")),false), Span(43,44,List(56),specify,specify-01,false), Span(34,35,List(57),fundamental,fundamental,false)),Map(57 -> fundamental, 30 -> and, 39 -> person, 45 -> publish-01, 51 -> "Iran", 2 -> need-01, 5 -> file, 48 -> write-01, 33 -> person, 27 -> key, 54 -> name, 12 -> access-01, 8 -> event, 15 -> have-org-role-91, 42 -> "Albright", 36 -> "Shire", 21 -> 8, 18 -> "IAEA", 24 -> person, 53 -> country, 35 -> "Jacqueline", 41 -> "David", 56 -> specify-01, 7 -> person, 17 -> name, 1 -> provide-01, 50 -> name, 44 -> document, 23 -> violate-01, 38 -> question, 47 -> criticize-01, 4 -> r2, 26 -> official, 11 -> and, 32 -> institute, 14 -> person, 20 -> date-entity, 29 -> answer-01, 46 -> close-01, 52 -> safeguard-01, 34 -> name, 6 -> facility, 28 -> idea, 55 -> "Iran", 40 -> name, 49 -> country, 0 -> security, 9 -> name, 43 -> and, 22 -> 19, 16 -> organization, 37 -> verify-01, 19 -> and, 3 -> agree-01, 10 -> "International", 25 -> have-org-role-91, 31 -> principle, 13 -> and),Map(e -> event, a7 -> and, n -> need-01, w -> write-01, v2 -> verify-01, h -> have-org-role-91, q -> question, p5 -> principle, h2 -> have-org-role-91, s2 -> safeguard-01, k -> key, p8 -> publish-01, 8 -> 8, n7 -> name, p2 -> person, a3 -> access-01, n4 -> name, c4 -> country, s -> security, a6 -> answer-01, v -> violate-01, d -> date-entity, 1 -> 19, p -> provide-01, n3 -> name, a -> agree-01, c3 -> country, p4 -> person, o2 -> official, d2 -> document, n6 -> name, a5 -> and, p7 -> person, f3 -> fundamental, a8 -> and, i2 -> institute, i -> idea, r -> r2, a2 -> and, c -> close-01, s3 -> specify-01, f2 -> facility, p6 -> person, f -> file, o -> organization, p3 -> person, n2 -> name, c2 -> criticize-01, a4 -> and, n5 -> name))),[Ljava.lang.String;@16986025,Annotation([Ljava.lang.String;@71d89bd1,[Ljava.lang.String;@70e87f7f,[Ljava.lang.String;@312feed),Annotation([Ljava.lang.String;@565e2fe2,[Ljava.lang.String;@636d20eb,[Ledu.cmu.lti.nlp.amr.Dependency;@504da87e),Annotation([Ljava.lang.String;@443cc10c,[Ljava.lang.String;@633ad756,[Ljava.lang.String;@69dac9a2),Annotation([Ljava.lang.String;@546982bf,[Ljava.lang.String;@76ff1d9f,[Ledu.cmu.lti.nlp.amr.Entity;@43cae471))
AMR:
(a / agree-01, ARG0, a7 / and)
(a / agree-01, ARG1, p5 / principle)
(a3 / access-01, ARG1, f2 / facility)
(a3 / access-01, ARG2, o / organization)
(a3 / access-01, ARG6, k / key)
(a3 / access-01, time, p / provide-01)
(a4 / and, mod, r / r2)
(a4 / and, op, p3 / person)
(a5 / and, poss, p7 / person)
(a6 / answer-01, ARG1, c3 / country)
(a6 / answer-01, ARG6, q / question)
(a6 / answer-01, purpose, n / need-01)
(c / close-01, ARG0, a8 / and)
(c / close-01, ARG1, i / idea)
(c2 / criticize-01, ARG1, s / security)
(c2 / criticize-01, ARG2, v / violate-01)
(c3 / country, name, n6 / name)
(c4 / country, name, n7 / name)
(d / date-entity, day, 1 / 19)
(d / date-entity, month, 8 / 8)
(d2 / document, op, n / need-01)
(e / event, mod, a4 / and)
(e / event, mod, i2 / institute)
(e / event, name, n2 / name)
(e / event, purpose, c2 / criticize-01)
(f2 / facility, op, a2 / and)
(f3 / fundamental, op, s2 / safeguard-01)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, c4 / country)
(h2 / have-org-role-91, ARG0, p4 / person)
(h2 / have-org-role-91, ARG1, c4 / country)
(h2 / have-org-role-91, ARG2, o2 / official)
(n / need-01, ARG1, a2 / and)
(n2 / name, op, "International")
(n3 / name, op, "IAEA")
(n4 / name, op, "Jacqueline")
(n4 / name, op, "Shire")
(n5 / name, op, "Albright")
(n5 / name, op, "David")
(n6 / name, op, "Iran")
(n7 / name, op, "Iran")
(o / organization, name, n3 / name)
(p / provide-01, ARG1, a7 / and)
(p6 / person, name, n4 / name)
(p7 / person, name, n4 / name)
(p7 / person, name, n5 / name)
(p8 / publish-01, ARG0, p6 / person)
(p8 / publish-01, ARG1, d / date-entity)
(p8 / publish-01, ARG2, c2 / criticize-01)
(r / r2, mod, p2 / person)
(s2 / safeguard-01, ARG0, a8 / and)
(s2 / safeguard-01, ARG1, p5 / principle)
(s3 / specify-01, ARG1, v2 / verify-01)
(v / violate-01, ARG1, p5 / principle)
(v / violate-01, ARG6, f / file)
(v2 / verify-01, ARG1, c3 / country)
(w / write-01, ARG1, c2 / criticize-01)

Decoded in 12,220,154 microseconds
Sentence: Independent experts stated Iran's latest agreement with the IAEA which gives inspectors access to more nuclear sites and information falls short of the West's demand to halt the production of concentrated uranium that could potentially be used for a bomb.

Oracle Span 1:  access => access-01
Oracle Span 2:  agreement => agree-01
Oracle Span 3:  and => and
Oracle Span 4:  bomb => bomb
Oracle Span 5:  concentrated => concentrate-02
Oracle Span 6:  could => possible
Oracle Span 7:  demand => demand-01
Oracle Span 8:  experts => expert-41
Oracle Span 9:  falls => fall-01
Oracle Span 10:  halt => halt-01
Oracle Span 11:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 12:  information => information
Oracle Span 13:  inspectors => (person :ARG0-of inspect-01)
Oracle Span 14:  Iran => (country :name (name :op "Iran"))
Oracle Span 15:  latest => (late :degree most)
Oracle Span 16:  more => more
Oracle Span 17:  nuclear => nucleus
Oracle Span 18:  potentially => potential
Oracle Span 19:  production => produce-01
Oracle Span 20:  short => short
Oracle Span 21:  sites => site
Oracle Span 22:  stated => state-01
Oracle Span 23:  uranium => uranium
Oracle Span 24:  used => use-01
Oracle Span 25:  West => (world-region :name (name :op "West"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (country :name (name :op "West" :op "'s"))
Spans:
Span 41-42:   => bomb
Span 38-39:  a => use-01
Span 12-13:  access => (person :ARG0-of inspect-01)
Span 5-6:  agreement => (late :degree most)
Span 17-18:  and => site
Span 35-36:  be => possible
Span 30-31:  concentrated => produce-01
Span 33-34:  could => uranium
Span 24-25:  demand => (world-region :name (name :op "West"))
Span 1-2:  experts => (person :ARG1-of expert-41)
Span 19-20:  falls => information
Span 26-27:  halt => demand-01
Span 0-1:  Independent => depend-01
Span 18-19:  information => and
Span 3-4:  Iran's => (country :name (name :op "Iran"))
Span 15-16:  nuclear => more
Span 21-22:  of => short
Span 28-29:  production => halt-01
Span 20-21:  short => fall-01
Span 2-3:  stated => state-01
Span 32-33:  that => concentrate-01
Span 13-14:  to => access-01
Span 9-10:  which => (organization :name (name :op "IAEA"))
Span 6-7:  with => agree-01

Langrangian relaxation converged after 78 iterations. Delta = 0.0
Oracle Span 13-14:  access => access-01
Oracle Span 6-7:  agreement => agree-01
Oracle Span 18-19:  and => and
Oracle Span 41-42:  bomb => bomb
Oracle Span 32-33:  concentrated => concentrate-02
Oracle Span 35-36:  could => possible
Oracle Span 26-27:  demand => demand-01
Oracle Span 1-2:  experts => expert-41
Oracle Span 20-21:  falls => fall-01
Oracle Span 28-29:  halt => halt-01
Oracle Span 9-10:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 19-20:  information => information
Oracle Span 12-13:  inspectors => (person :ARG0-of inspect-01)
Oracle Span 3-4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5-6:  latest => (late :degree most)
Oracle Span 15-16:  more => more
Oracle Span 16-17:  nuclear => nucleus
Oracle Span 36-37:  potentially => potential
Oracle Span 30-31:  production => produce-01
Oracle Span 21-22:  short => short
Oracle Span 17-18:  sites => site
Oracle Span 2-3:  stated => state-01
Oracle Span 33-34:  uranium => uranium
Oracle Span 38-39:  used => use-01
Oracle Span 24-25:  West => (world-region :name (name :op "West"))

Dependencies:
1	Independent	_	JJ	JJ	_	2	amod	_	_
2	experts	_	NNS	NNS	_	3	nsubj	_	_
3	stated	_	VBD	VBD	_	0	root	_	_
4	Iran	_	NNP	NNP	_	7	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	latest	_	JJS	JJS	_	7	amod	_	_
7	agreement	_	NN	NN	_	3	dobj	_	_
8	with	_	IN	IN	_	3	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	IAEA	_	NNP	NNP	_	8	pobj	_	_
11	which	_	WDT	WDT	_	12	nsubj	_	_
12	gives	_	VBZ	VBZ	_	10	rcmod	_	_
13	inspectors	_	NNS	NNS	_	12	iobj	_	_
14	access	_	NN	NN	_	12	dobj	_	_
15	to	_	TO	TO	_	14	prep	_	_
16	more	_	JJR	JJR	_	18	amod	_	_
17	nuclear	_	JJ	JJ	_	18	amod	_	_
18	sites	_	NNS	NNS	_	15	pobj	_	_
19	and	_	CC	CC	_	3	cc	_	_
20	information	_	NN	NN	_	21	nsubj	_	_
21	falls	_	VBZ	VBZ	_	3	conj	_	_
22	short	_	JJ	JJ	_	21	dobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	West	_	NNP	NNP	_	27	poss	_	_
26	's	_	POS	POS	_	25	possessive	_	_
27	demand	_	NN	NN	_	23	pobj	_	_
28	to	_	TO	TO	_	29	aux	_	_
29	halt	_	VB	VB	_	27	vmod	_	_
30	the	_	DT	DT	_	31	det	_	_
31	production	_	NN	NN	_	29	dobj	_	_
32	of	_	IN	IN	_	31	prep	_	_
33	concentrated	_	JJ	JJ	_	34	amod	_	_
34	uranium	_	NN	NN	_	32	pobj	_	_
35	that	_	WDT	WDT	_	39	nsubjpass	_	_
36	could	_	MD	MD	_	39	aux	_	_
37	potentially	_	RB	RB	_	39	advmod	_	_
38	be	_	VB	VB	_	39	auxpass	_	_
39	used	_	VBN	VBN	_	31	rcmod	_	_
40	for	_	IN	IN	_	39	prep	_	_
41	a	_	DT	DT	_	42	det	_	_
42	bomb	_	NN	NN	_	40	pobj	_	_
43	.	_	.	.	_	3	punct	_	_

Oracle:
(a / agree-01, ARG0, c / country)
(a / agree-01, ARG1, a2 / access-01)
(a / agree-01, ARG2, o / organization)
(a / agree-01, time, l / late)
(a2 / access-01, ARG0, p / person)
(a2 / access-01, ARG1, a3 / and)
(a3 / and, op, i2 / information)
(a3 / and, op, s2 / site)
(c / country, name, n / name)
(c2 / concentrate-02, ARG1, u / uranium)
(d2 / demand-01, ARG0, w / world-region)
(d2 / demand-01, ARG1, h / halt-01)
(f / fall-01, ARG1, a / agree-01)
(f / fall-01, ARG3, d2 / demand-01)
(f / fall-01, manner, s3 / short)
(h / halt-01, ARG1, p2 / produce-01)
(i / inspect-01, ARG0, p / person)
(l / late, degree, m2 / most)
(n / name, op, "Iran")
(n2 / name, op, "IAEA")
(n4 / name, op, "West")
(o / organization, name, n2 / name)
(p2 / produce-01, ARG1, u / uranium)
(s / state-01, ARG1, f / fall-01)
(s2 / site, mod, m / more)
(s2 / site, mod, n3 / nucleus)
(u2 / use-01, ARG1, u / uranium)
(u2 / use-01, ARG2, b / bomb)
(u2 / use-01, mod, p3 / possible)
(u2 / use-01, mod, p4 / potential)
(w / world-region, name, n4 / name)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(1, 0),agreement,(late :degree most),false), Span(21,22,List(2),of,short,false), Span(17,18,List(3),and,site,false), Span(24,25,List(6, 5, 4),demand,(world-region :name (name :op "West")),false), Span(19,20,List(7),falls,information,false), Span(33,34,List(8),could,uranium,false), Span(12,13,List(10, 9),access,(person :ARG0-of inspect-01),false), Span(38,39,List(11),a,use-01,false), Span(20,21,List(12),short,fall-01,false), Span(1,2,List(14, 13),experts,(person :ARG1-of expert-41),false), Span(13,14,List(15),to,access-01,false), Span(0,1,List(16),Independent,depend-01,false), Span(6,7,List(17),with,agree-01,false), Span(28,29,List(18),production,halt-01,false), Span(35,36,List(19),be,possible,false), Span(41,42,List(20),,bomb,false), Span(2,3,List(21),stated,state-01,false), Span(26,27,List(22),halt,demand-01,false), Span(9,10,List(25, 24, 23),which,(organization :name (name :op "IAEA")),false), Span(30,31,List(26),concentrated,produce-01,false), Span(32,33,List(27),that,concentrate-01,false), Span(15,16,List(28),nuclear,more,false), Span(3,4,List(31, 30, 29),Iran's,(country :name (name :op "Iran")),false), Span(18,19,List(32),information,and,false)),Map(30 -> name, 2 -> short, 5 -> name, 27 -> concentrate-01, 12 -> fall-01, 8 -> uranium, 15 -> access-01, 21 -> state-01, 18 -> halt-01, 24 -> name, 7 -> information, 1 -> most, 17 -> agree-01, 23 -> organization, 26 -> produce-01, 4 -> world-region, 11 -> use-01, 32 -> and, 14 -> expert-41, 29 -> country, 20 -> bomb, 28 -> more, 6 -> "West", 9 -> person, 0 -> late, 22 -> demand-01, 16 -> depend-01, 19 -> possible, 10 -> inspect-01, 3 -> site, 31 -> "Iran", 25 -> "IAEA", 13 -> person),Map(e -> expert-41, n -> name, w -> world-region, h -> halt-01, s2 -> site, b -> bomb, m2 -> more, p2 -> person, a3 -> and, u2 -> use-01, s -> short, m -> most, d -> depend-01, p -> person, n3 -> name, a -> access-01, p4 -> produce-01, d2 -> demand-01, i2 -> inspect-01, i -> information, a2 -> agree-01, c -> concentrate-01, s3 -> state-01, u -> uranium, l -> late, f -> fall-01, o -> organization, p3 -> possible, c2 -> country, n2 -> name))),[Ljava.lang.String;@4af04b10,Annotation([Ljava.lang.String;@1ea1c07,[Ljava.lang.String;@1fe35cb7,[Ljava.lang.String;@6edda654),Annotation([Ljava.lang.String;@263dd854,[Ljava.lang.String;@77e6e2b0,[Ledu.cmu.lti.nlp.amr.Dependency;@72e50e1f),Annotation([Ljava.lang.String;@7109e911,[Ljava.lang.String;@39be601c,[Ljava.lang.String;@790df6f9),Annotation([Ljava.lang.String;@23c29a31,[Ljava.lang.String;@1dbdbe39,[Ledu.cmu.lti.nlp.amr.Entity;@57c98312))
AMR:
(a / access-01, ARG0, p / person)
(a / access-01, ARG1, s2 / site)
(a2 / agree-01, ARG0, c2 / country)
(a2 / agree-01, ARG1, a / access-01)
(a2 / agree-01, time, l / late)
(a3 / and, op, f / fall-01)
(a3 / and, op, s3 / state-01)
(c / concentrate-01, ARG1, u / uranium)
(c2 / country, name, n3 / name)
(d / depend-01, ARG1, c2 / country)
(d2 / demand-01, ARG0, w / world-region)
(d2 / demand-01, ARG1, h / halt-01)
(e / expert-41, ARG1, p2 / person)
(f / fall-01, ARG0, i / information)
(f / fall-01, ARG1, s / short)
(h / halt-01, ARG1, p4 / produce-01)
(i2 / inspect-01, ARG0, p / person)
(l / late, degree, m / most)
(n / name, op, "West")
(n2 / name, op, "IAEA")
(n3 / name, op, "Iran")
(o / organization, name, n2 / name)
(p3 / possible, domain, u2 / use-01)
(p4 / produce-01, ARG1, u / uranium)
(s2 / site, quant, m2 / more)
(s3 / state-01, ARG0, p2 / person)
(s3 / state-01, ARG1, a2 / agree-01)
(s3 / state-01, medium, o / organization)
(u / uranium, mod, p3 / possible)
(u2 / use-01, ARG1, s2 / site)
(u2 / use-01, ARG2, b / bomb)
(w / world-region, name, n / name)

Decoded in 5,758,359 microseconds
Sentence: U.S. State Department spokesman for the Bush administration Tom Casey stated that while the report may offer some new details or insight into the development of Iran's program Iranian officials have not met any international obligations regarding the nuclear program.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  any => any
Oracle Span 3:  Bush => (person :name (name :op "Bush"))
Oracle Span 4:  details => detail-01
Oracle Span 5:  development => develop-02
Oracle Span 6:  have => (person :ARG0-of have-org-role-91)
Oracle Span 7:  insight => insight
Oracle Span 8:  international => international
Oracle Span 9:  Iran => (country :name (name :op "Iran"))
Oracle Span 10:  may => possible
Oracle Span 11:  met => meet-01
Oracle Span 12:  new => new
Oracle Span 13:  nuclear => nucleus
Oracle Span 14:  obligations => obligation
Oracle Span 15:  offer => offer-01
Oracle Span 16:  officials => official
Oracle Span 17:  or => or
Oracle Span 18:  program => program
Oracle Span 19:  program => program
Oracle Span 20:  regarding => regard-01
Oracle Span 21:  report => report
Oracle Span 22:  some => some
Oracle Span 23:  spokesman => (have-org-role-91 :ARG2 spokesman)
Oracle Span 24:  State Department => (government-organization :name (name :op "Department" :op "State"))
Oracle Span 25:  stated => state-01
Oracle Span 26:  Tom Casey => (person :name (name :op "Casey" :op "Tom"))
Oracle Span 27:  U.S. => (country :name (name :op "U.S."))
NER Entity: (person :name (name :op "Tom" :op "Casey"))
NER Entity: (organization :name (name :op "U.S." :op "State" :op "Department"))
NER Entity: (person :name (name :op "Bush"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 40-41:   => program
Span 33-34:  any => met-01
Span 6-7:  Bush => (person :name (name :op "Bush"))
Span 2-3:  Department => organization
Span 19-20:  details => detail-01
Span 24-25:  development => develop-01
Span 30-31:  have => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 21-22:  insight => insist-01
Span 34-35:  international => any
Span 28-29:  Iranian => program
Span 18-19:  new => new
Span 35-36:  obligations => international
Span 16-17:  offer => offer-01
Span 29-30:  officials => (country :name (name :op "Iran"))
Span 20-21:  or => or
Span 39-40:  program. => nucleus
Span 36-37:  regarding => obligation
Span 14-15:  report => (thing :ARG1-of report-01)
Span 17-18:  some => some
Span 3-4:  spokesman => (person :ARG0-of (have-org-role-91 :ARG2 spokesman))
Span 1-2:  State => (thing :ARG1-of state-01)
Span 10-11:  stated => state-01
Span 8-10:  Tom Casey => (person :name (name :op "Tom" :op "Casey"))
Span 0-1:  U.S. => (country :name (name :op "U.S."))
Span 12-13:  while => will-01

Langrangian relaxation converged after 95 iterations. Delta = 0.0
Oracle Span 7-8:  administration => administrate-01
Oracle Span 34-35:  any => any
Oracle Span 6-7:  Bush => (person :name (name :op "Bush"))
Oracle Span 19-20:  details => detail-01
Oracle Span 24-25:  development => develop-02
Oracle Span 31-32:  have => (person :ARG0-of have-org-role-91)
Oracle Span 21-22:  insight => insight
Oracle Span 35-36:  international => international
Oracle Span 26-27:  Iran => (country :name (name :op "Iran"))
Oracle Span 15-16:  may => possible
Oracle Span 33-34:  met => meet-01
Oracle Span 18-19:  new => new
Oracle Span 39-40:  nuclear => nucleus
Oracle Span 36-37:  obligations => obligation
Oracle Span 16-17:  offer => offer-01
Oracle Span 30-31:  officials => official
Oracle Span 20-21:  or => or
Oracle Span 28-29:  program => program
Oracle Span 40-41:  program => program
Oracle Span 37-38:  regarding => regard-01
Oracle Span 14-15:  report => report
Oracle Span 17-18:  some => some
Oracle Span 3-4:  spokesman => (have-org-role-91 :ARG2 spokesman)
Oracle Span 1-3:  State Department => (government-organization :name (name :op "Department" :op "State"))
Oracle Span 10-11:  stated => state-01
Oracle Span 8-10:  Tom Casey => (person :name (name :op "Casey" :op "Tom"))
Oracle Span 0-1:  U.S. => (country :name (name :op "U.S."))

Dependencies:
1	U.S.	_	NNP	NNP	_	4	nn	_	_
2	State	_	NNP	NNP	_	4	nn	_	_
3	Department	_	NNP	NNP	_	4	nn	_	_
4	spokesman	_	NN	NN	_	11	nsubj	_	_
5	for	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	10	det	_	_
7	Bush	_	NNP	NNP	_	10	nn	_	_
8	administration	_	NN	NN	_	10	nn	_	_
9	Tom	_	NNP	NNP	_	10	nn	_	_
10	Casey	_	NNP	NNP	_	5	pobj	_	_
11	stated	_	VBD	VBD	_	0	root	_	_
12	that	_	IN	IN	_	34	mark	_	_
13	while	_	IN	IN	_	17	mark	_	_
14	the	_	DT	DT	_	15	det	_	_
15	report	_	NN	NN	_	17	nsubj	_	_
16	may	_	MD	MD	_	17	aux	_	_
17	offer	_	VB	VB	_	34	advcl	_	_
18	some	_	DT	DT	_	20	det	_	_
19	new	_	JJ	JJ	_	20	amod	_	_
20	details	_	NNS	NNS	_	17	dobj	_	_
21	or	_	CC	CC	_	20	cc	_	_
22	insight	_	NN	NN	_	20	conj	_	_
23	into	_	IN	IN	_	17	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	development	_	NN	NN	_	23	pobj	_	_
26	of	_	IN	IN	_	25	prep	_	_
27	Iran	_	NNP	NNP	_	29	poss	_	_
28	's	_	POS	POS	_	27	possessive	_	_
29	program	_	NN	NN	_	26	pobj	_	_
30	Iranian	_	JJ	JJ	_	31	amod	_	_
31	officials	_	NNS	NNS	_	34	nsubj	_	_
32	have	_	VBP	VBP	_	34	aux	_	_
33	not	_	RB	RB	_	34	neg	_	_
34	met	_	VBN	VBN	_	11	ccomp	_	_
35	any	_	DT	DT	_	37	det	_	_
36	international	_	JJ	JJ	_	37	amod	_	_
37	obligations	_	NNS	NNS	_	34	dobj	_	_
38	regarding	_	VBG	VBG	_	37	prep	_	_
39	the	_	DT	DT	_	41	det	_	_
40	nuclear	_	JJ	JJ	_	41	amod	_	_
41	program	_	NN	NN	_	38	pobj	_	_
42	.	_	.	.	_	11	punct	_	_

Oracle:
(c / country, name, n3 / name)
(c3 / country, name, n5 / name)
(d / detail-01, ARG1, d2 / develop-02)
(d / detail-01, mod, n7 / new)
(d / detail-01, mod, s3 / some)
(d2 / develop-02, ARG0, c3 / country)
(d2 / develop-02, ARG1, p4 / program)
(g2 / government-organization, name, n2 / name)
(g2 / government-organization, poss, c / country)
(h / have-org-role-91, ARG0, p5 / person)
(h / have-org-role-91, ARG1, g2 / government-organization)
(h / have-org-role-91, ARG2, s2 / spokesman)
(h2 / have-org-role-91, ARG0, p6 / person)
(h2 / have-org-role-91, ARG1, c3 / country)
(h2 / have-org-role-91, ARG2, o3 / official)
(i2 / insight, mod, n7 / new)
(i2 / insight, mod, s3 / some)
(i2 / insight, prep-into, d2 / develop-02)
(m / meet-01, ARG0, p6 / person)
(m / meet-01, ARG1, o4 / obligation)
(n / name, op, "Casey")
(n / name, op, "Tom")
(n2 / name, op, "Department")
(n2 / name, op, "State")
(n3 / name, op, "U.S.")
(n4 / name, op, "Bush")
(n5 / name, op, "Iran")
(o2 / offer-01, ARG0, r2 / report)
(o2 / offer-01, ARG1, o5 / or)
(o4 / obligation, mod, a2 / any)
(o4 / obligation, mod, i / international)
(o5 / or, op, d / detail-01)
(o5 / or, op, i2 / insight)
(p / person, name, n4 / name)
(p2 / possible, domain, o2 / offer-01)
(p3 / program, mod, n6 / nucleus)
(p5 / person, name, n / name)
(r / regard-01, ARG0, o4 / obligation)
(r / regard-01, ARG1, p3 / program)
(s / state-01, ARG0, p5 / person)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),new,new,false), Span(16,17,List(1),offer,offer-01,false), Span(0,1,List(4, 3, 2),U.S.,(country :name (name :op "U.S.")),false), Span(12,13,List(5),while,will-01,false), Span(34,35,List(6),international,any,false), Span(2,3,List(7),Department,organization,false), Span(20,21,List(8),or,or,false), Span(28,29,List(9),Iranian,program,false), Span(39,40,List(10),program.,nucleus,false), Span(1,2,List(12, 11),State,(thing :ARG1-of state-01),false), Span(40,41,List(13),,program,false), Span(29,30,List(16, 15, 14),officials,(country :name (name :op "Iran")),false), Span(36,37,List(17),regarding,obligation,false), Span(14,15,List(19, 18),report,(thing :ARG1-of report-01),false), Span(3,4,List(22, 21, 20),spokesman,(person :ARG0-of (have-org-role-91 :ARG2 spokesman)),false), Span(21,22,List(23),insight,insist-01,false), Span(8,10,List(27, 26, 25, 24),Tom Casey,(person :name (name :op "Tom" :op "Casey")),false), Span(24,25,List(28),development,develop-01,false), Span(33,34,List(29),any,met-01,false), Span(30,31,List(32, 31, 30),have,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(17,18,List(33),some,some,false), Span(19,20,List(34),details,detail-01,false), Span(35,36,List(35),obligations,international,false), Span(6,7,List(38, 37, 36),Bush,(person :name (name :op "Bush")),false), Span(10,11,List(39),stated,state-01,false)),Map(39 -> state-01, 30 -> person, 2 -> country, 5 -> will-01, 33 -> some, 27 -> "Casey", 12 -> state-01, 8 -> or, 15 -> name, 36 -> person, 21 -> have-org-role-91, 18 -> thing, 24 -> person, 35 -> international, 7 -> organization, 1 -> offer-01, 17 -> obligation, 23 -> insist-01, 38 -> "Bush", 26 -> "Tom", 4 -> "U.S.", 11 -> thing, 32 -> official, 14 -> country, 29 -> met-01, 20 -> person, 34 -> detail-01, 28 -> develop-01, 6 -> any, 9 -> program, 0 -> new, 22 -> spokesman, 16 -> "Iran", 37 -> name, 19 -> report-01, 10 -> nucleus, 3 -> name, 31 -> have-org-role-91, 25 -> name, 13 -> program),Map(w -> will-01, n -> new, h -> have-org-role-91, h2 -> have-org-role-91, p5 -> person, s2 -> spokesman, t -> thing, o3 -> or, p2 -> program, n4 -> name, s -> state-01, s4 -> state-01, m -> met-01, d -> develop-01, o5 -> official, p -> program, n3 -> nucleus, a -> any, p4 -> person, n6 -> name, d2 -> detail-01, o2 -> organization, i2 -> international, t2 -> thing, r -> report-01, i -> insist-01, c -> country, s3 -> some, p6 -> person, o -> offer-01, o4 -> obligation, p3 -> person, n2 -> name, c2 -> country, n5 -> name))),[Ljava.lang.String;@437d286c,Annotation([Ljava.lang.String;@1c0e8c5a,[Ljava.lang.String;@6b6efa99,[Ljava.lang.String;@36348a37),Annotation([Ljava.lang.String;@1c20fad5,[Ljava.lang.String;@7424c957,[Ledu.cmu.lti.nlp.amr.Dependency;@68024f78),Annotation([Ljava.lang.String;@7af5057d,[Ljava.lang.String;@6118aea4,[Ljava.lang.String;@3324bda1),Annotation([Ljava.lang.String;@49a74d32,[Ljava.lang.String;@1bab6796,[Ledu.cmu.lti.nlp.amr.Entity;@3f6287c9))
AMR:
(c / country, name, n2 / name)
(c2 / country, name, n4 / name)
(d / develop-01, ARG1, p / program)
(d2 / detail-01, ARG1, p6 / person)
(d2 / detail-01, ARG6, s3 / some)
(d2 / detail-01, mod, n / new)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, o2 / organization)
(h / have-org-role-91, ARG2, s2 / spokesman)
(h2 / have-org-role-91, ARG0, p5 / person)
(h2 / have-org-role-91, ARG1, c / country)
(h2 / have-org-role-91, ARG2, o5 / official)
(i / insist-01, ARG0, t2 / thing)
(m / met-01, ARG0, p5 / person)
(m / met-01, ARG1, o4 / obligation)
(n2 / name, op, "U.S.")
(n4 / name, op, "Iran")
(n5 / name, op, "Casey")
(n5 / name, op, "Tom")
(n6 / name, op, "Bush")
(o / offer-01, ARG0, t2 / thing)
(o / offer-01, ARG1, o3 / or)
(o3 / or, op, d / develop-01)
(o3 / or, op, d2 / detail-01)
(o4 / obligation, mod, a / any)
(o4 / obligation, mod, i2 / international)
(p2 / program, mod, n3 / nucleus)
(p2 / program, poss, c2 / country)
(p4 / person, name, n5 / name)
(p5 / person, mod, c2 / country)
(p6 / person, name, n6 / name)
(r / report-01, ARG1, t2 / thing)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, t / thing)
(s4 / state-01, ARG0, p4 / person)
(s4 / state-01, ARG1, m / met-01)
(t / thing, poss, c / country)
(w / will-01, ARG0, o / offer-01)
(w / will-01, ARG1, m / met-01)

Decoded in 8,786,681 microseconds
Sentence: Casey stated the fact that the nuclear program continues to move forward shows that the Iranian regime is continuing on a path of defiance of the international community.

Oracle Span 1:  Casey => (person :name (name :op "Casey"))
Oracle Span 2:  community => community
Oracle Span 3:  continues => continue-01
Oracle Span 4:  continuing => continue-01
Oracle Span 5:  forward => forward
Oracle Span 6:  international => international
Oracle Span 7:  Iranian => (country :name (name :op "Iran"))
Oracle Span 8:  move => move-01
Oracle Span 9:  nuclear => nucleus
Oracle Span 10:  program => program
Oracle Span 11:  regime => regime
Oracle Span 12:  shows => show-01
Oracle Span 13:  stated => state-01
NER Entity: (person :name (name :op "Casey"))
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 0-1:  Casey => (person :name (name :op "Casey"))
Span 27-28:  community. => community
Span 8-9:  continues => continue-01
Span 18-19:  continuing => continue-01
Span 23-24:  defiance => define-01
Span 11-12:  forward => forward
Span 26-27:  international => international
Span 15-16:  Iranian => (country :name (name :op "Iran"))
Span 10-11:  move => move-01
Span 6-7:  nuclear => nucleus
Span 21-22:  path => path
Span 7-8:  program => program
Span 16-17:  regime => regime
Span 12-13:  shows => show-01
Span 1-2:  stated => state-01

Langrangian relaxation converged after 58 iterations. Delta = 0.0
Oracle Span 0-1:  Casey => (person :name (name :op "Casey"))
Oracle Span 27-28:  community => community
Oracle Span 8-9:  continues => continue-01
Oracle Span 18-19:  continuing => continue-01
Oracle Span 11-12:  forward => forward
Oracle Span 26-27:  international => international
Oracle Span 15-16:  Iranian => (country :name (name :op "Iran"))
Oracle Span 10-11:  move => move-01
Oracle Span 6-7:  nuclear => nucleus
Oracle Span 7-8:  program => program
Oracle Span 16-17:  regime => regime
Oracle Span 12-13:  shows => show-01
Oracle Span 1-2:  stated => state-01

Dependencies:
1	Casey	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	4	det	_	_
4	fact	_	NN	NN	_	2	dobj	_	_
5	that	_	IN	IN	_	9	mark	_	_
6	the	_	DT	DT	_	8	det	_	_
7	nuclear	_	JJ	JJ	_	8	amod	_	_
8	program	_	NN	NN	_	9	nsubj	_	_
9	continues	_	VBZ	VBZ	_	2	ccomp	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	move	_	VB	VB	_	9	xcomp	_	_
12	forward	_	RP	RP	_	11	prt	_	_
13	shows	_	NNS	NNS	_	11	dobj	_	_
14	that	_	IN	IN	_	19	mark	_	_
15	the	_	DT	DT	_	17	det	_	_
16	Iranian	_	JJ	JJ	_	17	amod	_	_
17	regime	_	NN	NN	_	19	nsubj	_	_
18	is	_	VBZ	VBZ	_	19	aux	_	_
19	continuing	_	VBG	VBG	_	11	ccomp	_	_
20	on	_	IN	IN	_	19	prep	_	_
21	a	_	DT	DT	_	22	det	_	_
22	path	_	NN	NN	_	20	pobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	defiance	_	NN	NN	_	23	pobj	_	_
25	of	_	IN	IN	_	24	prep	_	_
26	the	_	DT	DT	_	28	det	_	_
27	international	_	JJ	JJ	_	28	amod	_	_
28	community	_	NN	NN	_	25	pobj	_	_
29	.	_	.	.	_	2	punct	_	_

Oracle:
(c / continue-01, ARG1, p2 / program)
(c2 / continue-01, ARG1, r / regime)
(c3 / country, name, n3 / name)
(c4 / community, mod, i / international)
(m / move-01, ARG0, p2 / program)
(m / move-01, ARG1, p2 / program)
(m / move-01, ARG2, f / forward)
(n / name, op, "Casey")
(n3 / name, op, "Iran")
(p / person, name, n / name)
(p2 / program, mod, n2 / nucleus)
(r / regime, mod, c3 / country)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c / continue-01)
(s2 / show-01, ARG0, c / continue-01)
(s2 / show-01, ARG1, c2 / continue-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(2, 1, 0),Iranian,(country :name (name :op "Iran")),false), Span(10,11,List(3),move,move-01,false), Span(26,27,List(4),international,international,false), Span(12,13,List(5),shows,show-01,false), Span(16,17,List(6),regime,regime,false), Span(1,2,List(7),stated,state-01,false), Span(21,22,List(8),path,path,false), Span(8,9,List(9),continues,continue-01,false), Span(0,1,List(12, 11, 10),Casey,(person :name (name :op "Casey")),false), Span(11,12,List(13),forward,forward,false), Span(23,24,List(14),defiance,define-01,false), Span(27,28,List(15),community.,community,false), Span(6,7,List(16),nuclear,nucleus,false), Span(7,8,List(17),program,program,false), Span(18,19,List(18),continuing,continue-01,false)),Map(2 -> "Iran", 5 -> show-01, 12 -> "Casey", 15 -> community, 8 -> path, 18 -> continue-01, 7 -> state-01, 17 -> program, 1 -> name, 4 -> international, 11 -> name, 14 -> define-01, 6 -> regime, 0 -> country, 9 -> continue-01, 16 -> nucleus, 3 -> move-01, 10 -> person, 13 -> forward),Map(n -> name, s2 -> state-01, p2 -> person, c4 -> continue-01, s -> show-01, m -> move-01, d -> define-01, p -> path, n3 -> nucleus, c3 -> community, i -> international, r -> regime, c -> country, f -> forward, p3 -> program, c2 -> continue-01, n2 -> name))),[Ljava.lang.String;@4a8dc17a,Annotation([Ljava.lang.String;@7b744350,[Ljava.lang.String;@35437c4c,[Ljava.lang.String;@66146b9),Annotation([Ljava.lang.String;@2243d11e,[Ljava.lang.String;@7bf468c5,[Ledu.cmu.lti.nlp.amr.Dependency;@55fbdaeb),Annotation([Ljava.lang.String;@59a31a63,[Ljava.lang.String;@65d4eb68,[Ljava.lang.String;@3dbe1557),Annotation([Ljava.lang.String;@3699ac89,[Ljava.lang.String;@7728c83b,[Ledu.cmu.lti.nlp.amr.Entity;@3565e21d))
AMR:
(c / country, name, n / name)
(c2 / continue-01, ARG0, p3 / program)
(c2 / continue-01, ARG1, m / move-01)
(c3 / community, mod, i / international)
(c4 / continue-01, ARG0, r / regime)
(c4 / continue-01, ARG1, p / path)
(d / define-01, ARG0, p / path)
(d / define-01, ARG1, c3 / community)
(m / move-01, ARG1, s / show-01)
(m / move-01, direction, f / forward)
(n / name, op, "Iran")
(n2 / name, op, "Casey")
(p2 / person, name, n2 / name)
(p3 / program, mod, n3 / nucleus)
(r / regime, mod, c / country)
(s / show-01, ARG1, c4 / continue-01)
(s2 / state-01, ARG0, p2 / person)
(s2 / state-01, ARG1, c2 / continue-01)

Decoded in 1,773,601 microseconds
Sentence: Most Western Nonproliferation Experts stated the Agreement on 21 August 2007 contained little that could dissuade policymakers in Washington, London, Paris and Berlin from moving forward with another round of Security Council sanctions.

Oracle Span 1:  21 August 2007 => (date-entity :day 21 :month 8 :year 2007)
Oracle Span 2:  Agreement => agree-01
Oracle Span 3:  and => and
Oracle Span 4:  another => another
Oracle Span 5:  Berlin => (city :name (name :op "Berlin"))
Oracle Span 6:  contained => contain-01
Oracle Span 7:  could => possible
Oracle Span 8:  dissuade => dissuade-01
Oracle Span 9:  Experts => (person :ARG1-of expert-41)
Oracle Span 10:  forward => forward
Oracle Span 11:  little => little
Oracle Span 12:  London => (city :name (name :op "London"))
Oracle Span 13:  Most => most
Oracle Span 14:  moving => move-01
Oracle Span 15:  Paris => (city :name (name :op "Paris"))
Oracle Span 16:  policymakers => policy
Oracle Span 17:  round => round
Oracle Span 18:  sanctions => sanction-02
Oracle Span 19:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 20:  stated => state-01
Oracle Span 21:  Washington => (city :name (name :op "Washington"))
Oracle Span 22:  Western => (world-region :name (name :op "West"))
NER Entity: (country :name (name :op "Washington"))
NER Entity: (country :name (name :op "London"))
NER Entity: (country :name (name :op "Paris"))
NER Entity: (country :name (name :op "Berlin"))
NER Entity: (organization :name (name :op "Security" :op "Council"))
NER Entity: (thing :name (name :op "Western" :op "Nonproliferation"))
mkDayMonthYear(21	August	2007,21,August,2007)
Spans:
Span 34-35:   => sanction-01
Span 6-7:  Agreement => agreement
Span 21-22:  and => and
Span 27-28:  another => forward
Span 22-23:  Berlin => (city :name (name :op "Paris"))
Span 11-12:  contained => contain-01
Span 14-15:  could => possible
Span 15-16:  dissuade => dissuade-01
Span 3-4:  Experts => (person :ARG1-of expert-41)
Span 23-24:  from => and
Span 12-13:  little => little
Span 0-1:  Most => most
Span 0-9:  Most Western Nonproliferation Experts stated the Agreement on 21 => (date-entity :year 2007 :month 8 :day 21)
Span 24-25:  moving => (city :name (name :op "Berlin"))
Span 29-30:  of => another
Span 20-21:  Paris => (city :name (name :op "London"))
Span 16-17:  policymakers => person
Span 32-34:  sanctions. => (organization :name (name :op "Council" :op "Security"))
Span 30-31:  Security => round
Span 4-5:  stated => state-01
Span 18-19:  Washington, => (city :name (name :op "Washington"))
Span 1-2:  Western => west
Span 26-27:  with => move-01

Langrangian relaxation converged after 51 iterations. Delta = 0.0
Oracle Span 8-11:  21 August 2007 => (date-entity :day 21 :month 8 :year 2007)
Oracle Span 6-7:  Agreement => agree-01
Oracle Span 23-24:  and => and
Oracle Span 29-30:  another => another
Oracle Span 24-25:  Berlin => (city :name (name :op "Berlin"))
Oracle Span 11-12:  contained => contain-01
Oracle Span 14-15:  could => possible
Oracle Span 15-16:  dissuade => dissuade-01
Oracle Span 3-4:  Experts => (person :ARG1-of expert-41)
Oracle Span 27-28:  forward => forward
Oracle Span 12-13:  little => little
Oracle Span 20-21:  London => (city :name (name :op "London"))
Oracle Span 0-1:  Most => most
Oracle Span 26-27:  moving => move-01
Oracle Span 22-23:  Paris => (city :name (name :op "Paris"))
Oracle Span 16-17:  policymakers => policy
Oracle Span 30-31:  round => round
Oracle Span 34-35:  sanctions => sanction-02
Oracle Span 32-34:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 4-5:  stated => state-01
Oracle Span 18-19:  Washington => (city :name (name :op "Washington"))
Oracle Span 1-2:  Western => (world-region :name (name :op "West"))

Dependencies:
1	Most	_	JJS	JJS	_	4	amod	_	_
2	Western	_	NNP	NNP	_	4	nn	_	_
3	Nonproliferation	_	NNP	NNP	_	4	nn	_	_
4	Experts	_	NNS	NNS	_	5	nsubj	_	_
5	stated	_	VBD	VBD	_	0	root	_	_
6	the	_	DT	DT	_	7	det	_	_
7	Agreement	_	NN	NN	_	12	nsubj	_	_
8	on	_	IN	IN	_	7	prep	_	_
9	21	_	CD	CD	_	8	pobj	_	_
10	August	_	NNP	NNP	_	7	tmod	_	_
11	2007	_	CD	CD	_	10	num	_	_
12	contained	_	VBD	VBD	_	5	ccomp	_	_
13	little	_	RB	RB	_	14	advmod	_	_
14	that	_	WDT	WDT	_	16	nsubj	_	_
15	could	_	MD	MD	_	16	aux	_	_
16	dissuade	_	VB	VB	_	12	ccomp	_	_
17	policymakers	_	NNS	NNS	_	16	dobj	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	Washington	_	NNP	NNP	_	18	pobj	_	_
20	,	_	,	,	_	19	punct	_	_
21	London	_	NNP	NNP	_	19	conj	_	_
22	,	_	,	,	_	19	punct	_	_
23	Paris	_	NNP	NNP	_	19	conj	_	_
24	and	_	CC	CC	_	19	cc	_	_
25	Berlin	_	NNP	NNP	_	19	conj	_	_
26	from	_	IN	IN	_	16	prep	_	_
27	moving	_	VBG	VBG	_	26	pcomp	_	_
28	forward	_	RB	RB	_	27	advmod	_	_
29	with	_	IN	IN	_	27	prep	_	_
30	another	_	DT	DT	_	31	det	_	_
31	round	_	NN	NN	_	29	pobj	_	_
32	of	_	IN	IN	_	31	prep	_	_
33	Security	_	NNP	NNP	_	35	nn	_	_
34	Council	_	NNP	NNP	_	35	nn	_	_
35	sanctions	_	NNS	NNS	_	32	pobj	_	_
36	.	_	.	.	_	5	punct	_	_

Oracle:
(a / agree-01, time, d / date-entity)
(a2 / and, op, c2 / city)
(a2 / and, op, c3 / city)
(a2 / and, op, c4 / city)
(a2 / and, op, c5 / city)
(c / contain-01, ARG0, a / agree-01)
(c / contain-01, ARG1, l / little)
(c2 / city, name, n / name)
(c3 / city, name, n2 / name)
(c4 / city, name, n3 / name)
(c5 / city, name, n4 / name)
(d / date-entity, day, 21)
(d / date-entity, month, 8)
(d / date-entity, year, 2007)
(d2 / dissuade-01, ARG0, l / little)
(d2 / dissuade-01, ARG2, m3 / move-01)
(d2 / dissuade-01, mod, p5 / possible)
(e / expert-41, ARG1, p / person)
(m3 / move-01, ARG1, r / round)
(m3 / move-01, ARG2, f / forward)
(n / name, op, "Washington")
(n2 / name, op, "London")
(n3 / name, op, "Paris")
(n4 / name, op, "Berlin")
(n5 / name, op, "Council")
(n5 / name, op, "Security")
(n6 / name, op, "West")
(o / organization, name, n5 / name)
(p / person, location, w / world-region)
(p / person, quant, m / most)
(r / round, mod, a3 / another)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c / contain-01)
(s2 / sanction-02, consist, r / round)
(s2 / sanction-02, mod, o / organization)
(w / world-region, name, n6 / name)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),stated,state-01,false), Span(26,27,List(1),with,move-01,false), Span(12,13,List(2),little,little,false), Span(21,22,List(3),and,and,false), Span(32,34,List(7, 6, 5, 4),sanctions.,(organization :name (name :op "Council" :op "Security")),false), Span(27,28,List(8),another,forward,false), Span(29,30,List(9),of,another,false), Span(18,19,List(12, 11, 10),Washington,,(city :name (name :op "Washington")),false), Span(0,1,List(13),Most,most,false), Span(30,31,List(14),Security,round,false), Span(14,15,List(15),could,possible,false), Span(16,17,List(16),policymakers,person,false), Span(0,9,List(20, 19, 18, 17),Most Western Nonproliferation Experts stated the Agreement on 21,(date-entity :year 2007 :month 8 :day 21),false), Span(22,23,List(23, 22, 21),Berlin,(city :name (name :op "Paris")),false), Span(34,35,List(24),,sanction-01,false), Span(3,4,List(26, 25),Experts,(person :ARG1-of expert-41),false), Span(15,16,List(27),dissuade,dissuade-01,false), Span(1,2,List(28),Western,west,false), Span(20,21,List(31, 30, 29),Paris,(city :name (name :op "London")),false), Span(24,25,List(34, 33, 32),moving,(city :name (name :op "Berlin")),false), Span(23,24,List(35),from,and,false), Span(6,7,List(36),Agreement,agreement,false), Span(11,12,List(37),contained,contain-01,false)),Map(30 -> name, 2 -> little, 5 -> name, 33 -> name, 27 -> dissuade-01, 12 -> "Washington", 8 -> forward, 15 -> possible, 36 -> agreement, 21 -> city, 18 -> 2007, 24 -> sanction-01, 35 -> and, 7 -> "Security", 1 -> move-01, 17 -> date-entity, 23 -> "Paris", 26 -> expert-41, 4 -> organization, 11 -> name, 32 -> city, 14 -> round, 29 -> city, 20 -> 21, 34 -> "Berlin", 28 -> west, 6 -> "Council", 9 -> another, 0 -> state-01, 22 -> name, 16 -> person, 37 -> contain-01, 19 -> 8, 10 -> city, 3 -> and, 31 -> "London", 25 -> person, 13 -> most),Map(e -> expert-41, n -> name, w -> west, 2 -> 2007, s2 -> sanction-01, m2 -> most, 8 -> 8, p2 -> person, a3 -> and, c4 -> city, n4 -> name, s -> state-01, m -> move-01, d -> date-entity, p -> possible, c3 -> city, a -> and, n3 -> name, d2 -> dissuade-01, r -> round, a2 -> another, c -> city, l -> little, f -> forward, 22 -> 21, o -> organization, p3 -> person, n2 -> name, c2 -> city, a4 -> agreement, c5 -> contain-01, n5 -> name))),[Ljava.lang.String;@793421b2,Annotation([Ljava.lang.String;@22a4f01,[Ljava.lang.String;@76a4dda7,[Ljava.lang.String;@357dedf9),Annotation([Ljava.lang.String;@6d9c7355,[Ljava.lang.String;@3d1e6ba0,[Ledu.cmu.lti.nlp.amr.Dependency;@6d87d041),Annotation([Ljava.lang.String;@37cfea2d,[Ljava.lang.String;@3947315a,[Ljava.lang.String;@774a0eb9),Annotation([Ljava.lang.String;@241ccdc9,[Ljava.lang.String;@6ccac5e5,[Ledu.cmu.lti.nlp.amr.Entity;@6c87f4c7))
AMR:
(a / and, op, a3 / and)
(a3 / and, op, c / city)
(a3 / and, op, c2 / city)
(a3 / and, op, c3 / city)
(a3 / and, op, c4 / city)
(c / city, name, n2 / name)
(c2 / city, name, n3 / name)
(c3 / city, name, n4 / name)
(c4 / city, name, n5 / name)
(c5 / contain-01, ARG0, a4 / agreement)
(c5 / contain-01, ARG1, p / possible)
(d / date-entity, calendar, c5 / contain-01)
(d / date-entity, day, 22 / 21)
(d / date-entity, month, 8 / 8)
(d / date-entity, year, 2 / 2007)
(d2 / dissuade-01, ARG1, a3 / and)
(d2 / dissuade-01, ARG2, m / move-01)
(d2 / dissuade-01, ARG6, l / little)
(e / expert-41, ARG1, p3 / person)
(m / move-01, ARG0, p2 / person)
(m / move-01, ARG1, m2 / most)
(m / move-01, ARG2, r / round)
(m / move-01, ARG6, f / forward)
(n / name, op, "Council")
(n / name, op, "Security")
(n2 / name, op, "Washington")
(n3 / name, op, "Paris")
(n4 / name, op, "London")
(n5 / name, op, "Berlin")
(o / organization, name, n / name)
(p / possible, domain, d2 / dissuade-01)
(r / round, mod, a2 / another)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, c5 / contain-01)
(s / state-01, ARG6, w / west)
(s2 / sanction-01, ARG0, l / little)
(s2 / sanction-01, ARG1, o / organization)

Decoded in 4,794,114 microseconds
Sentence: Experts stated many of the transparency issues reportedly resolved in the Agreement on 21 August 2007 should have been resolved previously.

Oracle Span 1:  21 August 2007 => (date-entity :day 21 :month 8 :year 2007)
Oracle Span 2:  Agreement => agree-01
Oracle Span 3:  Experts => (person :ARG1-of expert-41)
Oracle Span 4:  issues => issue
Oracle Span 5:  many => many
Oracle Span 6:  previously => previous
Oracle Span 7:  reportedly => report-01
Oracle Span 8:  resolved => resolve-01
Oracle Span 9:  resolved => resolve-01
Oracle Span 10:  should => recommend-01
Oracle Span 11:  stated => state-01
Oracle Span 12:  transparency => transparency
mkDayMonthYear(21	August	2007,21,August,2007)
Spans:
Span 11-12:  Agreement => agreement
Span 0-1:  Experts => (person :ARG1-of expert-41)
Span 0-14:  Experts stated many of the transparency issues reportedly resolved in the Agreement on 21 => (date-entity :year 2007 :month 8 :day 21)
Span 0-21:  Experts stated many of the transparency issues reportedly resolved in the Agreement on 21 August 2007 should have been resolved previously. => (date-entity :time previously)
Span 6-7:  issues => issue
Span 2-3:  many => many
Span 7-8:  reportedly => report-01
Span 19-20:  resolved => resolve-01
Span 8-9:  resolved => resolve-01
Span 16-17:  should => shoulder-01
Span 1-2:  stated => state-01
Span 5-6:  transparency => transparency

Langrangian relaxation converged after 63 iterations. Delta = 0.0
Oracle Span 13-16:  21 August 2007 => (date-entity :day 21 :month 8 :year 2007)
Oracle Span 11-12:  Agreement => agree-01
Oracle Span 0-1:  Experts => (person :ARG1-of expert-41)
Oracle Span 6-7:  issues => issue
Oracle Span 2-3:  many => many
Oracle Span 20-21:  previously => previous
Oracle Span 7-8:  reportedly => report-01
Oracle Span 8-9:  resolved => resolve-01
Oracle Span 19-20:  resolved => resolve-01
Oracle Span 16-17:  should => recommend-01
Oracle Span 1-2:  stated => state-01
Oracle Span 5-6:  transparency => transparency

Dependencies:
1	Experts	_	NNS	NNS	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	many	_	JJ	JJ	_	20	nsubjpass	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	transparency	_	JJ	JJ	_	7	amod	_	_
7	issues	_	NNS	NNS	_	4	pobj	_	_
8	reportedly	_	RB	RB	_	9	advmod	_	_
9	resolved	_	VBN	VBN	_	7	vmod	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	Agreement	_	NN	NN	_	10	pobj	_	_
13	on	_	IN	IN	_	12	prep	_	_
14	21	_	CD	CD	_	13	pobj	_	_
15	August	_	NNP	NNP	_	12	tmod	_	_
16	2007	_	CD	CD	_	15	num	_	_
17	should	_	MD	MD	_	20	aux	_	_
18	have	_	VB	VB	_	20	aux	_	_
19	been	_	VBN	VBN	_	20	auxpass	_	_
20	resolved	_	VBN	VBN	_	2	ccomp	_	_
21	previously	_	RB	RB	_	20	advmod	_	_
22	.	_	.	.	_	2	punct	_	_

Oracle:
(d / date-entity, day, 21)
(d / date-entity, month, 8)
(d / date-entity, year, 2007)
(e2 / expert-41, ARG1, p2 / person)
(i / issue, quant, m / many)
(i / issue, topic, t / transparency)
(r / recommend-01, ARG1, r2 / resolve-01)
(r2 / resolve-01, ARG1, i / issue)
(r2 / resolve-01, time, p3 / previous)
(r3 / resolve-01, ARG1, i / issue)
(r3 / resolve-01, location, a / agree-01)
(r3 / resolve-01, time, d / date-entity)
(r5 / report-01, ARG1, r3 / resolve-01)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, r / recommend-01)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(0,14,List(4, 3, 2, 1),Experts stated many of the transparency issues reportedly resolved in the Agreement on 21,(date-entity :year 2007 :month 8 :day 21),false), Span(0,21,List(6, 5),Experts stated many of the transparency issues reportedly resolved in the Agreement on 21 August 2007 should have been resolved previously.,(date-entity :time previously),false), Span(0,1,List(8, 7),Experts,(person :ARG1-of expert-41),false), Span(5,6,List(9),transparency,transparency,false), Span(2,3,List(10),many,many,false), Span(6,7,List(11),issues,issue,false), Span(7,8,List(12),reportedly,report-01,false), Span(19,20,List(13),resolved,resolve-01,false), Span(11,12,List(14),Agreement,agreement,false), Span(16,17,List(15),should,shoulder-01,false), Span(8,9,List(16),resolved,resolve-01,false)),Map(2 -> 2007, 5 -> date-entity, 12 -> report-01, 15 -> shoulder-01, 8 -> expert-41, 7 -> person, 1 -> date-entity, 4 -> 21, 11 -> issue, 14 -> agreement, 6 -> previously, 0 -> state-01, 9 -> transparency, 16 -> resolve-01, 3 -> 8, 10 -> many, 13 -> resolve-01),Map(e -> expert-41, r3 -> resolve-01, 2 -> 2007, s2 -> shoulder-01, t -> transparency, 8 -> 8, p2 -> person, s -> state-01, d -> date-entity, m -> many, r2 -> resolve-01, p -> previously, a -> agreement, d2 -> date-entity, i -> issue, r -> report-01, 22 -> 21))),[Ljava.lang.String;@2ccc466e,Annotation([Ljava.lang.String;@5fa183c3,[Ljava.lang.String;@23a99451,[Ljava.lang.String;@650316f4),Annotation([Ljava.lang.String;@2bb2d30c,[Ljava.lang.String;@78def222,[Ledu.cmu.lti.nlp.amr.Dependency;@17bafa74),Annotation([Ljava.lang.String;@6a73eac1,[Ljava.lang.String;@57e46e30,[Ljava.lang.String;@58a4c90c),Annotation([Ljava.lang.String;@188df136,[Ljava.lang.String;@6ddd3504,[Ledu.cmu.lti.nlp.amr.Entity;@193c4361))
AMR:
(d / date-entity, day, 22 / 21)
(d / date-entity, month, 8 / 8)
(d / date-entity, op, s2 / shoulder-01)
(d / date-entity, year, 2 / 2007)
(d2 / date-entity, time, p / previously)
(e / expert-41, ARG1, p2 / person)
(i / issue, mod, t / transparency)
(i / issue, quant, m / many)
(r / report-01, ARG1, r3 / resolve-01)
(r2 / resolve-01, ARG1, d2 / date-entity)
(r3 / resolve-01, ARG0, a / agreement)
(r3 / resolve-01, ARG1, i / issue)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, s2 / shoulder-01)
(s / state-01, ARG6, m / many)
(s2 / shoulder-01, ARG1, r2 / resolve-01)

Decoded in 1,886,600 microseconds
Sentence: Executive Director of nonpartisan Washington think tank the Arms Control Association Daryl G. Kimball stated the agreement does not address the problem that the Iranian government is pursuing an enrichment technology and capability that could lead to the production of nuclear bomb material.

Oracle Span 1:  address => address-02
Oracle Span 2:  agreement => agree-01
Oracle Span 3:  and => and
Oracle Span 4:  Arms Control Association => (name :op "Association" :op "Control" :op "Arms")
Oracle Span 5:  bomb => bomb
Oracle Span 6:  capability => capable-41
Oracle Span 7:  could => possible
Oracle Span 8:  Daryl G. Kimball => (person :name (name :op "Kimball" :op "G." :op "Daryl"))
Oracle Span 9:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 10:  enrichment => enrich-01
Oracle Span 11:  Executive => executive
Oracle Span 12:  government => (government-organization :ARG0-of govern-01)
Oracle Span 13:  Iranian => (country :name (name :op "Iran"))
Oracle Span 14:  lead => lead-03
Oracle Span 15:  material => material
Oracle Span 16:  nuclear => nucleus
Oracle Span 17:  problem => problem
Oracle Span 18:  production => produce-01
Oracle Span 19:  pursuing => pursue-01
Oracle Span 20:  stated => state-01
Oracle Span 21:  technology => technology
Oracle Span 22:  think => think-tank
Oracle Span 23:  Washington => (city :name (name :op "Washington"))
NER Entity: (person :name (name :op "Daryl" :op "G." :op "Kimball"))
NER Entity: (organization :name (name :op "Arms" :op "Control" :op "Association"))
NER Entity: (country :name (name :op "Washington"))
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 19-20:  address => address-02
Span 16-17:  agreement => agree-01
Span 31-32:  and => and
Span 41-42:  bomb => bomb
Span 32-33:  capability => capacitate-01
Span 34-35:  could => possible
Span 11-14:  Daryl G. Kimball => (person :name (name :op "Daryl" :op "G." :op "Kimball"))
Span 1-2:  Director => (have-org-role-91 :ARG2 director)
Span 29-30:  enrichment => enrich-01
Span 0-1:  Executive => executive
Span 25-26:  government => (government-organization :ARG0-of govern-01)
Span 35-36:  lead => lead-03
Span 42-43:  material. => material
Span 21-22:  problem => problem
Span 38-39:  production => produce-01
Span 27-28:  pursuing => pursue-01
Span 14-15:  stated => state-01
Span 6-7:  tank => tank
Span 30-31:  technology => technology
Span 5-6:  think => think-01
Span 4-5:  Washington => (city :name (name :op "Washington"))

Langrangian relaxation converged after 62 iterations. Delta = 0.0
Oracle Span 19-20:  address => address-02
Oracle Span 16-17:  agreement => agree-01
Oracle Span 31-32:  and => and
Oracle Span 8-11:  Arms Control Association => (name :op "Association" :op "Control" :op "Arms")
Oracle Span 41-42:  bomb => bomb
Oracle Span 32-33:  capability => capable-41
Oracle Span 34-35:  could => possible
Oracle Span 11-14:  Daryl G. Kimball => (person :name (name :op "Kimball" :op "G." :op "Daryl"))
Oracle Span 1-2:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 29-30:  enrichment => enrich-01
Oracle Span 0-1:  Executive => executive
Oracle Span 25-26:  government => (government-organization :ARG0-of govern-01)
Oracle Span 24-25:  Iranian => (country :name (name :op "Iran"))
Oracle Span 35-36:  lead => lead-03
Oracle Span 42-43:  material => material
Oracle Span 40-41:  nuclear => nucleus
Oracle Span 21-22:  problem => problem
Oracle Span 38-39:  production => produce-01
Oracle Span 27-28:  pursuing => pursue-01
Oracle Span 14-15:  stated => state-01
Oracle Span 30-31:  technology => technology
Oracle Span 5-6:  think => think-tank
Oracle Span 4-5:  Washington => (city :name (name :op "Washington"))

Dependencies:
1	Executive	_	NNP	NNP	_	2	nn	_	_
2	Director	_	NNP	NNP	_	6	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	nonpartisan	_	NNP	NNP	_	5	nn	_	_
5	Washington	_	NNP	NNP	_	3	pobj	_	_
6	think	_	VBP	VBP	_	0	root	_	_
7	tank	_	NN	NN	_	6	dobj	_	_
8	the	_	DT	DT	_	14	det	_	_
9	Arms	_	NNP	NNP	_	14	nn	_	_
10	Control	_	NNP	NNP	_	14	nn	_	_
11	Association	_	NNP	NNP	_	14	nn	_	_
12	Daryl	_	NNP	NNP	_	14	nn	_	_
13	G.	_	NNP	NNP	_	14	nn	_	_
14	Kimball	_	NNP	NNP	_	15	nsubj	_	_
15	stated	_	VBD	VBD	_	7	rcmod	_	_
16	the	_	DT	DT	_	17	det	_	_
17	agreement	_	NN	NN	_	20	nsubj	_	_
18	does	_	VBZ	VBZ	_	20	aux	_	_
19	not	_	RB	RB	_	20	neg	_	_
20	address	_	VB	VB	_	15	ccomp	_	_
21	the	_	DT	DT	_	22	det	_	_
22	problem	_	NN	NN	_	20	dobj	_	_
23	that	_	IN	IN	_	28	mark	_	_
24	the	_	DT	DT	_	26	det	_	_
25	Iranian	_	JJ	JJ	_	26	amod	_	_
26	government	_	NN	NN	_	28	nsubj	_	_
27	is	_	VBZ	VBZ	_	28	aux	_	_
28	pursuing	_	VBG	VBG	_	20	ccomp	_	_
29	an	_	DT	DT	_	31	det	_	_
30	enrichment	_	JJ	JJ	_	31	amod	_	_
31	technology	_	NN	NN	_	28	dobj	_	_
32	and	_	CC	CC	_	31	cc	_	_
33	capability	_	NN	NN	_	31	conj	_	_
34	that	_	WDT	WDT	_	36	nsubj	_	_
35	could	_	MD	MD	_	36	aux	_	_
36	lead	_	VB	VB	_	31	rcmod	_	_
37	to	_	TO	TO	_	36	prep	_	_
38	the	_	DT	DT	_	39	det	_	_
39	production	_	NN	NN	_	37	pobj	_	_
40	of	_	IN	IN	_	39	prep	_	_
41	nuclear	_	JJ	JJ	_	43	amod	_	_
42	bomb	_	NN	NN	_	43	nn	_	_
43	material	_	NN	NN	_	40	pobj	_	_
44	.	_	.	.	_	6	punct	_	_

Oracle:
(a / address-02, ARG0, a2 / agree-01)
(a / address-02, ARG1, p2 / problem)
(a3 / and, op, c3 / capable-41)
(a3 / and, op, t2 / technology)
(b / bomb, mod, n5 / nucleus)
(c / city, name, n3 / name)
(c2 / country, name, n4 / name)
(d / director, mod, e / executive)
(e2 / enrich-01, ARG1, c3 / capable-41)
(e2 / enrich-01, ARG1, t2 / technology)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c2 / country)
(h / have-org-role-91, ARG0, p4 / person)
(h / have-org-role-91, ARG1, t / think-tank)
(h / have-org-role-91, ARG2, d / director)
(l / lead-03, ARG0, p3 / pursue-01)
(l / lead-03, ARG2, p5 / produce-01)
(l / lead-03, mod, p6 / possible)
(m / material, mod, b / bomb)
(n / name, op, "Daryl")
(n / name, op, "G.")
(n / name, op, "Kimball")
(n2 / name, op, "Arms")
(n2 / name, op, "Association")
(n2 / name, op, "Control")
(n3 / name, op, "Washington")
(n4 / name, op, "Iran")
(p2 / problem, topic, p3 / pursue-01)
(p3 / pursue-01, ARG0, g / government-organization)
(p3 / pursue-01, ARG1, a3 / and)
(p4 / person, name, n / name)
(p5 / produce-01, ARG1, m / material)
(s / state-01, ARG0, p4 / person)
(s / state-01, ARG1, a / address-02)
(t / think-tank, location, c / city)
(t / think-tank, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(38,39,List(0),production,produce-01,false), Span(4,5,List(3, 2, 1),Washington,(city :name (name :op "Washington")),false), Span(14,15,List(4),stated,state-01,false), Span(25,26,List(6, 5),government,(government-organization :ARG0-of govern-01),false), Span(31,32,List(7),and,and,false), Span(6,7,List(8),tank,tank,false), Span(21,22,List(9),problem,problem,false), Span(41,42,List(10),bomb,bomb,false), Span(1,2,List(12, 11),Director,(have-org-role-91 :ARG2 director),false), Span(35,36,List(13),lead,lead-03,false), Span(29,30,List(14),enrichment,enrich-01,false), Span(30,31,List(15),technology,technology,false), Span(0,1,List(16),Executive,executive,false), Span(34,35,List(17),could,possible,false), Span(16,17,List(18),agreement,agree-01,false), Span(19,20,List(19),address,address-02,false), Span(27,28,List(20),pursuing,pursue-01,false), Span(42,43,List(21),material.,material,false), Span(11,14,List(26, 25, 24, 23, 22),Daryl G. Kimball,(person :name (name :op "Daryl" :op "G." :op "Kimball")),false), Span(5,6,List(27),think,think-01,false), Span(32,33,List(28),capability,capacitate-01,false)),Map(2 -> name, 5 -> government-organization, 27 -> think-01, 12 -> director, 8 -> tank, 15 -> technology, 21 -> material, 18 -> agree-01, 24 -> "Daryl", 7 -> and, 1 -> city, 17 -> possible, 23 -> name, 26 -> "Kimball", 4 -> state-01, 11 -> have-org-role-91, 14 -> enrich-01, 20 -> pursue-01, 28 -> capacitate-01, 6 -> govern-01, 9 -> problem, 0 -> produce-01, 22 -> person, 16 -> executive, 19 -> address-02, 10 -> bomb, 3 -> "Washington", 25 -> "G.", 13 -> lead-03),Map(e -> enrich-01, n -> name, h -> have-org-role-91, p5 -> person, t -> tank, b -> bomb, p2 -> problem, e2 -> executive, a3 -> address-02, s -> state-01, d -> director, m -> material, g2 -> govern-01, t3 -> think-01, g -> government-organization, p -> produce-01, a -> and, p4 -> pursue-01, t2 -> technology, a2 -> agree-01, c -> city, l -> lead-03, p3 -> possible, n2 -> name, c2 -> capacitate-01))),[Ljava.lang.String;@52495dbf,Annotation([Ljava.lang.String;@6ce94cdb,[Ljava.lang.String;@833c40,[Ljava.lang.String;@4e967f53),Annotation([Ljava.lang.String;@56aa679b,[Ljava.lang.String;@70037601,[Ledu.cmu.lti.nlp.amr.Dependency;@697b257d),Annotation([Ljava.lang.String;@146aa3e6,[Ljava.lang.String;@11f9884f,[Ljava.lang.String;@7a21470f),Annotation([Ljava.lang.String;@4ac1d5fb,[Ljava.lang.String;@bf52ad6,[Ledu.cmu.lti.nlp.amr.Entity;@56937017))
AMR:
(a2 / agree-01, ARG1, t / tank)
(a3 / address-02, ARG0, a2 / agree-01)
(a3 / address-02, ARG1, p2 / problem)
(a3 / address-02, ARG2, a / and)
(c / city, name, n / name)
(c2 / capacitate-01, ARG1, g / government-organization)
(d / director, mod, e2 / executive)
(e / enrich-01, ARG1, a / and)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / city)
(h / have-org-role-91, ARG1, c / city)
(h / have-org-role-91, ARG2, d / director)
(l / lead-03, ARG1, a / and)
(l / lead-03, ARG2, p / produce-01)
(m / material, mod, b / bomb)
(n / name, op, "Washington")
(n2 / name, op, "Daryl")
(n2 / name, op, "G.")
(n2 / name, op, "Kimball")
(p / produce-01, ARG1, m / material)
(p3 / possible, domain, l / lead-03)
(p4 / pursue-01, ARG0, g / government-organization)
(p4 / pursue-01, ARG1, t2 / technology)
(p4 / pursue-01, ARG2, a / and)
(p5 / person, name, n2 / name)
(s / state-01, ARG0, p5 / person)
(s / state-01, ARG1, a3 / address-02)
(t3 / think-01, ARG1, t / tank)

Decoded in 4,346,614 microseconds
Sentence: Kimball stated the Iranian government's design is to deflect criticism and pressure and to claim that progress is being made.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  claim => claim-01
Oracle Span 4:  criticism => criticize-01
Oracle Span 5:  deflect => deflect-01
Oracle Span 6:  design => design-01
Oracle Span 7:  government => (government-organization :ARG0-of govern-01)
Oracle Span 8:  Iranian => (country :name (name :op "Iran"))
Oracle Span 9:  Kimball => (person :name (name :op "Kimball"))
Oracle Span 10:  made => make-01
Oracle Span 11:  pressure => pressure-01
Oracle Span 12:  progress => progress-01
Oracle Span 13:  stated => state-01
NER Entity: (person :name (name :op "Kimball"))
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 12-13:  and => pressure-01
Span 10-11:  and => criticize-01
Span 9-10:  criticism => deflect-01
Span 4-5:  government's => (government-organization :ARG0-of govern-01)
Span 17-18:  is => progress-01
Span 6-7:  is => design-01
Span 0-1:  Kimball => (person :name (name :op "Kimball"))
Span 11-12:  pressure => and
Span 1-2:  stated => state-01
Span 15-16:  that => claim-01
Span 13-14:  to => and

Langrangian relaxation converged after 28 iterations. Delta = 0.0
Oracle Span 11-12:  and => and
Oracle Span 13-14:  and => and
Oracle Span 15-16:  claim => claim-01
Oracle Span 10-11:  criticism => criticize-01
Oracle Span 9-10:  deflect => deflect-01
Oracle Span 6-7:  design => design-01
Oracle Span 4-5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 3-4:  Iranian => (country :name (name :op "Iran"))
Oracle Span 0-1:  Kimball => (person :name (name :op "Kimball"))
Oracle Span 20-21:  made => make-01
Oracle Span 12-13:  pressure => pressure-01
Oracle Span 17-18:  progress => progress-01
Oracle Span 1-2:  stated => state-01

Dependencies:
1	Kimball	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	5	det	_	_
4	Iranian	_	JJ	JJ	_	5	amod	_	_
5	government	_	NN	NN	_	7	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	design	_	NN	NN	_	8	nsubj	_	_
8	is	_	VBZ	VBZ	_	2	ccomp	_	_
9	to	_	TO	TO	_	10	aux	_	_
10	deflect	_	VB	VB	_	8	ccomp	_	_
11	criticism	_	NN	NN	_	10	dobj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	pressure	_	NN	NN	_	11	conj	_	_
14	and	_	CC	CC	_	10	cc	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	claim	_	VB	VB	_	10	conj	_	_
17	that	_	IN	IN	_	21	mark	_	_
18	progress	_	NN	NN	_	21	nsubjpass	_	_
19	is	_	VBZ	VBZ	_	21	aux	_	_
20	being	_	VBG	VBG	_	21	auxpass	_	_
21	made	_	VBN	VBN	_	16	ccomp	_	_
22	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, c3 / claim-01)
(a / and, op, d2 / deflect-01)
(a2 / and, op, c2 / criticize-01)
(a2 / and, op, p2 / pressure-01)
(c / country, name, n2 / name)
(c3 / claim-01, ARG0, g / government-organization)
(c3 / claim-01, ARG1, m / make-01)
(d / design-01, ARG0, g / government-organization)
(d / design-01, ARG1, a / and)
(d2 / deflect-01, ARG0, g / government-organization)
(d2 / deflect-01, ARG1, a2 / and)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(m / make-01, ARG1, p3 / progress-01)
(n / name, op, "Kimball")
(n2 / name, op, "Iran")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, d / design-01)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(9,10,List(1),criticism,deflect-01,false), Span(17,18,List(2),is,progress-01,false), Span(11,12,List(3),pressure,and,false), Span(4,5,List(5, 4),government's,(government-organization :ARG0-of govern-01),false), Span(12,13,List(6),and,pressure-01,false), Span(13,14,List(7),to,and,false), Span(6,7,List(8),is,design-01,false), Span(10,11,List(9),and,criticize-01,false), Span(15,16,List(10),that,claim-01,false), Span(0,1,List(13, 12, 11),Kimball,(person :name (name :op "Kimball")),false)),Map(2 -> progress-01, 5 -> govern-01, 12 -> name, 8 -> design-01, 7 -> and, 1 -> deflect-01, 4 -> government-organization, 11 -> person, 6 -> pressure-01, 0 -> state-01, 9 -> criticize-01, 3 -> and, 10 -> claim-01, 13 -> "Kimball"),Map(n -> name, p2 -> pressure-01, s -> state-01, d -> deflect-01, g2 -> govern-01, p -> progress-01, g -> government-organization, a -> and, d2 -> design-01, a2 -> and, c -> criticize-01, p3 -> person, c2 -> claim-01))),[Ljava.lang.String;@7ce0da6f,Annotation([Ljava.lang.String;@7b7e5504,[Ljava.lang.String;@485285e5,[Ljava.lang.String;@60e419ef),Annotation([Ljava.lang.String;@1aad943e,[Ljava.lang.String;@13f2241a,[Ledu.cmu.lti.nlp.amr.Dependency;@4fd3f62c),Annotation([Ljava.lang.String;@f38b558,[Ljava.lang.String;@79c2cce5,[Ljava.lang.String;@7b92e533),Annotation([Ljava.lang.String;@2b200efb,[Ljava.lang.String;@61f8ecb2,[Ledu.cmu.lti.nlp.amr.Entity;@e32a18c))
AMR:
(a2 / and, op, c / criticize-01)
(a2 / and, op, c2 / claim-01)
(a2 / and, op, d / deflect-01)
(a2 / and, op, p2 / pressure-01)
(c2 / claim-01, ARG1, p / progress-01)
(d / deflect-01, ARG0, d2 / design-01)
(d / deflect-01, ARG1, a / and)
(d2 / design-01, ARG1, g / government-organization)
(g2 / govern-01, ARG0, g / government-organization)
(n / name, op, "Kimball")
(p3 / person, name, n / name)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, a2 / and)

Decoded in 704,917 microseconds
Sentence: Iranian officials stated a possible reduction in collaboration with inspectors in the event of more sanctions.

Oracle Span 1:  collaboration => collaborate-01
Oracle Span 2:  inspectors => (person :ARG0-of inspect-01)
Oracle Span 3:  Iranian => (country :name (name :op "Iran"))
Oracle Span 4:  more => more
Oracle Span 5:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 6:  possible => possible
Oracle Span 7:  reduction => reduce-01
Oracle Span 8:  sanctions => sanction-02
Oracle Span 9:  stated => state-01
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 7-8:  collaboration => collaborate-01
Span 12-13:  event => event
Span 9-10:  inspectors => (person :ARG0-of inspect-01)
Span 0-1:  Iranian => (country :name (name :op "Iran"))
Span 14-15:  more => more
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 4-5:  possible => possible
Span 5-6:  reduction => redirect-01
Span 15-16:  sanctions. => sanction-01
Span 2-3:  stated => state-01

Langrangian relaxation converged after 2 iterations. Delta = 0.0
Oracle Span 7-8:  collaboration => collaborate-01
Oracle Span 9-10:  inspectors => (person :ARG0-of inspect-01)
Oracle Span 0-1:  Iranian => (country :name (name :op "Iran"))
Oracle Span 14-15:  more => more
Oracle Span 1-2:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 4-5:  possible => possible
Oracle Span 5-6:  reduction => reduce-01
Oracle Span 15-16:  sanctions => sanction-02
Oracle Span 2-3:  stated => state-01

Dependencies:
1	Iranian	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	3	nsubj	_	_
3	stated	_	VBD	VBD	_	0	root	_	_
4	a	_	DT	DT	_	6	det	_	_
5	possible	_	JJ	JJ	_	6	amod	_	_
6	reduction	_	NN	NN	_	3	dobj	_	_
7	in	_	IN	IN	_	3	prep	_	_
8	collaboration	_	NN	NN	_	7	pobj	_	_
9	with	_	IN	IN	_	3	prep	_	_
10	inspectors	_	NNS	NNS	_	9	pobj	_	_
11	in	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	event	_	NN	NN	_	11	pobj	_	_
14	of	_	IN	IN	_	13	prep	_	_
15	more	_	JJR	JJR	_	16	amod	_	_
16	sanctions	_	NNS	NNS	_	14	pobj	_	_
17	.	_	.	.	_	3	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / collaborate-01, ARG0, o / official)
(c2 / collaborate-01, ARG1, p2 / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(i / inspect-01, ARG0, p2 / person)
(n / name, op, "Iran")
(r / reduce-01, condition, s2 / sanction-02)
(r / reduce-01, manner, c2 / collaborate-01)
(r / reduce-01, mod, p / possible)
(s / state-01, ARG1, r / reduce-01)
(s2 / sanction-02, mod, m / more)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),event,event,false), Span(1,2,List(3, 2, 1),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(15,16,List(4),sanctions.,sanction-01,false), Span(9,10,List(6, 5),inspectors,(person :ARG0-of inspect-01),false), Span(0,1,List(9, 8, 7),Iranian,(country :name (name :op "Iran")),false), Span(14,15,List(10),more,more,false), Span(4,5,List(11),possible,possible,false), Span(5,6,List(12),reduction,redirect-01,false), Span(7,8,List(13),collaboration,collaborate-01,false), Span(2,3,List(14),stated,state-01,false)),Map(2 -> have-org-role-91, 5 -> person, 12 -> redirect-01, 8 -> name, 7 -> country, 1 -> person, 4 -> sanction-01, 11 -> possible, 14 -> state-01, 6 -> inspect-01, 0 -> event, 9 -> "Iran", 3 -> official, 10 -> more, 13 -> collaborate-01),Map(e -> event, n -> name, h -> have-org-role-91, s2 -> state-01, p2 -> person, s -> sanction-01, m -> more, p -> person, i -> inspect-01, r -> redirect-01, c -> country, o -> official, p3 -> possible, c2 -> collaborate-01))),[Ljava.lang.String;@732188d2,Annotation([Ljava.lang.String;@69284b0f,[Ljava.lang.String;@53b79125,[Ljava.lang.String;@23a40862),Annotation([Ljava.lang.String;@5c3c73dc,[Ljava.lang.String;@77672b67,[Ledu.cmu.lti.nlp.amr.Dependency;@18b6b217),Annotation([Ljava.lang.String;@1b524e7b,[Ljava.lang.String;@24cf7c5e,[Ljava.lang.String;@6a3d57b3),Annotation([Ljava.lang.String;@47b666e9,[Ljava.lang.String;@4e1ed9f2,[Ledu.cmu.lti.nlp.amr.Entity;@116c61e3))
AMR:
(c / country, name, n / name)
(c2 / collaborate-01, ARG0, p / person)
(c2 / collaborate-01, ARG1, p2 / person)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(i / inspect-01, ARG0, p2 / person)
(i / inspect-01, ARG1, e / event)
(n / name, op, "Iran")
(r / redirect-01, ARG1, p3 / possible)
(s / sanction-01, ARG1, c2 / collaborate-01)
(s / sanction-01, quant, m / more)
(s2 / state-01, ARG0, p / person)
(s2 / state-01, ARG1, r / redirect-01)

Decoded in 324,799 microseconds
Sentence: The Security Council has voted unanimously to impose sanctions against Iran but the penalties have been limited from U.S. demands under Chinese and Russian pressure.

Oracle Span 1:  and => and
Oracle Span 2:  Chinese => (country :name (name :op "China"))
Oracle Span 3:  demands => demand-01
Oracle Span 4:  impose => impose-01
Oracle Span 5:  Iran => (country :name (name :op "Iran"))
Oracle Span 6:  limited => limit-01
Oracle Span 7:  penalties => penalize-01
Oracle Span 8:  pressure => pressure-01
Oracle Span 9:  Russian => (country :name (name :op "Russia"))
Oracle Span 10:  sanctions => sanction-02
Oracle Span 11:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 12:  U.S. => (country :name (name :op "U.S."))
Oracle Span 13:  unanimously => unanimous
Oracle Span 14:  voted => vote-01
NER Entity: (organization :name (name :op "Security" :op "Council"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "U.S."))
NER Entity: (thing :name (name :op "Chinese"))
NER Entity: (thing :name (name :op "Russian"))
Spans:
Span 22-23:  and => and
Span 11-12:  but => bunt-01
Span 21-22:  Chinese => (country :name (name :op "China"))
Span 19-20:  demands => demand-01
Span 7-8:  impose => impose-01
Span 10-11:  Iran => (country :name (name :op "Iran"))
Span 16-17:  limited => limit-01
Span 13-14:  penalties => peal-01
Span 24-25:  pressure. => pressure-01
Span 23-24:  Russian => (country :name (name :op "Russia"))
Span 8-9:  sanctions => sanction-01
Span 1-3:  Security Council => (organization :name (name :op "Council" :op "Security"))
Span 18-19:  U.S. => (country :name (name :op "U.S."))
Span 5-6:  unanimously => unanimous
Span 4-5:  voted => vote-01

Langrangian relaxation converged after 43 iterations. Delta = 0.0
Oracle Span 22-23:  and => and
Oracle Span 21-22:  Chinese => (country :name (name :op "China"))
Oracle Span 19-20:  demands => demand-01
Oracle Span 7-8:  impose => impose-01
Oracle Span 10-11:  Iran => (country :name (name :op "Iran"))
Oracle Span 16-17:  limited => limit-01
Oracle Span 13-14:  penalties => penalize-01
Oracle Span 24-25:  pressure => pressure-01
Oracle Span 23-24:  Russian => (country :name (name :op "Russia"))
Oracle Span 8-9:  sanctions => sanction-02
Oracle Span 1-3:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 18-19:  U.S. => (country :name (name :op "U.S."))
Oracle Span 5-6:  unanimously => unanimous
Oracle Span 4-5:  voted => vote-01

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	Security	_	NNP	NNP	_	3	nn	_	_
3	Council	_	NNP	NNP	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	voted	_	VBN	VBN	_	0	root	_	_
6	unanimously	_	RB	RB	_	5	advmod	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	impose	_	VB	VB	_	5	xcomp	_	_
9	sanctions	_	NNS	NNS	_	8	dobj	_	_
10	against	_	IN	IN	_	8	prep	_	_
11	Iran	_	NNP	NNP	_	10	pobj	_	_
12	but	_	CC	CC	_	5	cc	_	_
13	the	_	DT	DT	_	14	det	_	_
14	penalties	_	NNS	NNS	_	17	nsubjpass	_	_
15	have	_	VBP	VBP	_	17	aux	_	_
16	been	_	VBN	VBN	_	17	auxpass	_	_
17	limited	_	VBN	VBN	_	5	conj	_	_
18	from	_	IN	IN	_	17	prep	_	_
19	U.S.	_	NNP	NNP	_	20	nn	_	_
20	demands	_	NNS	NNS	_	18	pobj	_	_
21	under	_	IN	IN	_	17	prep	_	_
22	Chinese	_	JJ	JJ	_	25	amod	_	_
23	and	_	CC	CC	_	22	cc	_	_
24	Russian	_	JJ	JJ	_	22	conj	_	_
25	pressure	_	NN	NN	_	21	pobj	_	_
26	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, op, c4 / country)
(a / and, op, c5 / country)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / country, name, n5 / name)
(d / demand-01, ARG0, c2 / country)
(d / demand-01, ARG1, p / penalize-01)
(i / impose-01, ARG0, o / organization)
(i / impose-01, ARG1, s / sanction-02)
(i / impose-01, ARG2, c / country)
(l / limit-01, ARG1, p / penalize-01)
(n / name, op, "Council")
(n / name, op, "Security")
(n2 / name, op, "Iran")
(n3 / name, op, "U.S.")
(n4 / name, op, "China")
(n5 / name, op, "Russia")
(o / organization, name, n / name)
(p2 / pressure-01, ARG0, a / and)
(v / vote-01, ARG0, o / organization)
(v / vote-01, ARG1, i / impose-01)
(v / vote-01, concession, l / limit-01)
(v / vote-01, mod, u / unanimous)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),and,and,false), Span(13,14,List(1),penalties,peal-01,false), Span(1,3,List(5, 4, 3, 2),Security Council,(organization :name (name :op "Council" :op "Security")),false), Span(10,11,List(8, 7, 6),Iran,(country :name (name :op "Iran")),false), Span(24,25,List(9),pressure.,pressure-01,false), Span(21,22,List(12, 11, 10),Chinese,(country :name (name :op "China")),false), Span(23,24,List(15, 14, 13),Russian,(country :name (name :op "Russia")),false), Span(4,5,List(16),voted,vote-01,false), Span(19,20,List(17),demands,demand-01,false), Span(7,8,List(18),impose,impose-01,false), Span(5,6,List(19),unanimously,unanimous,false), Span(18,19,List(22, 21, 20),U.S.,(country :name (name :op "U.S.")),false), Span(8,9,List(23),sanctions,sanction-01,false), Span(16,17,List(24),limited,limit-01,false), Span(11,12,List(25),but,bunt-01,false)),Map(2 -> organization, 5 -> "Security", 12 -> "China", 8 -> "Iran", 15 -> "Russia", 21 -> name, 18 -> impose-01, 24 -> limit-01, 7 -> name, 1 -> peal-01, 17 -> demand-01, 23 -> sanction-01, 4 -> "Council", 11 -> name, 14 -> name, 20 -> country, 6 -> country, 9 -> pressure-01, 0 -> and, 22 -> "U.S.", 16 -> vote-01, 19 -> unanimous, 10 -> country, 3 -> name, 25 -> bunt-01, 13 -> country),Map(n -> name, b -> bunt-01, p2 -> pressure-01, c4 -> country, n4 -> name, s -> sanction-01, v -> vote-01, d -> demand-01, p -> peal-01, a -> and, n3 -> name, c3 -> country, i -> impose-01, c -> country, l -> limit-01, u -> unanimous, o -> organization, n2 -> name, c2 -> country, n5 -> name))),[Ljava.lang.String;@3f457106,Annotation([Ljava.lang.String;@36a66e71,[Ljava.lang.String;@6d40658a,[Ljava.lang.String;@4024e837),Annotation([Ljava.lang.String;@547d7c74,[Ljava.lang.String;@512d456c,[Ledu.cmu.lti.nlp.amr.Dependency;@3f2f06f6),Annotation([Ljava.lang.String;@58ad2474,[Ljava.lang.String;@678c6dc9,[Ljava.lang.String;@5c315271),Annotation([Ljava.lang.String;@1beef7b7,[Ljava.lang.String;@2a51ee3a,[Ledu.cmu.lti.nlp.amr.Entity;@2e373c9c))
AMR:
(a / and, op, p2 / pressure-01)
(b / bunt-01, ARG1, v / vote-01)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(c4 / country, name, n5 / name)
(d / demand-01, ARG0, c4 / country)
(d / demand-01, ARG1, a / and)
(d / demand-01, location, c2 / country)
(i / impose-01, ARG0, o / organization)
(i / impose-01, ARG1, s / sanction-01)
(l / limit-01, ARG0, o / organization)
(l / limit-01, ARG1, p / peal-01)
(n / name, op, "Council")
(n / name, op, "Security")
(n2 / name, op, "Iran")
(n3 / name, op, "China")
(n4 / name, op, "Russia")
(n5 / name, op, "U.S.")
(o / organization, name, n / name)
(p / peal-01, ARG1, c4 / country)
(p2 / pressure-01, ARG1, c3 / country)
(s / sanction-01, ARG1, c / country)
(v / vote-01, ARG0, o / organization)
(v / vote-01, ARG1, u / unanimous)

Decoded in 1,766,466 microseconds
Sentence: SOLTANIEH stated in an interview with state-controlled Iranian television that the report and the measures taken make the intervention of any other international organization including the Security Council irrelevant and unjustified.

Oracle Span 1:  and => and
Oracle Span 2:  any => any
Oracle Span 3:  controlled => control-01
Oracle Span 4:  international => international
Oracle Span 5:  intervention => intervene-01
Oracle Span 6:  interview => interview-01
Oracle Span 7:  Iranian => (country :name (name :op "Iran"))
Oracle Span 8:  make => make-02
Oracle Span 9:  measures => measure
Oracle Span 10:  of => include-01
Oracle Span 11:  organization => organization
Oracle Span 12:  other => other
Oracle Span 13:  report => report
Oracle Span 14:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 15:  SOLTANIEH => (person :name (name :op "Soltanieh"))
Oracle Span 16:  state => state
Oracle Span 17:  stated => state-01
Oracle Span 18:  taken => take-01
Oracle Span 19:  television => television
Oracle Span 20:  unjustified => (justify-01 :polarity -)
Spans:
Span 29-30:  and => and
Span 12-13:  and => and
Span 20-21:  any => any
Span 27-28:  Council => "Council"
Span 24-25:  including => include-01
Span 22-23:  international => international
Span 18-19:  intervention => intervene-01
Span 4-5:  interview => interview-01
Span 7-8:  Iranian => (country :name (name :op "Iran"))
Span 16-17:  make => make-02
Span 14-15:  measures => measure
Span 23-24:  organization => organization
Span 21-22:  other => other
Span 11-12:  report => report
Span 0-1:  SOLTANIEH => (person :name (name :op "SOLTANIEH"))
Span 1-2:  stated => state-01
Span 15-16:  taken => take-01
Span 8-9:  television => television

Langrangian relaxation converged after 60 iterations. Delta = 0.0
Oracle Span 14-15:  and => and
Oracle Span 22-23:  any => any
Oracle Span 8-9:  controlled => control-01
Oracle Span 24-25:  international => international
Oracle Span 20-21:  intervention => intervene-01
Oracle Span 4-5:  interview => interview-01
Oracle Span 9-10:  Iranian => (country :name (name :op "Iran"))
Oracle Span 18-19:  make => make-02
Oracle Span 16-17:  measures => measure
Oracle Span 21-22:  of => include-01
Oracle Span 25-26:  organization => organization
Oracle Span 23-24:  other => other
Oracle Span 13-14:  report => report
Oracle Span 28-30:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 0-1:  SOLTANIEH => (person :name (name :op "Soltanieh"))
Oracle Span 6-7:  state => state
Oracle Span 1-2:  stated => state-01
Oracle Span 17-18:  taken => take-01
Oracle Span 10-11:  television => television
Oracle Span 32-33:  unjustified => (justify-01 :polarity -)

Dependencies:
1	SOLTANIEH	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	in	_	IN	IN	_	2	prep	_	_
4	an	_	DT	DT	_	5	det	_	_
5	interview	_	NN	NN	_	3	pobj	_	_
6	with	_	IN	IN	_	5	prep	_	_
7	state-controlled	_	JJ	JJ	_	9	amod	_	_
8	Iranian	_	JJ	JJ	_	9	amod	_	_
9	television	_	NN	NN	_	6	pobj	_	_
10	that	_	IN	IN	_	17	mark	_	_
11	the	_	DT	DT	_	12	det	_	_
12	report	_	NN	NN	_	17	nsubj	_	_
13	and	_	CC	CC	_	12	cc	_	_
14	the	_	DT	DT	_	15	det	_	_
15	measures	_	NNS	NNS	_	12	conj	_	_
16	taken	_	VBN	VBN	_	15	vmod	_	_
17	make	_	VBP	VBP	_	2	ccomp	_	_
18	the	_	DT	DT	_	19	det	_	_
19	intervention	_	NN	NN	_	17	dobj	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	any	_	DT	DT	_	24	det	_	_
22	other	_	JJ	JJ	_	24	amod	_	_
23	international	_	JJ	JJ	_	24	amod	_	_
24	organization	_	NN	NN	_	20	pobj	_	_
25	including	_	VBG	VBG	_	24	prep	_	_
26	the	_	DT	DT	_	28	det	_	_
27	Security	_	NNP	NNP	_	28	nn	_	_
28	Council	_	NNP	NNP	_	25	pobj	_	_
29	irrelevant	_	JJ	JJ	_	28	amod	_	_
30	and	_	CC	CC	_	29	cc	_	_
31	unjustified	_	JJ	JJ	_	29	conj	_	_
32	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, m2 / measure)
(a / and, op, r / report)
(c / country, name, n3 / name)
(c2 / control-01, ARG0, s2 / state)
(c2 / control-01, ARG1, t2 / television)
(i / intervene-01, ARG0, o / organization)
(i3 / include-01, ARG1, o2 / organization)
(i3 / include-01, ARG2, o / organization)
(i4 / interview-01, ARG0, t2 / television)
(j / justify-01, ARG1, i / intervene-01)
(j / justify-01, polarity, -)
(m / make-02, ARG0, a / and)
(m / make-02, ARG1, i / intervene-01)
(n / name, op, "Soltanieh")
(n2 / name, op, "Council")
(n2 / name, op, "Security")
(n3 / name, op, "Iran")
(o / organization, mod, a2 / any)
(o / organization, mod, i2 / international)
(o / organization, mod, o3 / other)
(o2 / organization, name, n2 / name)
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, m / make-02)
(s / state-01, medium, i4 / interview-01)
(t / take-01, ARG1, m2 / measure)
(t2 / television, mod, c / country)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),make,make-02,false), Span(20,21,List(1),any,any,false), Span(14,15,List(2),measures,measure,false), Span(11,12,List(3),report,report,false), Span(18,19,List(4),intervention,intervene-01,false), Span(22,23,List(5),international,international,false), Span(7,8,List(8, 7, 6),Iranian,(country :name (name :op "Iran")),false), Span(1,2,List(9),stated,state-01,false), Span(4,5,List(10),interview,interview-01,false), Span(15,16,List(11),taken,take-01,false), Span(8,9,List(12),television,television,false), Span(29,30,List(13),and,and,false), Span(27,28,List(14),Council,"Council",false), Span(24,25,List(15),including,include-01,false), Span(0,1,List(18, 17, 16),SOLTANIEH,(person :name (name :op "SOLTANIEH")),false), Span(12,13,List(19),and,and,false), Span(21,22,List(20),other,other,false), Span(23,24,List(21),organization,organization,false)),Map(2 -> measure, 5 -> international, 12 -> television, 15 -> include-01, 8 -> "Iran", 21 -> organization, 18 -> "SOLTANIEH", 7 -> name, 17 -> name, 1 -> any, 4 -> intervene-01, 11 -> take-01, 14 -> "Council", 20 -> other, 6 -> country, 0 -> make-02, 9 -> state-01, 16 -> person, 19 -> and, 3 -> report, 10 -> interview-01, 13 -> and),Map(n -> name, i4 -> include-01, t -> take-01, m2 -> measure, a3 -> and, s -> state-01, m -> make-02, C -> "Council", i3 -> interview-01, p -> person, a -> any, o2 -> organization, i2 -> international, t2 -> television, r -> report, i -> intervene-01, a2 -> and, c -> country, o -> other, n2 -> name))),[Ljava.lang.String;@8f70a34,Annotation([Ljava.lang.String;@4272c583,[Ljava.lang.String;@8ede4a4,[Ljava.lang.String;@5eace4f7),Annotation([Ljava.lang.String;@6e3af3bc,[Ljava.lang.String;@3ab06d25,[Ledu.cmu.lti.nlp.amr.Dependency;@5d9f6613),Annotation([Ljava.lang.String;@64adaa0b,[Ljava.lang.String;@5d331231,[Ljava.lang.String;@645385f7),Annotation([Ljava.lang.String;@42dac890,[Ljava.lang.String;@4b2edf32,[Ledu.cmu.lti.nlp.amr.Entity;@e49fefc))
AMR:
(a2 / and, mod, C / "Council")
(c / country, name, n / name)
(i / intervene-01, ARG0, m2 / measure)
(i / intervene-01, ARG1, a / any)
(i / intervene-01, ARG6, o / other)
(i2 / international, calendar, o / other)
(i4 / include-01, ARG1, a3 / and)
(m / make-02, ARG1, a3 / and)
(m2 / measure, op, m / make-02)
(n / name, op, "Iran")
(n2 / name, op, "SOLTANIEH")
(p / person, name, n2 / name)
(p / person, poss, o2 / organization)
(r / report, op, i / intervene-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, i / intervene-01)
(s / state-01, ARG2, t2 / television)
(s / state-01, location, a2 / and)
(s / state-01, medium, i3 / interview-01)
(t / take-01, ARG1, m2 / measure)
(t2 / television, location, c / country)

Decoded in 2,370,814 microseconds
Sentence: 2007-09-30

Oracle Span 1:  2007-09-30 => (date-entity :day 30 :month 9 :year 2007)
mkDayMonthYear(2007-09-30,30,09,2007)
Spans:
Span 0-1:  2007-09-30 => (date-entity :year 2007 :month 9 :day 30)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2007-09-30 => (date-entity :day 30 :month 9 :year 2007)

Dependencies:
1	2007-09-30	_	NNP	NNP	_	0	root	_	_

Oracle:
(d / date-entity, day, 30)
(d / date-entity, month, 9)
(d / date-entity, year, 2007)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2007-09-30,(date-entity :year 2007 :month 9 :day 30),false)),Map(2 -> 9, 1 -> 2007, 0 -> date-entity, 3 -> 30),Map(2 -> 2007, d -> date-entity, 9 -> 9, 3 -> 30))),[Ljava.lang.String;@43f00c56,Annotation([Ljava.lang.String;@5183a690,[Ljava.lang.String;@21a8f987,[Ljava.lang.String;@17c63231),Annotation([Ljava.lang.String;@54970e23,[Ljava.lang.String;@186c9507,[Ledu.cmu.lti.nlp.amr.Dependency;@7eee334c),Annotation([Ljava.lang.String;@581fc11a,[Ljava.lang.String;@34153a2c,[Ljava.lang.String;@48ad4504),Annotation([Ljava.lang.String;@47567b0e,[Ljava.lang.String;@61e775ef,[Ledu.cmu.lti.nlp.amr.Entity;@7c3ef7a5))
AMR:
(d / date-entity, day, 3 / 30)
(d / date-entity, month, 9 / 9)
(d / date-entity, year, 2 / 2007)

Decoded in 22,976 microseconds
Sentence: Israel (IL)

Oracle Span 1:  Israel => (country :name (name :op "Israel"))
NER Entity: (country :name (name :op "Israel"))
Spans:
Span 0-1:  Israel => (country :name (name :op "Israel"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Israel => (country :name (name :op "Israel"))

Dependencies:
1	Israel	_	NNP	NNP	_	0	root	_	_
2	(	_	(	(	_	3	punct	_	_
3	IL	_	NNP	NNP	_	1	appos	_	_
4	)	_	)	)	_	3	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Israel")

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Israel,(country :name (name :op "Israel")),false)),Map(2 -> "Israel", 1 -> name, 0 -> country),Map(n -> name, c -> country))),[Ljava.lang.String;@6202a26f,Annotation([Ljava.lang.String;@34500bbb,[Ljava.lang.String;@3b0427b9,[Ljava.lang.String;@f8185f0),Annotation([Ljava.lang.String;@78e74fb5,[Ljava.lang.String;@4c5e9ec1,[Ledu.cmu.lti.nlp.amr.Dependency;@567d511c),Annotation([Ljava.lang.String;@55d0e026,[Ljava.lang.String;@170887ce,[Ljava.lang.String;@2f98ab78),Annotation([Ljava.lang.String;@1351fa26,[Ljava.lang.String;@41d2e9ba,[Ledu.cmu.lti.nlp.amr.Entity;@123730b9))
AMR:
(c / country, name, n / name)
(n / name, op, "Israel")

Decoded in 41,646 microseconds
Sentence: proliferation; technology; international; politics

Oracle Span 1:  ; => and
Oracle Span 2:  international => international
Oracle Span 3:  politics => politics
Oracle Span 4:  proliferation => proliferate-01
Oracle Span 5:  technology => technology
Spans:
Span 4-5:   => international
Span 6-7:   => politics
Span 2-3:  international; => technology
Span 3-4:  politics => and
Span 0-1:  proliferation; => proliferate-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 4-5:  international => international
Oracle Span 6-7:  politics => politics
Oracle Span 0-1:  proliferation => proliferate-01
Oracle Span 2-3:  technology => technology

Dependencies:
1	proliferation	_	NN	NN	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	technology	_	NN	NN	_	1	dep	_	_
4	;	_	:	:	_	3	punct	_	_
5	international	_	JJ	JJ	_	3	dep	_	_
6	;	_	:	:	_	5	punct	_	_
7	politics	_	NNS	NNS	_	5	dep	_	_

Oracle:
(a / and, op, i / international)
(a / and, op, p / proliferate-01)
(a / and, op, p2 / politics)
(a / and, op, t / technology)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),proliferation;,proliferate-01,false), Span(4,5,List(1),,international,false), Span(3,4,List(2),politics,and,false), Span(2,3,List(3),international;,technology,false), Span(6,7,List(4),,politics,false)),Map(2 -> and, 1 -> international, 4 -> politics, 0 -> proliferate-01, 3 -> technology),Map(t -> technology, p2 -> politics, p -> proliferate-01, a -> and, i -> international))),[Ljava.lang.String;@63e7531,Annotation([Ljava.lang.String;@6b24b60d,[Ljava.lang.String;@5e9545af,[Ljava.lang.String;@64361e5b),Annotation([Ljava.lang.String;@11d47811,[Ljava.lang.String;@5f8e30f8,[Ledu.cmu.lti.nlp.amr.Dependency;@2bc2ae9b),Annotation([Ljava.lang.String;@7fd2a97e,[Ljava.lang.String;@4d745265,[Ljava.lang.String;@63d3a2c3),Annotation([Ljava.lang.String;@5d5b7e54,[Ljava.lang.String;@37a8a5d8,[Ledu.cmu.lti.nlp.amr.Entity;@58a02e32))
AMR:
(a / and, op, i / international)
(a / and, op, p2 / politics)
(a / and, op, t / technology)
(p / proliferate-01, ARG1, a / and)

Decoded in 73,581 microseconds
Sentence: Documents outlining the Israeli proposal to allow the international transfer of nuclear technology to States that have not signed on to nonproliferation rules were distributed to the Nuclear Suppliers Group.

Oracle Span 1:  allow => allow-01
Oracle Span 2:  distributed => distribute-01
Oracle Span 3:  Documents => document
Oracle Span 4:  international => international
Oracle Span 5:  Israeli => (country :name (name :op "Israel"))
Oracle Span 6:  nuclear => nucleus
Oracle Span 7:  Nuclear Suppliers Group => (organization :name (name :op "Group" :op "Suppliers" :op "Nuclear"))
Oracle Span 8:  outlining => outline-01
Oracle Span 9:  proposal => propose-01
Oracle Span 10:  rules => rule
Oracle Span 11:  signed => sign-04
Oracle Span 12:  States => state
Oracle Span 13:  technology => technology
Oracle Span 14:  transfer => transfer-01
NER Entity: (organization :name (name :op "Nuclear" :op "Suppliers" :op "Group"))
NER Entity: (thing :name (name :op "Israeli"))
NER Entity: (country :name (name :op "States"))
Spans:
Span 6-7:  allow => allow-01
Span 24-25:  distributed => distribute-01
Span 29-30:  Group. => group
Span 8-9:  international => international
Span 21-22:  nonproliferation => nonproliferation
Span 27-28:  Nuclear => nucleus
Span 1-2:  outlining => outline-01
Span 4-5:  proposal => propose-01
Span 22-23:  rules => rule
Span 18-19:  signed => sign-02
Span 28-29:  Suppliers => (thing :ARG0-of supply-01)
Span 12-13:  technology => technology
Span 9-10:  transfer => transfer-01

Langrangian relaxation converged after 123 iterations. Delta = 0.0
Oracle Span 6-7:  allow => allow-01
Oracle Span 24-25:  distributed => distribute-01
Oracle Span 0-1:  Documents => document
Oracle Span 8-9:  international => international
Oracle Span 3-4:  Israeli => (country :name (name :op "Israel"))
Oracle Span 11-12:  nuclear => nucleus
Oracle Span 27-30:  Nuclear Suppliers Group => (organization :name (name :op "Group" :op "Suppliers" :op "Nuclear"))
Oracle Span 1-2:  outlining => outline-01
Oracle Span 4-5:  proposal => propose-01
Oracle Span 22-23:  rules => rule
Oracle Span 18-19:  signed => sign-04
Oracle Span 14-15:  States => state
Oracle Span 12-13:  technology => technology
Oracle Span 9-10:  transfer => transfer-01

Dependencies:
1	Documents	_	NNS	NNS	_	25	nsubjpass	_	_
2	outlining	_	VBG	VBG	_	1	vmod	_	_
3	the	_	DT	DT	_	5	det	_	_
4	Israeli	_	JJ	JJ	_	5	amod	_	_
5	proposal	_	NN	NN	_	2	dobj	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	allow	_	VB	VB	_	2	vmod	_	_
8	the	_	DT	DT	_	10	det	_	_
9	international	_	JJ	JJ	_	10	amod	_	_
10	transfer	_	NN	NN	_	7	dobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	nuclear	_	JJ	JJ	_	13	amod	_	_
13	technology	_	NN	NN	_	11	pobj	_	_
14	to	_	TO	TO	_	7	prep	_	_
15	States	_	NNPS	NNPS	_	14	pobj	_	_
16	that	_	WDT	WDT	_	19	nsubj	_	_
17	have	_	VBP	VBP	_	19	aux	_	_
18	not	_	RB	RB	_	19	neg	_	_
19	signed	_	VBN	VBN	_	15	rcmod	_	_
20	on	_	IN	IN	_	19	prep	_	_
21	to	_	TO	TO	_	20	pcomp	_	_
22	nonproliferation	_	NN	NN	_	23	nn	_	_
23	rules	_	NNS	NNS	_	21	pobj	_	_
24	were	_	VBD	VBD	_	25	auxpass	_	_
25	distributed	_	VBN	VBN	_	0	root	_	_
26	to	_	TO	TO	_	25	prep	_	_
27	the	_	DT	DT	_	30	det	_	_
28	Nuclear	_	NNP	NNP	_	30	nn	_	_
29	Suppliers	_	NNP	NNP	_	30	nn	_	_
30	Group	_	NNP	NNP	_	26	pobj	_	_
31	.	_	.	.	_	25	punct	_	_

Oracle:
(a / allow-01, ARG1, t / transfer-01)
(c / country, name, n2 / name)
(d / distribute-01, ARG1, d2 / document)
(d / distribute-01, ARG2, o / organization)
(n / name, op, "Group")
(n / name, op, "Nuclear")
(n / name, op, "Suppliers")
(n2 / name, op, "Israel")
(o / organization, name, n / name)
(o2 / outline-01, ARG0, d2 / document)
(o2 / outline-01, ARG1, p / propose-01)
(p / propose-01, ARG0, c / country)
(p / propose-01, ARG1, a / allow-01)
(s2 / sign-04, ARG0, s / state)
(s2 / sign-04, ARG1, r / rule)
(t / transfer-01, ARG1, t2 / technology)
(t / transfer-01, ARG2, s / state)
(t / transfer-01, mod, i / international)
(t2 / technology, mod, n3 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),proposal,propose-01,false), Span(24,25,List(1),distributed,distribute-01,false), Span(18,19,List(2),signed,sign-02,false), Span(9,10,List(3),transfer,transfer-01,false), Span(1,2,List(4),outlining,outline-01,false), Span(6,7,List(5),allow,allow-01,false), Span(27,28,List(6),Nuclear,nucleus,false), Span(29,30,List(7),Group.,group,false), Span(28,29,List(9, 8),Suppliers,(thing :ARG0-of supply-01),false), Span(8,9,List(10),international,international,false), Span(12,13,List(11),technology,technology,false), Span(22,23,List(12),rules,rule,false), Span(21,22,List(13),nonproliferation,nonproliferation,false)),Map(2 -> sign-02, 5 -> allow-01, 12 -> rule, 8 -> thing, 7 -> group, 1 -> distribute-01, 4 -> outline-01, 11 -> technology, 6 -> nucleus, 0 -> propose-01, 9 -> supply-01, 3 -> transfer-01, 10 -> international, 13 -> nonproliferation),Map(n -> nucleus, s2 -> supply-01, t -> transfer-01, s -> sign-02, d -> distribute-01, t3 -> technology, p -> propose-01, g -> group, a -> allow-01, t2 -> thing, i -> international, r -> rule, o -> outline-01, n2 -> nonproliferation))),[Ljava.lang.String;@5defdba5,Annotation([Ljava.lang.String;@102246bc,[Ljava.lang.String;@65fe321e,[Ljava.lang.String;@7d91e4e7),Annotation([Ljava.lang.String;@5e802a03,[Ljava.lang.String;@5c1590c9,[Ledu.cmu.lti.nlp.amr.Dependency;@486f2797),Annotation([Ljava.lang.String;@3a2b54a1,[Ljava.lang.String;@65a4b1d5,[Ljava.lang.String;@1547f670),Annotation([Ljava.lang.String;@24a538d0,[Ljava.lang.String;@444bfeb9,[Ledu.cmu.lti.nlp.amr.Entity;@421d5fc))
AMR:
(a / allow-01, ARG1, t / transfer-01)
(d / distribute-01, ARG1, g / group)
(g / group, mod, t2 / thing)
(n / nucleus, location, r / rule)
(o / outline-01, ARG1, p / propose-01)
(p / propose-01, ARG1, a / allow-01)
(r / rule, mod, n2 / nonproliferation)
(s / sign-02, ARG1, t / transfer-01)
(s / sign-02, ARG2, r / rule)
(s2 / supply-01, ARG0, t2 / thing)
(s2 / supply-01, ARG1, n / nucleus)
(t / transfer-01, ARG1, t3 / technology)
(t / transfer-01, mod, i / international)

Decoded in 2,326,788 microseconds
Sentence: The proposal may complicate the Bush administration's efforts to win an exemption for India to engage in nuclear trade.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  Bush => (person :name (name :op "Bush"))
Oracle Span 3:  complicate => complicate-01
Oracle Span 4:  efforts => effort
Oracle Span 5:  engage => engage-01
Oracle Span 6:  exemption => exempt-01
Oracle Span 7:  India => (country :name (name :op "India"))
Oracle Span 8:  may => possible
Oracle Span 9:  nuclear => nucleus
Oracle Span 10:  proposal => (thing :ARG1-of propose-01)
Oracle Span 11:  trade => trade-01
Oracle Span 12:  win => win-01
NER Entity: (person :name (name :op "Bush"))
NER Entity: (country :name (name :op "India"))
Spans:
Span 19-20:   => trade-01
Span 10-11:  an => win-01
Span 5-6:  Bush => (person :name (name :op "Bush"))
Span 3-4:  complicate => complicate-01
Span 12-13:  for => exempt-01
Span 16-17:  in => engage-01
Span 1-2:  proposal => (thing :ARG1-of propose-01)
Span 14-15:  to => (country :name (name :op "India"))
Span 8-9:  to => effort

Langrangian relaxation converged after 37 iterations. Delta = 0.0
Oracle Span 6-7:  administration => administrate-01
Oracle Span 5-6:  Bush => (person :name (name :op "Bush"))
Oracle Span 3-4:  complicate => complicate-01
Oracle Span 8-9:  efforts => effort
Oracle Span 16-17:  engage => engage-01
Oracle Span 12-13:  exemption => exempt-01
Oracle Span 14-15:  India => (country :name (name :op "India"))
Oracle Span 2-3:  may => possible
Oracle Span 18-19:  nuclear => nucleus
Oracle Span 1-2:  proposal => (thing :ARG1-of propose-01)
Oracle Span 19-20:  trade => trade-01
Oracle Span 10-11:  win => win-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	proposal	_	NN	NN	_	4	nsubj	_	_
3	may	_	MD	MD	_	4	aux	_	_
4	complicate	_	VB	VB	_	0	root	_	_
5	the	_	DT	DT	_	7	det	_	_
6	Bush	_	NNP	NNP	_	7	nn	_	_
7	administration	_	NN	NN	_	9	poss	_	_
8	's	_	POS	POS	_	7	possessive	_	_
9	efforts	_	NNS	NNS	_	4	dobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	win	_	VB	VB	_	9	vmod	_	_
12	an	_	DT	DT	_	13	det	_	_
13	exemption	_	NN	NN	_	11	dobj	_	_
14	for	_	IN	IN	_	13	prep	_	_
15	India	_	NNP	NNP	_	14	pobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	engage	_	VB	VB	_	11	vmod	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	nuclear	_	JJ	JJ	_	20	amod	_	_
20	trade	_	NN	NN	_	18	pobj	_	_
21	.	_	.	.	_	4	punct	_	_

Oracle:
(c / complicate-01, ARG0, t / thing)
(c / complicate-01, ARG1, e / effort)
(c2 / country, name, n2 / name)
(e / effort, purpose, w / win-01)
(e2 / exempt-01, ARG1, c2 / country)
(e2 / exempt-01, purpose, e3 / engage-01)
(e3 / engage-01, ARG1, c2 / country)
(e3 / engage-01, ARG2, t2 / trade-01)
(n / name, op, "Bush")
(n2 / name, op, "India")
(p / possible, domain, c / complicate-01)
(p2 / propose-01, ARG1, t / thing)
(p3 / person, name, n / name)
(t2 / trade-01, mod, n3 / nucleus)
(w / win-01, ARG1, e2 / exempt-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(2, 1, 0),Bush,(person :name (name :op "Bush")),false), Span(12,13,List(3),for,exempt-01,false), Span(14,15,List(6, 5, 4),to,(country :name (name :op "India")),false), Span(19,20,List(7),,trade-01,false), Span(3,4,List(8),complicate,complicate-01,false), Span(10,11,List(9),an,win-01,false), Span(8,9,List(10),to,effort,false), Span(16,17,List(11),in,engage-01,false), Span(1,2,List(13, 12),proposal,(thing :ARG1-of propose-01),false)),Map(2 -> "Bush", 5 -> name, 12 -> thing, 8 -> complicate-01, 7 -> trade-01, 1 -> name, 4 -> country, 11 -> engage-01, 6 -> "India", 0 -> person, 9 -> win-01, 3 -> exempt-01, 10 -> effort, 13 -> propose-01),Map(w -> win-01, e -> exempt-01, n -> name, t -> trade-01, p2 -> propose-01, e2 -> effort, p -> person, t2 -> thing, c -> country, e3 -> engage-01, c2 -> complicate-01, n2 -> name))),[Ljava.lang.String;@16916c30,Annotation([Ljava.lang.String;@382a58df,[Ljava.lang.String;@4cefd47f,[Ljava.lang.String;@18200ac),Annotation([Ljava.lang.String;@1c6f1c40,[Ljava.lang.String;@766953b2,[Ledu.cmu.lti.nlp.amr.Dependency;@44972d2c),Annotation([Ljava.lang.String;@5501c272,[Ljava.lang.String;@31e8598e,[Ljava.lang.String;@da068c2),Annotation([Ljava.lang.String;@70a3ca17,[Ljava.lang.String;@2bea8423,[Ledu.cmu.lti.nlp.amr.Entity;@58bd8cf9))
AMR:
(c / country, name, n2 / name)
(c2 / complicate-01, ARG0, t2 / thing)
(c2 / complicate-01, ARG1, e2 / effort)
(e / exempt-01, ARG1, e3 / engage-01)
(e2 / effort, purpose, w / win-01)
(e3 / engage-01, ARG0, c / country)
(e3 / engage-01, ARG2, t / trade-01)
(n / name, op, "Bush")
(n2 / name, op, "India")
(p / person, name, n / name)
(p2 / propose-01, ARG1, t2 / thing)
(w / win-01, ARG0, p / person)
(w / win-01, ARG1, e / exempt-01)

Decoded in 738,680 microseconds
Sentence: Israeli officials convinced a key group of nations engaged in nuclear trade to adopt new guidelines allowing the international transfer of nuclear technology to States that have not signed on to nonproliferation rules.

Oracle Span 1:  adopt => adopt-01
Oracle Span 2:  allowing => allow-01
Oracle Span 3:  convinced => convince-01
Oracle Span 4:  engaged => engage-01
Oracle Span 5:  group => group
Oracle Span 6:  guidelines => guideline
Oracle Span 7:  have => (person :ARG0-of have-org-role-91)
Oracle Span 8:  international => international
Oracle Span 9:  Israeli => (country :name (name :op "Israel"))
Oracle Span 10:  key => key
Oracle Span 11:  nations => nation
Oracle Span 12:  new => new
Oracle Span 13:  nuclear => nucleus
Oracle Span 14:  officials => official
Oracle Span 15:  rules => rule
Oracle Span 16:  signed => sign-04
Oracle Span 17:  States => state
Oracle Span 18:  technology => technology
Oracle Span 19:  trade => trade-01
Oracle Span 20:  transfer => transfer-01
NER Entity: (thing :name (name :op "Israeli"))
NER Entity: (country :name (name :op "States"))
Spans:
Span 13-14:  adopt => adopt-01
Span 16-17:  allowing => allow-01
Span 2-3:  convinced => convince-01
Span 8-9:  engaged => engage-01
Span 5-6:  group => group
Span 15-16:  guidelines => guideline
Span 18-19:  international => international
Span 0-1:  Israeli => (country :name (name :op "Israel"))
Span 4-5:  key => key
Span 7-8:  nations => nation
Span 14-15:  new => new
Span 31-32:  nonproliferation => nonproliferation
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 32-33:  rules. => rule
Span 28-29:  signed => sign-02
Span 22-23:  technology => technology
Span 11-12:  trade => trade-01
Span 19-20:  transfer => transfer-01

Langrangian relaxation converged after 64 iterations. Delta = 0.0
Oracle Span 13-14:  adopt => adopt-01
Oracle Span 16-17:  allowing => allow-01
Oracle Span 2-3:  convinced => convince-01
Oracle Span 8-9:  engaged => engage-01
Oracle Span 5-6:  group => group
Oracle Span 15-16:  guidelines => guideline
Oracle Span 26-27:  have => (person :ARG0-of have-org-role-91)
Oracle Span 18-19:  international => international
Oracle Span 0-1:  Israeli => (country :name (name :op "Israel"))
Oracle Span 4-5:  key => key
Oracle Span 7-8:  nations => nation
Oracle Span 14-15:  new => new
Oracle Span 10-11:  nuclear => nucleus
Oracle Span 1-2:  officials => official
Oracle Span 32-33:  rules => rule
Oracle Span 28-29:  signed => sign-04
Oracle Span 24-25:  States => state
Oracle Span 22-23:  technology => technology
Oracle Span 11-12:  trade => trade-01
Oracle Span 19-20:  transfer => transfer-01

Dependencies:
1	Israeli	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	3	nsubj	_	_
3	convinced	_	VBD	VBD	_	0	root	_	_
4	a	_	DT	DT	_	6	det	_	_
5	key	_	JJ	JJ	_	6	amod	_	_
6	group	_	NN	NN	_	3	dobj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	nations	_	NNS	NNS	_	7	pobj	_	_
9	engaged	_	VBN	VBN	_	8	vmod	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	nuclear	_	JJ	JJ	_	12	amod	_	_
12	trade	_	NN	NN	_	10	pobj	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	adopt	_	VB	VB	_	9	xcomp	_	_
15	new	_	JJ	JJ	_	16	amod	_	_
16	guidelines	_	NNS	NNS	_	14	dobj	_	_
17	allowing	_	VBG	VBG	_	16	vmod	_	_
18	the	_	DT	DT	_	20	det	_	_
19	international	_	JJ	JJ	_	20	amod	_	_
20	transfer	_	NN	NN	_	17	dobj	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	nuclear	_	JJ	JJ	_	23	amod	_	_
23	technology	_	NN	NN	_	21	pobj	_	_
24	to	_	TO	TO	_	17	prep	_	_
25	States	_	NNPS	NNPS	_	24	pobj	_	_
26	that	_	WDT	WDT	_	29	nsubj	_	_
27	have	_	VBP	VBP	_	29	aux	_	_
28	not	_	RB	RB	_	29	neg	_	_
29	signed	_	VBN	VBN	_	25	rcmod	_	_
30	on	_	IN	IN	_	29	prep	_	_
31	to	_	TO	TO	_	30	pcomp	_	_
32	nonproliferation	_	NN	NN	_	33	nn	_	_
33	rules	_	NNS	NNS	_	31	pobj	_	_
34	.	_	.	.	_	3	punct	_	_

Oracle:
(a / adopt-01, ARG0, g / group)
(a / adopt-01, ARG1, g2 / guideline)
(a2 / allow-01, ARG0, g2 / guideline)
(a2 / allow-01, ARG1, t2 / transfer-01)
(c / convince-01, ARG0, p2 / person)
(c / convince-01, ARG1, g / group)
(c / convince-01, ARG2, a / adopt-01)
(c2 / country, name, n / name)
(e / engage-01, ARG1, n2 / nation)
(e / engage-01, ARG2, t / trade-01)
(g / group, mod, k / key)
(g2 / guideline, mod, n4 / new)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Israel")
(n2 / nation, consist, g / group)
(s2 / sign-04, ARG0, s / state)
(s2 / sign-04, ARG1, r / rule)
(t / trade-01, mod, n3 / nucleus)
(t2 / transfer-01, ARG1, t3 / technology)
(t2 / transfer-01, ARG2, s / state)
(t2 / transfer-01, mod, i / international)
(t3 / technology, mod, n3 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),technology,technology,false), Span(1,2,List(3, 2, 1),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(0,1,List(6, 5, 4),Israeli,(country :name (name :op "Israel")),false), Span(28,29,List(7),signed,sign-02,false), Span(5,6,List(8),group,group,false), Span(11,12,List(9),trade,trade-01,false), Span(16,17,List(10),allowing,allow-01,false), Span(14,15,List(11),new,new,false), Span(19,20,List(12),transfer,transfer-01,false), Span(4,5,List(13),key,key,false), Span(32,33,List(14),rules.,rule,false), Span(15,16,List(15),guidelines,guideline,false), Span(7,8,List(16),nations,nation,false), Span(2,3,List(17),convinced,convince-01,false), Span(18,19,List(18),international,international,false), Span(31,32,List(19),nonproliferation,nonproliferation,false), Span(13,14,List(20),adopt,adopt-01,false), Span(8,9,List(21),engaged,engage-01,false)),Map(2 -> have-org-role-91, 5 -> name, 12 -> transfer-01, 15 -> guideline, 8 -> group, 21 -> engage-01, 18 -> international, 7 -> sign-02, 17 -> convince-01, 1 -> person, 4 -> country, 11 -> new, 14 -> rule, 20 -> adopt-01, 6 -> "Israel", 0 -> technology, 9 -> trade-01, 16 -> nation, 19 -> nonproliferation, 3 -> official, 10 -> allow-01, 13 -> key),Map(e -> engage-01, n -> name, h -> have-org-role-91, t -> technology, k -> key, n4 -> nonproliferation, s -> sign-02, g2 -> guideline, t3 -> transfer-01, p -> person, g -> group, n3 -> nation, a -> allow-01, t2 -> trade-01, a2 -> adopt-01, i -> international, r -> rule, c -> country, o -> official, c2 -> convince-01, n2 -> new))),[Ljava.lang.String;@29c9cb67,Annotation([Ljava.lang.String;@1c11e73d,[Ljava.lang.String;@6e31a408,[Ljava.lang.String;@5c099e5f),Annotation([Ljava.lang.String;@3b7cf44a,[Ljava.lang.String;@2847c417,[Ledu.cmu.lti.nlp.amr.Dependency;@4b3524f3),Annotation([Ljava.lang.String;@5bdea0ac,[Ljava.lang.String;@75cc139,[Ljava.lang.String;@11adcab9),Annotation([Ljava.lang.String;@73dd66c3,[Ljava.lang.String;@5d2873d4,[Ledu.cmu.lti.nlp.amr.Entity;@3c1c2441))
AMR:
(a / allow-01, ARG0, g2 / guideline)
(a / allow-01, ARG1, t3 / transfer-01)
(a2 / adopt-01, ARG1, g2 / guideline)
(c / country, name, n / name)
(c2 / convince-01, ARG0, p / person)
(c2 / convince-01, ARG1, g / group)
(e / engage-01, ARG0, g / group)
(e / engage-01, ARG1, a2 / adopt-01)
(e / engage-01, ARG6, n3 / nation)
(g / group, mod, k / key)
(g2 / guideline, mod, n2 / new)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Israel")
(r / rule, mod, n4 / nonproliferation)
(s / sign-02, ARG1, t3 / transfer-01)
(s / sign-02, ARG2, r / rule)
(t2 / trade-01, ARG1, a2 / adopt-01)
(t3 / transfer-01, ARG1, t / technology)
(t3 / transfer-01, mod, i / international)

Decoded in 2,573,355 microseconds
Sentence: Countries including India, Israel and Pakistan that have not signed the nuclear Non-Proliferation Treaty are prohibited from participating in international nuclear trade which includes purchasing reactors, uranium fuel or yellowcake.

Oracle Span 1:  and => and
Oracle Span 2:  Countries => country
Oracle Span 3:  fuel => fuel
Oracle Span 4:  includes => include-01
Oracle Span 5:  including => include-01
Oracle Span 6:  India => (country :name (name :op "India"))
Oracle Span 7:  international => international
Oracle Span 8:  Israel => (country :name (name :op "Israel"))
Oracle Span 9:  nuclear => nucleus
Oracle Span 10:  nuclear Non - Proliferation Treaty => (treaty :name (name :op "Treaty" :op "Non-Proliferation" :op "Nuclear"))
Oracle Span 11:  or => or
Oracle Span 12:  Pakistan => (country :name (name :op "Pakistan"))
Oracle Span 13:  participating => participate-01
Oracle Span 14:  prohibited => prohibit-01
Oracle Span 15:  purchasing => purchase-01
Oracle Span 16:  reactors => reactor
Oracle Span 17:  signed => sign-01
Oracle Span 18:  trade => trade-01
Oracle Span 19:  uranium => uranium
Oracle Span 20:  yellowcake => yellowcake
NER Entity: (country :name (name :op "India"))
NER Entity: (country :name (name :op "Israel"))
NER Entity: (country :name (name :op "Pakistan"))
NER Entity: (country :name (name :op "Countries"))
Spans:
Span 30-31:   => or
Span 4-5:  and => (country :name (name :op "Israel"))
Span 0-1:  Countries => country
Span 16-17:  from => prohibit-01
Span 27-28:  fuel => and
Span 18-19:  in => participate-01
Span 1-2:  including => include-01
Span 2-3:  India, => (country :name (name :op "India"))
Span 12-15:  Non-Proliferation Treaty are => (treaty :name (name :op "Treaty" :op "Nuclear" :op "Non-Proliferation"))
Span 20-21:  nuclear => international
Span 28-29:  or => uranium
Span 5-6:  Pakistan => and
Span 24-25:  purchasing => include-01
Span 25-26:  reactors, => purchase-01
Span 6-7:  that => (country :name (name :op "Pakistan"))
Span 10-11:  the => sign-02
Span 21-22:  trade => nucleus
Span 26-27:  uranium => reactor
Span 22-23:  which => trade-01
Span 29-30:  yellowcake. => fuel

Langrangian relaxation converged after 28 iterations. Delta = 0.0
Oracle Span 5-6:  and => and
Oracle Span 0-1:  Countries => country
Oracle Span 31-32:  fuel => fuel
Oracle Span 26-27:  includes => include-01
Oracle Span 1-2:  including => include-01
Oracle Span 2-3:  India => (country :name (name :op "India"))
Oracle Span 22-23:  international => international
Oracle Span 4-5:  Israel => (country :name (name :op "Israel"))
Oracle Span 23-24:  nuclear => nucleus
Oracle Span 12-17:  nuclear Non - Proliferation Treaty => (treaty :name (name :op "Treaty" :op "Non-Proliferation" :op "Nuclear"))
Oracle Span 32-33:  or => or
Oracle Span 6-7:  Pakistan => (country :name (name :op "Pakistan"))
Oracle Span 20-21:  participating => participate-01
Oracle Span 18-19:  prohibited => prohibit-01
Oracle Span 27-28:  purchasing => purchase-01
Oracle Span 28-29:  reactors => reactor
Oracle Span 10-11:  signed => sign-01
Oracle Span 24-25:  trade => trade-01
Oracle Span 30-31:  uranium => uranium
Oracle Span 33-34:  yellowcake => yellowcake

Dependencies:
1	Countries	_	NNPS	NNPS	_	17	nsubjpass	_	_
2	including	_	VBG	VBG	_	1	prep	_	_
3	India	_	NNP	NNP	_	2	pobj	_	_
4	,	_	,	,	_	3	punct	_	_
5	Israel	_	NNP	NNP	_	3	conj	_	_
6	and	_	CC	CC	_	3	cc	_	_
7	Pakistan	_	NNP	NNP	_	3	conj	_	_
8	that	_	WDT	WDT	_	11	nsubj	_	_
9	have	_	VBP	VBP	_	11	aux	_	_
10	not	_	RB	RB	_	11	neg	_	_
11	signed	_	VBN	VBN	_	3	rcmod	_	_
12	the	_	DT	DT	_	15	det	_	_
13	nuclear	_	JJ	JJ	_	15	amod	_	_
14	Non-Proliferation	_	NNP	NNP	_	15	nn	_	_
15	Treaty	_	NNP	NNP	_	11	dobj	_	_
16	are	_	VBP	VBP	_	17	auxpass	_	_
17	prohibited	_	VBN	VBN	_	0	root	_	_
18	from	_	IN	IN	_	17	prep	_	_
19	participating	_	VBG	VBG	_	18	pcomp	_	_
20	in	_	IN	IN	_	19	prep	_	_
21	international	_	JJ	JJ	_	23	amod	_	_
22	nuclear	_	JJ	JJ	_	23	amod	_	_
23	trade	_	NN	NN	_	20	pobj	_	_
24	which	_	WDT	WDT	_	25	nsubj	_	_
25	includes	_	VBZ	VBZ	_	23	rcmod	_	_
26	purchasing	_	VBG	VBG	_	27	amod	_	_
27	reactors	_	NNS	NNS	_	25	dobj	_	_
28	,	_	,	,	_	27	punct	_	_
29	uranium	_	NN	NN	_	30	nn	_	_
30	fuel	_	NN	NN	_	27	appos	_	_
31	or	_	CC	CC	_	30	cc	_	_
32	yellowcake	_	NN	NN	_	30	conj	_	_
33	.	_	.	.	_	17	punct	_	_

Oracle:
(a / and, op, c2 / country)
(a / and, op, c3 / country)
(a / and, op, c4 / country)
(c2 / country, name, n / name)
(c3 / country, name, n2 / name)
(c4 / country, name, n3 / name)
(f / fuel, mod, u / uranium)
(i / include-01, ARG1, a / and)
(i / include-01, ARG2, c / country)
(i3 / include-01, ARG1, p3 / purchase-01)
(i3 / include-01, ARG2, t2 / trade-01)
(n / name, op, "India")
(n2 / name, op, "Israel")
(n3 / name, op, "Pakistan")
(n4 / name, op, "Non-Proliferation")
(n4 / name, op, "Nuclear")
(n4 / name, op, "Treaty")
(o / or, op, f / fuel)
(o / or, op, r / reactor)
(o / or, op, y / yellowcake)
(p / prohibit-01, ARG1, c / country)
(p / prohibit-01, ARG2, p2 / participate-01)
(p2 / participate-01, ARG0, c / country)
(p2 / participate-01, ARG1, t2 / trade-01)
(p3 / purchase-01, ARG1, o / or)
(s / sign-01, ARG0, c / country)
(s / sign-01, ARG1, t / treaty)
(t / treaty, name, n4 / name)
(t2 / trade-01, mod, i2 / international)
(t2 / trade-01, mod, n5 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(2, 1, 0),India,,(country :name (name :op "India")),false), Span(1,2,List(3),including,include-01,false), Span(28,29,List(4),or,uranium,false), Span(20,21,List(5),nuclear,international,false), Span(27,28,List(6),fuel,and,false), Span(6,7,List(9, 8, 7),that,(country :name (name :op "Pakistan")),false), Span(18,19,List(10),in,participate-01,false), Span(12,15,List(15, 14, 13, 12, 11),Non-Proliferation Treaty are,(treaty :name (name :op "Treaty" :op "Nuclear" :op "Non-Proliferation")),false), Span(21,22,List(16),trade,nucleus,false), Span(5,6,List(17),Pakistan,and,false), Span(22,23,List(18),which,trade-01,false), Span(30,31,List(19),,or,false), Span(26,27,List(20),uranium,reactor,false), Span(0,1,List(21),Countries,country,false), Span(25,26,List(22),reactors,,purchase-01,false), Span(29,30,List(23),yellowcake.,fuel,false), Span(16,17,List(24),from,prohibit-01,false), Span(24,25,List(25),purchasing,include-01,false), Span(10,11,List(26),the,sign-02,false), Span(4,5,List(29, 28, 27),and,(country :name (name :op "Israel")),false)),Map(2 -> "India", 5 -> international, 27 -> country, 12 -> name, 8 -> name, 15 -> "Non-Proliferation", 21 -> country, 18 -> trade-01, 24 -> prohibit-01, 7 -> country, 1 -> name, 17 -> and, 23 -> fuel, 26 -> sign-02, 4 -> uranium, 11 -> treaty, 14 -> "Nuclear", 29 -> "Israel", 20 -> reactor, 28 -> name, 6 -> and, 9 -> "Pakistan", 0 -> country, 22 -> purchase-01, 16 -> nucleus, 19 -> or, 10 -> participate-01, 3 -> include-01, 25 -> include-01, 13 -> "Treaty"),Map(n -> name, t -> treaty, p2 -> purchase-01, c4 -> country, n4 -> nucleus, s -> sign-02, i3 -> include-01, p -> participate-01, c3 -> country, a -> and, n3 -> name, t2 -> trade-01, i2 -> international, r -> reactor, i -> include-01, a2 -> and, c -> country, u -> uranium, f -> fuel, o -> or, p3 -> prohibit-01, c2 -> country, n2 -> name, n5 -> name))),[Ljava.lang.String;@69be7c34,Annotation([Ljava.lang.String;@661ef4cb,[Ljava.lang.String;@4c95ce00,[Ljava.lang.String;@61aacf29),Annotation([Ljava.lang.String;@7b6f50f4,[Ljava.lang.String;@6ac64bfe,[Ledu.cmu.lti.nlp.amr.Dependency;@8c16d68),Annotation([Ljava.lang.String;@3fa528de,[Ljava.lang.String;@3e4c372e,[Ljava.lang.String;@668d12a2),Annotation([Ljava.lang.String;@65a49936,[Ljava.lang.String;@7351be84,[Ledu.cmu.lti.nlp.amr.Entity;@2cfb1287))
AMR:
(a2 / and, op, c / country)
(a2 / and, op, c4 / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c4 / country, name, n5 / name)
(f / fuel, calendar, u / uranium)
(i / include-01, ARG0, t / treaty)
(i / include-01, ARG1, a2 / and)
(i / include-01, ARG2, c3 / country)
(i2 / international, time, n4 / nucleus)
(i3 / include-01, ARG1, a / and)
(i3 / include-01, ARG6, p2 / purchase-01)
(n / name, op, "India")
(n2 / name, op, "Pakistan")
(n3 / name, op, "Non-Proliferation")
(n3 / name, op, "Nuclear")
(n3 / name, op, "Treaty")
(n5 / name, op, "Israel")
(p / participate-01, ARG1, i / include-01)
(p / participate-01, ARG2, i2 / international)
(p2 / purchase-01, ARG0, c4 / country)
(p2 / purchase-01, ARG1, u / uranium)
(p2 / purchase-01, ARG6, r / reactor)
(p3 / prohibit-01, ARG0, c / country)
(p3 / prohibit-01, ARG1, o / or)
(s / sign-02, ARG1, p3 / prohibit-01)
(s / sign-02, ARG2, c2 / country)
(t / treaty, name, n3 / name)
(t2 / trade-01, ARG1, i3 / include-01)

Decoded in 1,845,548 microseconds
Sentence: Documents outlining the Israeli proposal were distributed to the 45-member Nuclear Suppliers Group (NSG) in March 2007.

Oracle Span 1:  45 => 45
Oracle Span 2:  distributed => distribute-01
Oracle Span 3:  Documents => document
Oracle Span 4:  Israeli => (country :name (name :op "Israel"))
Oracle Span 5:  March 2007 => (date-entity :month 3 :year 2007)
Oracle Span 6:  member => (have-org-role-91 :ARG2 member)
Oracle Span 7:  Nuclear Suppliers Group => (organization :name (name :op "Group" :op "Suppliers" :op "Nuclear"))
Oracle Span 8:  outlining => outline-01
Oracle Span 9:  proposal => propose-01
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 6-7:  distributed => distribute-01
Span 0-18:  Documents outlining the Israeli proposal were distributed to the 45-member Nuclear Suppliers Group (NSG) in March 2007. => (date-entity :year 2007 :month 3)
Span 12-13:  Group => (thing :ARG2-of group-01)
Span 10-11:  Nuclear => nucleus
Span 1-2:  outlining => outline-01
Span 4-5:  proposal => propose-01
Span 11-12:  Suppliers => (thing :ARG0-of supply-01)

Langrangian relaxation converged after 68 iterations. Delta = 0.0
Oracle Span 9-10:  45 => 45
Oracle Span 6-7:  distributed => distribute-01
Oracle Span 0-1:  Documents => document
Oracle Span 3-4:  Israeli => (country :name (name :op "Israel"))
Oracle Span 19-21:  March 2007 => (date-entity :month 3 :year 2007)
Oracle Span 11-12:  member => (have-org-role-91 :ARG2 member)
Oracle Span 12-15:  Nuclear Suppliers Group => (organization :name (name :op "Group" :op "Suppliers" :op "Nuclear"))
Oracle Span 1-2:  outlining => outline-01
Oracle Span 4-5:  proposal => propose-01

Dependencies:
1	Documents	_	NNS	NNS	_	7	nsubjpass	_	_
2	outlining	_	VBG	VBG	_	1	vmod	_	_
3	the	_	DT	DT	_	5	det	_	_
4	Israeli	_	JJ	JJ	_	5	amod	_	_
5	proposal	_	NN	NN	_	2	dobj	_	_
6	were	_	VBD	VBD	_	7	auxpass	_	_
7	distributed	_	VBN	VBN	_	0	root	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	the	_	DT	DT	_	13	det	_	_
10	45-member	_	JJ	JJ	_	13	amod	_	_
11	Nuclear	_	NNP	NNP	_	13	nn	_	_
12	Suppliers	_	NNP	NNP	_	13	nn	_	_
13	Group	_	NNP	NNP	_	8	pobj	_	_
14	(	_	(	(	_	15	punct	_	_
15	NSG	_	NNP	NNP	_	13	appos	_	_
16	)	_	)	)	_	15	punct	_	_
17	in	_	IN	IN	_	7	prep	_	_
18	March	_	NNP	NNP	_	17	pobj	_	_
19	2007	_	CD	CD	_	18	num	_	_
20	.	_	.	.	_	7	punct	_	_

Oracle:
(c / country, name, n / name)
(d / distribute-01, ARG1, d2 / document)
(d / distribute-01, time, d3 / date-entity)
(d3 / date-entity, month, 3)
(d3 / date-entity, year, 2007)
(h / have-org-role-91, ARG1, o2 / organization)
(h / have-org-role-91, ARG2, m / member)
(n / name, op, "Israel")
(n2 / name, op, "Group")
(n2 / name, op, "Nuclear")
(n2 / name, op, "Suppliers")
(o / outline-01, ARG0, d2 / document)
(o / outline-01, ARG1, p / propose-01)
(o2 / organization, name, n2 / name)
(p / propose-01, ARG0, c / country)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(1, 0),Suppliers,(thing :ARG0-of supply-01),false), Span(10,11,List(2),Nuclear,nucleus,false), Span(1,2,List(3),outlining,outline-01,false), Span(4,5,List(4),proposal,propose-01,false), Span(6,7,List(5),distributed,distribute-01,false), Span(0,18,List(8, 7, 6),Documents outlining the Israeli proposal were distributed to the 45-member Nuclear Suppliers Group (NSG) in March 2007.,(date-entity :year 2007 :month 3),false), Span(12,13,List(10, 9),Group,(thing :ARG2-of group-01),false)),Map(2 -> nucleus, 5 -> distribute-01, 8 -> 3, 7 -> 2007, 1 -> supply-01, 4 -> propose-01, 6 -> date-entity, 9 -> thing, 0 -> thing, 10 -> group-01, 3 -> outline-01),Map(n -> nucleus, 2 -> 2007, t -> thing, s -> supply-01, d -> distribute-01, g -> group-01, p -> propose-01, d2 -> date-entity, t2 -> thing, o -> outline-01, 3 -> 3))),[Ljava.lang.String;@531a9842,Annotation([Ljava.lang.String;@1647576b,[Ljava.lang.String;@501d655e,[Ljava.lang.String;@2d067a8a),Annotation([Ljava.lang.String;@2ad93fe0,[Ljava.lang.String;@689d9df,[Ledu.cmu.lti.nlp.amr.Dependency;@3d857bc5),Annotation([Ljava.lang.String;@23c984d5,[Ljava.lang.String;@408c8973,[Ljava.lang.String;@883f79c),Annotation([Ljava.lang.String;@1eceee1a,[Ljava.lang.String;@71ce3e3a,[Ledu.cmu.lti.nlp.amr.Entity;@55ade661))
AMR:
(d / distribute-01, ARG1, o / outline-01)
(d2 / date-entity, month, 3 / 3)
(d2 / date-entity, year, 2 / 2007)
(g / group-01, ARG1, d2 / date-entity)
(g / group-01, ARG2, t2 / thing)
(o / outline-01, ARG1, p / propose-01)
(p / propose-01, ARG1, d2 / date-entity)
(s / supply-01, ARG0, t / thing)
(s / supply-01, ARG1, t2 / thing)
(t / thing, mod, n / nucleus)

Decoded in 1,042,210 microseconds
Sentence: The Israeli presentation was made in a nonpaper that allows for official deniability.

Oracle Span 1:  allows => allow-01
Oracle Span 2:  Israeli => (country :name (name :op "Israel"))
Oracle Span 3:  made => make-01
Oracle Span 4:  official => official
Oracle Span 5:  presentation => presentation
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 9-10:  allows => allow-01
Span 1-2:  Israeli => (country :name (name :op "Israel"))
Span 4-5:  made => make-01
Span 7-8:  nonpaper => sandpaper-01
Span 11-12:  official => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 2-3:  presentation => present-01

Langrangian relaxation converged after 17 iterations. Delta = 0.0
Oracle Span 9-10:  allows => allow-01
Oracle Span 1-2:  Israeli => (country :name (name :op "Israel"))
Oracle Span 4-5:  made => make-01
Oracle Span 11-12:  official => official
Oracle Span 2-3:  presentation => presentation

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	Israeli	_	JJ	JJ	_	3	amod	_	_
3	presentation	_	NN	NN	_	5	nsubjpass	_	_
4	was	_	VBD	VBD	_	5	auxpass	_	_
5	made	_	VBN	VBN	_	0	root	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	a	_	DT	DT	_	8	det	_	_
8	nonpaper	_	NN	NN	_	6	pobj	_	_
9	that	_	WDT	WDT	_	10	nsubj	_	_
10	allows	_	VBZ	VBZ	_	8	rcmod	_	_
11	for	_	IN	IN	_	10	prep	_	_
12	official	_	JJ	JJ	_	13	amod	_	_
13	deniability	_	NN	NN	_	11	pobj	_	_
14	.	_	.	.	_	5	punct	_	_

Oracle:
(c / country, name, n / name)
(m / make-01, ARG1, p / presentation)
(n / name, op, "Israel")
(p / presentation, mod, c / country)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),allows,allow-01,false), Span(11,12,List(3, 2, 1),official,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(2,3,List(4),presentation,present-01,false), Span(4,5,List(5),made,make-01,false), Span(1,2,List(8, 7, 6),Israeli,(country :name (name :op "Israel")),false), Span(7,8,List(9),nonpaper,sandpaper-01,false)),Map(2 -> have-org-role-91, 5 -> make-01, 8 -> "Israel", 7 -> name, 1 -> person, 4 -> present-01, 6 -> country, 9 -> sandpaper-01, 0 -> allow-01, 3 -> official),Map(n -> name, h -> have-org-role-91, p2 -> present-01, s -> sandpaper-01, m -> make-01, p -> person, a -> allow-01, c -> country, o -> official))),[Ljava.lang.String;@30bf82e5,Annotation([Ljava.lang.String;@2567d6ab,[Ljava.lang.String;@77c6a60d,[Ljava.lang.String;@23413e46),Annotation([Ljava.lang.String;@6fa53861,[Ljava.lang.String;@74ec69b0,[Ledu.cmu.lti.nlp.amr.Dependency;@36584fee),Annotation([Ljava.lang.String;@1cc1e46d,[Ljava.lang.String;@5ae1a1a4,[Ljava.lang.String;@4dd7f2a1),Annotation([Ljava.lang.String;@3984e3ca,[Ljava.lang.String;@2af58a1b,[Ledu.cmu.lti.nlp.amr.Entity;@7dcef260))
AMR:
(a / allow-01, ARG1, s / sandpaper-01)
(c / country, name, n / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(m / make-01, ARG1, p2 / present-01)
(m / make-01, ARG2, s / sandpaper-01)
(n / name, op, "Israel")
(p2 / present-01, ARG1, c / country)

Decoded in 275,737 microseconds
Sentence: According to a letter from the Chairman of the NSG on 17 March 2007 the Israeli presentation was offered in the context of the NSG's debate over Indian officials' bid for an exemption.

Oracle Span 1:  17 March 2007 => (date-entity :day 17 :month 3 :year 2007)
Oracle Span 2:  bid => bid-01
Oracle Span 3:  Chairman => (have-org-role-91 :ARG2 chairman)
Oracle Span 4:  context => context
Oracle Span 5:  debate => debate-01
Oracle Span 6:  exemption => exempt-01
Oracle Span 7:  Indian => (country :name (name :op "India"))
Oracle Span 8:  Israeli => (country :name (name :op "Israel"))
Oracle Span 9:  letter => letter
Oracle Span 10:  NSG => (organization :name (name :op "NSG"))
Oracle Span 11:  offered => offer-01
Oracle Span 12:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 13:  presentation => presentation
NER Entity: (organization :name (name :op "NSG"))
NER Entity: (thing :name (name :op "Israeli"))
NER Entity: (thing :name (name :op "Indian"))
mkDayMonthYear(17	March	2007,17,March,2007)
Spans:
Span 34-35:   => exempt-01
Span 0-1:  According => accord-01
Span 0-12:  According to a letter from the Chairman of the NSG on 17 => (date-entity :year 2007 :month 3 :day 17)
Span 31-32:  an => bid-01
Span 29-30:  bid => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 6-7:  Chairman => (chairman :ARG2-of have-org-role-91)
Span 3-4:  letter => letter
Span 18-19:  offered => offer-01
Span 28-29:  officials' => (country :name (name :op "India"))
Span 26-27:  over => debate-01
Span 16-17:  presentation => present-01
Span 14-15:  the => (country :name (name :op "North"))

Langrangian relaxation converged after 26 iterations. Delta = 0.0
Oracle Span 11-14:  17 March 2007 => (date-entity :day 17 :month 3 :year 2007)
Oracle Span 31-32:  bid => bid-01
Oracle Span 6-7:  Chairman => (have-org-role-91 :ARG2 chairman)
Oracle Span 21-22:  context => context
Oracle Span 26-27:  debate => debate-01
Oracle Span 34-35:  exemption => exempt-01
Oracle Span 28-29:  Indian => (country :name (name :op "India"))
Oracle Span 15-16:  Israeli => (country :name (name :op "Israel"))
Oracle Span 3-4:  letter => letter
Oracle Span 9-10:  NSG => (organization :name (name :op "NSG"))
Oracle Span 18-19:  offered => offer-01
Oracle Span 29-30:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 16-17:  presentation => presentation

Dependencies:
1	According	_	VBG	VBG	_	19	prep	_	_
2	to	_	TO	TO	_	1	pcomp	_	_
3	a	_	DT	DT	_	4	det	_	_
4	letter	_	NN	NN	_	2	pobj	_	_
5	from	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	Chairman	_	NNP	NNP	_	5	pobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	NSG	_	NNP	NNP	_	8	pobj	_	_
11	on	_	IN	IN	_	10	prep	_	_
12	17	_	CD	CD	_	11	pobj	_	_
13	March	_	NNP	NNP	_	10	tmod	_	_
14	2007	_	CD	CD	_	13	num	_	_
15	the	_	DT	DT	_	17	det	_	_
16	Israeli	_	JJ	JJ	_	17	amod	_	_
17	presentation	_	NN	NN	_	19	nsubjpass	_	_
18	was	_	VBD	VBD	_	19	auxpass	_	_
19	offered	_	VBN	VBN	_	0	root	_	_
20	in	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	22	det	_	_
22	context	_	NN	NN	_	20	pobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	NSG	_	NNP	NNP	_	27	poss	_	_
26	's	_	POS	POS	_	25	possessive	_	_
27	debate	_	NN	NN	_	23	pobj	_	_
28	over	_	IN	IN	_	19	prep	_	_
29	Indian	_	JJ	JJ	_	30	amod	_	_
30	officials	_	NNS	NNS	_	32	poss	_	_
31	'	_	POS	POS	_	30	possessive	_	_
32	bid	_	NN	NN	_	28	pobj	_	_
33	for	_	IN	IN	_	32	prep	_	_
34	an	_	DT	DT	_	35	det	_	_
35	exemption	_	NN	NN	_	33	pobj	_	_
36	.	_	.	.	_	19	punct	_	_

Oracle:
(b / bid-01, ARG1, e / exempt-01)
(c2 / country, name, n2 / name)
(c3 / context, poss, d / debate-01)
(c4 / country, name, n3 / name)
(d / debate-01, ARG0, o / organization)
(d / debate-01, ARG1, b / bid-01)
(d2 / date-entity, day, 17)
(d2 / date-entity, month, 3)
(d2 / date-entity, year, 2007)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, c / chairman)
(h2 / have-org-role-91, ARG1, c4 / country)
(h2 / have-org-role-91, ARG2, o4 / official)
(n / name, op, "NSG")
(n2 / name, op, "Israel")
(n3 / name, op, "India")
(o / organization, name, n / name)
(o2 / offer-01, ARG1, p / presentation)
(o2 / offer-01, time, c3 / context)
(o2 / offer-01, time, d2 / date-entity)
(p / presentation, mod, c2 / country)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),offered,offer-01,false), Span(6,7,List(2, 1),Chairman,(chairman :ARG2-of have-org-role-91),false), Span(31,32,List(3),an,bid-01,false), Span(14,15,List(6, 5, 4),the,(country :name (name :op "North")),false), Span(28,29,List(9, 8, 7),officials',(country :name (name :op "India")),false), Span(0,12,List(13, 12, 11, 10),According to a letter from the Chairman of the NSG on 17,(date-entity :year 2007 :month 3 :day 17),false), Span(29,30,List(16, 15, 14),bid,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(34,35,List(17),,exempt-01,false), Span(0,1,List(18),According,accord-01,false), Span(26,27,List(19),over,debate-01,false), Span(3,4,List(20),letter,letter,false), Span(16,17,List(21),presentation,present-01,false)),Map(2 -> have-org-role-91, 5 -> name, 12 -> 3, 15 -> have-org-role-91, 8 -> name, 21 -> present-01, 18 -> accord-01, 7 -> country, 17 -> exempt-01, 1 -> chairman, 4 -> country, 11 -> 2007, 14 -> person, 20 -> letter, 6 -> "North", 0 -> offer-01, 9 -> "India", 16 -> official, 19 -> debate-01, 3 -> bid-01, 10 -> date-entity, 13 -> 17),Map(e -> exempt-01, n -> name, h -> have-org-role-91, 2 -> 2007, h2 -> have-org-role-91, b -> bid-01, p2 -> present-01, d -> date-entity, 1 -> 17, p -> person, a -> accord-01, c3 -> country, d2 -> debate-01, o2 -> official, c -> chairman, l -> letter, o -> offer-01, 3 -> 3, c2 -> country, n2 -> name))),[Ljava.lang.String;@37cea017,Annotation([Ljava.lang.String;@369add88,[Ljava.lang.String;@57b0ff2b,[Ljava.lang.String;@72ffebe9),Annotation([Ljava.lang.String;@30f333b9,[Ljava.lang.String;@5065ceb2,[Ledu.cmu.lti.nlp.amr.Dependency;@7c2a32),Annotation([Ljava.lang.String;@d512977,[Ljava.lang.String;@2416ad9f,[Ljava.lang.String;@5a78f7f1),Annotation([Ljava.lang.String;@3bb47b36,[Ljava.lang.String;@3faaf7a6,[Ledu.cmu.lti.nlp.amr.Entity;@2ec1df99))
AMR:
(a / accord-01, ARG1, d / date-entity)
(a / accord-01, ARG2, l / letter)
(b / bid-01, ARG0, p / person)
(b / bid-01, ARG1, e / exempt-01)
(c2 / country, name, n / name)
(c3 / country, name, n2 / name)
(d / date-entity, day, 1 / 17)
(d / date-entity, month, 3 / 3)
(d / date-entity, year, 2 / 2007)
(d2 / debate-01, ARG1, p / person)
(e / exempt-01, ARG1, c2 / country)
(h / have-org-role-91, ARG1, c3 / country)
(h / have-org-role-91, ARG2, c / chairman)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG1, c3 / country)
(h2 / have-org-role-91, ARG2, o2 / official)
(n / name, op, "North")
(n2 / name, op, "India")
(o / offer-01, ARG0, p / person)
(o / offer-01, ARG1, p2 / present-01)
(p2 / present-01, ARG1, d / date-entity)

Decoded in 1,650,177 microseconds
Sentence: Among the nations that have not signed the Treaty only India and Israel would qualify for admission to the NSG under the Israeli proposal.

Oracle Span 1:  admission => admit-02
Oracle Span 2:  and => and
Oracle Span 3:  India => (country :name (name :op "India"))
Oracle Span 4:  Israel => (country :name (name :op "Israel"))
Oracle Span 5:  nations => nation
Oracle Span 6:  NSG => (organization :name (name :op "NSG"))
Oracle Span 7:  only => only
Oracle Span 8:  proposal => propose-01
Oracle Span 9:  qualify => qualify-02
Oracle Span 10:  signed => sign-01
Oracle Span 11:  Treaty => treaty
NER Entity: (country :name (name :op "India"))
NER Entity: (country :name (name :op "Israel"))
NER Entity: (organization :name (name :op "NSG"))
NER Entity: (country :name (name :op "Treaty"))
Spans:
Span 16-17:  admission => administer-01
Span 0-1:  Among => moon-01
Span 11-12:  and => and
Span 10-11:  India => (country :name (name :op "India"))
Span 12-13:  Israel => (country :name (name :op "Israel"))
Span 2-3:  nations => nation
Span 9-10:  only => only
Span 23-24:  proposal. => propose-01
Span 14-15:  qualify => qualify-02
Span 6-7:  signed => sign-02
Span 8-9:  Treaty => treaty

Langrangian relaxation converged after 29 iterations. Delta = 0.0
Oracle Span 16-17:  admission => admit-02
Oracle Span 11-12:  and => and
Oracle Span 10-11:  India => (country :name (name :op "India"))
Oracle Span 12-13:  Israel => (country :name (name :op "Israel"))
Oracle Span 2-3:  nations => nation
Oracle Span 19-20:  NSG => (organization :name (name :op "NSG"))
Oracle Span 9-10:  only => only
Oracle Span 23-24:  proposal => propose-01
Oracle Span 14-15:  qualify => qualify-02
Oracle Span 6-7:  signed => sign-01
Oracle Span 8-9:  Treaty => treaty

Dependencies:
1	Among	_	IN	IN	_	15	prep	_	_
2	the	_	DT	DT	_	3	det	_	_
3	nations	_	NNS	NNS	_	1	pobj	_	_
4	that	_	WDT	WDT	_	7	nsubj	_	_
5	have	_	VBP	VBP	_	7	aux	_	_
6	not	_	RB	RB	_	7	neg	_	_
7	signed	_	VBN	VBN	_	3	rcmod	_	_
8	the	_	DT	DT	_	9	det	_	_
9	Treaty	_	NNP	NNP	_	7	dobj	_	_
10	only	_	RB	RB	_	7	advmod	_	_
11	India	_	NNP	NNP	_	15	nsubj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	Israel	_	NNP	NNP	_	11	conj	_	_
14	would	_	MD	MD	_	15	aux	_	_
15	qualify	_	VB	VB	_	0	root	_	_
16	for	_	IN	IN	_	15	prep	_	_
17	admission	_	NN	NN	_	16	pobj	_	_
18	to	_	TO	TO	_	15	prep	_	_
19	the	_	DT	DT	_	20	det	_	_
20	NSG	_	NNP	NNP	_	18	pobj	_	_
21	under	_	IN	IN	_	15	prep	_	_
22	the	_	DT	DT	_	24	det	_	_
23	Israeli	_	JJ	JJ	_	24	amod	_	_
24	proposal	_	NN	NN	_	21	pobj	_	_
25	.	_	.	.	_	15	punct	_	_

Oracle:
(a / and, mod, o / only)
(a / and, op, c / country)
(a / and, op, c2 / country)
(a2 / admit-02, ARG0, p / propose-01)
(a2 / admit-02, ARG2, o2 / organization)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(n / name, op, "India")
(n2 / name, op, "Israel")
(n4 / name, op, "NSG")
(o2 / organization, name, n4 / name)
(p / propose-01, ARG0, c2 / country)
(q / qualify-02, ARG1, a / and)
(q / qualify-02, ARG2, a2 / admit-02)
(s / sign-01, ARG0, n3 / nation)
(s / sign-01, ARG1, t / treaty)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(2, 1, 0),India,(country :name (name :op "India")),false), Span(2,3,List(3),nations,nation,false), Span(9,10,List(4),only,only,false), Span(6,7,List(5),signed,sign-02,false), Span(11,12,List(6),and,and,false), Span(0,1,List(7),Among,moon-01,false), Span(16,17,List(8),admission,administer-01,false), Span(23,24,List(9),proposal.,propose-01,false), Span(8,9,List(10),Treaty,treaty,false), Span(12,13,List(13, 12, 11),Israel,(country :name (name :op "Israel")),false), Span(14,15,List(14),qualify,qualify-02,false)),Map(2 -> "India", 5 -> sign-02, 12 -> name, 8 -> administer-01, 7 -> moon-01, 1 -> name, 4 -> only, 11 -> country, 14 -> qualify-02, 6 -> and, 0 -> country, 9 -> propose-01, 3 -> nation, 10 -> treaty, 13 -> "Israel"),Map(n -> name, q -> qualify-02, t -> treaty, s -> sign-02, m -> moon-01, p -> propose-01, a -> and, n3 -> name, a2 -> administer-01, c -> country, o -> only, n2 -> nation, c2 -> country))),[Ljava.lang.String;@3ddec70d,Annotation([Ljava.lang.String;@442e9386,[Ljava.lang.String;@45041b0,[Ljava.lang.String;@289e97e6),Annotation([Ljava.lang.String;@63b3cb57,[Ljava.lang.String;@5331d604,[Ledu.cmu.lti.nlp.amr.Dependency;@55ea4013),Annotation([Ljava.lang.String;@997dcef,[Ljava.lang.String;@748357f9,[Ljava.lang.String;@29df2e9b),Annotation([Ljava.lang.String;@2eb2096b,[Ljava.lang.String;@19f5d8f6,[Ledu.cmu.lti.nlp.amr.Entity;@77a778ae))
AMR:
(a / and, op, c / country)
(a / and, op, c2 / country)
(a2 / administer-01, ARG1, p / propose-01)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(m / moon-01, ARG1, n2 / nation)
(n / name, op, "India")
(n3 / name, op, "Israel")
(p / propose-01, ARG1, m / moon-01)
(q / qualify-02, ARG1, a / and)
(q / qualify-02, ARG2, a2 / administer-01)
(s / sign-02, ARG0, n2 / nation)
(s / sign-02, ARG1, t / treaty)
(s / sign-02, ARG2, o / only)

Decoded in 751,575 microseconds
Sentence: The Israeli plan offered 12 criteria for allowing nuclear trade with non-treaty states.

Oracle Span 1:  12 => 12
Oracle Span 2:  allowing => allow-01
Oracle Span 3:  criteria => criterion
Oracle Span 4:  Israeli => (country :name (name :op "Israel"))
Oracle Span 5:  nuclear => nucleus
Oracle Span 6:  offered => offer-01
Oracle Span 7:  plan => plan-01
Oracle Span 8:  states => state
Oracle Span 9:  trade => trade-01
Oracle Span 10:  treaty => treaty
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 7-8:  allowing => allow-01
Span 5-6:  criteria => criterion
Span 1-2:  Israeli => (country :name (name :op "Israel"))
Span 8-9:  nuclear => nucleus
Span 3-4:  offered => offer-01
Span 2-3:  plan => plan
Span 12-13:  states. => state
Span 0-1:  The => 1
Span 9-10:  trade => trade-01

Langrangian relaxation converged after 27 iterations. Delta = 0.0
Oracle Span 4-5:  12 => 12
Oracle Span 7-8:  allowing => allow-01
Oracle Span 5-6:  criteria => criterion
Oracle Span 1-2:  Israeli => (country :name (name :op "Israel"))
Oracle Span 8-9:  nuclear => nucleus
Oracle Span 3-4:  offered => offer-01
Oracle Span 2-3:  plan => plan-01
Oracle Span 14-15:  states => state
Oracle Span 9-10:  trade => trade-01
Oracle Span 13-14:  treaty => treaty

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	Israeli	_	JJ	JJ	_	3	amod	_	_
3	plan	_	NN	NN	_	4	nsubj	_	_
4	offered	_	VBD	VBD	_	0	root	_	_
5	12	_	CD	CD	_	6	num	_	_
6	criteria	_	NNS	NNS	_	4	dobj	_	_
7	for	_	IN	IN	_	4	prep	_	_
8	allowing	_	VBG	VBG	_	7	pcomp	_	_
9	nuclear	_	JJ	JJ	_	10	amod	_	_
10	trade	_	NN	NN	_	8	dobj	_	_
11	with	_	IN	IN	_	8	prep	_	_
12	non-treaty	_	JJ	JJ	_	13	amod	_	_
13	states	_	NNS	NNS	_	11	pobj	_	_
14	.	_	.	.	_	4	punct	_	_

Oracle:
(a / allow-01, ARG1, t / trade-01)
(c / country, name, n / name)
(c2 / criterion, purpose, a / allow-01)
(c2 / criterion, quant, 1 / 12)
(n / name, op, "Israel")
(o / offer-01, ARG0, p / plan-01)
(o / offer-01, ARG1, c2 / criterion)
(p / plan-01, ARG0, c / country)
(s / state, mod, t2 / treaty)
(t / trade-01, ARG2, s / state)
(t / trade-01, mod, n2 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),allowing,allow-01,false), Span(0,1,List(1),The,1,false), Span(12,13,List(2),states.,state,false), Span(3,4,List(3),offered,offer-01,false), Span(9,10,List(4),trade,trade-01,false), Span(8,9,List(5),nuclear,nucleus,false), Span(5,6,List(6),criteria,criterion,false), Span(1,2,List(9, 8, 7),Israeli,(country :name (name :op "Israel")),false), Span(2,3,List(10),plan,plan,false)),Map(2 -> state, 5 -> nucleus, 8 -> name, 7 -> country, 1 -> 1, 4 -> trade-01, 6 -> criterion, 9 -> "Israel", 0 -> allow-01, 10 -> plan, 3 -> offer-01),Map(n -> nucleus, t -> trade-01, s -> state, p -> plan, 1 -> 1, a -> allow-01, c -> criterion, o -> offer-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@701c3d18,Annotation([Ljava.lang.String;@232de741,[Ljava.lang.String;@74fa3821,[Ljava.lang.String;@17dfb2e2),Annotation([Ljava.lang.String;@6bab9fc,[Ljava.lang.String;@4ae15185,[Ledu.cmu.lti.nlp.amr.Dependency;@6fff43c8),Annotation([Ljava.lang.String;@55db477,[Ljava.lang.String;@567b9879,[Ljava.lang.String;@16d6864a),Annotation([Ljava.lang.String;@322765b,[Ljava.lang.String;@6b349444,[Ledu.cmu.lti.nlp.amr.Entity;@6106710b))
AMR:
(a / allow-01, ARG1, t / trade-01)
(c2 / country, name, n2 / name)
(n2 / name, op, "Israel")
(o / offer-01, ARG0, p / plan)
(o / offer-01, ARG1, c / criterion)
(p / plan, mod, 1 / 1)
(s / state, location, c2 / country)
(t / trade-01, ARG1, c / criterion)
(t / trade-01, ARG2, c2 / country)
(t / trade-01, mod, n / nucleus)

Decoded in 382,398 microseconds
Sentence: 1 criterion indicated Israel's status as an undeclared nuclear weapons state and said a State should be allowed to engage in nuclear trade if the State applies stringent physical protection, control and accountancy measures to all nuclear weapons, nuclear facilities, source material and special nuclear material in the State's territory.

Oracle Span 1:  1 => 1
Oracle Span 2:  accountancy => accountancy
Oracle Span 3:  all => all
Oracle Span 4:  allowed => allow-01
Oracle Span 5:  and => and
Oracle Span 6:  and => and
Oracle Span 7:  and => and
Oracle Span 8:  applies => apply-02
Oracle Span 9:  control => control-01
Oracle Span 10:  criterion => criterion
Oracle Span 11:  engage => engage-01
Oracle Span 12:  facilities => facility
Oracle Span 13:  indicated => indicate-01
Oracle Span 14:  Israel => (country :name (name :op "Israel"))
Oracle Span 15:  material => material
Oracle Span 16:  material => material
Oracle Span 17:  measures => measure
Oracle Span 18:  nuclear => nucleus
Oracle Span 19:  physical => physical
Oracle Span 20:  protection => protect-01
Oracle Span 21:  said => say-01
Oracle Span 22:  should => recommend-01
Oracle Span 23:  source => source
Oracle Span 24:  special => special
Oracle Span 25:  state => state
Oracle Span 26:  State => state
Oracle Span 27:  status => status
Oracle Span 28:  stringent => stringent
Oracle Span 29:  territory => territory
Oracle Span 30:  trade => trade-01
Oracle Span 31:  undeclared => (declare-01 :polarity -)
Oracle Span 32:  weapons => weapon
Oracle Span 33:  weapons => weapon
NER Entity: (country :name (name :op "Israel"))
Spans:
Span 52-53:   => state
Span 54-55:   => territory
Span 0-1:  1 => 1
Span 13-14:  a => say-01
Span 32-33:  accountancy => control-01
Span 35-36:  all => measure
Span 31-32:  and => and
Span 11-12:  and => state
Span 42-43:  and => facility
Span 26-27:  applies => state
Span 5-6:  as => status
Span 16-17:  be => shoulder-01
Span 30-31:  control => protect-01
Span 39-40:  facilities, => weapon
Span 23-24:  if => trade-01
Span 20-21:  in => engage-01
Span 46-47:  in => and
Span 2-3:  indicated => indicate-01
Span 3-4:  Israel's => (country :name (name :op "Israel"))
Span 41-42:  material => nucleus
Span 45-46:  material => material
Span 33-34:  measures => and
Span 44-45:  nuclear => source
Span 38-39:  nuclear => nucleus
Span 29-30:  protection, => physical
Span 12-13:  said => and
Span 15-16:  should => state
Span 10-11:  state => weapon
Span 48-49:  State's => nucleus
Span 27-28:  stringent => apply-02
Span 49-50:  territory. => material
Span 47-48:  the => special
Span 18-19:  to => allow-01
Span 9-10:  weapons => nucleus
Span 37-38:  weapons, => all

Langrangian relaxation converged after 49 iterations. Delta = 0.0
Oracle Span 0-1:  1 => 1
Oracle Span 34-35:  accountancy => accountancy
Oracle Span 37-38:  all => all
Oracle Span 18-19:  allowed => allow-01
Oracle Span 12-13:  and => and
Oracle Span 33-34:  and => and
Oracle Span 46-47:  and => and
Oracle Span 27-28:  applies => apply-02
Oracle Span 32-33:  control => control-01
Oracle Span 1-2:  criterion => criterion
Oracle Span 20-21:  engage => engage-01
Oracle Span 42-43:  facilities => facility
Oracle Span 2-3:  indicated => indicate-01
Oracle Span 3-4:  Israel => (country :name (name :op "Israel"))
Oracle Span 45-46:  material => material
Oracle Span 49-50:  material => material
Oracle Span 35-36:  measures => measure
Oracle Span 9-10:  nuclear => nucleus
Oracle Span 29-30:  physical => physical
Oracle Span 30-31:  protection => protect-01
Oracle Span 13-14:  said => say-01
Oracle Span 16-17:  should => recommend-01
Oracle Span 44-45:  source => source
Oracle Span 47-48:  special => special
Oracle Span 11-12:  state => state
Oracle Span 15-16:  State => state
Oracle Span 5-6:  status => status
Oracle Span 28-29:  stringent => stringent
Oracle Span 54-55:  territory => territory
Oracle Span 23-24:  trade => trade-01
Oracle Span 8-9:  undeclared => (declare-01 :polarity -)
Oracle Span 10-11:  weapons => weapon
Oracle Span 39-40:  weapons => weapon

Dependencies:
1	1	_	CD	CD	_	2	num	_	_
2	criterion	_	NN	NN	_	3	nsubj	_	_
3	indicated	_	VBD	VBD	_	0	root	_	_
4	Israel	_	NNP	NNP	_	6	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	status	_	NN	NN	_	3	dobj	_	_
7	as	_	IN	IN	_	3	prep	_	_
8	an	_	DT	DT	_	12	det	_	_
9	undeclared	_	JJ	JJ	_	12	amod	_	_
10	nuclear	_	JJ	JJ	_	12	amod	_	_
11	weapons	_	NNS	NNS	_	12	nn	_	_
12	state	_	NN	NN	_	7	pobj	_	_
13	and	_	CC	CC	_	3	cc	_	_
14	said	_	VBD	VBD	_	3	conj	_	_
15	a	_	DT	DT	_	16	det	_	_
16	State	_	NNP	NNP	_	19	nsubjpass	_	_
17	should	_	MD	MD	_	19	aux	_	_
18	be	_	VB	VB	_	19	auxpass	_	_
19	allowed	_	VBN	VBN	_	14	ccomp	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	engage	_	VB	VB	_	19	xcomp	_	_
22	in	_	IN	IN	_	21	prep	_	_
23	nuclear	_	JJ	JJ	_	24	amod	_	_
24	trade	_	NN	NN	_	22	pobj	_	_
25	if	_	IN	IN	_	28	mark	_	_
26	the	_	DT	DT	_	27	det	_	_
27	State	_	NNP	NNP	_	28	nsubj	_	_
28	applies	_	VBZ	VBZ	_	21	advcl	_	_
29	stringent	_	JJ	JJ	_	36	amod	_	_
30	physical	_	JJ	JJ	_	36	amod	_	_
31	protection	_	NN	NN	_	36	nn	_	_
32	,	_	,	,	_	31	punct	_	_
33	control	_	NN	NN	_	31	conj	_	_
34	and	_	CC	CC	_	31	cc	_	_
35	accountancy	_	NN	NN	_	31	conj	_	_
36	measures	_	NNS	NNS	_	28	dobj	_	_
37	to	_	TO	TO	_	28	prep	_	_
38	all	_	DT	DT	_	40	det	_	_
39	nuclear	_	JJ	JJ	_	40	amod	_	_
40	weapons	_	NNS	NNS	_	37	pobj	_	_
41	,	_	,	,	_	40	punct	_	_
42	nuclear	_	JJ	JJ	_	43	amod	_	_
43	facilities	_	NNS	NNS	_	40	conj	_	_
44	,	_	,	,	_	40	punct	_	_
45	source	_	NN	NN	_	46	nn	_	_
46	material	_	NN	NN	_	40	conj	_	_
47	and	_	CC	CC	_	40	cc	_	_
48	special	_	JJ	JJ	_	50	amod	_	_
49	nuclear	_	JJ	JJ	_	50	amod	_	_
50	material	_	NN	NN	_	40	conj	_	_
51	in	_	IN	IN	_	50	prep	_	_
52	the	_	DT	DT	_	53	det	_	_
53	State	_	NNP	NNP	_	55	poss	_	_
54	's	_	POS	POS	_	53	possessive	_	_
55	territory	_	NN	NN	_	51	pobj	_	_
56	.	_	.	.	_	3	punct	_	_

Oracle:
(a / and, op, i / indicate-01)
(a / and, op, s3 / say-01)
(a2 / allow-01, ARG1, e / engage-01)
(a2 / allow-01, condition, a3 / apply-02)
(a3 / apply-02, ARG0, s4 / state)
(a3 / apply-02, ARG1, a4 / and)
(a3 / apply-02, ARG2, a6 / and)
(a4 / and, op, m2 / measure)
(a4 / and, op, p / protect-01)
(a6 / and, op, f / facility)
(a6 / and, op, m3 / material)
(a6 / and, op, m4 / material)
(a6 / and, op, w2 / weapon)
(c / criterion, quant, 1 / 1)
(c2 / country, name, n / name)
(d / declare-01, ARG0, s2 / state)
(d / declare-01, polarity, -)
(e / engage-01, ARG1, s4 / state)
(e / engage-01, ARG2, t / trade-01)
(f / facility, location, t2 / territory)
(f / facility, mod, n2 / nucleus)
(f / facility, quant, a7 / all)
(i / indicate-01, ARG0, c / criterion)
(i / indicate-01, ARG1, s / status)
(m2 / measure, mod, a5 / accountancy)
(m3 / material, location, t2 / territory)
(m3 / material, mod, s6 / source)
(m3 / material, quant, a7 / all)
(m4 / material, location, t2 / territory)
(m4 / material, mod, n2 / nucleus)
(m4 / material, mod, s7 / special)
(m4 / material, quant, a7 / all)
(n / name, op, "Israel")
(p / protect-01, mod, p2 / physical)
(p / protect-01, mod, s5 / stringent)
(r / recommend-01, ARG1, a2 / allow-01)
(s / status, poss, c2 / country)
(s / status, prep-as, s2 / state)
(s2 / state, mod, w / weapon)
(s3 / say-01, ARG0, c / criterion)
(s3 / say-01, ARG1, r / recommend-01)
(t / trade-01, mod, n2 / nucleus)
(t2 / territory, poss, s4 / state)
(w / weapon, mod, n2 / nucleus)
(w2 / weapon, location, t2 / territory)
(w2 / weapon, mod, n2 / nucleus)
(w2 / weapon, quant, a7 / all)

Input(Some(Graph(null,ArrayBuffer(Span(52,53,List(0),,state,false), Span(35,36,List(1),all,measure,false), Span(31,32,List(2),and,and,false), Span(15,16,List(3),should,state,false), Span(30,31,List(4),control,protect-01,false), Span(54,55,List(5),,territory,false), Span(41,42,List(6),material,nucleus,false), Span(9,10,List(7),weapons,nucleus,false), Span(16,17,List(8),be,shoulder-01,false), Span(27,28,List(9),stringent,apply-02,false), Span(37,38,List(10),weapons,,all,false), Span(3,4,List(13, 12, 11),Israel's,(country :name (name :op "Israel")),false), Span(32,33,List(14),accountancy,control-01,false), Span(11,12,List(15),and,state,false), Span(20,21,List(16),in,engage-01,false), Span(47,48,List(17),the,special,false), Span(10,11,List(18),state,weapon,false), Span(13,14,List(19),a,say-01,false), Span(18,19,List(20),to,allow-01,false), Span(33,34,List(21),measures,and,false), Span(5,6,List(22),as,status,false), Span(42,43,List(23),and,facility,false), Span(26,27,List(24),applies,state,false), Span(45,46,List(25),material,material,false), Span(44,45,List(26),nuclear,source,false), Span(23,24,List(27),if,trade-01,false), Span(0,1,List(28),1,1,false), Span(46,47,List(29),in,and,false), Span(39,40,List(30),facilities,,weapon,false), Span(49,50,List(31),territory.,material,false), Span(48,49,List(32),State's,nucleus,false), Span(12,13,List(33),said,and,false), Span(29,30,List(34),protection,,physical,false), Span(38,39,List(35),nuclear,nucleus,false), Span(2,3,List(36),indicated,indicate-01,false)),Map(30 -> weapon, 2 -> and, 5 -> territory, 33 -> and, 27 -> trade-01, 12 -> name, 8 -> shoulder-01, 15 -> state, 36 -> indicate-01, 21 -> and, 18 -> weapon, 24 -> state, 35 -> nucleus, 7 -> nucleus, 1 -> measure, 17 -> special, 23 -> facility, 26 -> source, 4 -> protect-01, 11 -> country, 32 -> nucleus, 14 -> control-01, 29 -> and, 20 -> allow-01, 34 -> physical, 28 -> 1, 6 -> nucleus, 9 -> apply-02, 0 -> state, 22 -> status, 16 -> engage-01, 19 -> say-01, 10 -> all, 3 -> state, 31 -> material, 25 -> material, 13 -> "Israel"),Map(a7 -> and, m3 -> material, e -> engage-01, s5 -> special, n -> nucleus, w -> weapon, s8 -> state, s2 -> state, t -> territory, m2 -> material, p2 -> physical, n4 -> nucleus, a3 -> all, s -> state, a6 -> and, s4 -> state, m -> measure, 1 -> 1, s7 -> status, p -> protect-01, n3 -> name, a -> and, a5 -> and, t2 -> trade-01, w2 -> weapon, s9 -> source, i -> indicate-01, a2 -> apply-02, c -> country, s3 -> shoulder-01, f -> facility, s6 -> say-01, n2 -> nucleus, c2 -> control-01, a4 -> allow-01, n5 -> nucleus))),[Ljava.lang.String;@1c6ea2aa,Annotation([Ljava.lang.String;@52d5e22d,[Ljava.lang.String;@6e4a2be3,[Ljava.lang.String;@37e73a78),Annotation([Ljava.lang.String;@5e75a5dc,[Ljava.lang.String;@23cce0b5,[Ledu.cmu.lti.nlp.amr.Dependency;@1ce6c21c),Annotation([Ljava.lang.String;@125c0f02,[Ljava.lang.String;@61f403d0,[Ljava.lang.String;@25798e13),Annotation([Ljava.lang.String;@fa55e82,[Ljava.lang.String;@7df3646b,[Ledu.cmu.lti.nlp.amr.Entity;@3cd80286))
AMR:
(a / and, op, a5 / and)
(a2 / apply-02, ARG0, s8 / state)
(a2 / apply-02, ARG1, m / measure)
(a2 / apply-02, ARG2, a6 / and)
(a4 / allow-01, ARG1, e / engage-01)
(a4 / allow-01, ARG6, t2 / trade-01)
(a5 / and, op, a2 / apply-02)
(a5 / and, op, c2 / control-01)
(a5 / and, op, p / protect-01)
(a6 / and, op, f / facility)
(a6 / and, op, w2 / weapon)
(a7 / and, op, s6 / say-01)
(c / country, name, n3 / name)
(c2 / control-01, ARG1, t / territory)
(e / engage-01, ARG1, s2 / state)
(e / engage-01, time, a2 / apply-02)
(f / facility, mod, n / nucleus)
(f / facility, mod, n5 / nucleus)
(i / indicate-01, ARG1, a7 / and)
(i / indicate-01, ARG2, s7 / status)
(m3 / material, location, t / territory)
(m3 / material, mod, n4 / nucleus)
(m3 / material, mod, s5 / special)
(n3 / name, op, "Israel")
(p / protect-01, ARG0, p2 / physical)
(s3 / shoulder-01, ARG1, a4 / allow-01)
(s4 / state, mod, w / weapon)
(s6 / say-01, ARG0, s9 / source)
(s6 / say-01, ARG1, s3 / shoulder-01)
(s7 / status, location, s4 / state)
(s7 / status, poss, c / country)
(s9 / source, location, m2 / material)
(t / territory, poss, s / state)
(t2 / trade-01, ARG1, 1 / 1)
(w / weapon, mod, n2 / nucleus)
(w2 / weapon, quant, a3 / all)

Decoded in 5,923,757 microseconds
Sentence: The documents circulated on Capitol Hill in September 2007 as the Bush administration worked toward an agreement with Indian officials.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  agreement => agree-01
Oracle Span 3:  Bush => (person :name (name :op "Bush"))
Oracle Span 4:  Capitol Hill => (location :name (name :op "Hill" :op "Capitol"))
Oracle Span 5:  circulated => circulate-01
Oracle Span 6:  documents => document
Oracle Span 7:  Indian => (country :name (name :op "India"))
Oracle Span 8:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 9:  September 2007 => (date-entity :month 9 :year 2007)
Oracle Span 10:  toward => toward
Oracle Span 11:  worked => work-06
NER Entity: (country :name (name :op "Capitol" :op "Hill"))
NER Entity: (person :name (name :op "Bush"))
NER Entity: (thing :name (name :op "Indian"))
Spans:
Span 16-17:  agreement => agree-01
Span 11-12:  Bush => (person :name (name :op "Bush"))
Span 4-5:  Capitol => capital
Span 2-3:  circulated => circulate-01
Span 1-2:  documents => document
Span 18-19:  Indian => (country :name (name :op "India"))
Span 19-20:  officials. => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 0-8:  The documents circulated on Capitol Hill in September => (date-entity :year 2007 :month 9)
Span 13-14:  worked => work-01

Langrangian relaxation converged after 20 iterations. Delta = 0.0
Oracle Span 12-13:  administration => administrate-01
Oracle Span 16-17:  agreement => agree-01
Oracle Span 11-12:  Bush => (person :name (name :op "Bush"))
Oracle Span 4-6:  Capitol Hill => (location :name (name :op "Hill" :op "Capitol"))
Oracle Span 2-3:  circulated => circulate-01
Oracle Span 1-2:  documents => document
Oracle Span 18-19:  Indian => (country :name (name :op "India"))
Oracle Span 19-20:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 7-9:  September 2007 => (date-entity :month 9 :year 2007)
Oracle Span 14-15:  toward => toward
Oracle Span 13-14:  worked => work-06

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	documents	_	NNS	NNS	_	3	nsubj	_	_
3	circulated	_	VBD	VBD	_	0	root	_	_
4	on	_	IN	IN	_	3	prep	_	_
5	Capitol	_	NNP	NNP	_	6	nn	_	_
6	Hill	_	NNP	NNP	_	4	pobj	_	_
7	in	_	IN	IN	_	6	prep	_	_
8	September	_	NNP	NNP	_	7	pobj	_	_
9	2007	_	CD	CD	_	8	num	_	_
10	as	_	IN	IN	_	14	mark	_	_
11	the	_	DT	DT	_	13	det	_	_
12	Bush	_	NNP	NNP	_	13	nn	_	_
13	administration	_	NN	NN	_	14	nsubj	_	_
14	worked	_	VBD	VBD	_	3	advcl	_	_
15	toward	_	IN	IN	_	14	prep	_	_
16	an	_	DT	DT	_	17	det	_	_
17	agreement	_	NN	NN	_	15	pobj	_	_
18	with	_	IN	IN	_	14	prep	_	_
19	Indian	_	JJ	JJ	_	20	amod	_	_
20	officials	_	NNS	NNS	_	18	pobj	_	_
21	.	_	.	.	_	3	punct	_	_

Oracle:
(c / circulate-01, ARG1, d / document)
(c / circulate-01, location, l / location)
(c / circulate-01, time, d2 / date-entity)
(c / circulate-01, time, w / work-06)
(c2 / country, name, n3 / name)
(d2 / date-entity, month, 9)
(d2 / date-entity, year, 2007)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(l / location, name, n / name)
(n / name, op, "Capitol")
(n / name, op, "Hill")
(n2 / name, op, "Bush")
(n3 / name, op, "India")
(p / person, name, n2 / name)
(w / work-06, ARG1, t / toward)
(w / work-06, ARG4, a2 / agree-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(2, 1, 0),Indian,(country :name (name :op "India")),false), Span(13,14,List(3),worked,work-01,false), Span(0,8,List(6, 5, 4),The documents circulated on Capitol Hill in September,(date-entity :year 2007 :month 9),false), Span(4,5,List(7),Capitol,capital,false), Span(19,20,List(10, 9, 8),officials.,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(16,17,List(11),agreement,agree-01,false), Span(11,12,List(14, 13, 12),Bush,(person :name (name :op "Bush")),false), Span(1,2,List(15),documents,document,false), Span(2,3,List(16),circulated,circulate-01,false)),Map(2 -> "India", 5 -> 2007, 12 -> person, 15 -> document, 8 -> person, 7 -> capital, 1 -> name, 4 -> date-entity, 11 -> agree-01, 14 -> "Bush", 6 -> 9, 0 -> country, 9 -> have-org-role-91, 16 -> circulate-01, 3 -> work-01, 10 -> official, 13 -> name),Map(n -> name, w -> work-01, h -> have-org-role-91, 2 -> 2007, p2 -> person, d -> date-entity, p -> person, c3 -> circulate-01, a -> agree-01, d2 -> document, c -> country, 9 -> 9, o -> official, c2 -> capital, n2 -> name))),[Ljava.lang.String;@7a44e4c2,Annotation([Ljava.lang.String;@315be11c,[Ljava.lang.String;@6728ac4b,[Ljava.lang.String;@7d087f10),Annotation([Ljava.lang.String;@20b7f687,[Ljava.lang.String;@4e0aa08c,[Ledu.cmu.lti.nlp.amr.Dependency;@6ce207f2),Annotation([Ljava.lang.String;@52ac0581,[Ljava.lang.String;@4d30d29d,[Ljava.lang.String;@56a51577),Annotation([Ljava.lang.String;@2a0445c6,[Ljava.lang.String;@1836dd0a,[Ledu.cmu.lti.nlp.amr.Entity;@535940ab))
AMR:
(a / agree-01, ARG1, p / person)
(c / country, name, n / name)
(c3 / circulate-01, ARG0, d2 / document)
(c3 / circulate-01, ARG1, c2 / capital)
(c3 / circulate-01, condition, w / work-01)
(d / date-entity, month, 9 / 9)
(d / date-entity, purpose, w / work-01)
(d / date-entity, year, 2 / 2007)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "India")
(n2 / name, op, "Bush")
(p2 / person, name, n2 / name)
(w / work-01, ARG0, p2 / person)
(w / work-01, ARG1, a / agree-01)

Decoded in 707,174 microseconds
Sentence: Executive Director of the Arms Control Association in Washington Daryl Kimball stated the Israeli document could affect the debate over India.

Oracle Span 1:  affect => affect-01
Oracle Span 2:  Arms Control Association => (organization :name (name :op "Association" :op "Control" :op "Arms"))
Oracle Span 3:  could => possible
Oracle Span 4:  Daryl Kimball => (person :name (name :op "Kimball" :op "Daryl"))
Oracle Span 5:  debate => debate-01
Oracle Span 6:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 7:  document => document
Oracle Span 8:  Executive => executive
Oracle Span 9:  India => (country :name (name :op "India"))
Oracle Span 10:  Israeli => (country :name (name :op "Israel"))
Oracle Span 11:  stated => state-01
Oracle Span 12:  Washington => (city :name (name :op "Washington"))
NER Entity: (person :name (name :op "Daryl" :op "Kimball"))
NER Entity: (organization :name (name :op "Arms" :op "Control" :op "Association"))
NER Entity: (country :name (name :op "Washington"))
NER Entity: (country :name (name :op "India"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 16-17:  affect => affect-01
Span 4-7:  Arms Control Association => (name :op "Control" :op "Association" :op "Arms")
Span 15-16:  could => possible
Span 9-11:  Daryl Kimball => (person :name (name :op "Daryl" :op "Kimball"))
Span 18-19:  debate => debate-01
Span 1-2:  Director => (have-org-role-91 :ARG2 director)
Span 14-15:  document => document
Span 0-1:  Executive => executive
Span 11-12:  stated => state-01

Langrangian relaxation converged after 92 iterations. Delta = 0.0
Oracle Span 16-17:  affect => affect-01
Oracle Span 4-7:  Arms Control Association => (organization :name (name :op "Association" :op "Control" :op "Arms"))
Oracle Span 15-16:  could => possible
Oracle Span 9-11:  Daryl Kimball => (person :name (name :op "Kimball" :op "Daryl"))
Oracle Span 18-19:  debate => debate-01
Oracle Span 1-2:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 14-15:  document => document
Oracle Span 0-1:  Executive => executive
Oracle Span 20-21:  India => (country :name (name :op "India"))
Oracle Span 13-14:  Israeli => (country :name (name :op "Israel"))
Oracle Span 11-12:  stated => state-01
Oracle Span 8-9:  Washington => (city :name (name :op "Washington"))

Dependencies:
1	Executive	_	NNP	NNP	_	2	nn	_	_
2	Director	_	NNP	NNP	_	12	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	7	det	_	_
5	Arms	_	NNP	NNP	_	7	nn	_	_
6	Control	_	NNP	NNP	_	7	nn	_	_
7	Association	_	NNP	NNP	_	3	pobj	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	Washington	_	NNP	NNP	_	11	nn	_	_
10	Daryl	_	NNP	NNP	_	11	nn	_	_
11	Kimball	_	NNP	NNP	_	8	pobj	_	_
12	stated	_	VBD	VBD	_	0	root	_	_
13	the	_	DT	DT	_	15	det	_	_
14	Israeli	_	JJ	JJ	_	15	amod	_	_
15	document	_	NN	NN	_	17	nsubj	_	_
16	could	_	MD	MD	_	17	aux	_	_
17	affect	_	VB	VB	_	12	ccomp	_	_
18	the	_	DT	DT	_	19	det	_	_
19	debate	_	NN	NN	_	17	dobj	_	_
20	over	_	IN	IN	_	19	prep	_	_
21	India	_	NNP	NNP	_	20	pobj	_	_
22	.	_	.	.	_	12	punct	_	_

Oracle:
(a / affect-01, ARG0, d2 / document)
(a / affect-01, ARG1, d3 / debate-01)
(a / affect-01, mod, p / possible)
(c / city, name, n3 / name)
(c2 / country, name, n4 / name)
(c3 / country, name, n5 / name)
(d / director, mod, e / executive)
(d2 / document, mod, c2 / country)
(d3 / debate-01, ARG1, c3 / country)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, d / director)
(n / name, op, "Daryl")
(n / name, op, "Kimball")
(n2 / name, op, "Arms")
(n2 / name, op, "Association")
(n2 / name, op, "Control")
(n3 / name, op, "Washington")
(n4 / name, op, "Israel")
(n5 / name, op, "India")
(o / organization, location, c / city)
(o / organization, name, n2 / name)
(p2 / person, name, n / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, a / affect-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,11,List(3, 2, 1, 0),Daryl Kimball,(person :name (name :op "Daryl" :op "Kimball")),false), Span(0,1,List(4),Executive,executive,false), Span(11,12,List(5),stated,state-01,false), Span(4,7,List(9, 8, 7, 6),Arms Control Association,(name :op "Control" :op "Association" :op "Arms"),false), Span(15,16,List(10),could,possible,false), Span(16,17,List(11),affect,affect-01,false), Span(18,19,List(12),debate,debate-01,false), Span(14,15,List(13),document,document,false), Span(1,2,List(15, 14),Director,(have-org-role-91 :ARG2 director),false)),Map(2 -> "Daryl", 5 -> state-01, 12 -> debate-01, 15 -> director, 8 -> "Association", 7 -> "Control", 1 -> name, 4 -> executive, 11 -> affect-01, 14 -> have-org-role-91, 6 -> name, 0 -> person, 9 -> "Arms", 3 -> "Kimball", 10 -> possible, 13 -> document),Map(e -> executive, n -> name, h -> have-org-role-91, d3 -> director, p2 -> possible, s -> state-01, d -> debate-01, p -> person, a -> affect-01, d2 -> document, n2 -> name))),[Ljava.lang.String;@1681e9e9,Annotation([Ljava.lang.String;@6c058625,[Ljava.lang.String;@3b7a8bcb,[Ljava.lang.String;@248c835e),Annotation([Ljava.lang.String;@3ddbf887,[Ljava.lang.String;@7daf65b7,[Ledu.cmu.lti.nlp.amr.Dependency;@12e49d1a),Annotation([Ljava.lang.String;@52b27a6b,[Ljava.lang.String;@304fbf7a,[Ljava.lang.String;@36cbe619),Annotation([Ljava.lang.String;@f1a197,[Ljava.lang.String;@41d1e2c0,[Ledu.cmu.lti.nlp.amr.Entity;@c2831ef))
AMR:
(a / affect-01, ARG0, d2 / document)
(a / affect-01, ARG1, d / debate-01)
(a / affect-01, mod, p2 / possible)
(d / debate-01, ARG1, n2 / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, e / executive)
(h / have-org-role-91, ARG2, d3 / director)
(n / name, op, "Daryl")
(n / name, op, "Kimball")
(n2 / name, op, "Arms")
(n2 / name, op, "Association")
(n2 / name, op, "Control")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, p2 / possible)

Decoded in 1,369,162 microseconds
Sentence: Kimball stated --

Oracle Span 1:  Kimball => (person :name (name :op "Kimball"))
Oracle Span 2:  stated => state-01
NER Entity: (person :name (name :op "Kimball"))
Spans:
Span 0-1:  Kimball => (person :name (name :op "Kimball"))
Span 1-2:  stated => state-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Kimball => (person :name (name :op "Kimball"))
Oracle Span 1-2:  stated => state-01

Dependencies:
1	Kimball	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	--	_	:	:	_	2	punct	_	_

Oracle:
(n / name, op, "Kimball")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(0,1,List(3, 2, 1),Kimball,(person :name (name :op "Kimball")),false)),Map(2 -> name, 1 -> person, 0 -> state-01, 3 -> "Kimball"),Map(n -> name, s -> state-01, p -> person))),[Ljava.lang.String;@471c5a24,Annotation([Ljava.lang.String;@49019a33,[Ljava.lang.String;@73e93851,[Ljava.lang.String;@6fe34fc2),Annotation([Ljava.lang.String;@4a8be560,[Ljava.lang.String;@f1e3e00,[Ledu.cmu.lti.nlp.amr.Dependency;@358fa402),Annotation([Ljava.lang.String;@40e7702e,[Ljava.lang.String;@55523db7,[Ljava.lang.String;@2b42e723),Annotation([Ljava.lang.String;@6325e9fd,[Ljava.lang.String;@183883b7,[Ledu.cmu.lti.nlp.amr.Entity;@5c43ba82))
AMR:
(n / name, op, "Kimball")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)

Decoded in 34,999 microseconds
Sentence: The dynamics at the NSG are that officials from the countries do not want to be obstacles to India which is the largest country and the United States which is the most powerful country.

Oracle Span 1:  and => and
Oracle Span 2:  countries => country
Oracle Span 3:  country => country
Oracle Span 4:  country => country
Oracle Span 5:  dynamics => dynamic
Oracle Span 6:  India => (name :op "India")
Oracle Span 7:  largest => (large :degree most)
Oracle Span 8:  most => most
Oracle Span 9:  NSG => (organization :name (name :op "NSG"))
Oracle Span 10:  obstacles => obstacle
Oracle Span 11:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 12:  powerful => powerful
Oracle Span 13:  United States => (name :op "States" :op "United")
Oracle Span 14:  want => want-01
NER Entity: (country :name (name :op "India"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (organization :name (name :op "NSG"))
Spans:
Span 24-25:  and => and
Span 10-11:  countries => country
Span 33-34:  country. => country
Span 1-2:  dynamics => dynamics
Span 18-19:  India => (country :name (name :op "India"))
Span 31-32:  most => most
Span 16-17:  obstacles => obstacle
Span 7-8:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 32-33:  powerful => powerful
Span 21-22:  the => most
Span 26-28:  United States => (country :name (name :op "United" :op "States"))
Span 13-14:  want => want-01

Langrangian relaxation converged after 19 iterations. Delta = 0.0
Oracle Span 24-25:  and => and
Oracle Span 10-11:  countries => country
Oracle Span 23-24:  country => country
Oracle Span 33-34:  country => country
Oracle Span 1-2:  dynamics => dynamic
Oracle Span 18-19:  India => (name :op "India")
Oracle Span 22-23:  largest => (large :degree most)
Oracle Span 31-32:  most => most
Oracle Span 4-5:  NSG => (organization :name (name :op "NSG"))
Oracle Span 16-17:  obstacles => obstacle
Oracle Span 7-8:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 32-33:  powerful => powerful
Oracle Span 26-28:  United States => (name :op "States" :op "United")
Oracle Span 13-14:  want => want-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	dynamics	_	NNS	NNS	_	6	nsubj	_	_
3	at	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	NSG	_	NNP	NNP	_	3	pobj	_	_
6	are	_	VBP	VBP	_	0	root	_	_
7	that	_	IN	IN	_	14	mark	_	_
8	officials	_	NNS	NNS	_	14	nsubj	_	_
9	from	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	countries	_	NNS	NNS	_	9	pobj	_	_
12	do	_	VBP	VBP	_	14	aux	_	_
13	not	_	RB	RB	_	14	neg	_	_
14	want	_	VB	VB	_	6	ccomp	_	_
15	to	_	TO	TO	_	17	aux	_	_
16	be	_	VB	VB	_	17	cop	_	_
17	obstacles	_	NNS	NNS	_	14	xcomp	_	_
18	to	_	TO	TO	_	17	prep	_	_
19	India	_	NNP	NNP	_	18	pobj	_	_
20	which	_	WDT	WDT	_	24	nsubj	_	_
21	is	_	VBZ	VBZ	_	24	cop	_	_
22	the	_	DT	DT	_	24	det	_	_
23	largest	_	JJS	JJS	_	24	amod	_	_
24	country	_	NN	NN	_	17	rcmod	_	_
25	and	_	CC	CC	_	24	cc	_	_
26	the	_	DT	DT	_	28	det	_	_
27	United	_	NNP	NNP	_	28	nn	_	_
28	States	_	NNPS	NNPS	_	24	conj	_	_
29	which	_	WDT	WDT	_	34	nsubj	_	_
30	is	_	VBZ	VBZ	_	34	cop	_	_
31	the	_	DT	DT	_	34	det	_	_
32	most	_	RBS	RBS	_	33	advmod	_	_
33	powerful	_	JJ	JJ	_	34	amod	_	_
34	country	_	NN	NN	_	28	rcmod	_	_
35	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, c2 / country)
(a / and, op, c4 / country)
(c2 / country, name, n / name)
(c4 / country, domain, c5 / country)
(c4 / country, name, n2 / name)
(c5 / country, mod, p / powerful)
(d / dynamic, domain, w / want-01)
(d / dynamic, location, o3 / organization)
(h / have-org-role-91, ARG2, o / official)
(l / large, degree, m / most)
(n / name, op, "India")
(n2 / name, op, "States")
(n2 / name, op, "United")
(n3 / name, op, "NSG")
(o2 / obstacle, prep-to, a / and)
(o3 / organization, name, n3 / name)
(p / powerful, degree, m2 / most)
(w / want-01, ARG1, o2 / obstacle)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(2, 1, 0),India,(country :name (name :op "India")),false), Span(1,2,List(3),dynamics,dynamics,false), Span(31,32,List(4),most,most,false), Span(24,25,List(5),and,and,false), Span(26,28,List(9, 8, 7, 6),United States,(country :name (name :op "United" :op "States")),false), Span(13,14,List(10),want,want-01,false), Span(10,11,List(11),countries,country,false), Span(16,17,List(12),obstacles,obstacle,false), Span(32,33,List(13),powerful,powerful,false), Span(7,8,List(16, 15, 14),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(21,22,List(17),the,most,false), Span(33,34,List(18),country.,country,false)),Map(2 -> "India", 5 -> and, 12 -> obstacle, 15 -> have-org-role-91, 8 -> "United", 18 -> country, 7 -> name, 17 -> most, 1 -> name, 4 -> most, 11 -> country, 14 -> person, 6 -> country, 0 -> country, 9 -> "States", 16 -> official, 3 -> dynamics, 10 -> want-01, 13 -> powerful),Map(n -> name, w -> want-01, h -> have-org-role-91, m2 -> most, p2 -> person, c4 -> country, d -> dynamics, m -> most, p -> powerful, a -> and, c3 -> country, o2 -> official, c -> country, o -> obstacle, c2 -> country, n2 -> name))),[Ljava.lang.String;@3614df62,Annotation([Ljava.lang.String;@c0aa708,[Ljava.lang.String;@1c8ce3e2,[Ljava.lang.String;@208d6939),Annotation([Ljava.lang.String;@30725d85,[Ljava.lang.String;@69199e64,[Ledu.cmu.lti.nlp.amr.Dependency;@1271e356),Annotation([Ljava.lang.String;@597e8480,[Ljava.lang.String;@7bc2745f,[Ljava.lang.String;@5e0d3ffd),Annotation([Ljava.lang.String;@43fb1c39,[Ljava.lang.String;@6e8cca42,[Ledu.cmu.lti.nlp.amr.Entity;@6042b40))
AMR:
(a / and, op, c2 / country)
(a / and, quant, m2 / most)
(c / country, name, n / name)
(c2 / country, location, c4 / country)
(c2 / country, name, n2 / name)
(c4 / country, mod, p / powerful)
(d / dynamics, poss, p2 / person)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o2 / official)
(n / name, op, "India")
(n2 / name, op, "States")
(n2 / name, op, "United")
(o / obstacle, destination, c / country)
(p / powerful, degree, m / most)
(p2 / person, location, c3 / country)
(w / want-01, ARG0, p2 / person)
(w / want-01, ARG1, o / obstacle)

Decoded in 1,013,489 microseconds
Sentence: Consensus on India will be difficult to reach when the NSG meets in November 2007.

Oracle Span 1:  Consensus => consensus
Oracle Span 2:  difficult => difficult
Oracle Span 3:  India => (country :name (name :op "India"))
Oracle Span 4:  meets => meet-03
Oracle Span 5:  November 2007 => (date-entity :month 11 :year 2007)
Oracle Span 6:  NSG => (organization :name (name :op "NSG"))
Oracle Span 7:  reach => reach-01
NER Entity: (country :name (name :op "India"))
NER Entity: (organization :name (name :op "NSG"))
Spans:
Span 0-1:  Consensus => consensus
Span 0-14:  Consensus on India will be difficult to reach when the NSG meets in November => (date-entity :year 2007 :month 11)
Span 5-6:  difficult => difficult
Span 11-12:  meets => meet-03
Span 7-8:  reach => reach-01

Langrangian relaxation converged after 5 iterations. Delta = 0.0
Oracle Span 0-1:  Consensus => consensus
Oracle Span 5-6:  difficult => difficult
Oracle Span 2-3:  India => (country :name (name :op "India"))
Oracle Span 11-12:  meets => meet-03
Oracle Span 13-15:  November 2007 => (date-entity :month 11 :year 2007)
Oracle Span 10-11:  NSG => (organization :name (name :op "NSG"))
Oracle Span 7-8:  reach => reach-01

Dependencies:
1	Consensus	_	NNP	NNP	_	6	nsubj	_	_
2	on	_	IN	IN	_	1	prep	_	_
3	India	_	NNP	NNP	_	2	pobj	_	_
4	will	_	MD	MD	_	6	aux	_	_
5	be	_	VB	VB	_	6	cop	_	_
6	difficult	_	JJ	JJ	_	0	root	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	reach	_	VB	VB	_	6	xcomp	_	_
9	when	_	WRB	WRB	_	12	advmod	_	_
10	the	_	DT	DT	_	11	det	_	_
11	NSG	_	NNP	NNP	_	12	nsubj	_	_
12	meets	_	VBZ	VBZ	_	8	advcl	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	November	_	NNP	NNP	_	13	pobj	_	_
15	2007	_	CD	CD	_	14	num	_	_
16	.	_	.	.	_	6	punct	_	_

Oracle:
(c / consensus, topic, c2 / country)
(c2 / country, name, n / name)
(d / difficult, domain, r / reach-01)
(d2 / date-entity, month, 11)
(d2 / date-entity, year, 2007)
(m / meet-03, ARG0, o / organization)
(m / meet-03, time, d2 / date-entity)
(n / name, op, "India")
(n2 / name, op, "NSG")
(o / organization, name, n2 / name)
(r / reach-01, ARG1, c / consensus)
(r / reach-01, time, m / meet-03)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),difficult,difficult,false), Span(0,14,List(3, 2, 1),Consensus on India will be difficult to reach when the NSG meets in November,(date-entity :year 2007 :month 11),false), Span(0,1,List(4),Consensus,consensus,false), Span(7,8,List(5),reach,reach-01,false), Span(11,12,List(6),meets,meet-03,false)),Map(2 -> 2007, 5 -> reach-01, 1 -> date-entity, 4 -> consensus, 6 -> meet-03, 0 -> difficult, 3 -> 11),Map(2 -> 2007, m -> meet-03, d -> difficult, 1 -> 11, d2 -> date-entity, r -> reach-01, c -> consensus))),[Ljava.lang.String;@147c132f,Annotation([Ljava.lang.String;@340d19de,[Ljava.lang.String;@52169c66,[Ljava.lang.String;@2b59b1d9),Annotation([Ljava.lang.String;@5f482af6,[Ljava.lang.String;@3570b28,[Ledu.cmu.lti.nlp.amr.Dependency;@65c44288),Annotation([Ljava.lang.String;@375f090,[Ljava.lang.String;@1d746592,[Ljava.lang.String;@2641335f),Annotation([Ljava.lang.String;@6156f51d,[Ljava.lang.String;@4d8b78d7,[Ledu.cmu.lti.nlp.amr.Entity;@73eddc01))
AMR:
(d / difficult, domain, c / consensus)
(d / difficult, domain, r / reach-01)
(d2 / date-entity, month, 1 / 11)
(d2 / date-entity, year, 2 / 2007)
(m / meet-03, ARG1, d / difficult)
(r / reach-01, ARG1, d2 / date-entity)

Decoded in 244,455 microseconds
Sentence: Israel's proposal gives officials from some countries reason to suggest an alternative approach to a specific exemption.

Oracle Span 1:  alternative => alternative
Oracle Span 2:  approach => approach-02
Oracle Span 3:  countries => country
Oracle Span 4:  exemption => exempt-01
Oracle Span 5:  gives => give-01
Oracle Span 6:  Israel => (country :name (name :op "Israel"))
Oracle Span 7:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 8:  proposal => propose-01
Oracle Span 9:  reason => reason
Oracle Span 10:  some => some
Oracle Span 11:  specific => specific
Oracle Span 12:  suggest => suggest-01
NER Entity: (country :name (name :op "Israel"))
Spans:
Span 17-18:   => exemption
Span 10-11:  an => suggest-01
Span 12-13:  approach => alternative
Span 6-7:  countries => some
Span 16-17:  exemption. => specific
Span 4-5:  from => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 2-3:  gives => proposal
Span 0-1:  Israel's => (country :name (name :op "Israel"))
Span 3-4:  officials => give-01
Span 7-8:  reason => country
Span 13-14:  to => approach-01

Langrangian relaxation converged after 32 iterations. Delta = 0.0
Oracle Span 12-13:  alternative => alternative
Oracle Span 13-14:  approach => approach-02
Oracle Span 7-8:  countries => country
Oracle Span 17-18:  exemption => exempt-01
Oracle Span 3-4:  gives => give-01
Oracle Span 0-1:  Israel => (country :name (name :op "Israel"))
Oracle Span 4-5:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 2-3:  proposal => propose-01
Oracle Span 8-9:  reason => reason
Oracle Span 6-7:  some => some
Oracle Span 16-17:  specific => specific
Oracle Span 10-11:  suggest => suggest-01

Dependencies:
1	Israel	_	NNP	NNP	_	3	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	proposal	_	NN	NN	_	4	nsubj	_	_
4	gives	_	VBZ	VBZ	_	0	root	_	_
5	officials	_	NNS	NNS	_	4	iobj	_	_
6	from	_	IN	IN	_	5	prep	_	_
7	some	_	DT	DT	_	8	det	_	_
8	countries	_	NNS	NNS	_	6	pobj	_	_
9	reason	_	NN	NN	_	4	dobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	suggest	_	VB	VB	_	4	vmod	_	_
12	an	_	DT	DT	_	14	det	_	_
13	alternative	_	JJ	JJ	_	14	amod	_	_
14	approach	_	NN	NN	_	11	dobj	_	_
15	to	_	TO	TO	_	11	prep	_	_
16	a	_	DT	DT	_	18	det	_	_
17	specific	_	JJ	JJ	_	18	amod	_	_
18	exemption	_	NN	NN	_	15	pobj	_	_
19	.	_	.	.	_	4	punct	_	_

Oracle:
(a / approach-02, ARG1, e / exempt-01)
(a / approach-02, mod, a2 / alternative)
(c / country, name, n / name)
(c2 / country, quant, s / some)
(e / exempt-01, mod, s3 / specific)
(g / give-01, ARG0, p / propose-01)
(g / give-01, ARG1, r / reason)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Israel")
(p / propose-01, ARG0, c / country)
(r / reason, prep-to, s2 / suggest-01)
(s2 / suggest-01, ARG0, o / official)
(s2 / suggest-01, ARG1, a / approach-02)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),exemption.,specific,false), Span(0,1,List(3, 2, 1),Israel's,(country :name (name :op "Israel")),false), Span(10,11,List(4),an,suggest-01,false), Span(13,14,List(5),to,approach-01,false), Span(6,7,List(6),countries,some,false), Span(17,18,List(7),,exemption,false), Span(12,13,List(8),approach,alternative,false), Span(3,4,List(9),officials,give-01,false), Span(4,5,List(12, 11, 10),from,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(7,8,List(13),reason,country,false), Span(2,3,List(14),gives,proposal,false)),Map(2 -> name, 5 -> approach-01, 12 -> official, 8 -> alternative, 7 -> exemption, 1 -> country, 4 -> suggest-01, 11 -> have-org-role-91, 14 -> proposal, 6 -> some, 0 -> specific, 9 -> give-01, 3 -> "Israel", 10 -> person, 13 -> country),Map(e -> exemption, n -> name, h -> have-org-role-91, s2 -> suggest-01, p2 -> proposal, s -> specific, g -> give-01, p -> person, a -> approach-01, a2 -> alternative, c -> country, s3 -> some, o -> official, c2 -> country))),[Ljava.lang.String;@469a4c2b,Annotation([Ljava.lang.String;@1e019dc0,[Ljava.lang.String;@3a043f7,[Ljava.lang.String;@3a122c5c),Annotation([Ljava.lang.String;@2e7dc421,[Ljava.lang.String;@3c80a3b3,[Ledu.cmu.lti.nlp.amr.Dependency;@3d3ef02f),Annotation([Ljava.lang.String;@16e55b18,[Ljava.lang.String;@56f9c929,[Ljava.lang.String;@6fdd657e),Annotation([Ljava.lang.String;@25284f22,[Ljava.lang.String;@1929fd04,[Ledu.cmu.lti.nlp.amr.Entity;@101df89))
AMR:
(a / approach-01, ARG1, e / exemption)
(a / approach-01, mod, a2 / alternative)
(c / country, name, n / name)
(c2 / country, quant, s3 / some)
(e / exemption, mod, s / specific)
(g / give-01, ARG0, p2 / proposal)
(g / give-01, ARG1, a / approach-01)
(g / give-01, ARG2, p / person)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Israel")
(p2 / proposal, poss, c / country)
(s2 / suggest-01, ARG1, a / approach-01)

Decoded in 786,660 microseconds
Sentence: Israel's record is good and better than India's in following international nuclear rules.

Oracle Span 1:  and => and
Oracle Span 2:  better => good
Oracle Span 3:  following => follow-02
Oracle Span 4:  good => good
Oracle Span 5:  India => (country :name (name :op "India"))
Oracle Span 6:  international => international
Oracle Span 7:  Israel => (country :name (name :op "Israel"))
Oracle Span 8:  nuclear => nucleus
Oracle Span 9:  record => record
Oracle Span 10:  rules => rule
NER Entity: (country :name (name :op "India"))
NER Entity: (country :name (name :op "Israel"))
Spans:
Span 13-14:   => nucleus
Span 14-15:   => rule
Span 4-5:  and => good
Span 5-6:  better => and
Span 8-9:  in => (country :name (name :op "India"))
Span 2-3:  is => record
Span 0-1:  Israel's => (country :name (name :op "Israel"))
Span 11-12:  nuclear => follow-01
Span 12-13:  rules. => international
Span 6-7:  than => (good :degree more)

Langrangian relaxation converged after 6 iterations. Delta = 0.0
Oracle Span 5-6:  and => and
Oracle Span 6-7:  better => good
Oracle Span 11-12:  following => follow-02
Oracle Span 4-5:  good => good
Oracle Span 8-9:  India => (country :name (name :op "India"))
Oracle Span 12-13:  international => international
Oracle Span 0-1:  Israel => (country :name (name :op "Israel"))
Oracle Span 13-14:  nuclear => nucleus
Oracle Span 2-3:  record => record
Oracle Span 14-15:  rules => rule

Dependencies:
1	Israel	_	NNP	NNP	_	3	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	record	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	cop	_	_
5	good	_	JJ	JJ	_	0	root	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	better	_	JJR	JJR	_	5	conj	_	_
8	than	_	IN	IN	_	5	prep	_	_
9	India	_	NNP	NNP	_	8	pobj	_	_
10	's	_	POS	POS	_	9	possessive	_	_
11	in	_	IN	IN	_	5	prep	_	_
12	following	_	VBG	VBG	_	11	pcomp	_	_
13	international	_	JJ	JJ	_	15	amod	_	_
14	nuclear	_	JJ	JJ	_	15	amod	_	_
15	rules	_	NNS	NNS	_	12	dobj	_	_
16	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, domain, r / record)
(a / and, op, g / good)
(a / and, op, g2 / good)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(f / follow-02, ARG0, r / record)
(f / follow-02, ARG1, r3 / rule)
(n / name, op, "Israel")
(n2 / name, op, "India")
(r / record, poss, c / country)
(r3 / rule, mod, i / international)
(r3 / rule, mod, n3 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),rules.,international,false), Span(0,1,List(3, 2, 1),Israel's,(country :name (name :op "Israel")),false), Span(6,7,List(5, 4),than,(good :degree more),false), Span(4,5,List(6),and,good,false), Span(13,14,List(7),,nucleus,false), Span(5,6,List(8),better,and,false), Span(11,12,List(9),nuclear,follow-01,false), Span(2,3,List(10),is,record,false), Span(8,9,List(13, 12, 11),in,(country :name (name :op "India")),false), Span(14,15,List(14),,rule,false)),Map(2 -> name, 5 -> more, 12 -> name, 8 -> and, 7 -> nucleus, 1 -> country, 4 -> good, 11 -> country, 14 -> rule, 6 -> good, 0 -> international, 9 -> follow-01, 3 -> "Israel", 10 -> record, 13 -> "India"),Map(n -> name, m -> more, g2 -> good, g -> good, r2 -> rule, a -> and, n3 -> name, i -> international, r -> record, c -> country, f -> follow-01, n2 -> nucleus, c2 -> country))),[Ljava.lang.String;@4540aa74,Annotation([Ljava.lang.String;@272fdaad,[Ljava.lang.String;@68ac815e,[Ljava.lang.String;@1eb7bd9d),Annotation([Ljava.lang.String;@5ee4b735,[Ljava.lang.String;@747e4f6,[Ledu.cmu.lti.nlp.amr.Dependency;@b6d2331),Annotation([Ljava.lang.String;@28152c94,[Ljava.lang.String;@53b36bbc,[Ljava.lang.String;@6b6b4568),Annotation([Ljava.lang.String;@97d979f,[Ljava.lang.String;@88d6ba8,[Ledu.cmu.lti.nlp.amr.Entity;@402b1f8e))
AMR:
(a / and, op, g / good)
(a / and, op, g2 / good)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(f / follow-01, ARG0, r / record)
(f / follow-01, ARG1, r2 / rule)
(f / follow-01, ARG6, c2 / country)
(g / good, degree, m / more)
(g2 / good, domain, r / record)
(n / name, op, "Israel")
(n3 / name, op, "India")
(r / record, poss, c / country)
(r2 / rule, mod, i / international)
(r2 / rule, mod, n2 / nucleus)

Decoded in 283,787 microseconds
Sentence: Despite ties between Israeli and U.S. governments the Bush Administration rejected the Israeli proposal.

Oracle Span 1:  Administration => administrate-01
Oracle Span 2:  between => between
Oracle Span 3:  Bush => (person :name (name :op "Bush"))
Oracle Span 4:  governments => (government-organization :ARG0-of govern-01)
Oracle Span 5:  Israeli => (country :name (name :op "Israel"))
Oracle Span 6:  proposal => propose-01
Oracle Span 7:  rejected => reject-01
Oracle Span 8:  ties => tie-01
Oracle Span 9:  U.S. => (country :name (name :op "U.S."))
NER Entity: (organization :name (name :op "Bush" :op "Administration"))
NER Entity: (country :name (name :op "U.S."))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 4-5:  and => and
Span 2-3:  between => between
Span 8-9:  Bush => (person :name (name :op "Bush"))
Span 6-7:  governments => (government-organization :ARG0-of govern-01)
Span 13-14:  proposal. => propose-01
Span 10-11:  rejected => reject-01
Span 1-2:  ties => tie-01
Span 5-6:  U.S. => (country :name (name :op "U.S."))

Langrangian relaxation converged after 32 iterations. Delta = 0.0
Oracle Span 9-10:  Administration => administrate-01
Oracle Span 2-3:  between => between
Oracle Span 8-9:  Bush => (person :name (name :op "Bush"))
Oracle Span 6-7:  governments => (government-organization :ARG0-of govern-01)
Oracle Span 3-4:  Israeli => (country :name (name :op "Israel"))
Oracle Span 13-14:  proposal => propose-01
Oracle Span 10-11:  rejected => reject-01
Oracle Span 1-2:  ties => tie-01
Oracle Span 5-6:  U.S. => (country :name (name :op "U.S."))

Dependencies:
1	Despite	_	IN	IN	_	11	prep	_	_
2	ties	_	NNS	NNS	_	1	pobj	_	_
3	between	_	IN	IN	_	2	prep	_	_
4	Israeli	_	NNP	NNP	_	7	nn	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	U.S.	_	NNP	NNP	_	4	conj	_	_
7	governments	_	NNS	NNS	_	3	pobj	_	_
8	the	_	DT	DT	_	10	det	_	_
9	Bush	_	NNP	NNP	_	10	nn	_	_
10	Administration	_	NNP	NNP	_	11	nsubj	_	_
11	rejected	_	VBD	VBD	_	0	root	_	_
12	the	_	DT	DT	_	14	det	_	_
13	Israeli	_	JJ	JJ	_	14	amod	_	_
14	proposal	_	NN	NN	_	11	dobj	_	_
15	.	_	.	.	_	11	punct	_	_

Oracle:
(b / between, op, g4 / government-organization)
(c / country, name, n2 / name)
(c2 / country, name, n / name)
(g5 / govern-01, ARG0, g4 / government-organization)
(g5 / govern-01, ARG1, c2 / country)
(n / name, op, "U.S.")
(n2 / name, op, "Israel")
(n3 / name, op, "Bush")
(p / person, name, n3 / name)
(p2 / propose-01, ARG0, c / country)
(r / reject-01, ARG1, p2 / propose-01)
(r / reject-01, concession, t / tie-01)
(t / tie-01, ARG1, b / between)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),rejected,reject-01,false), Span(13,14,List(1),proposal.,propose-01,false), Span(2,3,List(2),between,between,false), Span(1,2,List(3),ties,tie-01,false), Span(5,6,List(6, 5, 4),U.S.,(country :name (name :op "U.S.")),false), Span(6,7,List(8, 7),governments,(government-organization :ARG0-of govern-01),false), Span(8,9,List(11, 10, 9),Bush,(person :name (name :op "Bush")),false), Span(4,5,List(12),and,and,false)),Map(2 -> between, 5 -> name, 12 -> and, 8 -> govern-01, 7 -> government-organization, 1 -> propose-01, 4 -> country, 11 -> "Bush", 6 -> "U.S.", 0 -> reject-01, 9 -> person, 3 -> tie-01, 10 -> name),Map(n -> name, t -> tie-01, b -> between, p2 -> person, g2 -> govern-01, g -> government-organization, p -> propose-01, a -> and, r -> reject-01, c -> country, n2 -> name))),[Ljava.lang.String;@358efc3c,Annotation([Ljava.lang.String;@39111a84,[Ljava.lang.String;@4b988d48,[Ljava.lang.String;@1183fda8),Annotation([Ljava.lang.String;@532e9cb8,[Ljava.lang.String;@62da6963,[Ledu.cmu.lti.nlp.amr.Dependency;@6d275abd),Annotation([Ljava.lang.String;@63c7840c,[Ljava.lang.String;@442b0f90,[Ljava.lang.String;@750bf707),Annotation([Ljava.lang.String;@22aeb9a9,[Ljava.lang.String;@7d96be14,[Ledu.cmu.lti.nlp.amr.Entity;@615d79b9))
AMR:
(b / between, op, g / government-organization)
(c / country, name, n / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(n / name, op, "U.S.")
(n2 / name, op, "Bush")
(p / propose-01, ARG1, t / tie-01)
(p2 / person, name, n2 / name)
(r / reject-01, ARG0, p2 / person)
(r / reject-01, ARG1, p / propose-01)
(t / tie-01, ARG1, a / and)
(t / tie-01, ARG3, b / between)

Decoded in 546,702 microseconds
Sentence: The proposal may complicate the Bush administration's efforts to win an exemption for India to engage in nuclear trade.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  Bush => (person :name (name :op "Bush"))
Oracle Span 3:  complicate => complicate-01
Oracle Span 4:  efforts => effort
Oracle Span 5:  engage => engage-01
Oracle Span 6:  exemption => exempt-01
Oracle Span 7:  India => (country :name (name :op "India"))
Oracle Span 8:  may => possible
Oracle Span 9:  nuclear => nucleus
Oracle Span 10:  proposal => (thing :ARG1-of propose-01)
Oracle Span 11:  trade => trade-01
Oracle Span 12:  win => win-01
NER Entity: (person :name (name :op "Bush"))
NER Entity: (country :name (name :op "India"))
Spans:
Span 19-20:   => trade-01
Span 10-11:  an => win-01
Span 5-6:  Bush => (person :name (name :op "Bush"))
Span 3-4:  complicate => complicate-01
Span 12-13:  for => exempt-01
Span 16-17:  in => engage-01
Span 1-2:  proposal => (thing :ARG1-of propose-01)
Span 14-15:  to => (country :name (name :op "India"))
Span 8-9:  to => effort

Langrangian relaxation converged after 37 iterations. Delta = 0.0
Oracle Span 6-7:  administration => administrate-01
Oracle Span 5-6:  Bush => (person :name (name :op "Bush"))
Oracle Span 3-4:  complicate => complicate-01
Oracle Span 8-9:  efforts => effort
Oracle Span 16-17:  engage => engage-01
Oracle Span 12-13:  exemption => exempt-01
Oracle Span 14-15:  India => (country :name (name :op "India"))
Oracle Span 2-3:  may => possible
Oracle Span 18-19:  nuclear => nucleus
Oracle Span 1-2:  proposal => (thing :ARG1-of propose-01)
Oracle Span 19-20:  trade => trade-01
Oracle Span 10-11:  win => win-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	proposal	_	NN	NN	_	4	nsubj	_	_
3	may	_	MD	MD	_	4	aux	_	_
4	complicate	_	VB	VB	_	0	root	_	_
5	the	_	DT	DT	_	7	det	_	_
6	Bush	_	NNP	NNP	_	7	nn	_	_
7	administration	_	NN	NN	_	9	poss	_	_
8	's	_	POS	POS	_	7	possessive	_	_
9	efforts	_	NNS	NNS	_	4	dobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	win	_	VB	VB	_	9	vmod	_	_
12	an	_	DT	DT	_	13	det	_	_
13	exemption	_	NN	NN	_	11	dobj	_	_
14	for	_	IN	IN	_	13	prep	_	_
15	India	_	NNP	NNP	_	14	pobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	engage	_	VB	VB	_	11	vmod	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	nuclear	_	JJ	JJ	_	20	amod	_	_
20	trade	_	NN	NN	_	18	pobj	_	_
21	.	_	.	.	_	4	punct	_	_

Oracle:
(c / complicate-01, ARG0, t / thing)
(c / complicate-01, ARG1, e / effort)
(c2 / country, name, n2 / name)
(e / effort, purpose, w / win-01)
(e2 / exempt-01, ARG1, c2 / country)
(e2 / exempt-01, purpose, e3 / engage-01)
(e3 / engage-01, ARG1, c2 / country)
(e3 / engage-01, ARG2, t2 / trade-01)
(n / name, op, "Bush")
(n2 / name, op, "India")
(p / possible, domain, c / complicate-01)
(p2 / propose-01, ARG1, t / thing)
(p3 / person, name, n / name)
(t2 / trade-01, mod, n3 / nucleus)
(w / win-01, ARG1, e2 / exempt-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(2, 1, 0),Bush,(person :name (name :op "Bush")),false), Span(12,13,List(3),for,exempt-01,false), Span(14,15,List(6, 5, 4),to,(country :name (name :op "India")),false), Span(19,20,List(7),,trade-01,false), Span(3,4,List(8),complicate,complicate-01,false), Span(10,11,List(9),an,win-01,false), Span(8,9,List(10),to,effort,false), Span(16,17,List(11),in,engage-01,false), Span(1,2,List(13, 12),proposal,(thing :ARG1-of propose-01),false)),Map(2 -> "Bush", 5 -> name, 12 -> thing, 8 -> complicate-01, 7 -> trade-01, 1 -> name, 4 -> country, 11 -> engage-01, 6 -> "India", 0 -> person, 9 -> win-01, 3 -> exempt-01, 10 -> effort, 13 -> propose-01),Map(w -> win-01, e -> exempt-01, n -> name, t -> trade-01, p2 -> propose-01, e2 -> effort, p -> person, t2 -> thing, c -> country, e3 -> engage-01, c2 -> complicate-01, n2 -> name))),[Ljava.lang.String;@c4bb99f,Annotation([Ljava.lang.String;@2b080232,[Ljava.lang.String;@5aba7f6a,[Ljava.lang.String;@74a538bc),Annotation([Ljava.lang.String;@25f3e0f6,[Ljava.lang.String;@4e816fe8,[Ledu.cmu.lti.nlp.amr.Dependency;@47c9087d),Annotation([Ljava.lang.String;@1a74b8e0,[Ljava.lang.String;@203a0f08,[Ljava.lang.String;@6581dac8),Annotation([Ljava.lang.String;@6a04bce5,[Ljava.lang.String;@5588bafd,[Ledu.cmu.lti.nlp.amr.Entity;@253abd0b))
AMR:
(c / country, name, n2 / name)
(c2 / complicate-01, ARG0, t2 / thing)
(c2 / complicate-01, ARG1, e2 / effort)
(e / exempt-01, ARG1, e3 / engage-01)
(e2 / effort, purpose, w / win-01)
(e3 / engage-01, ARG0, c / country)
(e3 / engage-01, ARG2, t / trade-01)
(n / name, op, "Bush")
(n2 / name, op, "India")
(p / person, name, n / name)
(p2 / propose-01, ARG1, t2 / thing)
(w / win-01, ARG0, p / person)
(w / win-01, ARG1, e / exempt-01)

Decoded in 721,101 microseconds
Sentence: President Bush and Secretary of State Condoleezza Rice view the Pact as an important part of the Bush administration's foreign policy legacy.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  and => and
Oracle Span 3:  Bush => (person :name (name :op "Bush"))
Oracle Span 4:  Condoleezza Rice => (person :name (name :op "Rice" :op "Condoleezza"))
Oracle Span 5:  foreign => foreign
Oracle Span 6:  important => important
Oracle Span 7:  legacy => legacy
Oracle Span 8:  Pact => pact
Oracle Span 9:  part => part
Oracle Span 10:  policy => policy
Oracle Span 11:  President => (have-org-role-91 :ARG2 president)
Oracle Span 12:  Secretary => (have-org-role-91 :ARG2 secretary)
Oracle Span 13:  State => state
Oracle Span 14:  view => view-02
NER Entity: (person :name (name :op "Bush"))
NER Entity: (person :name (name :op "Condoleezza" :op "Rice"))
Spans:
Span 22-23:   => legacy
Span 2-3:  and => and
Span 1-2:  Bush => (person :name (name :op "Bush"))
Span 17-18:  Bush => (person :name (name :op "Bush"))
Span 6-8:  Condoleezza Rice => (person :name (name :op "Condoleezza" :op "Rice"))
Span 13-14:  important => important
Span 21-22:  legacy. => policy
Span 10-11:  Pact => "Pact"
Span 14-15:  part => have-part-91
Span 20-21:  policy => foreign
Span 3-4:  Secretary => (have-org-role-91 :ARG2 secretary)
Span 5-6:  State => state
Span 8-9:  view => view-02

Langrangian relaxation converged after 33 iterations. Delta = 0.0
Oracle Span 18-19:  administration => administrate-01
Oracle Span 2-3:  and => and
Oracle Span 1-2:  Bush => (person :name (name :op "Bush"))
Oracle Span 6-8:  Condoleezza Rice => (person :name (name :op "Rice" :op "Condoleezza"))
Oracle Span 20-21:  foreign => foreign
Oracle Span 13-14:  important => important
Oracle Span 22-23:  legacy => legacy
Oracle Span 10-11:  Pact => pact
Oracle Span 14-15:  part => part
Oracle Span 21-22:  policy => policy
Oracle Span 0-1:  President => (have-org-role-91 :ARG2 president)
Oracle Span 3-4:  Secretary => (have-org-role-91 :ARG2 secretary)
Oracle Span 5-6:  State => state
Oracle Span 8-9:  view => view-02

Dependencies:
1	President	_	NNP	NNP	_	2	nn	_	_
2	Bush	_	NNP	NNP	_	9	nsubj	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	Secretary	_	NNP	NNP	_	2	conj	_	_
5	of	_	IN	IN	_	2	prep	_	_
6	State	_	NNP	NNP	_	8	nn	_	_
7	Condoleezza	_	NNP	NNP	_	8	nn	_	_
8	Rice	_	NNP	NNP	_	5	pobj	_	_
9	view	_	VBP	VBP	_	0	root	_	_
10	the	_	DT	DT	_	11	det	_	_
11	Pact	_	NNP	NNP	_	9	dobj	_	_
12	as	_	IN	IN	_	9	prep	_	_
13	an	_	DT	DT	_	15	det	_	_
14	important	_	JJ	JJ	_	15	amod	_	_
15	part	_	NN	NN	_	12	pobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	the	_	DT	DT	_	19	det	_	_
18	Bush	_	NNP	NNP	_	19	nn	_	_
19	administration	_	NN	NN	_	23	poss	_	_
20	's	_	POS	POS	_	19	possessive	_	_
21	foreign	_	JJ	JJ	_	23	amod	_	_
22	policy	_	NN	NN	_	23	nn	_	_
23	legacy	_	NN	NN	_	16	pobj	_	_
24	.	_	.	.	_	9	punct	_	_

Oracle:
(a / and, op, p / person)
(a / and, op, p6 / person)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG2, p5 / president)
(h3 / have-org-role-91, ARG0, p6 / person)
(h3 / have-org-role-91, ARG2, s / secretary)
(l / legacy, mod, p4 / policy)
(n / name, op, "Bush")
(n2 / name, op, "Condoleezza")
(n2 / name, op, "Rice")
(p / person, name, n / name)
(p3 / part, mod, i / important)
(p4 / policy, mod, f / foreign)
(p6 / person, name, n2 / name)
(s / secretary, mod, s2 / state)
(v / view-02, ARG0, a / and)
(v / view-02, ARG1, p2 / pact)
(v / view-02, ARG2, p3 / part)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(1, 0),Secretary,(have-org-role-91 :ARG2 secretary),false), Span(13,14,List(2),important,important,false), Span(22,23,List(3),,legacy,false), Span(10,11,List(4),Pact,"Pact",false), Span(6,8,List(8, 7, 6, 5),Condoleezza Rice,(person :name (name :op "Condoleezza" :op "Rice")),false), Span(5,6,List(9),State,state,false), Span(20,21,List(10),policy,foreign,false), Span(21,22,List(11),legacy.,policy,false), Span(2,3,List(12),and,and,false), Span(1,2,List(15, 14, 13),Bush,(person :name (name :op "Bush")),false), Span(17,18,List(18, 17, 16),Bush,(person :name (name :op "Bush")),false), Span(8,9,List(19),view,view-02,false), Span(14,15,List(20),part,have-part-91,false)),Map(2 -> important, 5 -> person, 12 -> and, 15 -> "Bush", 8 -> "Rice", 18 -> "Bush", 7 -> "Condoleezza", 17 -> name, 1 -> secretary, 4 -> "Pact", 11 -> policy, 14 -> name, 20 -> have-part-91, 6 -> name, 0 -> have-org-role-91, 9 -> state, 16 -> person, 19 -> view-02, 3 -> legacy, 10 -> foreign, 13 -> person),Map(n -> name, h -> have-org-role-91, P -> "Pact", h2 -> have-part-91, s2 -> state, p2 -> policy, s -> secretary, v -> view-02, p -> person, n3 -> name, a -> and, p4 -> person, i -> important, l -> legacy, f -> foreign, p3 -> person, n2 -> name))),[Ljava.lang.String;@3723d9f5,Annotation([Ljava.lang.String;@56095800,[Ljava.lang.String;@3bf62c60,[Ljava.lang.String;@44c09536),Annotation([Ljava.lang.String;@6d05102a,[Ljava.lang.String;@71d09cd2,[Ledu.cmu.lti.nlp.amr.Dependency;@7b4f3ba4),Annotation([Ljava.lang.String;@3be668de,[Ljava.lang.String;@7ea7abc8,[Ljava.lang.String;@be48ec2),Annotation([Ljava.lang.String;@9f41601,[Ljava.lang.String;@15c2f79,[Ledu.cmu.lti.nlp.amr.Entity;@42663d71))
AMR:
(a / and, op, p3 / person)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, v / view-02)
(h / have-org-role-91, ARG2, s / secretary)
(h2 / have-part-91, ARG0, p2 / policy)
(h2 / have-part-91, ARG1, p4 / person)
(h2 / have-part-91, mod, i / important)
(l / legacy, mod, p2 / policy)
(n / name, op, "Condoleezza")
(n / name, op, "Rice")
(n2 / name, op, "Bush")
(n3 / name, op, "Bush")
(p / person, mod, s2 / state)
(p / person, name, n / name)
(p2 / policy, mod, f / foreign)
(p3 / person, name, n2 / name)
(p4 / person, name, n3 / name)
(v / view-02, ARG0, p3 / person)
(v / view-02, ARG1, P / "Pact")
(v / view-02, ARG2, h2 / have-part-91)

Decoded in 1,120,129 microseconds
Sentence: The deal is controversial in India and Congress must give approval.

Oracle Span 1:  and => and
Oracle Span 2:  approval => approve-01
Oracle Span 3:  Congress => (government-organization :name (name :op "Congress"))
Oracle Span 4:  controversial => controversy
Oracle Span 5:  deal => deal
Oracle Span 6:  give => give-01
Oracle Span 7:  India => (country :name (name :op "India"))
NER Entity: (country :name (name :op "India"))
NER Entity: (organization :name (name :op "Congress"))
Spans:
Span 6-7:  and => and
Span 10-11:  approval. => approve-01
Span 7-8:  Congress => (government-organization :name (name :op "Congress"))
Span 3-4:  controversial => controversial
Span 1-2:  deal => deal
Span 5-6:  India => (country :name (name :op "India"))
Span 8-9:  must => muster-01

Langrangian relaxation converged after 55 iterations. Delta = 0.0
Oracle Span 6-7:  and => and
Oracle Span 10-11:  approval => approve-01
Oracle Span 7-8:  Congress => (government-organization :name (name :op "Congress"))
Oracle Span 3-4:  controversial => controversy
Oracle Span 1-2:  deal => deal
Oracle Span 9-10:  give => give-01
Oracle Span 5-6:  India => (country :name (name :op "India"))

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	deal	_	NN	NN	_	4	nsubj	_	_
3	is	_	VBZ	VBZ	_	4	cop	_	_
4	controversial	_	JJ	JJ	_	0	root	_	_
5	in	_	IN	IN	_	10	mark	_	_
6	India	_	NNP	NNP	_	10	nsubj	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	Congress	_	NNP	NNP	_	6	conj	_	_
9	must	_	MD	MD	_	10	aux	_	_
10	give	_	VB	VB	_	4	advcl	_	_
11	approval	_	NN	NN	_	10	dobj	_	_
12	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, c / controversy)
(a2 / approve-01, ARG0, g2 / government-organization)
(c / controversy, domain, d / deal)
(c / controversy, location, c2 / country)
(c2 / country, name, n2 / name)
(g / give-01, ARG0, g2 / government-organization)
(g / give-01, ARG1, a2 / approve-01)
(g2 / government-organization, name, n / name)
(n / name, op, "Congress")
(n2 / name, op, "India")

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),and,and,false), Span(10,11,List(1),approval.,approve-01,false), Span(7,8,List(4, 3, 2),Congress,(government-organization :name (name :op "Congress")),false), Span(1,2,List(5),deal,deal,false), Span(3,4,List(6),controversial,controversial,false), Span(8,9,List(7),must,muster-01,false), Span(5,6,List(10, 9, 8),India,(country :name (name :op "India")),false)),Map(2 -> government-organization, 5 -> deal, 8 -> country, 7 -> muster-01, 1 -> approve-01, 4 -> "Congress", 6 -> controversial, 9 -> name, 0 -> and, 10 -> "India", 3 -> name),Map(n -> name, m -> muster-01, d -> deal, g -> government-organization, a -> and, a2 -> approve-01, c -> controversial, n2 -> name, c2 -> country))),[Ljava.lang.String;@7013aab7,Annotation([Ljava.lang.String;@1d18aae8,[Ljava.lang.String;@53ca6bc0,[Ljava.lang.String;@7d9cd58f),Annotation([Ljava.lang.String;@10379e99,[Ljava.lang.String;@48a0399d,[Ledu.cmu.lti.nlp.amr.Dependency;@4834df22),Annotation([Ljava.lang.String;@531f5b06,[Ljava.lang.String;@7f70d4aa,[Ljava.lang.String;@36d56608),Annotation([Ljava.lang.String;@5876723f,[Ljava.lang.String;@7198c55c,[Ledu.cmu.lti.nlp.amr.Entity;@8b48a41))
AMR:
(a / and, op, c2 / country)
(a2 / approve-01, ARG0, g / government-organization)
(a2 / approve-01, ARG1, c / controversial)
(c / controversial, domain, d / deal)
(c2 / country, name, n2 / name)
(g / government-organization, name, n / name)
(m / muster-01, ARG1, a2 / approve-01)
(m / muster-01, ARG6, a / and)
(n / name, op, "Congress")
(n2 / name, op, "India")

Decoded in 550,669 microseconds
Sentence: Delays in winning approval for the India deal could have a negative effect on the administration's foreign policy legacy with delay until an election year having the most negative effect.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  approval => approve-01
Oracle Span 3:  could => possible
Oracle Span 4:  deal => deal
Oracle Span 5:  delay => delay-01
Oracle Span 6:  Delays => delay-01
Oracle Span 7:  effect => effect-01
Oracle Span 8:  effect => effect-01
Oracle Span 9:  election => elect-01
Oracle Span 10:  foreign => foreign
Oracle Span 11:  India => (country :name (name :op "India"))
Oracle Span 12:  legacy => legacy
Oracle Span 13:  most => most
Oracle Span 14:  negative => negative
Oracle Span 15:  negative => negative
Oracle Span 16:  policy => policy
Oracle Span 17:  winning => win-01
Oracle Span 18:  year => year
NER Entity: (country :name (name :op "India"))
Spans:
Span 30-31:   => effect
Span 15-16:  administration's => (government-organization :ARG0-of administrate-01)
Span 22-23:  an => until
Span 3-4:  approval => approve-01
Span 8-9:  could => possible
Span 7-8:  deal => deal-01
Span 0-1:  Delays => delay-01
Span 12-13:  effect => effect
Span 29-30:  effect. => negative
Span 9-10:  have => have-03
Span 25-26:  having => year
Span 6-7:  India => (country :name (name :op "India"))
Span 18-19:  legacy => policy
Span 11-12:  negative => negative
Span 28-29:  negative => most
Span 17-18:  policy => foreign
Span 21-22:  until => delay-01
Span 2-3:  winning => win-01
Span 19-20:  with => legacy
Span 24-25:  year => elect-01

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 15-16:  administration => administrate-01
Oracle Span 3-4:  approval => approve-01
Oracle Span 8-9:  could => possible
Oracle Span 7-8:  deal => deal
Oracle Span 21-22:  delay => delay-01
Oracle Span 0-1:  Delays => delay-01
Oracle Span 12-13:  effect => effect-01
Oracle Span 30-31:  effect => effect-01
Oracle Span 24-25:  election => elect-01
Oracle Span 17-18:  foreign => foreign
Oracle Span 6-7:  India => (country :name (name :op "India"))
Oracle Span 19-20:  legacy => legacy
Oracle Span 28-29:  most => most
Oracle Span 11-12:  negative => negative
Oracle Span 29-30:  negative => negative
Oracle Span 18-19:  policy => policy
Oracle Span 2-3:  winning => win-01
Oracle Span 25-26:  year => year

Dependencies:
1	Delays	_	NNS	NNS	_	10	nsubj	_	_
2	in	_	IN	IN	_	1	prep	_	_
3	winning	_	VBG	VBG	_	4	amod	_	_
4	approval	_	NN	NN	_	2	pobj	_	_
5	for	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	8	det	_	_
7	India	_	NNP	NNP	_	8	nn	_	_
8	deal	_	NN	NN	_	5	pobj	_	_
9	could	_	MD	MD	_	10	aux	_	_
10	have	_	VB	VB	_	0	root	_	_
11	a	_	DT	DT	_	13	det	_	_
12	negative	_	JJ	JJ	_	13	amod	_	_
13	effect	_	NN	NN	_	10	dobj	_	_
14	on	_	IN	IN	_	13	prep	_	_
15	the	_	DT	DT	_	16	det	_	_
16	administration	_	NN	NN	_	20	poss	_	_
17	's	_	POS	POS	_	16	possessive	_	_
18	foreign	_	JJ	JJ	_	20	amod	_	_
19	policy	_	NN	NN	_	20	nn	_	_
20	legacy	_	NN	NN	_	14	pobj	_	_
21	with	_	IN	IN	_	20	prep	_	_
22	delay	_	NN	NN	_	21	pobj	_	_
23	until	_	IN	IN	_	22	prep	_	_
24	an	_	DT	DT	_	26	det	_	_
25	election	_	NN	NN	_	26	nn	_	_
26	year	_	NN	NN	_	23	pobj	_	_
27	having	_	VBG	VBG	_	26	vmod	_	_
28	the	_	DT	DT	_	31	det	_	_
29	most	_	RBS	RBS	_	30	advmod	_	_
30	negative	_	JJ	JJ	_	31	amod	_	_
31	effect	_	NN	NN	_	27	dobj	_	_
32	.	_	.	.	_	10	punct	_	_

Oracle:
(a / approve-01, ARG1, d2 / deal)
(c / country, name, n / name)
(d / delay-01, ARG1, w / win-01)
(d2 / deal, mod, c / country)
(d3 / delay-01, ARG2, y / year)
(e / effect-01, ARG0, d3 / delay-01)
(e / effect-01, mod, n3 / negative)
(e4 / effect-01, ARG0, d / delay-01)
(e4 / effect-01, ARG1, l / legacy)
(e4 / effect-01, mod, n2 / negative)
(l / legacy, mod, p2 / policy)
(n / name, op, "India")
(n3 / negative, degree, m / most)
(p / possible, domain, e4 / effect-01)
(p / possible, prep-with, d3 / delay-01)
(p2 / policy, mod, f / foreign)
(w / win-01, ARG1, a / approve-01)
(y / year, mod, e2 / elect-01)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),legacy,policy,false), Span(0,1,List(1),Delays,delay-01,false), Span(11,12,List(2),negative,negative,false), Span(30,31,List(3),,effect,false), Span(21,22,List(4),until,delay-01,false), Span(2,3,List(5),winning,win-01,false), Span(19,20,List(6),with,legacy,false), Span(24,25,List(7),year,elect-01,false), Span(25,26,List(8),having,year,false), Span(8,9,List(9),could,possible,false), Span(7,8,List(10),deal,deal-01,false), Span(9,10,List(11),have,have-03,false), Span(28,29,List(12),negative,most,false), Span(22,23,List(13),an,until,false), Span(6,7,List(16, 15, 14),India,(country :name (name :op "India")),false), Span(29,30,List(17),effect.,negative,false), Span(17,18,List(18),policy,foreign,false), Span(15,16,List(20, 19),administration's,(government-organization :ARG0-of administrate-01),false), Span(12,13,List(21),effect,effect,false), Span(3,4,List(22),approval,approve-01,false)),Map(2 -> negative, 5 -> win-01, 12 -> most, 15 -> name, 8 -> year, 21 -> effect, 18 -> foreign, 7 -> elect-01, 17 -> negative, 1 -> delay-01, 4 -> delay-01, 11 -> have-03, 14 -> country, 20 -> administrate-01, 6 -> legacy, 22 -> approve-01, 0 -> policy, 9 -> possible, 16 -> "India", 19 -> government-organization, 3 -> effect, 10 -> deal-01, 13 -> until),Map(e -> effect, n -> negative, w -> win-01, h -> have-03, d3 -> deal-01, e2 -> elect-01, p2 -> possible, d -> delay-01, m -> most, g -> government-organization, p -> policy, y -> year, a -> administrate-01, n3 -> negative, d2 -> delay-01, a2 -> approve-01, c -> country, u -> until, l -> legacy, f -> foreign, e3 -> effect, n2 -> name))),[Ljava.lang.String;@ff32e15,Annotation([Ljava.lang.String;@6d240b4f,[Ljava.lang.String;@5d0ba3b4,[Ljava.lang.String;@65360505),Annotation([Ljava.lang.String;@73a30c30,[Ljava.lang.String;@3e900f78,[Ledu.cmu.lti.nlp.amr.Dependency;@3e061d1d),Annotation([Ljava.lang.String;@6bcd39f5,[Ljava.lang.String;@647a30,[Ljava.lang.String;@3e315e8b),Annotation([Ljava.lang.String;@305152a5,[Ljava.lang.String;@3251c7cb,[Ledu.cmu.lti.nlp.amr.Entity;@11c78e4b))
AMR:
(a / administrate-01, ARG0, g / government-organization)
(a / administrate-01, ARG1, n3 / negative)
(a2 / approve-01, ARG1, d3 / deal-01)
(c / country, name, n2 / name)
(d / delay-01, ARG1, a2 / approve-01)
(d2 / delay-01, ARG1, y / year)
(d3 / deal-01, ARG1, c / country)
(e / effect, mod, n3 / negative)
(e2 / elect-01, ARG0, g / government-organization)
(e2 / elect-01, ARG1, y / year)
(e3 / effect, mod, n / negative)
(h / have-03, ARG0, d / delay-01)
(h / have-03, ARG1, e3 / effect)
(l / legacy, mod, p / policy)
(l / legacy, poss, g / government-organization)
(n2 / name, op, "India")
(n3 / negative, degree, m / most)
(p / policy, mod, f / foreign)
(p / policy, poss, d3 / deal-01)
(p2 / possible, domain, h / have-03)
(u / until, op, y / year)
(w / win-01, ARG1, a2 / approve-01)

Decoded in 1,794,770 microseconds
Sentence: State Department spokesman Tom Casey stated the U.S. government views the India deal as unique and does not see the deal as a precedent for any other country including Israel.

Oracle Span 1:  and => and
Oracle Span 2:  any => any
Oracle Span 3:  country => country
Oracle Span 4:  deal => deal
Oracle Span 5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6:  including => include-01
Oracle Span 7:  India => (country :name (name :op "India"))
Oracle Span 8:  Israel => (country :name (name :op "Israel"))
Oracle Span 9:  other => other
Oracle Span 10:  precedent => precedent
Oracle Span 11:  see => see-01
Oracle Span 12:  spokesman => (have-org-role-91 :ARG2 spokesman)
Oracle Span 13:  State Department => (government-organization :name (name :op "Department" :op "State"))
Oracle Span 14:  stated => state-01
Oracle Span 15:  Tom Casey => (person :name (name :op "Casey" :op "Tom"))
Oracle Span 16:  U.S. => (country :name (name :op "U.S."))
Oracle Span 17:  unique => unique
Oracle Span 18:  views => view-02
NER Entity: (person :name (name :op "Tom" :op "Casey"))
NER Entity: (organization :name (name :op "State" :op "Department"))
NER Entity: (country :name (name :op "U.S."))
NER Entity: (country :name (name :op "India"))
NER Entity: (country :name (name :op "Israel"))
Spans:
Span 15-16:  and => and
Span 25-26:  any => any
Span 27-28:  country => country
Span 20-21:  deal => deal-01
Span 12-13:  deal => deal-01
Span 1-2:  Department => organization
Span 8-9:  government => (government-organization :ARG0-of govern-01)
Span 28-29:  including => include-01
Span 11-12:  India => (country :name (name :op "India"))
Span 29-30:  Israel. => (country :name (name :op "Israel"))
Span 26-27:  other => other
Span 23-24:  precedent => precedent
Span 18-19:  see => see-01
Span 2-3:  spokesman => (person :ARG0-of (have-org-role-91 :ARG2 spokesman))
Span 0-1:  State => (thing :ARG1-of state-01)
Span 5-6:  stated => state-01
Span 3-5:  Tom Casey => (person :name (name :op "Tom" :op "Casey"))
Span 14-15:  unique => unique
Span 9-10:  views => view-02

Langrangian relaxation converged after 115 iterations. Delta = 0.0
Oracle Span 15-16:  and => and
Oracle Span 25-26:  any => any
Oracle Span 27-28:  country => country
Oracle Span 12-13:  deal => deal
Oracle Span 8-9:  government => (government-organization :ARG0-of govern-01)
Oracle Span 28-29:  including => include-01
Oracle Span 11-12:  India => (country :name (name :op "India"))
Oracle Span 29-30:  Israel => (country :name (name :op "Israel"))
Oracle Span 26-27:  other => other
Oracle Span 23-24:  precedent => precedent
Oracle Span 18-19:  see => see-01
Oracle Span 2-3:  spokesman => (have-org-role-91 :ARG2 spokesman)
Oracle Span 0-2:  State Department => (government-organization :name (name :op "Department" :op "State"))
Oracle Span 5-6:  stated => state-01
Oracle Span 3-5:  Tom Casey => (person :name (name :op "Casey" :op "Tom"))
Oracle Span 7-8:  U.S. => (country :name (name :op "U.S."))
Oracle Span 14-15:  unique => unique
Oracle Span 9-10:  views => view-02

Dependencies:
1	State	_	NNP	NNP	_	5	nn	_	_
2	Department	_	NNP	NNP	_	5	nn	_	_
3	spokesman	_	NN	NN	_	5	nn	_	_
4	Tom	_	NNP	NNP	_	5	nn	_	_
5	Casey	_	NNP	NNP	_	6	nsubj	_	_
6	stated	_	VBD	VBD	_	0	root	_	_
7	the	_	DT	DT	_	9	det	_	_
8	U.S.	_	NNP	NNP	_	9	nn	_	_
9	government	_	NN	NN	_	10	nsubj	_	_
10	views	_	VBZ	VBZ	_	6	ccomp	_	_
11	the	_	DT	DT	_	13	det	_	_
12	India	_	NNP	NNP	_	13	nn	_	_
13	deal	_	NN	NN	_	15	nsubj	_	_
14	as	_	RB	RB	_	15	advmod	_	_
15	unique	_	JJ	JJ	_	10	xcomp	_	_
16	and	_	CC	CC	_	10	cc	_	_
17	does	_	VBZ	VBZ	_	19	aux	_	_
18	not	_	RB	RB	_	19	neg	_	_
19	see	_	VB	VB	_	10	conj	_	_
20	the	_	DT	DT	_	21	det	_	_
21	deal	_	NN	NN	_	19	dobj	_	_
22	as	_	IN	IN	_	19	prep	_	_
23	a	_	DT	DT	_	24	det	_	_
24	precedent	_	NN	NN	_	22	pobj	_	_
25	for	_	IN	IN	_	24	prep	_	_
26	any	_	DT	DT	_	28	det	_	_
27	other	_	JJ	JJ	_	28	amod	_	_
28	country	_	NN	NN	_	25	pobj	_	_
29	including	_	VBG	VBG	_	28	prep	_	_
30	Israel	_	NNP	NNP	_	29	pobj	_	_
31	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, s3 / see-01)
(a / and, op, v / view-02)
(c / country, name, n3 / name)
(c2 / country, name, n4 / name)
(c3 / country, mod, a2 / any)
(c3 / country, mod, o / other)
(c4 / country, name, n5 / name)
(d / deal, mod, c2 / country)
(g / government-organization, name, n2 / name)
(g3 / govern-01, ARG0, g2 / government-organization)
(g3 / govern-01, ARG1, c / country)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, g / government-organization)
(h / have-org-role-91, ARG2, s2 / spokesman)
(i / include-01, ARG1, c4 / country)
(i / include-01, ARG2, c3 / country)
(n / name, op, "Casey")
(n / name, op, "Tom")
(n2 / name, op, "Department")
(n2 / name, op, "State")
(n3 / name, op, "U.S.")
(n4 / name, op, "India")
(n5 / name, op, "Israel")
(p / precedent, beneficiary, c3 / country)
(p2 / person, name, n / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, a / and)
(s3 / see-01, ARG0, g2 / government-organization)
(s3 / see-01, ARG1, d / deal)
(s3 / see-01, ARG2, p / precedent)
(v / view-02, ARG0, g2 / government-organization)
(v / view-02, ARG1, d / deal)
(v / view-02, ARG2, u / unique)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),deal,deal-01,false), Span(26,27,List(1),other,other,false), Span(3,5,List(5, 4, 3, 2),Tom Casey,(person :name (name :op "Tom" :op "Casey")),false), Span(28,29,List(6),including,include-01,false), Span(25,26,List(7),any,any,false), Span(0,1,List(9, 8),State,(thing :ARG1-of state-01),false), Span(2,3,List(12, 11, 10),spokesman,(person :ARG0-of (have-org-role-91 :ARG2 spokesman)),false), Span(15,16,List(13),and,and,false), Span(8,9,List(15, 14),government,(government-organization :ARG0-of govern-01),false), Span(12,13,List(16),deal,deal-01,false), Span(27,28,List(17),country,country,false), Span(29,30,List(20, 19, 18),Israel.,(country :name (name :op "Israel")),false), Span(9,10,List(21),views,view-02,false), Span(5,6,List(22),stated,state-01,false), Span(18,19,List(23),see,see-01,false), Span(1,2,List(24),Department,organization,false), Span(11,12,List(27, 26, 25),India,(country :name (name :op "India")),false), Span(23,24,List(28),precedent,precedent,false), Span(14,15,List(29),unique,unique,false)),Map(2 -> person, 5 -> "Casey", 27 -> "India", 12 -> spokesman, 8 -> thing, 15 -> govern-01, 21 -> view-02, 18 -> country, 24 -> organization, 7 -> any, 1 -> other, 17 -> country, 23 -> see-01, 26 -> name, 4 -> "Tom", 11 -> have-org-role-91, 14 -> government-organization, 29 -> unique, 20 -> "Israel", 28 -> precedent, 6 -> include-01, 9 -> state-01, 0 -> deal-01, 22 -> state-01, 16 -> deal-01, 19 -> name, 10 -> person, 3 -> name, 25 -> country, 13 -> and),Map(n -> name, h -> have-org-role-91, s2 -> spokesman, t -> thing, p2 -> person, s -> state-01, s4 -> see-01, v -> view-02, d -> deal-01, g2 -> govern-01, g -> government-organization, p -> person, a -> any, c3 -> country, n3 -> name, d2 -> deal-01, o2 -> organization, a2 -> and, i -> include-01, c -> country, s3 -> state-01, u -> unique, o -> other, p3 -> precedent, c2 -> country, n2 -> name))),[Ljava.lang.String;@55fd3840,Annotation([Ljava.lang.String;@1a30016d,[Ljava.lang.String;@b16a992,[Ljava.lang.String;@3d3dd5a7),Annotation([Ljava.lang.String;@13ec578,[Ljava.lang.String;@1b1f875b,[Ledu.cmu.lti.nlp.amr.Dependency;@25fbf793),Annotation([Ljava.lang.String;@76388e66,[Ljava.lang.String;@15a90dc,[Ljava.lang.String;@6618eaf3),Annotation([Ljava.lang.String;@1ca5cecc,[Ljava.lang.String;@2e5c2880,[Ledu.cmu.lti.nlp.amr.Entity;@7b5581e7))
AMR:
(a2 / and, op, v / view-02)
(c / country, mod, a / any)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(d / deal-01, ARG1, p3 / precedent)
(d2 / deal-01, ARG1, c3 / country)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c3 / country)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, o2 / organization)
(h / have-org-role-91, ARG2, s2 / spokesman)
(i / include-01, ARG1, c2 / country)
(i / include-01, ARG2, c / country)
(n / name, op, "Casey")
(n / name, op, "Tom")
(n2 / name, op, "Israel")
(n3 / name, op, "India")
(o / other, mod, a / any)
(p / person, name, n / name)
(p3 / precedent, location, c / country)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, t / thing)
(s3 / state-01, ARG0, p / person)
(s3 / state-01, ARG1, a2 / and)
(s3 / state-01, ARG6, p2 / person)
(s4 / see-01, ARG0, g / government-organization)
(s4 / see-01, ARG1, d / deal-01)
(v / view-02, ARG0, g / government-organization)
(v / view-02, ARG1, u / unique)

Decoded in 5,796,944 microseconds
Sentence: Spokesman for the Israeli embassy David Siegel stated the suggestion that the Israeli government is demanding an exemption or linking efforts to any other issue including the India debate is grossly inaccurate.

Oracle Span 1:  any => any
Oracle Span 2:  David Siegel => (person :name (name :op "Siegel" :op "David"))
Oracle Span 3:  debate => debate-01
Oracle Span 4:  demanding => demand-01
Oracle Span 5:  efforts => effort
Oracle Span 6:  embassy => embassy
Oracle Span 7:  exemption => exempt-01
Oracle Span 8:  government => (government-organization :ARG0-of govern-01)
Oracle Span 9:  grossly => gross
Oracle Span 10:  inaccurate => (accurate :polarity -)
Oracle Span 11:  including => include-01
Oracle Span 12:  India => (country :name (name :op "India"))
Oracle Span 13:  Israeli => (country :name (name :op "Israel"))
Oracle Span 14:  issue => issue
Oracle Span 15:  linking => link-01
Oracle Span 16:  or => or
Oracle Span 17:  other => other
Oracle Span 18:  Spokesman => (have-org-role-91 :ARG2 spokesman)
Oracle Span 19:  stated => state-01
Oracle Span 20:  suggestion => suggest-01
NER Entity: (person :name (name :op "David" :op "Siegel"))
NER Entity: (country :name (name :op "India"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 22-23:  any => any
Span 5-7:  David Siegel => (person :name (name :op "David" :op "Siegel"))
Span 28-29:  debate => debate-01
Span 15-16:  demanding => demand-01
Span 20-21:  efforts => effort
Span 4-5:  embassy => embassy
Span 17-18:  exemption => exempt-01
Span 30-31:  grossly => gross
Span 25-26:  including => include-01
Span 27-28:  India => (country :name (name :op "India"))
Span 24-25:  issue => issue
Span 19-20:  linking => link-01
Span 18-19:  or => or
Span 23-24:  other => other
Span 0-1:  Spokesman => (person :ARG0-of (have-org-role-91 :ARG2 spokesman))
Span 7-8:  stated => state-01
Span 9-10:  suggestion => suggest-01

Langrangian relaxation converged after 54 iterations. Delta = 0.0
Oracle Span 22-23:  any => any
Oracle Span 5-7:  David Siegel => (person :name (name :op "Siegel" :op "David"))
Oracle Span 28-29:  debate => debate-01
Oracle Span 15-16:  demanding => demand-01
Oracle Span 20-21:  efforts => effort
Oracle Span 4-5:  embassy => embassy
Oracle Span 17-18:  exemption => exempt-01
Oracle Span 13-14:  government => (government-organization :ARG0-of govern-01)
Oracle Span 30-31:  grossly => gross
Oracle Span 31-32:  inaccurate => (accurate :polarity -)
Oracle Span 25-26:  including => include-01
Oracle Span 27-28:  India => (country :name (name :op "India"))
Oracle Span 3-4:  Israeli => (country :name (name :op "Israel"))
Oracle Span 24-25:  issue => issue
Oracle Span 19-20:  linking => link-01
Oracle Span 18-19:  or => or
Oracle Span 23-24:  other => other
Oracle Span 0-1:  Spokesman => (have-org-role-91 :ARG2 spokesman)
Oracle Span 7-8:  stated => state-01
Oracle Span 9-10:  suggestion => suggest-01

Dependencies:
1	Spokesman	_	NNP	NNP	_	32	nsubj	_	_
2	for	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	5	det	_	_
4	Israeli	_	JJ	JJ	_	5	amod	_	_
5	embassy	_	NN	NN	_	2	pobj	_	_
6	David	_	NNP	NNP	_	7	nn	_	_
7	Siegel	_	NNP	NNP	_	8	nsubj	_	_
8	stated	_	VBD	VBD	_	5	rcmod	_	_
9	the	_	DT	DT	_	10	det	_	_
10	suggestion	_	NN	NN	_	8	dobj	_	_
11	that	_	IN	IN	_	16	mark	_	_
12	the	_	DT	DT	_	14	det	_	_
13	Israeli	_	JJ	JJ	_	14	amod	_	_
14	government	_	NN	NN	_	16	nsubj	_	_
15	is	_	VBZ	VBZ	_	16	aux	_	_
16	demanding	_	VBG	VBG	_	8	ccomp	_	_
17	an	_	DT	DT	_	18	det	_	_
18	exemption	_	NN	NN	_	16	dobj	_	_
19	or	_	CC	CC	_	16	cc	_	_
20	linking	_	VBG	VBG	_	16	conj	_	_
21	efforts	_	NNS	NNS	_	20	dobj	_	_
22	to	_	TO	TO	_	20	prep	_	_
23	any	_	DT	DT	_	25	det	_	_
24	other	_	JJ	JJ	_	25	amod	_	_
25	issue	_	NN	NN	_	22	pobj	_	_
26	including	_	VBG	VBG	_	25	prep	_	_
27	the	_	DT	DT	_	29	det	_	_
28	India	_	NNP	NNP	_	29	nn	_	_
29	debate	_	NN	NN	_	26	pobj	_	_
30	is	_	VBZ	VBZ	_	32	cop	_	_
31	grossly	_	RB	RB	_	32	advmod	_	_
32	inaccurate	_	JJ	JJ	_	0	root	_	_
33	.	_	.	.	_	32	punct	_	_

Oracle:
(a / accurate, domain, s3 / suggest-01)
(a / accurate, manner, g3 / gross)
(a / accurate, polarity, -)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(d / demand-01, ARG0, g / government-organization)
(d / demand-01, ARG1, e2 / exempt-01)
(d2 / debate-01, ARG1, c2 / country)
(e / embassy, mod, c / country)
(e3 / effort, prep-to, i / issue)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, e / embassy)
(h / have-org-role-91, ARG2, s2 / spokesman)
(i / issue, mod, a2 / any)
(i / issue, mod, o2 / other)
(i2 / include-01, ARG1, d2 / debate-01)
(i2 / include-01, ARG2, i / issue)
(l / link-01, ARG0, g / government-organization)
(l / link-01, ARG1, e3 / effort)
(n / name, op, "David")
(n / name, op, "Siegel")
(n2 / name, op, "Israel")
(n3 / name, op, "India")
(o / or, op, d / demand-01)
(o / or, op, l / link-01)
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / accurate)
(s3 / suggest-01, ARG1, o / or)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),stated,state-01,false), Span(18,19,List(1),or,or,false), Span(15,16,List(2),demanding,demand-01,false), Span(5,7,List(6, 5, 4, 3),David Siegel,(person :name (name :op "David" :op "Siegel")),false), Span(24,25,List(7),issue,issue,false), Span(25,26,List(8),including,include-01,false), Span(19,20,List(9),linking,link-01,false), Span(23,24,List(10),other,other,false), Span(17,18,List(11),exemption,exempt-01,false), Span(20,21,List(12),efforts,effort,false), Span(4,5,List(13),embassy,embassy,false), Span(22,23,List(14),any,any,false), Span(30,31,List(15),grossly,gross,false), Span(27,28,List(18, 17, 16),India,(country :name (name :op "India")),false), Span(0,1,List(21, 20, 19),Spokesman,(person :ARG0-of (have-org-role-91 :ARG2 spokesman)),false), Span(9,10,List(22),suggestion,suggest-01,false), Span(28,29,List(23),debate,debate-01,false)),Map(2 -> demand-01, 5 -> "David", 12 -> effort, 15 -> gross, 8 -> include-01, 21 -> spokesman, 18 -> "India", 7 -> issue, 17 -> name, 1 -> or, 23 -> debate-01, 4 -> name, 11 -> exempt-01, 14 -> any, 20 -> have-org-role-91, 6 -> "Siegel", 22 -> suggest-01, 0 -> state-01, 9 -> link-01, 16 -> country, 19 -> person, 3 -> person, 10 -> other, 13 -> embassy),Map(e -> exempt-01, n -> name, h -> have-org-role-91, s2 -> spokesman, p2 -> person, e2 -> effort, s -> state-01, d -> demand-01, g -> gross, p -> person, a -> any, d2 -> debate-01, o2 -> other, i2 -> include-01, i -> issue, s3 -> suggest-01, c -> country, l -> link-01, o -> or, e3 -> embassy, n2 -> name))),[Ljava.lang.String;@4e7f0775,Annotation([Ljava.lang.String;@1a3b1b0,[Ljava.lang.String;@33cd914,[Ljava.lang.String;@55a62975),Annotation([Ljava.lang.String;@63d4c81b,[Ljava.lang.String;@7fe6dbe0,[Ledu.cmu.lti.nlp.amr.Dependency;@1a775971),Annotation([Ljava.lang.String;@7efe36cb,[Ljava.lang.String;@3bafbd1f,[Ljava.lang.String;@72df4851),Annotation([Ljava.lang.String;@52c33baa,[Ljava.lang.String;@5d041757,[Ledu.cmu.lti.nlp.amr.Entity;@1b850ead))
AMR:
(c / country, name, n2 / name)
(d / demand-01, ARG1, e / exempt-01)
(d2 / debate-01, ARG1, c / country)
(e / exempt-01, ARG1, i / issue)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, e3 / embassy)
(h / have-org-role-91, ARG2, s2 / spokesman)
(i / issue, mod, a / any)
(i / issue, mod, o2 / other)
(i2 / include-01, ARG1, d2 / debate-01)
(i2 / include-01, ARG2, i / issue)
(l / link-01, ARG1, e2 / effort)
(n / name, op, "David")
(n / name, op, "Siegel")
(n2 / name, op, "India")
(o / or, op, d / demand-01)
(o / or, op, l / link-01)
(p / person, name, e3 / embassy)
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, l / link-01)
(s3 / suggest-01, ARG0, p / person)
(s3 / suggest-01, ARG1, g / gross)

Decoded in 2,424,334 microseconds
Sentence: Seigel stated --

Oracle Span 1:  Seigel => (person :name (name :op "Seigel"))
Oracle Span 2:  stated => state-01
NER Entity: (person :name (name :op "Seigel"))
Spans:
Span 0-1:  Seigel => (person :name (name :op "Seigel"))
Span 1-2:  stated => state-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Seigel => (person :name (name :op "Seigel"))
Oracle Span 1-2:  stated => state-01

Dependencies:
1	Seigel	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	--	_	:	:	_	2	punct	_	_

Oracle:
(n / name, op, "Seigel")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(0,1,List(3, 2, 1),Seigel,(person :name (name :op "Seigel")),false)),Map(2 -> name, 1 -> person, 0 -> state-01, 3 -> "Seigel"),Map(n -> name, s -> state-01, p -> person))),[Ljava.lang.String;@4d24b0e7,Annotation([Ljava.lang.String;@167fbf9,[Ljava.lang.String;@240ec3e0,[Ljava.lang.String;@784dbc0a),Annotation([Ljava.lang.String;@1006886c,[Ljava.lang.String;@2e0001a6,[Ledu.cmu.lti.nlp.amr.Dependency;@7c43c645),Annotation([Ljava.lang.String;@697b982b,[Ljava.lang.String;@4d1a3880,[Ljava.lang.String;@63b90db4),Annotation([Ljava.lang.String;@12a8e68,[Ljava.lang.String;@3425f4a6,[Ledu.cmu.lti.nlp.amr.Entity;@2867049a))
AMR:
(n / name, op, "Seigel")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)

Decoded in 35,186 microseconds
Sentence: The Israeli government has never asked the NSG for any exemption to nuclear supply guidelines or made any Israeli-specific request of the NSG.

Oracle Span 1:  asked => ask-02
Oracle Span 2:  exemption => exempt-01
Oracle Span 3:  government => (government-organization :ARG0-of govern-01)
Oracle Span 4:  guidelines => guideline
Oracle Span 5:  Israeli => (country :name (name :op "Israel"))
Oracle Span 6:  made => make-03
Oracle Span 7:  NSG => (organization :name (name :op "NSG"))
Oracle Span 8:  nuclear => nucleus
Oracle Span 9:  or => or
Oracle Span 10:  request => request-01
Oracle Span 11:  specific => specific
Oracle Span 12:  supply => supply-01
NER Entity: (organization :name (name :op "NSG"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 9-10:  any => any
Span 17-18:  any => any
Span 5-6:  asked => ask-02
Span 10-11:  exemption => exemption
Span 14-15:  guidelines => guideline
Span 1-2:  Israeli => (country :name (name :op "Israel"))
Span 12-13:  nuclear => nucleus
Span 15-16:  or => or
Span 19-20:  request => request-01
Span 13-14:  supply => supply-01

Langrangian relaxation converged after 17 iterations. Delta = 0.0
Oracle Span 5-6:  asked => ask-02
Oracle Span 10-11:  exemption => exempt-01
Oracle Span 2-3:  government => (government-organization :ARG0-of govern-01)
Oracle Span 14-15:  guidelines => guideline
Oracle Span 1-2:  Israeli => (country :name (name :op "Israel"))
Oracle Span 16-17:  made => make-03
Oracle Span 7-8:  NSG => (organization :name (name :op "NSG"))
Oracle Span 12-13:  nuclear => nucleus
Oracle Span 15-16:  or => or
Oracle Span 21-22:  request => request-01
Oracle Span 20-21:  specific => specific
Oracle Span 13-14:  supply => supply-01

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	Israeli	_	JJ	JJ	_	3	amod	_	_
3	government	_	NN	NN	_	6	nsubj	_	_
4	has	_	VBZ	VBZ	_	6	aux	_	_
5	never	_	RB	RB	_	6	neg	_	_
6	asked	_	VBN	VBN	_	0	root	_	_
7	the	_	DT	DT	_	8	det	_	_
8	NSG	_	NNP	NNP	_	6	dobj	_	_
9	for	_	IN	IN	_	8	prep	_	_
10	any	_	DT	DT	_	11	det	_	_
11	exemption	_	NN	NN	_	9	pobj	_	_
12	to	_	TO	TO	_	6	prep	_	_
13	nuclear	_	JJ	JJ	_	15	amod	_	_
14	supply	_	NN	NN	_	15	nn	_	_
15	guidelines	_	NNS	NNS	_	12	pobj	_	_
16	or	_	CC	CC	_	6	cc	_	_
17	made	_	VBD	VBD	_	6	conj	_	_
18	any	_	DT	DT	_	20	det	_	_
19	Israeli-specific	_	NNP	NNP	_	20	nn	_	_
20	request	_	NN	NN	_	17	dobj	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	the	_	DT	DT	_	23	det	_	_
23	NSG	_	NNP	NNP	_	21	pobj	_	_
24	.	_	.	.	_	6	punct	_	_

Oracle:
(a2 / ask-02, ARG0, g / government-organization)
(a2 / ask-02, ARG1, e2 / exempt-01)
(a2 / ask-02, ARG2, o / organization)
(c / country, name, n / name)
(e2 / exempt-01, ARG1, c / country)
(e2 / exempt-01, purpose, g3 / guideline)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(g3 / guideline, mod, s / supply-01)
(m / make-03, ARG0, g / government-organization)
(m / make-03, ARG1, r / request-01)
(n / name, op, "Israel")
(n2 / name, op, "NSG")
(o / organization, name, n2 / name)
(o2 / or, op, a2 / ask-02)
(o2 / or, op, m / make-03)
(r / request-01, ARG0, c / country)
(r / request-01, ARG2, o / organization)
(r / request-01, mod, s2 / specific)
(s / supply-01, mod, n3 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),nuclear,nucleus,false), Span(15,16,List(1),or,or,false), Span(19,20,List(2),request,request-01,false), Span(9,10,List(3),any,any,false), Span(13,14,List(4),supply,supply-01,false), Span(17,18,List(5),any,any,false), Span(5,6,List(6),asked,ask-02,false), Span(10,11,List(7),exemption,exemption,false), Span(14,15,List(8),guidelines,guideline,false), Span(1,2,List(11, 10, 9),Israeli,(country :name (name :op "Israel")),false)),Map(2 -> request-01, 5 -> any, 8 -> guideline, 7 -> exemption, 1 -> or, 11 -> "Israel", 4 -> supply-01, 6 -> ask-02, 9 -> country, 0 -> nucleus, 10 -> name, 3 -> any),Map(e -> exemption, n -> nucleus, a3 -> ask-02, s -> supply-01, g -> guideline, a -> any, a2 -> any, r -> request-01, c -> country, o -> or, n2 -> name))),[Ljava.lang.String;@5cd52d95,Annotation([Ljava.lang.String;@28dabf64,[Ljava.lang.String;@1cdb86c4,[Ljava.lang.String;@438cb9c1),Annotation([Ljava.lang.String;@36c09da0,[Ljava.lang.String;@4b9c2583,[Ledu.cmu.lti.nlp.amr.Dependency;@bb16792),Annotation([Ljava.lang.String;@2d558594,[Ljava.lang.String;@1f4a3003,[Ljava.lang.String;@3550be54),Annotation([Ljava.lang.String;@35ddd29b,[Ljava.lang.String;@34259891,[Ledu.cmu.lti.nlp.amr.Entity;@7aa17c3e))
AMR:
(a3 / ask-02, ARG1, e / exemption)
(c / country, name, n2 / name)
(e / exemption, mod, a / any)
(n2 / name, op, "Israel")
(o / or, op, a3 / ask-02)
(o / or, op, g / guideline)
(r / request-01, ARG0, c / country)
(r / request-01, ARG1, a3 / ask-02)
(s / supply-01, ARG0, g / guideline)
(s / supply-01, ARG1, a2 / any)
(s / supply-01, mod, n / nucleus)

Decoded in 509,642 microseconds
Sentence: Israel is recognized as a full-fledged adherent to the NSG Guidelines.

Oracle Span 1:  adherent => adhere-02
Oracle Span 2:  fledged => fledge-01
Oracle Span 3:  full => full
Oracle Span 4:  Israel => (country :name (name :op "Israel"))
Oracle Span 5:  NSG Guidelines => (publication :name (name :op "Guidelines" :op "NSG"))
Oracle Span 6:  recognized => recognize-01
NER Entity: (country :name (name :op "Israel"))
Spans:
Span 5-6:  full-fledged => full-fledged
Span 0-1:  Israel => (country :name (name :op "Israel"))
Span 2-3:  recognized => recognize-01

Langrangian relaxation converged after 15 iterations. Delta = 0.0
Oracle Span 8-9:  adherent => adhere-02
Oracle Span 7-8:  fledged => fledge-01
Oracle Span 5-6:  full => full
Oracle Span 0-1:  Israel => (country :name (name :op "Israel"))
Oracle Span 11-13:  NSG Guidelines => (publication :name (name :op "Guidelines" :op "NSG"))
Oracle Span 2-3:  recognized => recognize-01

Dependencies:
1	Israel	_	NNP	NNP	_	3	nsubjpass	_	_
2	is	_	VBZ	VBZ	_	3	auxpass	_	_
3	recognized	_	VBN	VBN	_	0	root	_	_
4	as	_	IN	IN	_	3	prep	_	_
5	a	_	DT	DT	_	7	det	_	_
6	full-fledged	_	JJ	JJ	_	7	amod	_	_
7	adherent	_	NN	NN	_	4	pobj	_	_
8	to	_	TO	TO	_	3	prep	_	_
9	the	_	DT	DT	_	11	det	_	_
10	NSG	_	NNP	NNP	_	11	nn	_	_
11	Guidelines	_	NNS	NNS	_	8	pobj	_	_
12	.	_	.	.	_	3	punct	_	_

Oracle:
(a / adhere-02, ARG0, c / country)
(a / adhere-02, ARG1, p / publication)
(c / country, name, n / name)
(f / fledge-01, ARG1, a / adhere-02)
(f / fledge-01, mod, f2 / full)
(n / name, op, "Israel")
(n2 / name, op, "Guidelines")
(n2 / name, op, "NSG")
(p / publication, name, n2 / name)
(r / recognize-01, ARG1, c / country)
(r / recognize-01, ARG2, a / adhere-02)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Israel,(country :name (name :op "Israel")),false), Span(2,3,List(3),recognized,recognize-01,false), Span(5,6,List(4),full-fledged,full-fledged,false)),Map(2 -> "Israel", 1 -> name, 4 -> full-fledged, 0 -> country, 3 -> recognize-01),Map(n -> name, r -> recognize-01, c -> country, f -> full-fledged))),[Ljava.lang.String;@690e5dcf,Annotation([Ljava.lang.String;@323499e9,[Ljava.lang.String;@1f68c806,[Ljava.lang.String;@458bd7ea),Annotation([Ljava.lang.String;@5e701ab1,[Ljava.lang.String;@489d3b47,[Ledu.cmu.lti.nlp.amr.Dependency;@116ce2aa),Annotation([Ljava.lang.String;@a4343ea,[Ljava.lang.String;@54386581,[Ljava.lang.String;@75de2b42),Annotation([Ljava.lang.String;@351fee1,[Ljava.lang.String;@139db172,[Ledu.cmu.lti.nlp.amr.Entity;@41edaed))
AMR:
(c / country, name, n / name)
(n / name, op, "Israel")
(r / recognize-01, ARG1, c / country)
(r / recognize-01, ARG6, f / full-fledged)

Decoded in 156,556 microseconds
Sentence: The Israeli government has urged the NSG to consider adopting a generic, multi-tiered, criteria-based approach towards nuclear technology transfers.

Oracle Span 1:  adopting => adopt-01
Oracle Span 2:  approach => approach-02
Oracle Span 3:  based => base-02
Oracle Span 4:  consider => consider-02
Oracle Span 5:  criteria => criterion
Oracle Span 6:  generic => generic
Oracle Span 7:  government => (government-organization :ARG0-of govern-01)
Oracle Span 8:  Israeli => (country :name (name :op "Israel"))
Oracle Span 9:  multi => multiple
Oracle Span 10:  NSG => (organization :name (name :op "NSG"))
Oracle Span 11:  nuclear => nucleus
Oracle Span 12:  technology => technology
Oracle Span 13:  tiered => tier
Oracle Span 14:  transfers => transfer-01
Oracle Span 15:  urged => urge-01
NER Entity: (organization :name (name :op "NSG"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 20-21:   => transfer-01
Span 19-20:   => technology
Span 9-10:  adopting => adopt-01
Span 8-9:  consider => consider-02
Span 11-12:  generic, => generic
Span 1-2:  Israeli => (country :name (name :op "Israel"))
Span 16-17:  nuclear => approach-01
Span 18-19:  transfers. => nucleus
Span 4-5:  urged => urge-01

Langrangian relaxation converged after 27 iterations. Delta = 0.0
Oracle Span 9-10:  adopting => adopt-01
Oracle Span 20-21:  approach => approach-02
Oracle Span 19-20:  based => base-02
Oracle Span 8-9:  consider => consider-02
Oracle Span 17-18:  criteria => criterion
Oracle Span 11-12:  generic => generic
Oracle Span 2-3:  government => (government-organization :ARG0-of govern-01)
Oracle Span 1-2:  Israeli => (country :name (name :op "Israel"))
Oracle Span 13-14:  multi => multiple
Oracle Span 6-7:  NSG => (organization :name (name :op "NSG"))
Oracle Span 22-23:  nuclear => nucleus
Oracle Span 23-24:  technology => technology
Oracle Span 15-16:  tiered => tier
Oracle Span 24-25:  transfers => transfer-01
Oracle Span 4-5:  urged => urge-01

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	Israeli	_	JJ	JJ	_	3	amod	_	_
3	government	_	NN	NN	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	urged	_	VBN	VBN	_	0	root	_	_
6	the	_	DT	DT	_	7	det	_	_
7	NSG	_	NNP	NNP	_	5	dobj	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	consider	_	VB	VB	_	5	xcomp	_	_
10	adopting	_	VBG	VBG	_	9	xcomp	_	_
11	a	_	DT	DT	_	17	det	_	_
12	generic	_	JJ	JJ	_	17	amod	_	_
13	,	_	,	,	_	17	punct	_	_
14	multi-tiered	_	JJ	JJ	_	17	amod	_	_
15	,	_	,	,	_	17	punct	_	_
16	criteria-based	_	JJ	JJ	_	17	amod	_	_
17	approach	_	NN	NN	_	10	dobj	_	_
18	towards	_	IN	IN	_	10	prep	_	_
19	nuclear	_	JJ	JJ	_	21	amod	_	_
20	technology	_	NN	NN	_	21	nn	_	_
21	transfers	_	NNS	NNS	_	18	pobj	_	_
22	.	_	.	.	_	5	punct	_	_

Oracle:
(a / adopt-01, ARG0, o / organization)
(a / adopt-01, ARG1, a2 / approach-02)
(a2 / approach-02, ARG1, t2 / transfer-01)
(a2 / approach-02, manner, t / tier)
(a2 / approach-02, mod, g3 / generic)
(b / base-02, ARG1, a2 / approach-02)
(b / base-02, ARG2, c3 / criterion)
(c / country, name, n / name)
(c2 / consider-02, ARG0, o / organization)
(c2 / consider-02, ARG1, a / adopt-01)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(n / name, op, "Israel")
(n2 / name, op, "NSG")
(o / organization, name, n2 / name)
(t / tier, quant, m / multiple)
(t2 / transfer-01, ARG1, t3 / technology)
(t3 / technology, mod, n3 / nucleus)
(u / urge-01, ARG0, g / government-organization)
(u / urge-01, ARG1, o / organization)
(u / urge-01, ARG2, c2 / consider-02)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),,transfer-01,false), Span(4,5,List(1),urged,urge-01,false), Span(9,10,List(2),adopting,adopt-01,false), Span(19,20,List(3),,technology,false), Span(18,19,List(4),transfers.,nucleus,false), Span(16,17,List(5),nuclear,approach-01,false), Span(8,9,List(6),consider,consider-02,false), Span(11,12,List(7),generic,,generic,false), Span(1,2,List(10, 9, 8),Israeli,(country :name (name :op "Israel")),false)),Map(2 -> adopt-01, 5 -> approach-01, 8 -> country, 7 -> generic, 1 -> urge-01, 4 -> nucleus, 6 -> consider-02, 9 -> name, 0 -> transfer-01, 10 -> "Israel", 3 -> technology),Map(n -> nucleus, t -> transfer-01, g -> generic, a -> adopt-01, t2 -> technology, a2 -> approach-01, c -> consider-02, u -> urge-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@2e2c28c6,Annotation([Ljava.lang.String;@494378ed,[Ljava.lang.String;@10e3e858,[Ljava.lang.String;@758bf4cd),Annotation([Ljava.lang.String;@3aae98a2,[Ljava.lang.String;@68f81b0a,[Ledu.cmu.lti.nlp.amr.Dependency;@67d69f65),Annotation([Ljava.lang.String;@4d5132ce,[Ljava.lang.String;@3f4d84e,[Ljava.lang.String;@2b7ca371),Annotation([Ljava.lang.String;@78023ccc,[Ljava.lang.String;@3c01b640,[Ledu.cmu.lti.nlp.amr.Entity;@19123f26))
AMR:
(a / adopt-01, ARG1, t / transfer-01)
(a2 / approach-01, ARG1, n / nucleus)
(c / consider-02, ARG1, a / adopt-01)
(c2 / country, name, n2 / name)
(n2 / name, op, "Israel")
(t / transfer-01, ARG1, t2 / technology)
(t / transfer-01, ARG2, c2 / country)
(t / transfer-01, mod, g / generic)
(t2 / technology, mod, n / nucleus)
(u / urge-01, ARG2, c / consider-02)

Decoded in 564,932 microseconds
Sentence: Some officials from NSG countries have previously suggested an approach like the Israeli plan.

Oracle Span 1:  approach => approach-02
Oracle Span 2:  countries => country
Oracle Span 3:  have => (person :ARG0-of have-org-role-91)
Oracle Span 4:  Israeli => (name :op "Israel")
Oracle Span 5:  NSG => (organization :name (name :op "NSG"))
Oracle Span 6:  officials => official
Oracle Span 7:  plan => plan
Oracle Span 8:  previously => previous
Oracle Span 9:  Some => some
Oracle Span 10:  suggested => suggest-01
NER Entity: (country :name (name :op "NSG"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 9-10:  approach => approach-01
Span 4-5:  countries => country
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 13-14:  plan. => plan
Span 0-1:  Some => some
Span 0-7:  Some officials from NSG countries have previously => (date-entity :time previously)
Span 7-8:  suggested => suggest-01

Langrangian relaxation converged after 21 iterations. Delta = 0.0
Oracle Span 9-10:  approach => approach-02
Oracle Span 4-5:  countries => country
Oracle Span 5-6:  have => (person :ARG0-of have-org-role-91)
Oracle Span 12-13:  Israeli => (name :op "Israel")
Oracle Span 3-4:  NSG => (organization :name (name :op "NSG"))
Oracle Span 1-2:  officials => official
Oracle Span 13-14:  plan => plan
Oracle Span 6-7:  previously => previous
Oracle Span 0-1:  Some => some
Oracle Span 7-8:  suggested => suggest-01

Dependencies:
1	Some	_	DT	DT	_	2	det	_	_
2	officials	_	NNS	NNS	_	8	nsubj	_	_
3	from	_	IN	IN	_	2	prep	_	_
4	NSG	_	NNP	NNP	_	5	nn	_	_
5	countries	_	NNS	NNS	_	3	pobj	_	_
6	have	_	VBP	VBP	_	8	aux	_	_
7	previously	_	RB	RB	_	8	advmod	_	_
8	suggested	_	VBN	VBN	_	0	root	_	_
9	an	_	DT	DT	_	10	det	_	_
10	approach	_	NN	NN	_	8	dobj	_	_
11	like	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	14	det	_	_
13	Israeli	_	JJ	JJ	_	14	amod	_	_
14	plan	_	NN	NN	_	11	pobj	_	_
15	.	_	.	.	_	8	punct	_	_

Oracle:
(c / country, name, n2 / name)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, o2 / organization)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "NSG")
(n2 / name, op, "Israel")
(o2 / organization, name, n / name)
(p / plan, mod, c / country)
(p3 / person, quant, s2 / some)
(s / suggest-01, ARG0, p3 / person)
(s / suggest-01, ARG1, a / approach-02)
(s / suggest-01, time, p2 / previous)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(2, 1, 0),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(7,8,List(3),suggested,suggest-01,false), Span(13,14,List(4),plan.,plan,false), Span(0,1,List(5),Some,some,false), Span(0,7,List(7, 6),Some officials from NSG countries have previously,(date-entity :time previously),false), Span(9,10,List(8),approach,approach-01,false), Span(4,5,List(9),countries,country,false)),Map(2 -> official, 5 -> some, 8 -> approach-01, 7 -> previously, 1 -> have-org-role-91, 4 -> plan, 6 -> date-entity, 9 -> country, 0 -> person, 3 -> suggest-01),Map(h -> have-org-role-91, s2 -> some, p2 -> plan, s -> suggest-01, d -> date-entity, p -> person, a -> approach-01, c -> country, o -> official, p3 -> previously))),[Ljava.lang.String;@2aadbd65,Annotation([Ljava.lang.String;@2dbd5a4,[Ljava.lang.String;@45460bb0,[Ljava.lang.String;@23f7c876),Annotation([Ljava.lang.String;@64f60ff8,[Ljava.lang.String;@385c9037,[Ledu.cmu.lti.nlp.amr.Dependency;@4d320707),Annotation([Ljava.lang.String;@509bc2af,[Ljava.lang.String;@4468e8b,[Ljava.lang.String;@58477b1c),Annotation([Ljava.lang.String;@590552c,[Ljava.lang.String;@b90618b,[Ledu.cmu.lti.nlp.amr.Entity;@3b9294a4))
AMR:
(a / approach-01, ARG1, p2 / plan)
(d / date-entity, time, p3 / previously)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(s / suggest-01, ARG0, p / person)
(s / suggest-01, ARG1, a / approach-01)
(s / suggest-01, ARG6, d / date-entity)
(s2 / some, mod, d / date-entity)

Decoded in 360,649 microseconds
Sentence: If modification of the NSG Guidelines were to take place along the lines proposed by Israeli officials the nuclear nonproliferation regime would be considerably enhanced.

Oracle Span 1:  considerably => considerable
Oracle Span 2:  enhanced => enhance-01
Oracle Span 3:  Israeli => (country :name (name :op "Israel"))
Oracle Span 4:  lines => line
Oracle Span 5:  modification => modify-01
Oracle Span 6:  NSG Guidelines => (publication :name (name :op "Guidelines" :op "NSG"))
Oracle Span 7:  nuclear => nucleus
Oracle Span 8:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 9:  proposed => propose-01
Oracle Span 10:  regime => regime
Oracle Span 11:  take => take-14
NER Entity: (organization :name (name :op "NSG" :op "Guidelines"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 10-11:  along => along
Span 23-24:  considerably => considerable
Span 24-25:  enhanced. => enhance-01
Span 5-6:  Guidelines => guide-01
Span 12-13:  lines => line
Span 1-2:  modification => modify-01
Span 18-19:  nuclear => nucleus
Span 16-17:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 13-14:  proposed => propose-01
Span 20-21:  regime => regime
Span 8-9:  take => take-14
Span 11-12:  the => (country :name (name :op "North"))

Langrangian relaxation converged after 58 iterations. Delta = 0.0
Oracle Span 23-24:  considerably => considerable
Oracle Span 24-25:  enhanced => enhance-01
Oracle Span 15-16:  Israeli => (country :name (name :op "Israel"))
Oracle Span 12-13:  lines => line
Oracle Span 1-2:  modification => modify-01
Oracle Span 4-6:  NSG Guidelines => (publication :name (name :op "Guidelines" :op "NSG"))
Oracle Span 18-19:  nuclear => nucleus
Oracle Span 16-17:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 13-14:  proposed => propose-01
Oracle Span 20-21:  regime => regime
Oracle Span 8-9:  take => take-14

Dependencies:
1	If	_	IN	IN	_	7	mark	_	_
2	modification	_	NN	NN	_	7	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	6	det	_	_
5	NSG	_	NNP	NNP	_	6	nn	_	_
6	Guidelines	_	NNS	NNS	_	3	pobj	_	_
7	were	_	VBD	VBD	_	25	advcl	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	take	_	VB	VB	_	7	xcomp	_	_
10	place	_	NN	NN	_	9	dobj	_	_
11	along	_	IN	IN	_	9	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	lines	_	NNS	NNS	_	11	pobj	_	_
14	proposed	_	VBN	VBN	_	13	vmod	_	_
15	by	_	IN	IN	_	14	prep	_	_
16	Israeli	_	JJ	JJ	_	17	amod	_	_
17	officials	_	NNS	NNS	_	15	pobj	_	_
18	the	_	DT	DT	_	21	det	_	_
19	nuclear	_	JJ	JJ	_	21	amod	_	_
20	nonproliferation	_	NN	NN	_	21	nn	_	_
21	regime	_	NN	NN	_	25	nsubjpass	_	_
22	would	_	MD	MD	_	25	aux	_	_
23	be	_	VB	VB	_	25	auxpass	_	_
24	considerably	_	RB	RB	_	25	advmod	_	_
25	enhanced	_	VBN	VBN	_	0	root	_	_
26	.	_	.	.	_	25	punct	_	_

Oracle:
(c2 / country, name, n3 / name)
(e / enhance-01, ARG1, r / regime)
(e / enhance-01, condition, t / take-14)
(e / enhance-01, manner, c / considerable)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(m / modify-01, ARG1, p2 / publication)
(n2 / name, op, "Guidelines")
(n2 / name, op, "NSG")
(n3 / name, op, "Israel")
(p2 / publication, name, n2 / name)
(p3 / propose-01, ARG1, l / line)
(t / take-14, ARG1, m / modify-01)
(t / take-14, ARG2, l / line)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),lines,line,false), Span(23,24,List(1),considerably,considerable,false), Span(8,9,List(2),take,take-14,false), Span(13,14,List(3),proposed,propose-01,false), Span(16,17,List(6, 5, 4),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(24,25,List(7),enhanced.,enhance-01,false), Span(18,19,List(8),nuclear,nucleus,false), Span(20,21,List(9),regime,regime,false), Span(10,11,List(10),along,along,false), Span(11,12,List(13, 12, 11),the,(country :name (name :op "North")),false), Span(1,2,List(14),modification,modify-01,false), Span(5,6,List(15),Guidelines,guide-01,false)),Map(2 -> take-14, 5 -> have-org-role-91, 12 -> name, 15 -> guide-01, 8 -> nucleus, 7 -> enhance-01, 1 -> considerable, 4 -> person, 11 -> country, 14 -> modify-01, 6 -> official, 0 -> line, 9 -> regime, 3 -> propose-01, 10 -> along, 13 -> "North"),Map(e -> enhance-01, n -> nucleus, h -> have-org-role-91, t -> take-14, p2 -> person, m -> modify-01, g -> guide-01, p -> propose-01, a -> along, r -> regime, c -> considerable, l -> line, o -> official, c2 -> country, n2 -> name))),[Ljava.lang.String;@e08eedd,Annotation([Ljava.lang.String;@b62c52b,[Ljava.lang.String;@5c6985a8,[Ljava.lang.String;@772644d7),Annotation([Ljava.lang.String;@3e1132e8,[Ljava.lang.String;@2347e39c,[Ledu.cmu.lti.nlp.amr.Dependency;@33936699),Annotation([Ljava.lang.String;@76d68cc0,[Ljava.lang.String;@41e76680,[Ljava.lang.String;@5da03623),Annotation([Ljava.lang.String;@752f34a0,[Ljava.lang.String;@37dd0649,[Ledu.cmu.lti.nlp.amr.Entity;@4d74b554))
AMR:
(a / along, op, l / line)
(c2 / country, name, n2 / name)
(e / enhance-01, ARG1, r / regime)
(e / enhance-01, manner, c / considerable)
(g / guide-01, ARG1, e / enhance-01)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(m / modify-01, ARG1, t / take-14)
(m / modify-01, ARG2, g / guide-01)
(n2 / name, op, "North")
(p / propose-01, ARG0, p2 / person)
(p / propose-01, ARG1, l / line)
(r / regime, mod, n / nucleus)
(t / take-14, ARG1, l / line)

Decoded in 1,379,602 microseconds
Sentence: 2008-07-26

Oracle Span 1:  2008-07-26 => (date-entity :year 2008 :day 26 :month 7)
mkDayMonthYear(2008-07-26,26,07,2008)
Spans:
Span 0-1:  2008-07-26 => (date-entity :year 2008 :month 7 :day 26)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2008-07-26 => (date-entity :year 2008 :day 26 :month 7)

Dependencies:
1	2008-07-26	_	NNP	NNP	_	0	root	_	_

Oracle:
(d / date-entity, day, 26)
(d / date-entity, month, 7)
(d / date-entity, year, 2008)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2008-07-26,(date-entity :year 2008 :month 7 :day 26),false)),Map(2 -> 7, 1 -> 2008, 0 -> date-entity, 3 -> 26),Map(2 -> 2008, 7 -> 7, d -> date-entity, 22 -> 26))),[Ljava.lang.String;@79b213d,Annotation([Ljava.lang.String;@42dadf2d,[Ljava.lang.String;@5c2f7dab,[Ljava.lang.String;@53a14931),Annotation([Ljava.lang.String;@d6d18b1,[Ljava.lang.String;@195a8d86,[Ledu.cmu.lti.nlp.amr.Dependency;@3ebf6923),Annotation([Ljava.lang.String;@670e4704,[Ljava.lang.String;@2c373c4,[Ljava.lang.String;@4f38f8a7),Annotation([Ljava.lang.String;@a0b6612,[Ljava.lang.String;@1f283630,[Ledu.cmu.lti.nlp.amr.Entity;@66c3b42))
AMR:
(d / date-entity, day, 22 / 26)
(d / date-entity, month, 7 / 7)
(d / date-entity, year, 2 / 2008)

Decoded in 22,075 microseconds
Sentence: Iran (IR)

Oracle Span 1:  Iran => (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 0-1:  Iran => (country :name (name :op "Iran"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))

Dependencies:
1	Iran	_	NNP	NNP	_	0	root	_	_
2	(	_	(	(	_	3	punct	_	_
3	IR	_	NNP	NNP	_	1	appos	_	_
4	)	_	)	)	_	3	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Iran")

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Iran,(country :name (name :op "Iran")),false)),Map(2 -> "Iran", 1 -> name, 0 -> country),Map(n -> name, c -> country))),[Ljava.lang.String;@5dfcb882,Annotation([Ljava.lang.String;@77fb414f,[Ljava.lang.String;@170cefc8,[Ljava.lang.String;@24f7bcd6),Annotation([Ljava.lang.String;@1cf72862,[Ljava.lang.String;@31abe38a,[Ledu.cmu.lti.nlp.amr.Dependency;@412928d8),Annotation([Ljava.lang.String;@58a13d27,[Ljava.lang.String;@7db0aa69,[Ljava.lang.String;@13e9a1e6),Annotation([Ljava.lang.String;@1b8e34ab,[Ljava.lang.String;@4a176af8,[Ledu.cmu.lti.nlp.amr.Entity;@320c6231))
AMR:
(c / country, name, n / name)
(n / name, op, "Iran")

Decoded in 36,359 microseconds
Sentence: International; proliferation

Oracle Span 1:  ; => and
Oracle Span 2:  International => international
Oracle Span 3:  proliferation => proliferate-01
Spans:
Span 2-3:   => proliferate-01
Span 0-1:  International; => international
Span 1-2:  proliferation => and

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 0-1:  International => international
Oracle Span 2-3:  proliferation => proliferate-01

Dependencies:
1	International	_	NNP	NNP	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	proliferation	_	NN	NN	_	1	dep	_	_

Oracle:
(a / and, op, i / international)
(a / and, op, p / proliferate-01)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),International;,international,false), Span(2,3,List(1),,proliferate-01,false), Span(1,2,List(2),proliferation,and,false)),Map(2 -> and, 1 -> proliferate-01, 0 -> international),Map(p -> proliferate-01, a -> and, i -> international))),[Ljava.lang.String;@4dea6279,Annotation([Ljava.lang.String;@4d1d240f,[Ljava.lang.String;@698bcab7,[Ljava.lang.String;@31dafb55),Annotation([Ljava.lang.String;@2fbdaebd,[Ljava.lang.String;@b24da19,[Ledu.cmu.lti.nlp.amr.Dependency;@3c4d77b8),Annotation([Ljava.lang.String;@5aab3337,[Ljava.lang.String;@1821b699,[Ljava.lang.String;@35f85396),Annotation([Ljava.lang.String;@62df1226,[Ljava.lang.String;@61eeb7c1,[Ledu.cmu.lti.nlp.amr.Entity;@746e401b))
AMR:
(a / and, op, i / international)
(a / and, op, p / proliferate-01)

Decoded in 36,111 microseconds
Sentence: Ahmadinejad announces expansion of Iranian uranium-producing capability.

Oracle Span 1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 2:  announces => announce-01
Oracle Span 3:  capability => capable-41
Oracle Span 4:  expansion => expand-01
Oracle Span 5:  Iranian => (country :name (name :op "Iran"))
Oracle Span 6:  producing => produce-01
Oracle Span 7:  uranium => uranium
NER Entity: (person :name (name :op "Ahmadinejad"))
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 0-1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Span 1-2:  announces => announce-01
Span 6-7:  capability. => capacitate-01
Span 2-3:  expansion => expand-01
Span 4-5:  Iranian => (country :name (name :op "Iran"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 1-2:  announces => announce-01
Oracle Span 8-9:  capability => capable-41
Oracle Span 2-3:  expansion => expand-01
Oracle Span 4-5:  Iranian => (country :name (name :op "Iran"))
Oracle Span 7-8:  producing => produce-01
Oracle Span 5-6:  uranium => uranium

Dependencies:
1	Ahmadinejad	_	NNP	NNP	_	2	nsubj	_	_
2	announces	_	VBZ	VBZ	_	0	root	_	_
3	expansion	_	NN	NN	_	2	dobj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	Iranian	_	JJ	JJ	_	7	amod	_	_
6	uranium-producing	_	JJ	JJ	_	7	amod	_	_
7	capability	_	NN	NN	_	4	pobj	_	_
8	.	_	.	.	_	2	punct	_	_

Oracle:
(a / announce-01, ARG0, p / person)
(a / announce-01, ARG1, e / expand-01)
(c / capable-41, ARG1, c2 / country)
(c / capable-41, ARG2, p2 / produce-01)
(c2 / country, name, n2 / name)
(e / expand-01, ARG1, c / capable-41)
(n / name, op, "Ahmadinejad")
(n2 / name, op, "Iran")
(p / person, name, n / name)
(p2 / produce-01, ARG1, u / uranium)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),capability.,capacitate-01,false), Span(4,5,List(3, 2, 1),Iranian,(country :name (name :op "Iran")),false), Span(1,2,List(4),announces,announce-01,false), Span(2,3,List(5),expansion,expand-01,false), Span(0,1,List(8, 7, 6),Ahmadinejad,(person :name (name :op "Ahmadinejad")),false)),Map(2 -> name, 5 -> expand-01, 8 -> "Ahmadinejad", 7 -> name, 1 -> country, 4 -> announce-01, 6 -> person, 0 -> capacitate-01, 3 -> "Iran"),Map(e -> expand-01, n -> name, p -> person, a -> announce-01, c -> capacitate-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@296dba36,Annotation([Ljava.lang.String;@17f44578,[Ljava.lang.String;@5089d5fc,[Ljava.lang.String;@7c1ccd57),Annotation([Ljava.lang.String;@386474e8,[Ljava.lang.String;@d0e3919,[Ledu.cmu.lti.nlp.amr.Dependency;@13b62b71),Annotation([Ljava.lang.String;@95a3a25,[Ljava.lang.String;@1202ccd2,[Ljava.lang.String;@6eb8e97a),Annotation([Ljava.lang.String;@4c77ba7f,[Ljava.lang.String;@14243ac6,[Ledu.cmu.lti.nlp.amr.Entity;@10c400cc))
AMR:
(a / announce-01, ARG0, p / person)
(a / announce-01, ARG1, e / expand-01)
(c / capacitate-01, ARG1, p / person)
(c2 / country, name, n / name)
(n / name, op, "Iran")
(n2 / name, op, "Ahmadinejad")
(p / person, mod, c2 / country)
(p / person, name, n2 / name)

Decoded in 106,156 microseconds
Sentence: Iran refuses commitment to halt expansion but hints a possible future halt.

Oracle Span 1:  commitment => commit-01
Oracle Span 2:  expansion => expand-01
Oracle Span 3:  future => future
Oracle Span 4:  halt => halt-01
Oracle Span 5:  halt => halt-01
Oracle Span 6:  hints => hint-01
Oracle Span 7:  Iran => (country :name (name :op "Iran"))
Oracle Span 8:  possible => possible
Oracle Span 9:  refuses => refuse-01
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 6-7:  but => bunt-01
Span 2-3:  commitment => compliment-01
Span 5-6:  expansion => expand-01
Span 4-5:  halt => halt-01
Span 11-12:  halt. => halt-01
Span 7-8:  hints => hint-01
Span 0-1:  Iran => (country :name (name :op "Iran"))
Span 0-11:  Iran refuses commitment to halt expansion but hints a possible future => (date-entity :time future)
Span 9-10:  possible => possible
Span 1-2:  refuses => refuse-01

Langrangian relaxation converged after 8 iterations. Delta = 0.0
Oracle Span 2-3:  commitment => commit-01
Oracle Span 5-6:  expansion => expand-01
Oracle Span 10-11:  future => future
Oracle Span 4-5:  halt => halt-01
Oracle Span 11-12:  halt => halt-01
Oracle Span 7-8:  hints => hint-01
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 9-10:  possible => possible
Oracle Span 1-2:  refuses => refuse-01

Dependencies:
1	Iran	_	NNP	NNP	_	2	nsubj	_	_
2	refuses	_	VBZ	VBZ	_	0	root	_	_
3	commitment	_	NN	NN	_	2	dobj	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	halt	_	VB	VB	_	2	vmod	_	_
6	expansion	_	NN	NN	_	5	dobj	_	_
7	but	_	CC	CC	_	2	cc	_	_
8	hints	_	VBZ	VBZ	_	2	conj	_	_
9	a	_	DT	DT	_	12	det	_	_
10	possible	_	JJ	JJ	_	12	amod	_	_
11	future	_	JJ	JJ	_	12	amod	_	_
12	halt	_	NN	NN	_	8	dobj	_	_
13	.	_	.	.	_	2	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / commit-01, ARG1, c / country)
(c2 / commit-01, ARG2, h / halt-01)
(h / halt-01, ARG0, c / country)
(h / halt-01, ARG1, e / expand-01)
(h2 / hint-01, ARG0, c / country)
(h2 / hint-01, ARG1, p / possible)
(h2 / hint-01, concession, r / refuse-01)
(h3 / halt-01, time, f / future)
(n / name, op, "Iran")
(p / possible, domain, h3 / halt-01)
(r / refuse-01, ARG0, c / country)
(r / refuse-01, ARG1, c2 / commit-01)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),expansion,expand-01,false), Span(11,12,List(1),halt.,halt-01,false), Span(7,8,List(2),hints,hint-01,false), Span(2,3,List(3),commitment,compliment-01,false), Span(0,11,List(5, 4),Iran refuses commitment to halt expansion but hints a possible future,(date-entity :time future),false), Span(9,10,List(6),possible,possible,false), Span(0,1,List(9, 8, 7),Iran,(country :name (name :op "Iran")),false), Span(1,2,List(10),refuses,refuse-01,false), Span(4,5,List(11),halt,halt-01,false), Span(6,7,List(12),but,bunt-01,false)),Map(2 -> hint-01, 5 -> future, 12 -> bunt-01, 8 -> name, 7 -> country, 1 -> halt-01, 4 -> date-entity, 11 -> halt-01, 6 -> possible, 0 -> expand-01, 9 -> "Iran", 3 -> compliment-01, 10 -> refuse-01),Map(n -> name, e -> expand-01, h -> halt-01, b -> bunt-01, h2 -> hint-01, d -> date-entity, p -> possible, r -> refuse-01, h3 -> halt-01, c -> compliment-01, f -> future, c2 -> country))),[Ljava.lang.String;@7ebded39,Annotation([Ljava.lang.String;@325c0531,[Ljava.lang.String;@7c47111c,[Ljava.lang.String;@767fd03),Annotation([Ljava.lang.String;@16a21cf3,[Ljava.lang.String;@4405f69b,[Ledu.cmu.lti.nlp.amr.Dependency;@ec0f6),Annotation([Ljava.lang.String;@3839ba11,[Ljava.lang.String;@3efa7c61,[Ljava.lang.String;@5520f40b),Annotation([Ljava.lang.String;@23df9729,[Ljava.lang.String;@56c34871,[Ledu.cmu.lti.nlp.amr.Entity;@3bb73fbc))
AMR:
(b / bunt-01, ARG1, r / refuse-01)
(b / bunt-01, ARG2, h2 / hint-01)
(c / compliment-01, ARG1, h3 / halt-01)
(c2 / country, name, n / name)
(d / date-entity, time, f / future)
(h / halt-01, ARG1, d / date-entity)
(h2 / hint-01, ARG1, h / halt-01)
(h3 / halt-01, ARG1, e / expand-01)
(n / name, op, "Iran")
(p / possible, domain, h / halt-01)
(r / refuse-01, ARG0, c2 / country)
(r / refuse-01, ARG1, c / compliment-01)

Decoded in 268,129 microseconds
Sentence: 20080726 Iranian President Mahmoud ahmadinejad stated to scholars in the northeastern city of mashbad that Iran had expanded its arsenal of centrifuges producing enriched uranium to over 5000.

Oracle Span 1:  20080726 => (date-entity :day 26 :month 7 :year 2008)
Oracle Span 2:  5000 => 5000
Oracle Span 3:  arsenal => arsenal
Oracle Span 4:  centrifuges => centrifuge
Oracle Span 5:  city => city
Oracle Span 6:  enriched => enrich-01
Oracle Span 7:  expanded => expand-01
Oracle Span 8:  had => have-org-role-91
Oracle Span 9:  Iran => (country :name (name :op "Iran"))
Oracle Span 10:  Mahmoud ahmadinejad => (person :name (name :op "Ahmadinejad" :op "Mahmoud"))
Oracle Span 11:  mashbad => (name :op "Mashbad")
Oracle Span 12:  northeastern => northeast
Oracle Span 13:  over => over
Oracle Span 14:  President => president
Oracle Span 15:  producing => produce-01
Oracle Span 16:  scholars => scholar
Oracle Span 17:  stated => state-01
Oracle Span 18:  uranium => uranium
NER Entity: (person :name (name :op "Mahmoud" :op "ahmadinejad"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "mashbad"))
mkDayMonthYear(20080726,26,07,2008)
Spans:
Span 0-1:  20080726 => 1
Span 19-20:  arsenal => arsenal
Span 21-22:  centrifuges => centrifuge
Span 23-24:  enriched => enrich-01
Span 17-18:  expanded => expand-01
Span 3-4:  Mahmoud => (person :name (name :op "Mahmoud"))
Span 10-11:  northeastern => northeast
Span 26-27:  over => over
Span 22-23:  producing => produce-01
Span 7-8:  scholars => scholar
Span 5-6:  stated => state-01
Span 24-25:  uranium => uranium

Langrangian relaxation converged after 40 iterations. Delta = 0.0
Oracle Span 0-1:  20080726 => (date-entity :day 26 :month 7 :year 2008)
Oracle Span 27-28:  5000 => 5000
Oracle Span 19-20:  arsenal => arsenal
Oracle Span 21-22:  centrifuges => centrifuge
Oracle Span 11-12:  city => city
Oracle Span 23-24:  enriched => enrich-01
Oracle Span 17-18:  expanded => expand-01
Oracle Span 16-17:  had => have-org-role-91
Oracle Span 15-16:  Iran => (country :name (name :op "Iran"))
Oracle Span 3-5:  Mahmoud ahmadinejad => (person :name (name :op "Ahmadinejad" :op "Mahmoud"))
Oracle Span 13-14:  mashbad => (name :op "Mashbad")
Oracle Span 10-11:  northeastern => northeast
Oracle Span 26-27:  over => over
Oracle Span 2-3:  President => president
Oracle Span 22-23:  producing => produce-01
Oracle Span 7-8:  scholars => scholar
Oracle Span 5-6:  stated => state-01
Oracle Span 24-25:  uranium => uranium

Dependencies:
1	20080726	_	CD	CD	_	5	num	_	_
2	Iranian	_	JJ	JJ	_	5	amod	_	_
3	President	_	NNP	NNP	_	5	nn	_	_
4	Mahmoud	_	NNP	NNP	_	5	nn	_	_
5	ahmadinejad	_	NN	NN	_	6	nsubj	_	_
6	stated	_	VBD	VBD	_	0	root	_	_
7	to	_	TO	TO	_	6	prep	_	_
8	scholars	_	NNS	NNS	_	7	pobj	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	12	det	_	_
11	northeastern	_	JJ	JJ	_	12	amod	_	_
12	city	_	NN	NN	_	9	pobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	mashbad	_	NN	NN	_	13	pobj	_	_
15	that	_	IN	IN	_	18	mark	_	_
16	Iran	_	NNP	NNP	_	18	nsubj	_	_
17	had	_	VBD	VBD	_	18	aux	_	_
18	expanded	_	VBN	VBN	_	6	ccomp	_	_
19	its	_	PRP$	PRP$	_	20	poss	_	_
20	arsenal	_	NN	NN	_	18	dobj	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	centrifuges	_	NNS	NNS	_	21	pobj	_	_
23	producing	_	VBG	VBG	_	22	vmod	_	_
24	enriched	_	JJ	JJ	_	25	amod	_	_
25	uranium	_	NN	NN	_	23	dobj	_	_
26	to	_	TO	TO	_	23	prep	_	_
27	over	_	IN	IN	_	28	quantmod	_	_
28	5000	_	CD	CD	_	26	pobj	_	_
29	.	_	.	.	_	6	punct	_	_

Oracle:
(a / arsenal, poss, c / country)
(c / country, name, n2 / name)
(c2 / city, mod, n4 / northeast)
(c2 / city, name, n3 / name)
(c3 / centrifuge, consist, a / arsenal)
(d / date-entity, day, 26)
(d / date-entity, month, 7)
(d / date-entity, year, 2008)
(e / expand-01, ARG0, c / country)
(e / expand-01, ARG1, a / arsenal)
(e / expand-01, ARG4, o / over)
(e2 / enrich-01, ARG1, u / uranium)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, p2 / president)
(n / name, op, "Ahmadinejad")
(n / name, op, "Mahmoud")
(n2 / name, op, "Iran")
(n3 / name, op, "Mashbad")
(o / over, quant, 5 / 5000)
(p / person, name, n / name)
(p3 / produce-01, ARG0, c3 / centrifuge)
(p3 / produce-01, ARG1, u / uranium)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, e / expand-01)
(s / state-01, ARG2, s2 / scholar)
(s / state-01, location, c2 / city)
(s / state-01, time, d / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),20080726,1,false), Span(22,23,List(1),producing,produce-01,false), Span(21,22,List(2),centrifuges,centrifuge,false), Span(3,4,List(5, 4, 3),Mahmoud,(person :name (name :op "Mahmoud")),false), Span(5,6,List(6),stated,state-01,false), Span(17,18,List(7),expanded,expand-01,false), Span(26,27,List(8),over,over,false), Span(24,25,List(9),uranium,uranium,false), Span(10,11,List(10),northeastern,northeast,false), Span(19,20,List(11),arsenal,arsenal,false), Span(23,24,List(12),enriched,enrich-01,false), Span(7,8,List(13),scholars,scholar,false)),Map(2 -> centrifuge, 5 -> "Mahmoud", 12 -> enrich-01, 8 -> over, 7 -> expand-01, 1 -> produce-01, 4 -> name, 11 -> arsenal, 6 -> state-01, 0 -> 1, 9 -> uranium, 3 -> person, 10 -> northeast, 13 -> scholar),Map(e -> expand-01, n -> name, s2 -> scholar, p2 -> person, e2 -> enrich-01, s -> state-01, 1 -> 1, p -> produce-01, a -> arsenal, c -> centrifuge, u -> uranium, o -> over, n2 -> northeast))),[Ljava.lang.String;@a3bfd83,Annotation([Ljava.lang.String;@77805345,[Ljava.lang.String;@57064de0,[Ljava.lang.String;@28ac986b),Annotation([Ljava.lang.String;@7d2eaf18,[Ljava.lang.String;@8c1c183,[Ledu.cmu.lti.nlp.amr.Dependency;@6dcdf436),Annotation([Ljava.lang.String;@21ee4624,[Ljava.lang.String;@29b06b6e,[Ljava.lang.String;@2ffb6a02),Annotation([Ljava.lang.String;@2d15478f,[Ljava.lang.String;@7e19eb6f,[Ledu.cmu.lti.nlp.amr.Entity;@54d814d9))
AMR:
(e / expand-01, ARG0, 1 / 1)
(e / expand-01, ARG1, a / arsenal)
(e2 / enrich-01, ARG0, n2 / northeast)
(e2 / enrich-01, ARG1, u / uranium)
(n / name, op, "Mahmoud")
(o / over, op, s / state-01)
(p / produce-01, ARG0, a / arsenal)
(p / produce-01, ARG1, u / uranium)
(p / produce-01, ARG6, c / centrifuge)
(p2 / person, name, n / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, e / expand-01)
(s / state-01, ARG2, s2 / scholar)

Decoded in 1,032,596 microseconds
Sentence: The statement was ahmadinejad's first asserting an expansion since the 20080400 announcement that Iran was approaching the implementation of 6000 centrifuges.

Oracle Span 1:  20080400 => 2008
Oracle Span 2:  6000 => 6000
Oracle Span 3:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 4:  announcement => announce-01
Oracle Span 5:  approaching => approach-01
Oracle Span 6:  asserting => assert-03
Oracle Span 7:  centrifuges => centrifuge
Oracle Span 8:  expansion => expand-01
Oracle Span 9:  implementation => implement-01
Oracle Span 10:  Iran => (country :name (name :op "Iran"))
Oracle Span 11:  since => since
Oracle Span 12:  statement => state-01
NER Entity: (country :name (name :op "Iran"))
mkDayMonthYear(20080400,00,04,2008)
Spans:
Span 21-22:   => centrifuge
Span 6-7:  an => assert-03
Span 18-19:  of => implement-01
Span 8-9:  since => expand-01
Span 1-2:  statement => stagnate-01
Span 0-1:  The => 1
Span 9-10:  the => since
Span 16-17:  the => approach-01
Span 0-6:  The statement was ahmadinejad's first asserting => (ordinal-entity :value 1)

Langrangian relaxation converged after 31 iterations. Delta = 0.0
Oracle Span 11-12:  20080400 => 2008
Oracle Span 20-21:  6000 => 6000
Oracle Span 3-4:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 12-13:  announcement => announce-01
Oracle Span 16-17:  approaching => approach-01
Oracle Span 6-7:  asserting => assert-03
Oracle Span 21-22:  centrifuges => centrifuge
Oracle Span 8-9:  expansion => expand-01
Oracle Span 18-19:  implementation => implement-01
Oracle Span 14-15:  Iran => (country :name (name :op "Iran"))
Oracle Span 9-10:  since => since
Oracle Span 1-2:  statement => state-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	statement	_	NN	NN	_	4	nsubj	_	_
3	was	_	VBD	VBD	_	4	cop	_	_
4	ahmadinejad	_	JJ	JJ	_	0	root	_	_
5	's	_	VBZ	VBZ	_	7	aux	_	_
6	first	_	RB	RB	_	7	advmod	_	_
7	asserting	_	VBG	VBG	_	4	ccomp	_	_
8	an	_	DT	DT	_	9	det	_	_
9	expansion	_	NN	NN	_	7	dobj	_	_
10	since	_	IN	IN	_	7	prep	_	_
11	the	_	DT	DT	_	13	det	_	_
12	20080400	_	CD	CD	_	13	num	_	_
13	announcement	_	NN	NN	_	10	pobj	_	_
14	that	_	IN	IN	_	17	mark	_	_
15	Iran	_	NNP	NNP	_	17	nsubj	_	_
16	was	_	VBD	VBD	_	17	aux	_	_
17	approaching	_	VBG	VBG	_	4	ccomp	_	_
18	the	_	DT	DT	_	19	det	_	_
19	implementation	_	NN	NN	_	17	dobj	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	6000	_	CD	CD	_	22	num	_	_
22	centrifuges	_	NNS	NNS	_	20	pobj	_	_
23	.	_	.	.	_	4	punct	_	_

Oracle:
(a / assert-03, ARG0, p / person)
(a / assert-03, ARG1, e / expand-01)
(a2 / announce-01, ARG1, a3 / approach-01)
(a3 / approach-01, ARG1, c / country)
(a3 / approach-01, ARG2, i / implement-01)
(c / country, name, n2 / name)
(c2 / centrifuge, quant, 6 / 6000)
(i / implement-01, ARG0, c / country)
(i / implement-01, ARG1, c2 / centrifuge)
(n / name, op, "Ahmadinejad")
(n2 / name, op, "Iran")
(p / person, name, n / name)
(s / state-01, ARG1, a / assert-03)
(s2 / since, op, a2 / announce-01)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),The,1,false), Span(1,2,List(1),statement,stagnate-01,false), Span(9,10,List(2),the,since,false), Span(21,22,List(3),,centrifuge,false), Span(0,6,List(5, 4),The statement was ahmadinejad's first asserting,(ordinal-entity :value 1),false), Span(16,17,List(6),the,approach-01,false), Span(18,19,List(7),of,implement-01,false), Span(6,7,List(8),an,assert-03,false), Span(8,9,List(9),since,expand-01,false)),Map(2 -> since, 5 -> 1, 8 -> assert-03, 7 -> implement-01, 1 -> stagnate-01, 4 -> ordinal-entity, 6 -> approach-01, 9 -> expand-01, 0 -> 1, 3 -> centrifuge),Map(e -> expand-01, 12 -> 1, s2 -> since, s -> stagnate-01, 1 -> 1, a -> approach-01, a2 -> assert-03, i -> implement-01, c -> centrifuge, o -> ordinal-entity))),[Ljava.lang.String;@7ddd018c,Annotation([Ljava.lang.String;@1ab324af,[Ljava.lang.String;@a044ac3,[Ljava.lang.String;@1187664a),Annotation([Ljava.lang.String;@443c497,[Ljava.lang.String;@7561eec,[Ledu.cmu.lti.nlp.amr.Dependency;@2f2c1e97),Annotation([Ljava.lang.String;@533980e,[Ljava.lang.String;@1fce9343,[Ljava.lang.String;@28d84f28),Annotation([Ljava.lang.String;@674f2402,[Ljava.lang.String;@7ea5230d,[Ledu.cmu.lti.nlp.amr.Entity;@159ae311))
AMR:
(a / approach-01, ARG1, i / implement-01)
(a2 / assert-03, ARG1, e / expand-01)
(a2 / assert-03, ARG6, o / ordinal-entity)
(a2 / assert-03, path, s2 / since)
(e / expand-01, ARG1, i / implement-01)
(i / implement-01, ARG1, c / centrifuge)
(o / ordinal-entity, value, 12 / 1)
(s / stagnate-01, ARG1, o / ordinal-entity)
(s / stagnate-01, ARG6, 1 / 1)

Decoded in 572,785 microseconds
Sentence: Iran articulated the goal of 50000 centrifuges operating at the enrichment plant near the town of Natanz.

Oracle Span 1:  50000 => 50000
Oracle Span 2:  articulated => articulate-01
Oracle Span 3:  centrifuges => centrifuge
Oracle Span 4:  enrichment => enrich-01
Oracle Span 5:  goal => goal
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  Natanz => (name :op "Natanz")
Oracle Span 8:  near => near
Oracle Span 9:  operating => operate-01
Oracle Span 10:  plant => plant
Oracle Span 11:  town => town
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Natanz"))
Spans:
Span 1-2:  articulated => articulate-01
Span 6-7:  centrifuges => centrifuge
Span 10-11:  enrichment => enrich-01
Span 3-4:  goal => goal
Span 0-1:  Iran => 1
Span 0-1:  Iran => (country :name (name :op "Iran"))
Span 16-17:  Natanz. => (city :name (name :op "Natanz"))
Span 12-13:  near => near
Span 7-8:  operating => operate-01
Span 11-12:  plant => plant

Langrangian relaxation converged after 65 iterations. Delta = 0.0
Oracle Span 5-6:  50000 => 50000
Oracle Span 1-2:  articulated => articulate-01
Oracle Span 6-7:  centrifuges => centrifuge
Oracle Span 10-11:  enrichment => enrich-01
Oracle Span 3-4:  goal => goal
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 16-17:  Natanz => (name :op "Natanz")
Oracle Span 12-13:  near => near
Oracle Span 7-8:  operating => operate-01
Oracle Span 11-12:  plant => plant
Oracle Span 14-15:  town => town

Dependencies:
1	Iran	_	NNP	NNP	_	2	nsubj	_	_
2	articulated	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	4	det	_	_
4	goal	_	NN	NN	_	2	dobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	50000	_	CD	CD	_	7	num	_	_
7	centrifuges	_	NNS	NNS	_	5	pobj	_	_
8	operating	_	VBG	VBG	_	7	vmod	_	_
9	at	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	12	det	_	_
11	enrichment	_	JJ	JJ	_	12	amod	_	_
12	plant	_	NN	NN	_	9	pobj	_	_
13	near	_	IN	IN	_	12	prep	_	_
14	the	_	DT	DT	_	15	det	_	_
15	town	_	NN	NN	_	13	pobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	Natanz	_	NNP	NNP	_	16	pobj	_	_
18	.	_	.	.	_	2	punct	_	_

Oracle:
(a / articulate-01, ARG0, c / country)
(a / articulate-01, ARG1, g / goal)
(c / country, name, n / name)
(c2 / centrifuge, quant, 5 / 50000)
(e / enrich-01, ARG0, p / plant)
(g / goal, mod, c2 / centrifuge)
(n / name, op, "Iran")
(n2 / name, op, "Natanz")
(n3 / near, op, t / town)
(o / operate-01, ARG1, c2 / centrifuge)
(o / operate-01, location, p / plant)
(p / plant, location, n3 / near)
(t / town, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(2, 1, 0),Natanz.,(city :name (name :op "Natanz")),false), Span(0,1,List(3),Iran,1,false), Span(3,4,List(4),goal,goal,false), Span(10,11,List(5),enrichment,enrich-01,false), Span(11,12,List(6),plant,plant,false), Span(7,8,List(7),operating,operate-01,false), Span(1,2,List(8),articulated,articulate-01,false), Span(6,7,List(9),centrifuges,centrifuge,false), Span(0,1,List(12, 11, 10),Iran,(country :name (name :op "Iran")),false), Span(12,13,List(13),near,near,false)),Map(2 -> "Natanz", 5 -> enrich-01, 12 -> "Iran", 8 -> articulate-01, 7 -> operate-01, 1 -> name, 4 -> goal, 11 -> name, 6 -> plant, 0 -> city, 9 -> centrifuge, 3 -> 1, 10 -> country, 13 -> near),Map(e -> enrich-01, n -> name, p -> plant, g -> goal, 1 -> 1, n3 -> near, c3 -> country, a -> articulate-01, c -> city, o -> operate-01, n2 -> name, c2 -> centrifuge))),[Ljava.lang.String;@24da5716,Annotation([Ljava.lang.String;@41355a78,[Ljava.lang.String;@33622fd3,[Ljava.lang.String;@16dbfde9),Annotation([Ljava.lang.String;@604f6ac3,[Ljava.lang.String;@b421a28,[Ledu.cmu.lti.nlp.amr.Dependency;@297ca024),Annotation([Ljava.lang.String;@60013457,[Ljava.lang.String;@7b0343e6,[Ljava.lang.String;@600b95f4),Annotation([Ljava.lang.String;@2c3a6451,[Ljava.lang.String;@45704e0d,[Ledu.cmu.lti.nlp.amr.Entity;@248d3936))
AMR:
(a / articulate-01, ARG0, c3 / country)
(a / articulate-01, ARG1, g / goal)
(a / articulate-01, ARG6, 1 / 1)
(c / city, location, c3 / country)
(c / city, name, n / name)
(c3 / country, name, n2 / name)
(e / enrich-01, ARG1, a / articulate-01)
(n / name, op, "Natanz")
(n2 / name, op, "Iran")
(o / operate-01, ARG0, c2 / centrifuge)
(o / operate-01, ARG2, p / plant)
(p / plant, location, n3 / near)
(p / plant, mod, e / enrich-01)

Decoded in 1,014,281 microseconds
Sentence: The international community has demanded that Iran halt the production of nuclear material.

Oracle Span 1:  community => community
Oracle Span 2:  demanded => demand-01
Oracle Span 3:  halt => halt-01
Oracle Span 4:  international => international
Oracle Span 5:  Iran => (country :name (name :op "Iran"))
Oracle Span 6:  material => material
Oracle Span 7:  nuclear => nucleus
Oracle Span 8:  production => produce-01
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 2-3:  community => community
Span 4-5:  demanded => demand-01
Span 7-8:  halt => halt-01
Span 1-2:  international => international
Span 6-7:  Iran => (country :name (name :op "Iran"))
Span 12-13:  material. => material
Span 11-12:  nuclear => nucleus
Span 9-10:  production => produce-01

Langrangian relaxation converged after 18 iterations. Delta = 0.0
Oracle Span 2-3:  community => community
Oracle Span 4-5:  demanded => demand-01
Oracle Span 7-8:  halt => halt-01
Oracle Span 1-2:  international => international
Oracle Span 6-7:  Iran => (country :name (name :op "Iran"))
Oracle Span 12-13:  material => material
Oracle Span 11-12:  nuclear => nucleus
Oracle Span 9-10:  production => produce-01

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	international	_	JJ	JJ	_	3	amod	_	_
3	community	_	NN	NN	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	demanded	_	VBN	VBN	_	0	root	_	_
6	that	_	IN	IN	_	8	mark	_	_
7	Iran	_	NNP	NNP	_	8	nsubj	_	_
8	halt	_	VBP	VBP	_	5	ccomp	_	_
9	the	_	DT	DT	_	10	det	_	_
10	production	_	NN	NN	_	8	dobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	nuclear	_	JJ	JJ	_	13	amod	_	_
13	material	_	NN	NN	_	11	pobj	_	_
14	.	_	.	.	_	5	punct	_	_

Oracle:
(c / community, mod, i / international)
(c2 / country, name, n / name)
(d / demand-01, ARG0, c / community)
(d / demand-01, ARG1, h / halt-01)
(h / halt-01, ARG0, c2 / country)
(h / halt-01, ARG1, p / produce-01)
(m / material, mod, n2 / nucleus)
(n / name, op, "Iran")
(p / produce-01, ARG1, m / material)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),international,international,false), Span(2,3,List(1),community,community,false), Span(4,5,List(2),demanded,demand-01,false), Span(12,13,List(3),material.,material,false), Span(6,7,List(6, 5, 4),Iran,(country :name (name :op "Iran")),false), Span(7,8,List(7),halt,halt-01,false), Span(11,12,List(8),nuclear,nucleus,false), Span(9,10,List(9),production,produce-01,false)),Map(2 -> demand-01, 5 -> name, 8 -> nucleus, 7 -> halt-01, 1 -> community, 4 -> country, 6 -> "Iran", 9 -> produce-01, 0 -> international, 3 -> material),Map(n -> name, h -> halt-01, m -> material, d -> demand-01, p -> produce-01, i -> international, c -> community, n2 -> nucleus, c2 -> country))),[Ljava.lang.String;@4f6040fd,Annotation([Ljava.lang.String;@1d7b167,[Ljava.lang.String;@6e70df42,[Ljava.lang.String;@184fa885),Annotation([Ljava.lang.String;@556574d9,[Ljava.lang.String;@6985bb9b,[Ledu.cmu.lti.nlp.amr.Dependency;@1e7f326),Annotation([Ljava.lang.String;@6409681f,[Ljava.lang.String;@1a341bfb,[Ljava.lang.String;@5e293245),Annotation([Ljava.lang.String;@60e99465,[Ljava.lang.String;@4f8f41f7,[Ledu.cmu.lti.nlp.amr.Entity;@755e603e))
AMR:
(c / community, mod, i / international)
(c2 / country, name, n / name)
(d / demand-01, ARG0, c / community)
(d / demand-01, ARG1, h / halt-01)
(h / halt-01, ARG0, c2 / country)
(h / halt-01, ARG1, p / produce-01)
(m / material, mod, n2 / nucleus)
(n / name, op, "Iran")
(p / produce-01, ARG1, m / material)

Decoded in 290,190 microseconds
Sentence: Media reports differed on the number of centrifuges ahmadinejad cited.

Oracle Span 1:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 2:  centrifuges => centrifuge
Oracle Span 3:  cited => cite-01
Oracle Span 4:  differed => differ-01
Oracle Span 5:  Media => media
Oracle Span 6:  number => number
Oracle Span 7:  reports => (thing :ARG1-of report-01)
Spans:
Span 7-8:  centrifuges => centrifuge
Span 9-10:  cited. => cite-01
Span 2-3:  differed => differ-01
Span 0-1:  Media => media
Span 5-6:  number => number
Span 1-2:  reports => report-01

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 8-9:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 7-8:  centrifuges => centrifuge
Oracle Span 9-10:  cited => cite-01
Oracle Span 2-3:  differed => differ-01
Oracle Span 0-1:  Media => media
Oracle Span 5-6:  number => number
Oracle Span 1-2:  reports => (thing :ARG1-of report-01)

Dependencies:
1	Media	_	NNP	NNP	_	2	nn	_	_
2	reports	_	NNS	NNS	_	10	nsubj	_	_
3	differed	_	VBN	VBN	_	2	vmod	_	_
4	on	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	number	_	NN	NN	_	4	pobj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	centrifuges	_	NNS	NNS	_	7	pobj	_	_
9	ahmadinejad	_	VBN	VBN	_	8	vmod	_	_
10	cited	_	VBD	VBD	_	0	root	_	_
11	.	_	.	.	_	10	punct	_	_

Oracle:
(c / cite-01, ARG0, p / person)
(c / cite-01, ARG1, n2 / number)
(c2 / centrifuge, quant, n2 / number)
(d / differ-01, ARG0, t / thing)
(d / differ-01, ARG2, n2 / number)
(n / name, op, "Ahmadinejad")
(p / person, name, n / name)
(r / report-01, ARG0, m / media)
(r / report-01, ARG1, t / thing)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),reports,report-01,false), Span(7,8,List(1),centrifuges,centrifuge,false), Span(2,3,List(2),differed,differ-01,false), Span(9,10,List(3),cited.,cite-01,false), Span(0,1,List(4),Media,media,false), Span(5,6,List(5),number,number,false)),Map(2 -> differ-01, 5 -> number, 1 -> centrifuge, 4 -> media, 0 -> report-01, 3 -> cite-01),Map(n -> number, m -> media, d -> differ-01, r -> report-01, c -> centrifuge, c2 -> cite-01))),[Ljava.lang.String;@6408fb13,Annotation([Ljava.lang.String;@e7976a0,[Ljava.lang.String;@7a539d2e,[Ljava.lang.String;@1b02bc72),Annotation([Ljava.lang.String;@38711c62,[Ljava.lang.String;@7df8a1ba,[Ledu.cmu.lti.nlp.amr.Dependency;@1ba4f9c6),Annotation([Ljava.lang.String;@15cb27ec,[Ljava.lang.String;@25e9bb3b,[Ljava.lang.String;@1da42b4d),Annotation([Ljava.lang.String;@21728bf6,[Ljava.lang.String;@6dca2c73,[Ledu.cmu.lti.nlp.amr.Entity;@5126292))
AMR:
(c / centrifuge, quant, n / number)
(c2 / cite-01, ARG0, r / report-01)
(c2 / cite-01, ARG1, n / number)
(d / differ-01, ARG1, r / report-01)
(r / report-01, ARG0, m / media)

Decoded in 215,201 microseconds
Sentence: An Iranian news agency reported that ahmadinejad stated Iran had 6000 working centrifuges but the agency subsequently removed the statement from the Internet.

Oracle Span 1:  6000 => 6000
Oracle Span 2:  agency => agency
Oracle Span 3:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 4:  centrifuges => centrifuge
Oracle Span 5:  had => have-03
Oracle Span 6:  Internet => internet
Oracle Span 7:  Iran => (country :name (name :op "Iran"))
Oracle Span 8:  news => news
Oracle Span 9:  removed => remove-01
Oracle Span 10:  reported => report-01
Oracle Span 11:  stated => state-01
Oracle Span 12:  subsequently => subsequent
Oracle Span 13:  working => work-09
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "Internet"))
Spans:
Span 15-16:  agency => agency
Span 0-11:  An Iranian news agency reported that ahmadinejad stated Iran had 6000 => (date-entity :time 6000)
Span 13-14:  but => bunt-01
Span 12-13:  centrifuges => centrifuge
Span 22-23:  Internet. => internet
Span 8-9:  Iran => (country :name (name :op "Iran"))
Span 1-2:  Iranian => (country :name (name :op "Iran"))
Span 2-3:  news => news
Span 17-18:  removed => remove-01
Span 4-5:  reported => report-01
Span 7-8:  stated => state-01
Span 19-20:  statement => stagnate-01
Span 16-17:  subsequently => subsequent
Span 11-12:  working => work-01

Langrangian relaxation converged after 100 iterations. Delta = 0.0
Oracle Span 10-11:  6000 => 6000
Oracle Span 3-4:  agency => agency
Oracle Span 6-7:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 12-13:  centrifuges => centrifuge
Oracle Span 9-10:  had => have-03
Oracle Span 22-23:  Internet => internet
Oracle Span 8-9:  Iran => (country :name (name :op "Iran"))
Oracle Span 2-3:  news => news
Oracle Span 17-18:  removed => remove-01
Oracle Span 4-5:  reported => report-01
Oracle Span 7-8:  stated => state-01
Oracle Span 16-17:  subsequently => subsequent
Oracle Span 11-12:  working => work-09

Dependencies:
1	An	_	DT	DT	_	4	det	_	_
2	Iranian	_	JJ	JJ	_	4	amod	_	_
3	news	_	NN	NN	_	4	nn	_	_
4	agency	_	NN	NN	_	5	nsubj	_	_
5	reported	_	VBD	VBD	_	0	root	_	_
6	that	_	IN	IN	_	8	mark	_	_
7	ahmadinejad	_	NN	NN	_	8	nsubj	_	_
8	stated	_	VBD	VBD	_	5	ccomp	_	_
9	Iran	_	NNP	NNP	_	10	nsubj	_	_
10	had	_	VBD	VBD	_	8	ccomp	_	_
11	6000	_	CD	CD	_	13	num	_	_
12	working	_	VBG	VBG	_	13	amod	_	_
13	centrifuges	_	NNS	NNS	_	10	dobj	_	_
14	but	_	CC	CC	_	5	cc	_	_
15	the	_	DT	DT	_	16	det	_	_
16	agency	_	NN	NN	_	18	nsubj	_	_
17	subsequently	_	RB	RB	_	18	advmod	_	_
18	removed	_	VBD	VBD	_	5	conj	_	_
19	the	_	DT	DT	_	20	det	_	_
20	statement	_	NN	NN	_	18	dobj	_	_
21	from	_	IN	IN	_	18	prep	_	_
22	the	_	DT	DT	_	23	det	_	_
23	Internet	_	NN	NN	_	21	pobj	_	_
24	.	_	.	.	_	5	punct	_	_

Oracle:
(a / agency, mod, c / country)
(a / agency, mod, n / news)
(c / country, name, n2 / name)
(c2 / centrifuge, quant, 6 / 6000)
(h / have-03, ARG0, c / country)
(h / have-03, ARG1, c2 / centrifuge)
(n2 / name, op, "Iran")
(n3 / name, op, "Ahmadinejad")
(p / person, name, n3 / name)
(r / report-01, ARG0, a / agency)
(r / report-01, ARG1, s / state-01)
(r2 / remove-01, ARG0, a / agency)
(r2 / remove-01, ARG1, s / state-01)
(r2 / remove-01, ARG2, i / internet)
(r2 / remove-01, concession, r / report-01)
(r2 / remove-01, time, s2 / subsequent)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, h / have-03)
(w / work-09, ARG0, c2 / centrifuge)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),reported,report-01,false), Span(22,23,List(1),Internet.,internet,false), Span(17,18,List(2),removed,remove-01,false), Span(19,20,List(3),statement,stagnate-01,false), Span(16,17,List(4),subsequently,subsequent,false), Span(13,14,List(5),but,bunt-01,false), Span(7,8,List(6),stated,state-01,false), Span(12,13,List(7),centrifuges,centrifuge,false), Span(2,3,List(8),news,news,false), Span(1,2,List(11, 10, 9),Iranian,(country :name (name :op "Iran")),false), Span(15,16,List(12),agency,agency,false), Span(8,9,List(15, 14, 13),Iran,(country :name (name :op "Iran")),false), Span(0,11,List(17, 16),An Iranian news agency reported that ahmadinejad stated Iran had 6000,(date-entity :time 6000),false), Span(11,12,List(18),working,work-01,false)),Map(2 -> remove-01, 5 -> bunt-01, 12 -> agency, 15 -> "Iran", 8 -> news, 18 -> work-01, 7 -> centrifuge, 17 -> 6000, 1 -> internet, 4 -> subsequent, 11 -> "Iran", 14 -> name, 6 -> state-01, 0 -> report-01, 9 -> country, 16 -> date-entity, 3 -> stagnate-01, 10 -> name, 13 -> country),Map(w -> work-01, n -> news, s2 -> subsequent, b -> bunt-01, s -> stagnate-01, d -> date-entity, r2 -> remove-01, n3 -> name, a -> agency, c3 -> country, r -> report-01, i -> internet, 6 -> 6000, s3 -> state-01, c -> centrifuge, c2 -> country, n2 -> name))),[Ljava.lang.String;@1a0cb234,Annotation([Ljava.lang.String;@2a6b8a38,[Ljava.lang.String;@4b407b98,[Ljava.lang.String;@2626453d),Annotation([Ljava.lang.String;@5944dedf,[Ljava.lang.String;@2f08a585,[Ledu.cmu.lti.nlp.amr.Dependency;@67dc8747),Annotation([Ljava.lang.String;@7347292c,[Ljava.lang.String;@c8aa3bd,[Ljava.lang.String;@66c41b24),Annotation([Ljava.lang.String;@65a15e04,[Ljava.lang.String;@2f6515d5,[Ledu.cmu.lti.nlp.amr.Entity;@762bdccf))
AMR:
(b / bunt-01, ARG1, s3 / state-01)
(b / bunt-01, ARG2, r2 / remove-01)
(b / bunt-01, ARG6, d / date-entity)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(d / date-entity, time, 6 / 6000)
(n / news, mod, c2 / country)
(n2 / name, op, "Iran")
(n3 / name, op, "Iran")
(r / report-01, ARG1, s3 / state-01)
(r2 / remove-01, ARG0, a / agency)
(r2 / remove-01, ARG1, s / stagnate-01)
(r2 / remove-01, location, i / internet)
(r2 / remove-01, mod, s2 / subsequent)
(s / stagnate-01, ARG1, n / news)
(s3 / state-01, ARG1, c3 / country)
(w / work-01, ARG1, c / centrifuge)
(w / work-01, ARG6, d / date-entity)

Decoded in 2,445,975 microseconds
Sentence: Another Iranian news agency stated that ahmadinejad referred to 100000s of centrifuges.

Oracle Span 1:  100000s => 100000
Oracle Span 2:  agency => agency
Oracle Span 3:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 4:  Another => another
Oracle Span 5:  centrifuges => centrifuge
Oracle Span 6:  Iranian => (country :name (name :op "Iran"))
Oracle Span 7:  news => news
Oracle Span 8:  referred => refer-01
Oracle Span 9:  stated => state-01
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 0-1:  Another => 1
Span 0-1:  Another => another
Span 11-12:  centrifuges. => centrifuge
Span 1-2:  Iranian => (country :name (name :op "Iran"))
Span 2-3:  news => news
Span 7-8:  referred => refer-01
Span 4-5:  stated => state-01

Langrangian relaxation converged after 15 iterations. Delta = 0.0
Oracle Span 9-10:  100000s => 100000
Oracle Span 3-4:  agency => agency
Oracle Span 6-7:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 0-1:  Another => another
Oracle Span 11-12:  centrifuges => centrifuge
Oracle Span 1-2:  Iranian => (country :name (name :op "Iran"))
Oracle Span 2-3:  news => news
Oracle Span 7-8:  referred => refer-01
Oracle Span 4-5:  stated => state-01

Dependencies:
1	Another	_	DT	DT	_	4	det	_	_
2	Iranian	_	JJ	JJ	_	4	amod	_	_
3	news	_	NN	NN	_	4	nn	_	_
4	agency	_	NN	NN	_	5	nsubj	_	_
5	stated	_	VBD	VBD	_	0	root	_	_
6	that	_	IN	IN	_	8	mark	_	_
7	ahmadinejad	_	NN	NN	_	8	nsubj	_	_
8	referred	_	VBD	VBD	_	5	ccomp	_	_
9	to	_	TO	TO	_	8	prep	_	_
10	100000s	_	NNS	NNS	_	9	pobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	centrifuges	_	NNS	NNS	_	11	pobj	_	_
13	.	_	.	.	_	5	punct	_	_

Oracle:
(a / agency, mod, a2 / another)
(a / agency, mod, c / country)
(a / agency, mod, n / news)
(c / country, name, n2 / name)
(n2 / name, op, "Iran")
(n3 / name, op, "Ahmadinejad")
(p / person, name, n3 / name)
(r / refer-01, ARG0, p / person)
(r / refer-01, ARG1, c2 / centrifuge)
(s / state-01, ARG0, a / agency)
(s / state-01, ARG1, r / refer-01)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Another,1,false), Span(4,5,List(1),stated,state-01,false), Span(2,3,List(2),news,news,false), Span(1,2,List(5, 4, 3),Iranian,(country :name (name :op "Iran")),false), Span(11,12,List(6),centrifuges.,centrifuge,false), Span(0,1,List(7),Another,another,false), Span(7,8,List(8),referred,refer-01,false)),Map(2 -> news, 5 -> "Iran", 8 -> refer-01, 7 -> another, 1 -> state-01, 4 -> name, 6 -> centrifuge, 0 -> 1, 3 -> country),Map(n -> news, s -> state-01, 1 -> 1, a -> another, r -> refer-01, c -> country, c2 -> centrifuge, n2 -> name))),[Ljava.lang.String;@12184bdd,Annotation([Ljava.lang.String;@2f85fba6,[Ljava.lang.String;@121c8c26,[Ljava.lang.String;@57efb320),Annotation([Ljava.lang.String;@7f95ca3,[Ljava.lang.String;@721cf31,[Ledu.cmu.lti.nlp.amr.Dependency;@712a1e4f),Annotation([Ljava.lang.String;@5b76c5f9,[Ljava.lang.String;@16a78670,[Ljava.lang.String;@1f769bd2),Annotation([Ljava.lang.String;@3e0f3615,[Ljava.lang.String;@533b6520,[Ledu.cmu.lti.nlp.amr.Entity;@7985fd31))
AMR:
(a / another, mod, 1 / 1)
(c / country, name, n2 / name)
(n / news, mod, c / country)
(n2 / name, op, "Iran")
(r / refer-01, ARG1, a / another)
(r / refer-01, prep-in, c2 / centrifuge)
(s / state-01, ARG0, n / news)
(s / state-01, ARG1, r / refer-01)

Decoded in 229,468 microseconds
Sentence: Experts discounted the significance of ahmadinejad's claim in the absence of information on the centrifuges' functionality.

Oracle Span 1:  absence => absent-01
Oracle Span 2:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 3:  centrifuges => centrifuge
Oracle Span 4:  claim => (thing :ARG1-of claim-01)
Oracle Span 5:  discounted => discount-02
Oracle Span 6:  Experts => (person :ARG1-of expert-41)
Oracle Span 7:  functionality => functionality
Oracle Span 8:  information => information
Oracle Span 9:  significance => significance
Spans:
Span 1-2:  discounted => discount-01
Span 0-1:  Experts => (person :ARG1-of expert-41)
Span 15-16:  functionality. => centrifuge
Span 7-8:  in => claim-01
Span 10-11:  of => absent-01
Span 12-13:  on => information
Span 3-4:  significance => significance

Langrangian relaxation converged after 24 iterations. Delta = 0.0
Oracle Span 10-11:  absence => absent-01
Oracle Span 5-6:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 15-16:  centrifuges => centrifuge
Oracle Span 7-8:  claim => (thing :ARG1-of claim-01)
Oracle Span 1-2:  discounted => discount-02
Oracle Span 0-1:  Experts => (person :ARG1-of expert-41)
Oracle Span 17-18:  functionality => functionality
Oracle Span 12-13:  information => information
Oracle Span 3-4:  significance => significance

Dependencies:
1	Experts	_	NNS	NNS	_	2	nsubj	_	_
2	discounted	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	4	det	_	_
4	significance	_	NN	NN	_	2	dobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	ahmadinejad	_	NN	NN	_	8	poss	_	_
7	's	_	POS	POS	_	6	possessive	_	_
8	claim	_	NN	NN	_	5	pobj	_	_
9	in	_	IN	IN	_	2	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	absence	_	NN	NN	_	9	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	information	_	NN	NN	_	12	pobj	_	_
14	on	_	IN	IN	_	2	prep	_	_
15	the	_	DT	DT	_	16	det	_	_
16	centrifuges	_	NNS	NNS	_	18	poss	_	_
17	'	_	POS	POS	_	16	possessive	_	_
18	functionality	_	NN	NN	_	14	pobj	_	_
19	.	_	.	.	_	2	punct	_	_

Oracle:
(a / absent-01, ARG1, i / information)
(c / claim-01, ARG0, p / person)
(c / claim-01, ARG1, t / thing)
(d / discount-02, ARG0, p2 / person)
(d / discount-02, ARG1, s / significance)
(e / expert-41, ARG1, p2 / person)
(f / functionality, poss, c3 / centrifuge)
(i / information, topic, f / functionality)
(n / name, op, "Ahmadinejad")
(p / person, name, n / name)
(s / significance, poss, t / thing)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(1, 0),Experts,(person :ARG1-of expert-41),false), Span(15,16,List(2),functionality.,centrifuge,false), Span(3,4,List(3),significance,significance,false), Span(12,13,List(4),on,information,false), Span(7,8,List(5),in,claim-01,false), Span(1,2,List(6),discounted,discount-01,false), Span(10,11,List(7),of,absent-01,false)),Map(2 -> centrifuge, 5 -> claim-01, 7 -> absent-01, 1 -> expert-41, 4 -> information, 6 -> discount-01, 0 -> person, 3 -> significance),Map(e -> expert-41, s -> significance, d -> discount-01, p -> person, a -> absent-01, i -> information, c -> centrifuge, c2 -> claim-01))),[Ljava.lang.String;@6a6e3e8,Annotation([Ljava.lang.String;@7a461b81,[Ljava.lang.String;@2fc4cc1b,[Ljava.lang.String;@27e88959),Annotation([Ljava.lang.String;@166087ef,[Ljava.lang.String;@5c301cb1,[Ledu.cmu.lti.nlp.amr.Dependency;@551da738),Annotation([Ljava.lang.String;@365c5e83,[Ljava.lang.String;@2491f858,[Ljava.lang.String;@7898adef),Annotation([Ljava.lang.String;@4084e1a3,[Ljava.lang.String;@14f80776,[Ledu.cmu.lti.nlp.amr.Entity;@3f807e89))
AMR:
(a / absent-01, ARG1, i / information)
(c2 / claim-01, ARG0, c / centrifuge)
(c2 / claim-01, ARG1, a / absent-01)
(d / discount-01, ARG0, p / person)
(d / discount-01, ARG1, s / significance)
(d / discount-01, ARG2, a / absent-01)
(e / expert-41, ARG1, p / person)

Decoded in 360,766 microseconds
Sentence: A Western diplomat in Tehran speaking under condition of anonymity stated that the quantity of centrifuges is less important than whether the machines are operational and efficient but that ahmadinejad's assertion will hinder a resolution of the diplomatic standoff between Iran and the West.

Oracle Span 1:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 2:  and => and
Oracle Span 3:  anonymity => anonymity
Oracle Span 4:  assertion => (thing :ARG1-of assert-03)
Oracle Span 5:  between => between
Oracle Span 6:  centrifuges => centrifuge
Oracle Span 7:  condition => condition-01
Oracle Span 8:  diplomat => (have-org-role-91 :ARG2 diplomat)
Oracle Span 9:  diplomatic => diplomacy
Oracle Span 10:  efficient => efficient-41
Oracle Span 11:  hinder => hinder-01
Oracle Span 12:  important => important
Oracle Span 13:  Iran => (country :name (name :op "Iran"))
Oracle Span 14:  less => less
Oracle Span 15:  machines => machine
Oracle Span 16:  operational => operate-01
Oracle Span 17:  quantity => quantity
Oracle Span 18:  resolution => resolution
Oracle Span 19:  speaking => (person :ARG0-of speak-01)
Oracle Span 20:  standoff => standoff
Oracle Span 21:  stated => state-01
Oracle Span 22:  Tehran => (city :name (name :op "Tehran"))
Oracle Span 23:  West => (world-region :name (name :op "West"))
NER Entity: (country :name (name :op "West"))
NER Entity: (country :name (name :op "Tehran"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 44-45:   => (world-region :name (name :op "West"))
Span 33-34:  a => hinder-01
Span 29-30:  ahmadinejad's => (person :name (name :op "ahmadinejad"))
Span 25-26:  and => and
Span 9-10:  anonymity => anonymity
Span 39-40:  between => standoff
Span 27-28:  but => bunt-01
Span 15-16:  centrifuges => centrifuge
Span 7-8:  condition => condition-01
Span 2-3:  diplomat => (person :ARG0-of (have-org-role-91 :ARG2 diplomat))
Span 26-27:  efficient => effeminate-01
Span 18-19:  important => important
Span 40-41:  Iran => between
Span 17-18:  less => less
Span 22-23:  machines => machine
Span 35-36:  of => resolution
Span 24-25:  operational => proportion-01
Span 13-14:  quantity => quantity
Span 5-6:  speaking => speak-01
Span 38-39:  standoff => diplomacy
Span 10-11:  stated => state-01
Span 4-5:  Tehran => (city :name (name :op "Tehran"))
Span 42-43:  the => and
Span 1-2:  Western => west
Span 31-32:  will => ascertain-01

Langrangian relaxation converged after 58 iterations. Delta = 0.0
Oracle Span 29-30:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 25-26:  and => and
Oracle Span 9-10:  anonymity => anonymity
Oracle Span 31-32:  assertion => (thing :ARG1-of assert-03)
Oracle Span 40-41:  between => between
Oracle Span 15-16:  centrifuges => centrifuge
Oracle Span 7-8:  condition => condition-01
Oracle Span 2-3:  diplomat => (have-org-role-91 :ARG2 diplomat)
Oracle Span 38-39:  diplomatic => diplomacy
Oracle Span 26-27:  efficient => efficient-41
Oracle Span 33-34:  hinder => hinder-01
Oracle Span 18-19:  important => important
Oracle Span 41-42:  Iran => (country :name (name :op "Iran"))
Oracle Span 17-18:  less => less
Oracle Span 22-23:  machines => machine
Oracle Span 24-25:  operational => operate-01
Oracle Span 13-14:  quantity => quantity
Oracle Span 35-36:  resolution => resolution
Oracle Span 5-6:  speaking => (person :ARG0-of speak-01)
Oracle Span 39-40:  standoff => standoff
Oracle Span 10-11:  stated => state-01
Oracle Span 4-5:  Tehran => (city :name (name :op "Tehran"))
Oracle Span 44-45:  West => (world-region :name (name :op "West"))

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	Western	_	JJ	JJ	_	3	amod	_	_
3	diplomat	_	NN	NN	_	11	nsubj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	Tehran	_	NNP	NNP	_	4	pobj	_	_
6	speaking	_	VBG	VBG	_	5	vmod	_	_
7	under	_	IN	IN	_	6	prep	_	_
8	condition	_	NN	NN	_	7	pobj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	anonymity	_	NN	NN	_	9	pobj	_	_
11	stated	_	VBD	VBD	_	0	root	_	_
12	that	_	IN	IN	_	19	mark	_	_
13	the	_	DT	DT	_	14	det	_	_
14	quantity	_	NN	NN	_	19	nsubj	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	centrifuges	_	NNS	NNS	_	15	pobj	_	_
17	is	_	VBZ	VBZ	_	19	cop	_	_
18	less	_	RBR	RBR	_	19	advmod	_	_
19	important	_	JJ	JJ	_	11	ccomp	_	_
20	than	_	IN	IN	_	25	mark	_	_
21	whether	_	IN	IN	_	25	mark	_	_
22	the	_	DT	DT	_	23	det	_	_
23	machines	_	NNS	NNS	_	25	nsubj	_	_
24	are	_	VBP	VBP	_	25	cop	_	_
25	operational	_	JJ	JJ	_	19	advcl	_	_
26	and	_	CC	CC	_	25	cc	_	_
27	efficient	_	JJ	JJ	_	25	conj	_	_
28	but	_	CC	CC	_	19	cc	_	_
29	that	_	IN	IN	_	34	mark	_	_
30	ahmadinejad	_	NN	NN	_	32	poss	_	_
31	's	_	POS	POS	_	30	possessive	_	_
32	assertion	_	NN	NN	_	34	nsubj	_	_
33	will	_	MD	MD	_	34	aux	_	_
34	hinder	_	VB	VB	_	19	conj	_	_
35	a	_	DT	DT	_	36	det	_	_
36	resolution	_	NN	NN	_	34	dobj	_	_
37	of	_	IN	IN	_	36	prep	_	_
38	the	_	DT	DT	_	40	det	_	_
39	diplomatic	_	JJ	JJ	_	40	amod	_	_
40	standoff	_	NN	NN	_	37	pobj	_	_
41	between	_	IN	IN	_	40	prep	_	_
42	Iran	_	NNP	NNP	_	41	pobj	_	_
43	and	_	CC	CC	_	42	cc	_	_
44	the	_	DT	DT	_	45	det	_	_
45	West	_	NN	NN	_	42	conj	_	_
46	.	_	.	.	_	11	punct	_	_

Oracle:
(a2 / and, op, e / efficient-41)
(a2 / and, op, o / operate-01)
(a3 / assert-03, ARG0, p / person)
(a3 / assert-03, ARG1, t / thing)
(b / between, op, c4 / country)
(b / between, op, w / world-region)
(c / condition-01, ARG1, s2 / speak-01)
(c / condition-01, ARG2, a / anonymity)
(c2 / city, name, n2 / name)
(c3 / centrifuge, quant, q / quantity)
(c4 / country, name, n4 / name)
(e / efficient-41, ARG1, m / machine)
(h / hinder-01, ARG0, t / thing)
(h / hinder-01, ARG1, r / resolution)
(h / hinder-01, concession, i / important)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG2, d / diplomat)
(i / important, compared-to, a2 / and)
(i / important, degree, l / less)
(i / important, domain, q / quantity)
(n / name, op, "West")
(n2 / name, op, "Tehran")
(n3 / name, op, "Ahmadinejad")
(n4 / name, op, "Iran")
(o / operate-01, ARG1, m / machine)
(p / person, name, n3 / name)
(p2 / person, location, c2 / city)
(p2 / person, mod, w / world-region)
(r / resolution, poss, s3 / standoff)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, i / important)
(s2 / speak-01, ARG0, p2 / person)
(s3 / standoff, mod, b / between)
(s3 / standoff, mod, d2 / diplomacy)
(w / world-region, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),centrifuges,centrifuge,false), Span(18,19,List(1),important,important,false), Span(26,27,List(2),efficient,effeminate-01,false), Span(38,39,List(3),standoff,diplomacy,false), Span(9,10,List(4),anonymity,anonymity,false), Span(4,5,List(7, 6, 5),Tehran,(city :name (name :op "Tehran")),false), Span(17,18,List(8),less,less,false), Span(2,3,List(11, 10, 9),diplomat,(person :ARG0-of (have-org-role-91 :ARG2 diplomat)),false), Span(40,41,List(12),Iran,between,false), Span(24,25,List(13),operational,proportion-01,false), Span(22,23,List(14),machines,machine,false), Span(35,36,List(15),of,resolution,false), Span(39,40,List(16),between,standoff,false), Span(13,14,List(17),quantity,quantity,false), Span(42,43,List(18),the,and,false), Span(25,26,List(19),and,and,false), Span(29,30,List(22, 21, 20),ahmadinejad's,(person :name (name :op "ahmadinejad")),false), Span(33,34,List(23),a,hinder-01,false), Span(1,2,List(24),Western,west,false), Span(44,45,List(27, 26, 25),,(world-region :name (name :op "West")),false), Span(5,6,List(28),speaking,speak-01,false), Span(7,8,List(29),condition,condition-01,false), Span(10,11,List(30),stated,state-01,false), Span(27,28,List(31),but,bunt-01,false), Span(31,32,List(32),will,ascertain-01,false)),Map(30 -> state-01, 2 -> effeminate-01, 5 -> city, 27 -> "West", 12 -> between, 8 -> less, 15 -> resolution, 21 -> name, 18 -> and, 24 -> west, 7 -> "Tehran", 1 -> important, 17 -> quantity, 23 -> hinder-01, 26 -> name, 4 -> anonymity, 11 -> diplomat, 32 -> ascertain-01, 14 -> machine, 29 -> condition-01, 20 -> person, 28 -> speak-01, 6 -> name, 9 -> person, 0 -> centrifuge, 22 -> "ahmadinejad", 16 -> standoff, 19 -> and, 10 -> have-org-role-91, 3 -> diplomacy, 31 -> bunt-01, 25 -> world-region, 13 -> proportion-01),Map(e -> effeminate-01, n -> name, w -> west, h -> have-org-role-91, q -> quantity, s2 -> speak-01, h2 -> hinder-01, b -> between, b2 -> bunt-01, p2 -> proportion-01, a3 -> and, s -> standoff, d -> diplomacy, m -> machine, p -> person, c3 -> condition-01, a -> anonymity, n3 -> name, d2 -> diplomat, w2 -> world-region, i -> important, r -> resolution, a2 -> and, c -> centrifuge, s3 -> state-01, l -> less, p3 -> person, c2 -> city, n2 -> name, a4 -> ascertain-01))),[Ljava.lang.String;@24e60210,Annotation([Ljava.lang.String;@3aa403ba,[Ljava.lang.String;@7111f325,[Ljava.lang.String;@348da73d),Annotation([Ljava.lang.String;@20efc53e,[Ljava.lang.String;@3accab4a,[Ledu.cmu.lti.nlp.amr.Dependency;@44baefed),Annotation([Ljava.lang.String;@1dd71c08,[Ljava.lang.String;@434ffcb9,[Ljava.lang.String;@1c068961),Annotation([Ljava.lang.String;@f50c88b,[Ljava.lang.String;@2a42b235,[Ledu.cmu.lti.nlp.amr.Entity;@165439f0))
AMR:
(a2 / and, instrument, r / resolution)
(a2 / and, op, w2 / world-region)
(a4 / ascertain-01, ARG0, p3 / person)
(a4 / ascertain-01, ARG1, d / diplomacy)
(b2 / bunt-01, ARG1, a3 / and)
(b2 / bunt-01, ARG2, h2 / hinder-01)
(c / centrifuge, quant, q / quantity)
(c2 / city, name, n / name)
(c3 / condition-01, ARG1, a / anonymity)
(e / effeminate-01, ARG1, i / important)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, w / west)
(h / have-org-role-91, ARG2, d2 / diplomat)
(h2 / hinder-01, ARG0, q / quantity)
(h2 / hinder-01, ARG1, r / resolution)
(h2 / hinder-01, ARG2, a4 / ascertain-01)
(i / important, degree, l / less)
(i / important, domain, q / quantity)
(m / machine, mod, b2 / bunt-01)
(n / name, op, "Tehran")
(n2 / name, op, "ahmadinejad")
(n3 / name, op, "West")
(p2 / proportion-01, ARG1, m / machine)
(p3 / person, name, n2 / name)
(s / standoff, domain, b / between)
(s / standoff, prep-against, a2 / and)
(s2 / speak-01, ARG0, p / person)
(s2 / speak-01, ARG1, c2 / city)
(s2 / speak-01, location, c3 / condition-01)
(s3 / state-01, ARG0, p / person)
(s3 / state-01, ARG1, b2 / bunt-01)
(w2 / world-region, name, n3 / name)

Decoded in 4,770,496 microseconds
Sentence: Arms control expert Jeffrey G. Lewis of the new America Foundation think tank stated that the Foundation was aware of Iran's goal of assembling 6000 centrifuges but the operational status of the machines is unknown.

Oracle Span 1:  6000 => 6000
Oracle Span 2:  Arms => arm-01
Oracle Span 3:  assembling => assemble-01
Oracle Span 4:  centrifuges => centrifuge
Oracle Span 5:  control => control-01
Oracle Span 6:  expert => expert-41
Oracle Span 7:  goal => goal
Oracle Span 8:  Iran => (country :name (name :op "Iran"))
Oracle Span 9:  Jeffrey G. Lewis => (person :name (name :op "Lewis" :op "G." :op "Jeffrey"))
Oracle Span 10:  machines => machine
Oracle Span 11:  new America Foundation => (name :op "Foundation" :op "America" :op "New")
Oracle Span 12:  operational => operate-01
Oracle Span 13:  stated => state-01
Oracle Span 14:  status => status
Oracle Span 15:  think => (have-org-role-91 :ARG1 think-tank)
Oracle Span 16:  unknown => (know-01 :polarity -)
NER Entity: (person :name (name :op "Jeffrey" :op "G." :op "Lewis"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (organization :name (name :op "think" :op "tank"))
Spans:
Span 35-36:   => (know-01 :polarity -)
Span 24-25:  6000 => assemble-02
Span 9-10:  America => (country :name (name :op "America"))
Span 0-1:  Arms => arms
Span 0-1:  Arms => 1
Span 26-27:  but => centrifuge
Span 1-2:  control => control-01
Span 16-17:  Foundation => decide-01
Span 10-11:  Foundation => decide-01
Span 33-34:  is => machine
Span 3-6:  Jeffrey G. Lewis => (person :name (name :op "Jeffrey" :op "G." :op "Lewis"))
Span 8-9:  new => new
Span 30-31:  of => status
Span 13-14:  stated => state-01
Span 29-30:  status => proportion-01
Span 12-13:  tank => tank
Span 27-28:  the => bunt-01
Span 11-12:  think => think-01

Langrangian relaxation converged after 69 iterations. Delta = 0.0
Oracle Span 25-26:  6000 => 6000
Oracle Span 0-1:  Arms => arm-01
Oracle Span 24-25:  assembling => assemble-01
Oracle Span 26-27:  centrifuges => centrifuge
Oracle Span 1-2:  control => control-01
Oracle Span 2-3:  expert => expert-41
Oracle Span 22-23:  goal => goal
Oracle Span 20-21:  Iran => (country :name (name :op "Iran"))
Oracle Span 3-6:  Jeffrey G. Lewis => (person :name (name :op "Lewis" :op "G." :op "Jeffrey"))
Oracle Span 33-34:  machines => machine
Oracle Span 8-11:  new America Foundation => (name :op "Foundation" :op "America" :op "New")
Oracle Span 29-30:  operational => operate-01
Oracle Span 13-14:  stated => state-01
Oracle Span 30-31:  status => status
Oracle Span 11-12:  think => (have-org-role-91 :ARG1 think-tank)
Oracle Span 35-36:  unknown => (know-01 :polarity -)

Dependencies:
1	Arms	_	NNP	NNP	_	6	nn	_	_
2	control	_	NN	NN	_	6	nn	_	_
3	expert	_	NN	NN	_	6	nn	_	_
4	Jeffrey	_	NNP	NNP	_	6	nn	_	_
5	G.	_	NNP	NNP	_	6	nn	_	_
6	Lewis	_	NNP	NNP	_	12	nsubj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	the	_	DT	DT	_	11	det	_	_
9	new	_	JJ	JJ	_	11	amod	_	_
10	America	_	NNP	NNP	_	11	nn	_	_
11	Foundation	_	NNP	NNP	_	7	pobj	_	_
12	think	_	VBP	VBP	_	0	root	_	_
13	tank	_	NN	NN	_	14	nsubj	_	_
14	stated	_	VBD	VBD	_	12	ccomp	_	_
15	that	_	IN	IN	_	19	mark	_	_
16	the	_	DT	DT	_	17	det	_	_
17	Foundation	_	NNP	NNP	_	19	nsubj	_	_
18	was	_	VBD	VBD	_	19	cop	_	_
19	aware	_	JJ	JJ	_	14	ccomp	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	Iran	_	NNP	NNP	_	23	poss	_	_
22	's	_	POS	POS	_	21	possessive	_	_
23	goal	_	NN	NN	_	20	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	assembling	_	VBG	VBG	_	24	pcomp	_	_
26	6000	_	CD	CD	_	27	num	_	_
27	centrifuges	_	NNS	NNS	_	25	dobj	_	_
28	but	_	CC	CC	_	12	cc	_	_
29	the	_	DT	DT	_	31	det	_	_
30	operational	_	JJ	JJ	_	31	amod	_	_
31	status	_	NN	NN	_	36	nsubj	_	_
32	of	_	IN	IN	_	31	prep	_	_
33	the	_	DT	DT	_	34	det	_	_
34	machines	_	NNS	NNS	_	32	pobj	_	_
35	is	_	VBZ	VBZ	_	36	cop	_	_
36	unknown	_	JJ	JJ	_	12	conj	_	_
37	.	_	.	.	_	12	punct	_	_

Oracle:
(a2 / assemble-01, ARG0, c2 / country)
(a2 / assemble-01, ARG1, c3 / centrifuge)
(c / control-01, ARG1, a / arm-01)
(c2 / country, name, n4 / name)
(c3 / centrifuge, quant, 6 / 6000)
(e / expert-41, ARG1, p / person)
(e / expert-41, ARG2, c / control-01)
(g / goal, mod, a2 / assemble-01)
(g / goal, poss, c2 / country)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, t / think-tank)
(h / have-org-role-91, ARG3, e / expert-41)
(k / know-01, ARG1, s2 / status)
(k / know-01, polarity, -)
(n / name, op, "G.")
(n / name, op, "Jeffrey")
(n / name, op, "Lewis")
(n2 / name, op, "America")
(n2 / name, op, "Foundation")
(n2 / name, op, "New")
(n4 / name, op, "Iran")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s2 / status, mod, o / operate-01)
(s2 / status, poss, m / machine)
(t / think-tank, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),new,new,false), Span(26,27,List(1),but,centrifuge,false), Span(33,34,List(2),is,machine,false), Span(29,30,List(3),status,proportion-01,false), Span(16,17,List(4),Foundation,decide-01,false), Span(0,1,List(5),Arms,arms,false), Span(24,25,List(6),6000,assemble-02,false), Span(9,10,List(9, 8, 7),America,(country :name (name :op "America")),false), Span(13,14,List(10),stated,state-01,false), Span(35,36,List(12, 11),,(know-01 :polarity -),false), Span(30,31,List(13),of,status,false), Span(10,11,List(14),Foundation,decide-01,false), Span(12,13,List(15),tank,tank,false), Span(3,6,List(20, 19, 18, 17, 16),Jeffrey G. Lewis,(person :name (name :op "Jeffrey" :op "G." :op "Lewis")),false), Span(0,1,List(21),Arms,1,false), Span(11,12,List(22),think,think-01,false), Span(1,2,List(23),control,control-01,false), Span(27,28,List(24),the,bunt-01,false)),Map(2 -> machine, 5 -> arms, 12 -> -, 8 -> name, 15 -> tank, 21 -> 1, 18 -> "Jeffrey", 24 -> bunt-01, 7 -> country, 1 -> centrifuge, 17 -> name, 23 -> control-01, 4 -> decide-01, 11 -> know-01, 14 -> decide-01, 20 -> "Lewis", 6 -> assemble-02, 9 -> "America", 0 -> new, 22 -> think-01, 16 -> person, 19 -> "G.", 10 -> state-01, 3 -> proportion-01, 13 -> status),Map(n -> new, s2 -> status, b -> bunt-01, t -> tank, k -> know-01, p2 -> person, s -> state-01, m -> machine, d -> decide-01, 1 -> 1, p -> proportion-01, c3 -> control-01, n3 -> name, a -> arms, d2 -> decide-01, t2 -> think-01, a2 -> assemble-02, c -> centrifuge, c2 -> country, n2 -> name))),[Ljava.lang.String;@d3c706d,Annotation([Ljava.lang.String;@6e777606,[Ljava.lang.String;@52a85028,[Ljava.lang.String;@575bc29c),Annotation([Ljava.lang.String;@398a6f02,[Ljava.lang.String;@6c18e973,[Ledu.cmu.lti.nlp.amr.Dependency;@7c21ddc8),Annotation([Ljava.lang.String;@75e7bff2,[Ljava.lang.String;@1f7f2c33,[Ljava.lang.String;@34871dde),Annotation([Ljava.lang.String;@463a491b,[Ljava.lang.String;@eea7601,[Ledu.cmu.lti.nlp.amr.Entity;@6892cd5b))
AMR:
(a2 / assemble-02, ARG1, c / centrifuge)
(b / bunt-01, ARG1, s / state-01)
(c2 / country, name, n2 / name)
(c3 / control-01, ARG0, p2 / person)
(c3 / control-01, ARG1, a / arms)
(c3 / control-01, ARG6, 1 / 1)
(d / decide-01, ARG1, a2 / assemble-02)
(d2 / decide-01, ARG0, c2 / country)
(d2 / decide-01, ARG1, d / decide-01)
(d2 / decide-01, mod, n / new)
(k / know-01, ARG1, t2 / think-01)
(k / know-01, polarity, -)
(n2 / name, op, "America")
(n3 / name, op, "G.")
(n3 / name, op, "Jeffrey")
(n3 / name, op, "Lewis")
(p / proportion-01, ARG1, n / new)
(p2 / person, name, n3 / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, d2 / decide-01)
(s2 / status, mod, p / proportion-01)
(s2 / status, poss, m / machine)
(t2 / think-01, ARG0, t / tank)
(t2 / think-01, ARG1, s / state-01)

Decoded in 2,763,936 microseconds
Sentence: Diplomats and arms control experts stated that the Iranian enrichment program is hindered by technical problems.

Oracle Span 1:  and => and
Oracle Span 2:  arms => arm-01
Oracle Span 3:  control => control-01
Oracle Span 4:  Diplomats => (have-org-role-91 :ARG2 diplomat)
Oracle Span 5:  enrichment => enrich-01
Oracle Span 6:  experts => (person :ARG1-of expert-41)
Oracle Span 7:  hindered => hinder-01
Oracle Span 8:  Iranian => (country :name (name :op "Iran"))
Oracle Span 9:  problems => problem
Oracle Span 10:  program => program
Oracle Span 11:  stated => state-01
Oracle Span 12:  technical => technical
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 1-2:  and => and
Span 2-3:  arms => arm
Span 3-4:  control => control-01
Span 0-1:  Diplomats => (person :ARG0-of (have-org-role-91 :ARG2 diplomat))
Span 9-10:  enrichment => enrich-01
Span 4-5:  experts => (person :ARG1-of expert-41)
Span 12-13:  hindered => hinder-01
Span 15-16:  problems. => problem
Span 10-11:  program => program
Span 5-6:  stated => state-01
Span 14-15:  technical => technical

Langrangian relaxation converged after 40 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 2-3:  arms => arm-01
Oracle Span 3-4:  control => control-01
Oracle Span 0-1:  Diplomats => (have-org-role-91 :ARG2 diplomat)
Oracle Span 9-10:  enrichment => enrich-01
Oracle Span 4-5:  experts => (person :ARG1-of expert-41)
Oracle Span 12-13:  hindered => hinder-01
Oracle Span 8-9:  Iranian => (country :name (name :op "Iran"))
Oracle Span 15-16:  problems => problem
Oracle Span 10-11:  program => program
Oracle Span 5-6:  stated => state-01
Oracle Span 14-15:  technical => technical

Dependencies:
1	Diplomats	_	NNS	NNS	_	4	nsubj	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	arms	_	NNS	NNS	_	1	conj	_	_
4	control	_	VBP	VBP	_	0	root	_	_
5	experts	_	NNS	NNS	_	6	nsubj	_	_
6	stated	_	VBD	VBD	_	4	ccomp	_	_
7	that	_	IN	IN	_	13	mark	_	_
8	the	_	DT	DT	_	11	det	_	_
9	Iranian	_	JJ	JJ	_	11	amod	_	_
10	enrichment	_	NN	NN	_	11	nn	_	_
11	program	_	NN	NN	_	13	nsubjpass	_	_
12	is	_	VBZ	VBZ	_	13	auxpass	_	_
13	hindered	_	VBN	VBN	_	6	ccomp	_	_
14	by	_	IN	IN	_	13	prep	_	_
15	technical	_	JJ	JJ	_	16	amod	_	_
16	problems	_	NNS	NNS	_	14	pobj	_	_
17	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, p / person)
(c / control-01, ARG1, a2 / arm-01)
(c2 / country, name, n / name)
(e / expert-41, ARG1, p / person)
(e / expert-41, ARG2, c / control-01)
(h / hinder-01, ARG0, p3 / problem)
(h / hinder-01, ARG1, p2 / program)
(h2 / have-org-role-91, ARG2, d / diplomat)
(n / name, op, "Iran")
(p2 / program, poss, c2 / country)
(p2 / program, topic, e2 / enrich-01)
(p3 / problem, mod, t / technical)
(s / state-01, ARG0, a / and)
(s / state-01, ARG1, h / hinder-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),problems.,problem,false), Span(3,4,List(1),control,control-01,false), Span(5,6,List(2),stated,state-01,false), Span(4,5,List(4, 3),experts,(person :ARG1-of expert-41),false), Span(9,10,List(5),enrichment,enrich-01,false), Span(10,11,List(6),program,program,false), Span(12,13,List(7),hindered,hinder-01,false), Span(0,1,List(10, 9, 8),Diplomats,(person :ARG0-of (have-org-role-91 :ARG2 diplomat)),false), Span(2,3,List(11),arms,arm,false), Span(14,15,List(12),technical,technical,false), Span(1,2,List(13),and,and,false)),Map(2 -> state-01, 5 -> enrich-01, 12 -> technical, 8 -> person, 7 -> hinder-01, 1 -> control-01, 4 -> expert-41, 11 -> arm, 6 -> program, 0 -> problem, 9 -> have-org-role-91, 3 -> person, 10 -> diplomat, 13 -> and),Map(e -> expert-41, h -> hinder-01, h2 -> have-org-role-91, t -> technical, p2 -> person, e2 -> enrich-01, s -> state-01, d -> diplomat, p -> problem, a -> arm, p4 -> person, a2 -> and, c -> control-01, p3 -> program))),[Ljava.lang.String;@77584bd2,Annotation([Ljava.lang.String;@284595bd,[Ljava.lang.String;@20b4bdf3,[Ljava.lang.String;@7d19ba83),Annotation([Ljava.lang.String;@482a6829,[Ljava.lang.String;@4c46f4ec,[Ledu.cmu.lti.nlp.amr.Dependency;@499893b2),Annotation([Ljava.lang.String;@79e5f5a0,[Ljava.lang.String;@6295a195,[Ljava.lang.String;@198fc8bf),Annotation([Ljava.lang.String;@1407cd3f,[Ljava.lang.String;@429962ea,[Ledu.cmu.lti.nlp.amr.Entity;@d4ffa25))
AMR:
(a2 / and, op, a / arm)
(a2 / and, op, p4 / person)
(c / control-01, ARG0, a2 / and)
(c / control-01, ARG1, s / state-01)
(e / expert-41, ARG1, p2 / person)
(h / hinder-01, ARG1, p3 / program)
(h / hinder-01, ARG2, p / problem)
(h2 / have-org-role-91, ARG0, p4 / person)
(h2 / have-org-role-91, ARG2, d / diplomat)
(p / problem, mod, t / technical)
(p3 / program, mod, e2 / enrich-01)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, h / hinder-01)

Decoded in 782,153 microseconds
Sentence: Iran has repeatedly asserted that its nuclear program aims to produce only electricity because nuclear weapon production contradicts Islamic principles.

Oracle Span 1:  aims => aim-01
Oracle Span 2:  asserted => assert-03
Oracle Span 3:  because => cause-01
Oracle Span 4:  contradicts => contradict-01
Oracle Span 5:  electricity => electricity
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  Islamic => (religious-group :name (name :op "Islam"))
Oracle Span 8:  nuclear => nucleus
Oracle Span 9:  only => only
Oracle Span 10:  principles => principle
Oracle Span 11:  produce => produce-01
Oracle Span 12:  program => program
Oracle Span 13:  repeatedly => repeat-01
Oracle Span 14:  weapon => weapon
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "Islamic"))
Spans:
Span 8-9:  aims => aim-01
Span 3-4:  asserted => assert-03
Span 17-18:  contradicts => contradict-01
Span 12-13:  electricity => electricity
Span 0-1:  Iran => (country :name (name :op "Iran"))
Span 18-19:  Islamic => (religious-group :name (name :op "Islamic"))
Span 14-15:  nuclear => nucleus
Span 6-7:  nuclear => nucleus
Span 11-12:  only => only
Span 19-20:  principles. => principle
Span 10-11:  produce => produce-01
Span 16-17:  production => produce-01
Span 7-8:  program => program
Span 2-3:  repeatedly => repeal-01
Span 15-16:  weapon => weapon

Langrangian relaxation converged after 28 iterations. Delta = 0.0
Oracle Span 8-9:  aims => aim-01
Oracle Span 3-4:  asserted => assert-03
Oracle Span 13-14:  because => cause-01
Oracle Span 17-18:  contradicts => contradict-01
Oracle Span 12-13:  electricity => electricity
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 18-19:  Islamic => (religious-group :name (name :op "Islam"))
Oracle Span 6-7:  nuclear => nucleus
Oracle Span 11-12:  only => only
Oracle Span 19-20:  principles => principle
Oracle Span 10-11:  produce => produce-01
Oracle Span 7-8:  program => program
Oracle Span 2-3:  repeatedly => repeat-01
Oracle Span 15-16:  weapon => weapon

Dependencies:
1	Iran	_	NNP	NNP	_	4	nsubj	_	_
2	has	_	VBZ	VBZ	_	4	aux	_	_
3	repeatedly	_	RB	RB	_	4	advmod	_	_
4	asserted	_	VBN	VBN	_	0	root	_	_
5	that	_	IN	IN	_	9	mark	_	_
6	its	_	PRP$	PRP$	_	8	poss	_	_
7	nuclear	_	JJ	JJ	_	8	amod	_	_
8	program	_	NN	NN	_	9	nsubj	_	_
9	aims	_	VBZ	VBZ	_	4	ccomp	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	produce	_	VB	VB	_	9	xcomp	_	_
12	only	_	JJ	JJ	_	13	amod	_	_
13	electricity	_	NN	NN	_	11	dobj	_	_
14	because	_	IN	IN	_	18	mark	_	_
15	nuclear	_	JJ	JJ	_	17	amod	_	_
16	weapon	_	NN	NN	_	17	nn	_	_
17	production	_	NN	NN	_	18	nsubj	_	_
18	contradicts	_	VBZ	VBZ	_	11	advcl	_	_
19	Islamic	_	JJ	JJ	_	20	amod	_	_
20	principles	_	NNS	NNS	_	18	dobj	_	_
21	.	_	.	.	_	4	punct	_	_

Oracle:
(a / assert-03, ARG0, c / country)
(a / assert-03, ARG1, a2 / aim-01)
(a2 / aim-01, ARG0, p2 / program)
(a2 / aim-01, ARG1, p / produce-01)
(c / country, name, n / name)
(c2 / cause-01, ARG0, c3 / contradict-01)
(c2 / cause-01, ARG1, p / produce-01)
(c3 / contradict-01, ARG1, p4 / principle)
(n / name, op, "Iran")
(n4 / name, op, "Islam")
(p / produce-01, ARG1, e / electricity)
(p / produce-01, mod, o / only)
(p2 / program, mod, n2 / nucleus)
(p2 / program, poss, c / country)
(p4 / principle, mod, r2 / religious-group)
(r / repeat-01, ARG0, c / country)
(r / repeat-01, ARG1, a / assert-03)
(r2 / religious-group, name, n4 / name)
(w / weapon, mod, n2 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),production,produce-01,false), Span(0,1,List(3, 2, 1),Iran,(country :name (name :op "Iran")),false), Span(12,13,List(4),electricity,electricity,false), Span(14,15,List(5),nuclear,nucleus,false), Span(11,12,List(6),only,only,false), Span(8,9,List(7),aims,aim-01,false), Span(10,11,List(8),produce,produce-01,false), Span(2,3,List(9),repeatedly,repeal-01,false), Span(15,16,List(10),weapon,weapon,false), Span(6,7,List(11),nuclear,nucleus,false), Span(3,4,List(12),asserted,assert-03,false), Span(18,19,List(15, 14, 13),Islamic,(religious-group :name (name :op "Islamic")),false), Span(17,18,List(16),contradicts,contradict-01,false), Span(19,20,List(17),principles.,principle,false), Span(7,8,List(18),program,program,false)),Map(2 -> name, 5 -> nucleus, 12 -> assert-03, 15 -> "Islamic", 8 -> produce-01, 18 -> program, 7 -> aim-01, 17 -> principle, 1 -> country, 4 -> electricity, 11 -> nucleus, 14 -> name, 6 -> only, 0 -> produce-01, 9 -> repeal-01, 16 -> contradict-01, 3 -> "Iran", 10 -> weapon, 13 -> religious-group),Map(e -> electricity, n -> name, w -> weapon, p2 -> produce-01, n4 -> name, p -> produce-01, r2 -> religious-group, a -> aim-01, n3 -> nucleus, p4 -> program, r -> repeal-01, a2 -> assert-03, c -> country, o -> only, p3 -> principle, c2 -> contradict-01, n2 -> nucleus))),[Ljava.lang.String;@720a50c5,Annotation([Ljava.lang.String;@2e5b6d01,[Ljava.lang.String;@27c75fa8,[Ljava.lang.String;@c92ae64),Annotation([Ljava.lang.String;@2cbe4b4b,[Ljava.lang.String;@59f818b8,[Ledu.cmu.lti.nlp.amr.Dependency;@445f3630),Annotation([Ljava.lang.String;@5da74151,[Ljava.lang.String;@39dadbd,[Ljava.lang.String;@1a3948ae),Annotation([Ljava.lang.String;@27ea036f,[Ljava.lang.String;@40a0730a,[Ledu.cmu.lti.nlp.amr.Entity;@2ebecee6))
AMR:
(a / aim-01, ARG0, p4 / program)
(a / aim-01, ARG1, p2 / produce-01)
(a2 / assert-03, ARG0, c / country)
(a2 / assert-03, ARG1, n3 / nucleus)
(c / country, name, n / name)
(c2 / contradict-01, ARG0, p / produce-01)
(c2 / contradict-01, ARG1, p3 / principle)
(e / electricity, mod, o / only)
(n / name, op, "Iran")
(n4 / name, op, "Islamic")
(p / produce-01, ARG1, w / weapon)
(p2 / produce-01, ARG1, e / electricity)
(p2 / produce-01, time, c2 / contradict-01)
(p3 / principle, mod, r2 / religious-group)
(p4 / program, poss, c / country)
(r / repeal-01, ARG1, a2 / assert-03)
(r2 / religious-group, name, n4 / name)
(w / weapon, mod, n2 / nucleus)

Decoded in 915,367 microseconds
Sentence: The US, Israel, Europe and the majority of Western arms control experts believe that Iran is pursuing the capability to produce bombs immediately in the event of a decision.

Oracle Span 1:  and => and
Oracle Span 2:  arms => arm
Oracle Span 3:  believe => believe-01
Oracle Span 4:  bombs => bomb
Oracle Span 5:  capability => capable-41
Oracle Span 6:  control => control-01
Oracle Span 7:  decision => decide-01
Oracle Span 8:  Europe => (continent :name (name :op "Europe"))
Oracle Span 9:  experts => (person :ARG1-of expert-41)
Oracle Span 10:  immediately => immediate
Oracle Span 11:  Iran => (country :name (name :op "Iran"))
Oracle Span 12:  Israel => (country :name (name :op "Israel"))
Oracle Span 13:  majority => majority
Oracle Span 14:  produce => produce-01
Oracle Span 15:  pursuing => pursue-01
Oracle Span 16:  US => (country :name (name :op "US"))
Oracle Span 17:  Western => (world-region :name (name :op "West"))
NER Entity: (country :name (name :op "Israel"))
NER Entity: (country :name (name :op "Europe"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "Western"))
Spans:
Span 30-31:   => decide-01
Span 12-13:  believe => control-01
Span 18-19:  capability => pursue-01
Span 10-11:  control => west
Span 3-4:  Europe => (country :name (name :op "Israel"))
Span 11-12:  experts => arm
Span 22-23:  immediately => produce-01
Span 23-24:  in => bomb
Span 14-15:  Iran => (person :ARG0-of believe-01)
Span 6-7:  majority => and
Span 20-21:  produce => capacitate-01
Span 16-17:  pursuing => (country :name (name :op "Iran"))
Span 13-14:  that => (person :ARG1-of expert-41)
Span 5-6:  the => (continent :name (name :op "Europe"))
Span 24-25:  the => immediate
Span 1-2:  US, => (country :name (name :op "US"))
Span 8-9:  Western => majority

Langrangian relaxation converged after 67 iterations. Delta = 0.0
Oracle Span 6-7:  and => and
Oracle Span 11-12:  arms => arm
Oracle Span 14-15:  believe => believe-01
Oracle Span 23-24:  bombs => bomb
Oracle Span 20-21:  capability => capable-41
Oracle Span 12-13:  control => control-01
Oracle Span 30-31:  decision => decide-01
Oracle Span 5-6:  Europe => (continent :name (name :op "Europe"))
Oracle Span 13-14:  experts => (person :ARG1-of expert-41)
Oracle Span 24-25:  immediately => immediate
Oracle Span 16-17:  Iran => (country :name (name :op "Iran"))
Oracle Span 3-4:  Israel => (country :name (name :op "Israel"))
Oracle Span 8-9:  majority => majority
Oracle Span 22-23:  produce => produce-01
Oracle Span 18-19:  pursuing => pursue-01
Oracle Span 1-2:  US => (country :name (name :op "US"))
Oracle Span 10-11:  Western => (world-region :name (name :op "West"))

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	US	_	NNP	NNP	_	15	nsubj	_	_
3	,	_	,	,	_	2	punct	_	_
4	Israel	_	NNP	NNP	_	2	conj	_	_
5	,	_	,	,	_	2	punct	_	_
6	Europe	_	NNP	NNP	_	2	conj	_	_
7	and	_	CC	CC	_	2	cc	_	_
8	the	_	DT	DT	_	9	det	_	_
9	majority	_	NN	NN	_	2	conj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	Western	_	JJ	JJ	_	14	amod	_	_
12	arms	_	NNS	NNS	_	14	nn	_	_
13	control	_	NN	NN	_	14	nn	_	_
14	experts	_	NNS	NNS	_	10	pobj	_	_
15	believe	_	VBP	VBP	_	0	root	_	_
16	that	_	IN	IN	_	19	mark	_	_
17	Iran	_	NNP	NNP	_	19	nsubj	_	_
18	is	_	VBZ	VBZ	_	19	aux	_	_
19	pursuing	_	VBG	VBG	_	15	ccomp	_	_
20	the	_	DT	DT	_	21	det	_	_
21	capability	_	NN	NN	_	19	dobj	_	_
22	to	_	TO	TO	_	23	aux	_	_
23	produce	_	VB	VB	_	21	vmod	_	_
24	bombs	_	NNS	NNS	_	23	dobj	_	_
25	immediately	_	RB	RB	_	23	advmod	_	_
26	in	_	IN	IN	_	23	prep	_	_
27	the	_	DT	DT	_	28	det	_	_
28	event	_	NN	NN	_	26	pobj	_	_
29	of	_	IN	IN	_	28	prep	_	_
30	a	_	DT	DT	_	31	det	_	_
31	decision	_	NN	NN	_	29	pobj	_	_
32	.	_	.	.	_	15	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, c2 / country)
(a / and, op, c3 / continent)
(a / and, op, p / person)
(b / believe-01, ARG0, a / and)
(b / believe-01, ARG1, p2 / pursue-01)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / continent, name, n3 / name)
(c4 / control-01, ARG1, a2 / arm)
(c5 / country, name, n5 / name)
(c6 / capable-41, ARG1, c5 / country)
(c6 / capable-41, ARG2, p3 / produce-01)
(e / expert-41, ARG1, p / person)
(e / expert-41, ARG2, c4 / control-01)
(n / name, op, "US")
(n2 / name, op, "Israel")
(n3 / name, op, "Europe")
(n4 / name, op, "West")
(n5 / name, op, "Iran")
(p / person, mod, w / world-region)
(p / person, quant, m / majority)
(p2 / pursue-01, ARG0, c5 / country)
(p2 / pursue-01, ARG1, c6 / capable-41)
(p3 / produce-01, ARG1, b2 / bomb)
(p3 / produce-01, condition, d / decide-01)
(p3 / produce-01, time, i / immediate)
(w / world-region, name, n4 / name)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),majority,and,false), Span(22,23,List(1),immediately,produce-01,false), Span(5,6,List(4, 3, 2),the,(continent :name (name :op "Europe")),false), Span(8,9,List(5),Western,majority,false), Span(20,21,List(6),produce,capacitate-01,false), Span(14,15,List(8, 7),Iran,(person :ARG0-of believe-01),false), Span(11,12,List(9),experts,arm,false), Span(16,17,List(12, 11, 10),pursuing,(country :name (name :op "Iran")),false), Span(18,19,List(13),capability,pursue-01,false), Span(13,14,List(15, 14),that,(person :ARG1-of expert-41),false), Span(1,2,List(18, 17, 16),US,,(country :name (name :op "US")),false), Span(23,24,List(19),in,bomb,false), Span(3,4,List(22, 21, 20),Europe,(country :name (name :op "Israel")),false), Span(30,31,List(23),,decide-01,false), Span(12,13,List(24),believe,control-01,false), Span(10,11,List(25),control,west,false), Span(24,25,List(26),the,immediate,false)),Map(2 -> continent, 5 -> majority, 12 -> "Iran", 8 -> believe-01, 15 -> expert-41, 21 -> name, 18 -> "US", 24 -> control-01, 7 -> person, 1 -> produce-01, 17 -> name, 23 -> decide-01, 26 -> immediate, 4 -> "Europe", 11 -> name, 14 -> person, 20 -> country, 6 -> capacitate-01, 9 -> arm, 0 -> and, 22 -> "Israel", 16 -> country, 19 -> bomb, 10 -> country, 3 -> name, 25 -> west, 13 -> pursue-01),Map(e -> expert-41, w -> west, n -> name, b -> believe-01, b2 -> bomb, p2 -> person, n4 -> name, c4 -> country, d -> decide-01, m -> majority, p -> produce-01, n3 -> name, a -> and, c3 -> country, p4 -> person, c6 -> control-01, i -> immediate, a2 -> arm, c -> continent, p3 -> pursue-01, c2 -> capacitate-01, n2 -> name, c5 -> country))),[Ljava.lang.String;@24789ff4,Annotation([Ljava.lang.String;@aaebf88,[Ljava.lang.String;@23f02108,[Ljava.lang.String;@72ab2bbc),Annotation([Ljava.lang.String;@124c9d22,[Ljava.lang.String;@6de1321c,[Ledu.cmu.lti.nlp.amr.Dependency;@4f3bb6c9),Annotation([Ljava.lang.String;@64e69259,[Ljava.lang.String;@1235a66a,[Ljava.lang.String;@76a017e2),Annotation([Ljava.lang.String;@643f6a01,[Ljava.lang.String;@349b4885,[Ledu.cmu.lti.nlp.amr.Entity;@ba2ae8a))
AMR:
(a / and, op, c / continent)
(a / and, op, c4 / country)
(a / and, op, c5 / country)
(a / and, op, m / majority)
(a / and, op, p2 / person)
(b / believe-01, ARG0, p2 / person)
(b / believe-01, ARG1, c3 / country)
(c / continent, name, n / name)
(c2 / capacitate-01, ARG0, c3 / country)
(c2 / capacitate-01, ARG1, d / decide-01)
(c3 / country, name, n2 / name)
(c4 / country, name, n3 / name)
(c5 / country, name, n4 / name)
(c6 / control-01, ARG0, p4 / person)
(c6 / control-01, ARG1, a2 / arm)
(d / decide-01, ARG1, w / west)
(e / expert-41, ARG1, p4 / person)
(m / majority, mod, p4 / person)
(n / name, op, "Europe")
(n2 / name, op, "Iran")
(n3 / name, op, "US")
(n4 / name, op, "Israel")
(p / produce-01, ARG1, b2 / bomb)
(p / produce-01, ARG6, i / immediate)
(p3 / pursue-01, ARG0, c3 / country)
(p3 / pursue-01, ARG2, p / produce-01)

Decoded in 3,063,232 microseconds
Sentence: Experts stated that producing weapons-grade uranium from reactor-grade material is relatively simple.

Oracle Span 1:  Experts => (person :ARG1-of expert-41)
Oracle Span 2:  material => material
Oracle Span 3:  producing => produce-01
Oracle Span 4:  reactor => reactor-grade
Oracle Span 5:  relatively => relative
Oracle Span 6:  simple => simple
Oracle Span 7:  stated => state-01
Oracle Span 8:  uranium => uranium
Oracle Span 9:  weapons => weapons-grade
Spans:
Span 0-1:  Experts => (person :ARG1-of expert-41)
Span 8-9:  material => material
Span 3-4:  producing => produce-01
Span 10-11:  relatively => relatively
Span 11-12:  simple. => simple
Span 1-2:  stated => state-01
Span 5-6:  uranium => uranium
Span 4-5:  weapons-grade => weapons-grade

Langrangian relaxation converged after 32 iterations. Delta = 0.0
Oracle Span 0-1:  Experts => (person :ARG1-of expert-41)
Oracle Span 12-13:  material => material
Oracle Span 3-4:  producing => produce-01
Oracle Span 9-10:  reactor => reactor-grade
Oracle Span 14-15:  relatively => relative
Oracle Span 15-16:  simple => simple
Oracle Span 1-2:  stated => state-01
Oracle Span 7-8:  uranium => uranium
Oracle Span 4-5:  weapons => weapons-grade

Dependencies:
1	Experts	_	NNS	NNS	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	12	mark	_	_
4	producing	_	VBG	VBG	_	12	csubj	_	_
5	weapons-grade	_	JJ	JJ	_	6	amod	_	_
6	uranium	_	NN	NN	_	4	dobj	_	_
7	from	_	IN	IN	_	4	prep	_	_
8	reactor-grade	_	JJ	JJ	_	9	amod	_	_
9	material	_	NN	NN	_	7	pobj	_	_
10	is	_	VBZ	VBZ	_	12	cop	_	_
11	relatively	_	RB	RB	_	12	advmod	_	_
12	simple	_	JJ	JJ	_	2	ccomp	_	_
13	.	_	.	.	_	2	punct	_	_

Oracle:
(e / expert-41, ARG1, p / person)
(m / material, mod, r2 / reactor-grade)
(p2 / produce-01, ARG1, u / uranium)
(p2 / produce-01, ARG2, m / material)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, s3 / simple)
(s3 / simple, degree, r3 / relative)
(s3 / simple, domain, p2 / produce-01)
(u / uranium, mod, w / weapons-grade)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(0,1,List(2, 1),Experts,(person :ARG1-of expert-41),false), Span(3,4,List(3),producing,produce-01,false), Span(11,12,List(4),simple.,simple,false), Span(10,11,List(5),relatively,relatively,false), Span(5,6,List(6),uranium,uranium,false), Span(4,5,List(7),weapons-grade,weapons-grade,false), Span(8,9,List(8),material,material,false)),Map(2 -> expert-41, 5 -> relatively, 8 -> material, 7 -> weapons-grade, 1 -> person, 4 -> simple, 6 -> uranium, 0 -> state-01, 3 -> produce-01),Map(w -> weapons-grade, e -> expert-41, s2 -> simple, p2 -> produce-01, s -> state-01, m -> material, p -> person, r -> relatively, u -> uranium))),[Ljava.lang.String;@44720dcb,Annotation([Ljava.lang.String;@1dee8cd0,[Ljava.lang.String;@2bd92bdc,[Ljava.lang.String;@65d7bbf2),Annotation([Ljava.lang.String;@311feed6,[Ljava.lang.String;@58fe6c29,[Ledu.cmu.lti.nlp.amr.Dependency;@3a1b2b21),Annotation([Ljava.lang.String;@624b0fbb,[Ljava.lang.String;@2cec347a,[Ljava.lang.String;@7d89aea),Annotation([Ljava.lang.String;@6479fb13,[Ljava.lang.String;@5e7506f0,[Ledu.cmu.lti.nlp.amr.Entity;@13f7b6a0))
AMR:
(e / expert-41, ARG1, p / person)
(p2 / produce-01, ARG0, p / person)
(p2 / produce-01, ARG1, w / weapons-grade)
(p2 / produce-01, location, m / material)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, r / relatively)
(s2 / simple, mod, r / relatively)
(u / uranium, mod, w / weapons-grade)

Decoded in 418,844 microseconds
Sentence: Ahmadinejad stated that after Iran resisted the West's demands for a halt in nuclear activities, the West still pursued the resumption of negotiations.

Oracle Span 1:  activities => activity
Oracle Span 2:  after => after
Oracle Span 3:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 4:  demands => demand-01
Oracle Span 5:  halt => halt-01
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  negotiations => negotiate-01
Oracle Span 8:  nuclear => nucleus
Oracle Span 9:  pursued => pursue-01
Oracle Span 10:  resisted => resist-01
Oracle Span 11:  resumption => resume-01
Oracle Span 12:  stated => state-01
Oracle Span 13:  still => still
Oracle Span 14:  West => (world-region :name (name :op "West"))
NER Entity: (person :name (name :op "Ahmadinejad"))
NER Entity: (country :name (name :op "West"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 24-25:   => negotiate-01
Span 14-15:  activities, => nucleus
Span 3-4:  after => after
Span 0-1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Span 9-10:  for => demand-01
Span 12-13:  in => halt-01
Span 4-5:  Iran => (country :name (name :op "Iran"))
Span 22-23:  negotiations. => re-summon-01
Span 18-19:  pursued => (world-region :name (name :op "West"))
Span 5-6:  resisted => resist-01
Span 20-21:  resumption => pursue-01
Span 1-2:  stated => state-01
Span 2-3:  that => thatch-01
Span 15-16:  the => activity
Span 19-20:  the => still
Span 7-8:  West's => (world-region :name (name :op "West"))

Langrangian relaxation converged after 4 iterations. Delta = 0.0
Oracle Span 15-16:  activities => activity
Oracle Span 3-4:  after => after
Oracle Span 0-1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 9-10:  demands => demand-01
Oracle Span 12-13:  halt => halt-01
Oracle Span 4-5:  Iran => (country :name (name :op "Iran"))
Oracle Span 24-25:  negotiations => negotiate-01
Oracle Span 14-15:  nuclear => nucleus
Oracle Span 20-21:  pursued => pursue-01
Oracle Span 5-6:  resisted => resist-01
Oracle Span 22-23:  resumption => resume-01
Oracle Span 1-2:  stated => state-01
Oracle Span 19-20:  still => still
Oracle Span 7-8:  West => (world-region :name (name :op "West"))

Dependencies:
1	Ahmadinejad	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	21	mark	_	_
4	after	_	IN	IN	_	6	mark	_	_
5	Iran	_	NNP	NNP	_	6	nsubj	_	_
6	resisted	_	VBD	VBD	_	21	advcl	_	_
7	the	_	DT	DT	_	8	det	_	_
8	West	_	NNP	NNP	_	10	poss	_	_
9	's	_	POS	POS	_	8	possessive	_	_
10	demands	_	NNS	NNS	_	6	dobj	_	_
11	for	_	IN	IN	_	6	prep	_	_
12	a	_	DT	DT	_	13	det	_	_
13	halt	_	NN	NN	_	11	pobj	_	_
14	in	_	IN	IN	_	13	prep	_	_
15	nuclear	_	JJ	JJ	_	16	amod	_	_
16	activities	_	NNS	NNS	_	14	pobj	_	_
17	,	_	,	,	_	21	punct	_	_
18	the	_	DT	DT	_	19	det	_	_
19	West	_	NNP	NNP	_	21	nsubj	_	_
20	still	_	RB	RB	_	21	advmod	_	_
21	pursued	_	VBD	VBD	_	2	ccomp	_	_
22	the	_	DT	DT	_	23	det	_	_
23	resumption	_	NN	NN	_	21	dobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	negotiations	_	NNS	NNS	_	24	pobj	_	_
26	.	_	.	.	_	2	punct	_	_

Oracle:
(a / after, op, r2 / resist-01)
(a2 / activity, mod, n5 / nucleus)
(c / country, name, n4 / name)
(d / demand-01, ARG0, w / world-region)
(d / demand-01, ARG1, h / halt-01)
(h / halt-01, ARG0, c / country)
(h / halt-01, ARG1, a2 / activity)
(n / name, op, "Ahmadinejad")
(n2 / name, op, "West")
(n4 / name, op, "Iran")
(p / person, name, n / name)
(p2 / pursue-01, ARG0, w / world-region)
(p2 / pursue-01, ARG1, r / resume-01)
(p2 / pursue-01, mod, s2 / still)
(p2 / pursue-01, time, a / after)
(r / resume-01, ARG1, n3 / negotiate-01)
(r2 / resist-01, ARG0, c / country)
(r2 / resist-01, ARG1, d / demand-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, p2 / pursue-01)
(w / world-region, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),after,after,false), Span(4,5,List(3, 2, 1),Iran,(country :name (name :op "Iran")),false), Span(15,16,List(4),the,activity,false), Span(18,19,List(7, 6, 5),pursued,(world-region :name (name :op "West")),false), Span(9,10,List(8),for,demand-01,false), Span(24,25,List(9),,negotiate-01,false), Span(12,13,List(10),in,halt-01,false), Span(14,15,List(11),activities,,nucleus,false), Span(2,3,List(12),that,thatch-01,false), Span(19,20,List(13),the,still,false), Span(1,2,List(14),stated,state-01,false), Span(5,6,List(15),resisted,resist-01,false), Span(7,8,List(18, 17, 16),West's,(world-region :name (name :op "West")),false), Span(20,21,List(19),resumption,pursue-01,false), Span(22,23,List(20),negotiations.,re-summon-01,false), Span(0,1,List(23, 22, 21),Ahmadinejad,(person :name (name :op "Ahmadinejad")),false)),Map(2 -> name, 5 -> world-region, 12 -> thatch-01, 15 -> resist-01, 8 -> demand-01, 21 -> person, 18 -> "West", 7 -> "West", 17 -> name, 1 -> country, 23 -> "Ahmadinejad", 4 -> activity, 11 -> nucleus, 14 -> state-01, 20 -> re-summon-01, 6 -> name, 22 -> name, 0 -> after, 9 -> negotiate-01, 16 -> world-region, 19 -> pursue-01, 3 -> "Iran", 10 -> halt-01, 13 -> still),Map(n -> name, w -> world-region, h -> halt-01, s2 -> state-01, t -> thatch-01, p2 -> person, n4 -> nucleus, s -> still, d -> demand-01, r2 -> re-summon-01, p -> pursue-01, a -> after, n3 -> negotiate-01, n6 -> name, w2 -> world-region, r -> resist-01, a2 -> activity, c -> country, n2 -> name, n5 -> name))),[Ljava.lang.String;@5cc3aa17,Annotation([Ljava.lang.String;@3c1f1f9d,[Ljava.lang.String;@33af36c7,[Ljava.lang.String;@640c464),Annotation([Ljava.lang.String;@471255a9,[Ljava.lang.String;@3354921,[Ledu.cmu.lti.nlp.amr.Dependency;@49664e8e),Annotation([Ljava.lang.String;@4985d022,[Ljava.lang.String;@1cef7ba6,[Ljava.lang.String;@35ba555b),Annotation([Ljava.lang.String;@4e536f5c,[Ljava.lang.String;@2930a274,[Ledu.cmu.lti.nlp.amr.Entity;@4ee5debf))
AMR:
(a / after, op, r / resist-01)
(c / country, name, n / name)
(d / demand-01, ARG0, w2 / world-region)
(d / demand-01, ARG1, h / halt-01)
(h / halt-01, ARG1, a2 / activity)
(n / name, op, "Iran")
(n2 / name, op, "West")
(n3 / negotiate-01, ARG1, n4 / nucleus)
(n5 / name, op, "West")
(n6 / name, op, "Ahmadinejad")
(p / pursue-01, ARG0, w / world-region)
(p / pursue-01, ARG1, r2 / re-summon-01)
(p / pursue-01, mod, s / still)
(p / pursue-01, time, a / after)
(p2 / person, name, n6 / name)
(r / resist-01, ARG0, c / country)
(r / resist-01, ARG1, d / demand-01)
(r2 / re-summon-01, ARG1, n3 / negotiate-01)
(s2 / state-01, ARG0, p2 / person)
(s2 / state-01, ARG1, p / pursue-01)
(t / thatch-01, ARG1, p / pursue-01)
(w / world-region, name, n2 / name)
(w2 / world-region, name, n5 / name)

Decoded in 631,748 microseconds
Sentence: EU foreign policy chief Javier Solana recently presented Iran with 2 offers --

Oracle Span 1:  2 => 2
Oracle Span 2:  chief => (have-org-role-91 :ARG2 chief)
Oracle Span 3:  EU => (organization :name (name :op "EU"))
Oracle Span 4:  foreign => foreign
Oracle Span 5:  Iran => (country :name (name :op "Iran"))
Oracle Span 6:  Javier Solana => (person :name (name :op "Solana" :op "Javier"))
Oracle Span 7:  offers => offer-01
Oracle Span 8:  policy => policy
Oracle Span 9:  presented => present-01
Oracle Span 10:  recently => recent
NER Entity: (person :name (name :op "Javier" :op "Solana"))
NER Entity: (organization :name (name :op "EU"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 0-1:  EU => 1
Span 0-1:  EU => (organization :name (name :op "EU"))
Span 0-7:  EU foreign policy chief Javier Solana recently => (date-entity :time recently)
Span 1-2:  foreign => foreign
Span 8-9:  Iran => (country :name (name :op "Iran"))
Span 4-6:  Javier Solana => (person :name (name :op "Javier" :op "Solana"))
Span 11-12:  offers => offer-01
Span 2-3:  policy => policy
Span 7-8:  presented => present-01

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 10-11:  2 => 2
Oracle Span 3-4:  chief => (have-org-role-91 :ARG2 chief)
Oracle Span 0-1:  EU => (organization :name (name :op "EU"))
Oracle Span 1-2:  foreign => foreign
Oracle Span 8-9:  Iran => (country :name (name :op "Iran"))
Oracle Span 4-6:  Javier Solana => (person :name (name :op "Solana" :op "Javier"))
Oracle Span 11-12:  offers => offer-01
Oracle Span 2-3:  policy => policy
Oracle Span 7-8:  presented => present-01
Oracle Span 6-7:  recently => recent

Dependencies:
1	EU	_	NNP	NNP	_	6	nn	_	_
2	foreign	_	JJ	JJ	_	6	amod	_	_
3	policy	_	NN	NN	_	6	nn	_	_
4	chief	_	NN	NN	_	6	nn	_	_
5	Javier	_	NNP	NNP	_	6	nn	_	_
6	Solana	_	NNP	NNP	_	0	root	_	_
7	recently	_	RB	RB	_	8	advmod	_	_
8	presented	_	VBN	VBN	_	6	vmod	_	_
9	Iran	_	NNP	NNP	_	8	dobj	_	_
10	with	_	IN	IN	_	9	prep	_	_
11	2	_	CD	CD	_	12	num	_	_
12	offers	_	NNS	NNS	_	10	pobj	_	_
13	--	_	:	:	_	6	punct	_	_

Oracle:
(c / chief, mod, p3 / policy)
(c2 / country, name, n3 / name)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, c / chief)
(n / name, op, "Javier")
(n / name, op, "Solana")
(n2 / name, op, "EU")
(n3 / name, op, "Iran")
(o / organization, name, n2 / name)
(o2 / offer-01, quant, 2 / 2)
(p / present-01, ARG0, p2 / person)
(p / present-01, ARG1, o2 / offer-01)
(p / present-01, ARG2, c2 / country)
(p / present-01, time, r / recent)
(p2 / person, name, n / name)
(p3 / policy, mod, f / foreign)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),EU,1,false), Span(0,1,List(3, 2, 1),EU,(organization :name (name :op "EU")),false), Span(2,3,List(4),policy,policy,false), Span(0,7,List(6, 5),EU foreign policy chief Javier Solana recently,(date-entity :time recently),false), Span(11,12,List(7),offers,offer-01,false), Span(7,8,List(8),presented,present-01,false), Span(4,6,List(12, 11, 10, 9),Javier Solana,(person :name (name :op "Javier" :op "Solana")),false), Span(8,9,List(15, 14, 13),Iran,(country :name (name :op "Iran")),false), Span(1,2,List(16),foreign,foreign,false)),Map(2 -> name, 5 -> date-entity, 12 -> "Solana", 15 -> "Iran", 8 -> present-01, 7 -> offer-01, 1 -> organization, 4 -> policy, 11 -> "Javier", 14 -> name, 6 -> recently, 0 -> 1, 9 -> person, 16 -> foreign, 3 -> "EU", 10 -> name, 13 -> country),Map(n -> name, p2 -> present-01, d -> date-entity, 1 -> 1, p -> policy, n3 -> name, o2 -> offer-01, r -> recently, c -> country, f -> foreign, o -> organization, p3 -> person, n2 -> name))),[Ljava.lang.String;@670f19ce,Annotation([Ljava.lang.String;@5c8109dc,[Ljava.lang.String;@50700195,[Ljava.lang.String;@23f83804),Annotation([Ljava.lang.String;@3c2684dc,[Ljava.lang.String;@683db56d,[Ledu.cmu.lti.nlp.amr.Dependency;@38116d56),Annotation([Ljava.lang.String;@5a4b4a48,[Ljava.lang.String;@52c325b9,[Ljava.lang.String;@57d07451),Annotation([Ljava.lang.String;@6418d820,[Ljava.lang.String;@6401d7e1,[Ledu.cmu.lti.nlp.amr.Entity;@2f24c835))
AMR:
(c / country, name, n3 / name)
(d / date-entity, time, r / recently)
(n / name, op, "EU")
(n2 / name, op, "Javier")
(n2 / name, op, "Solana")
(n3 / name, op, "Iran")
(o / organization, name, n / name)
(o2 / offer-01, ARG0, c / country)
(o2 / offer-01, ARG1, p / policy)
(p / policy, mod, 1 / 1)
(p / policy, mod, f / foreign)
(p / policy, poss, o / organization)
(p2 / present-01, ARG0, p3 / person)
(p2 / present-01, ARG1, c / country)
(p2 / present-01, ARG6, d / date-entity)
(p3 / person, name, n2 / name)

Decoded in 657,749 microseconds
Sentence: A US-endorsed package of incentives to cease enriched uranium production

Oracle Span 1:  cease => cease-01
Oracle Span 2:  endorsed => endorse-01
Oracle Span 3:  enriched => enrich-01
Oracle Span 4:  incentives => (thing :ARG0-of incentivize-01)
Oracle Span 5:  package => package
Oracle Span 6:  production => produce-01
Oracle Span 7:  uranium => uranium
Oracle Span 8:  US => (country :name (name :op "US"))
NER Entity: (thing :name (name :op "US" :op "-" :op "endorsed"))
Spans:
Span 6-7:  cease => cease-01
Span 7-8:  enriched => enrich-01
Span 4-5:  incentives => (thing :ARG0-of incentivize-01)
Span 2-3:  package => package
Span 9-10:  production => produce-01
Span 8-9:  uranium => uranium

Langrangian relaxation converged after 20 iterations. Delta = 0.0
Oracle Span 8-9:  cease => cease-01
Oracle Span 3-4:  endorsed => endorse-01
Oracle Span 9-10:  enriched => enrich-01
Oracle Span 6-7:  incentives => (thing :ARG0-of incentivize-01)
Oracle Span 4-5:  package => package
Oracle Span 11-12:  production => produce-01
Oracle Span 10-11:  uranium => uranium
Oracle Span 1-2:  US => (country :name (name :op "US"))

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	US-endorsed	_	JJ	JJ	_	3	amod	_	_
3	package	_	NN	NN	_	0	root	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	incentives	_	NNS	NNS	_	4	pobj	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	cease	_	VB	VB	_	5	vmod	_	_
8	enriched	_	JJ	JJ	_	10	amod	_	_
9	uranium	_	NN	NN	_	10	nn	_	_
10	production	_	NN	NN	_	7	dobj	_	_

Oracle:
(c / country, name, n / name)
(c2 / cease-01, ARG1, p2 / produce-01)
(e / endorse-01, ARG0, c / country)
(e / endorse-01, ARG1, p / package)
(e2 / enrich-01, ARG1, u / uranium)
(i / incentivize-01, ARG0, t / thing)
(i / incentivize-01, ARG2, c2 / cease-01)
(n / name, op, "US")
(p2 / produce-01, ARG1, u / uranium)
(t / thing, consist, p / package)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),cease,cease-01,false), Span(4,5,List(2, 1),incentives,(thing :ARG0-of incentivize-01),false), Span(8,9,List(3),uranium,uranium,false), Span(2,3,List(4),package,package,false), Span(9,10,List(5),production,produce-01,false), Span(7,8,List(6),enriched,enrich-01,false)),Map(2 -> incentivize-01, 5 -> produce-01, 1 -> thing, 4 -> package, 6 -> enrich-01, 0 -> cease-01, 3 -> uranium),Map(e -> enrich-01, t -> thing, p2 -> produce-01, p -> package, i -> incentivize-01, u -> uranium, c -> cease-01))),[Ljava.lang.String;@4032e945,Annotation([Ljava.lang.String;@4061c470,[Ljava.lang.String;@1c1ef7d9,[Ljava.lang.String;@43d5d7cb),Annotation([Ljava.lang.String;@14fa6635,[Ljava.lang.String;@5a76629e,[Ledu.cmu.lti.nlp.amr.Dependency;@31bde636),Annotation([Ljava.lang.String;@5c3b1445,[Ljava.lang.String;@1b371a39,[Ljava.lang.String;@723cf953),Annotation([Ljava.lang.String;@2cee3d74,[Ljava.lang.String;@28f38d90,[Ledu.cmu.lti.nlp.amr.Entity;@b36bc65))
AMR:
(c / cease-01, ARG1, u / uranium)
(e / enrich-01, ARG1, u / uranium)
(i / incentivize-01, ARG0, t / thing)
(i / incentivize-01, ARG1, c / cease-01)
(p2 / produce-01, ARG0, u / uranium)
(p2 / produce-01, ARG1, p / package)

Decoded in 234,755 microseconds
Sentence: A 6-week pre-negotiation' freeze for freeze' period during which Iran would add no centrifuges and the West would refrain from promoting a 4th round of economic sanctions against Iran at the UN Security Council.

Oracle Span 1:  6 => 6
Oracle Span 2:  add => add-02
Oracle Span 3:  and => and
Oracle Span 4:  centrifuges => centrifuge
Oracle Span 5:  economic => economy
Oracle Span 6:  freeze => freeze-for-freeze
Oracle Span 7:  Iran => (country :name (name :op "Iran"))
Oracle Span 8:  no => -
Oracle Span 9:  period => period
Oracle Span 10:  promoting => promote-02
Oracle Span 11:  refrain => refrain-01
Oracle Span 12:  round => round
Oracle Span 13:  sanctions => sanction-02
Oracle Span 14:  UN Security Council => (organization :name (name :op "Council" :op "Security" :op "UN"))
Oracle Span 15:  week => (temporal-quantity :unit week)
Oracle Span 16:  West => (world-region :name (name :op "West"))
NER Entity: (organization :name (name :op "UN" :op "Security" :op "Council"))
Spans:
Span 22-23:  4th => promote-02
Span 0-25:  A 6-week pre-negotiation' freeze for freeze' period during which Iran would add no centrifuges and the West would refrain from promoting a 4th round of => (ordinal-entity :value 100.0)
Span 11-12:  add => (country :name (name :op "Iran"))
Span 27-29:  against Iran => (thing :mod economy :ARG2-of sanction-02)
Span 13-14:  centrifuges => add-02
Span 33-36:  Council. => (organization :name (name :op "UN" :op "Security" :op "Council"))
Span 25-26:  economic => round
Span 4-5:  for => freeze-01
Span 6-7:  period => freeze-01
Span 20-21:  promoting => refrain-01
Span 18-19:  refrain => (world-region :name (name :op "West"))
Span 15-16:  the => centrifuge
Span 30-31:  the => (country :name (name :op "Iran"))
Span 16-17:  West => and
Span 8-9:  which => period

Langrangian relaxation converged after 28 iterations. Delta = 0.0
Oracle Span 1-2:  6 => 6
Oracle Span 17-18:  add => add-02
Oracle Span 20-21:  and => and
Oracle Span 19-20:  centrifuges => centrifuge
Oracle Span 31-32:  economic => economy
Oracle Span 8-9:  freeze => freeze-for-freeze
Oracle Span 15-16:  Iran => (country :name (name :op "Iran"))
Oracle Span 18-19:  no => -
Oracle Span 12-13:  period => period
Oracle Span 26-27:  promoting => promote-02
Oracle Span 24-25:  refrain => refrain-01
Oracle Span 29-30:  round => round
Oracle Span 32-33:  sanctions => sanction-02
Oracle Span 37-40:  UN Security Council => (organization :name (name :op "Council" :op "Security" :op "UN"))
Oracle Span 3-4:  week => (temporal-quantity :unit week)
Oracle Span 22-23:  West => (world-region :name (name :op "West"))

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	6-week	_	JJ	JJ	_	3	amod	_	_
3	pre-negotiation	_	NN	NN	_	5	poss	_	_
4	'	_	POS	POS	_	3	possessive	_	_
5	freeze	_	NN	NN	_	21	nsubj	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	freeze	_	NN	NN	_	9	poss	_	_
8	'	_	POS	POS	_	7	possessive	_	_
9	period	_	NN	NN	_	6	pobj	_	_
10	during	_	IN	IN	_	14	prep	_	_
11	which	_	WDT	WDT	_	10	pobj	_	_
12	Iran	_	NNP	NNP	_	14	nsubj	_	_
13	would	_	MD	MD	_	14	aux	_	_
14	add	_	VB	VB	_	9	rcmod	_	_
15	no	_	DT	DT	_	16	neg	_	_
16	centrifuges	_	NNS	NNS	_	14	dobj	_	_
17	and	_	CC	CC	_	16	cc	_	_
18	the	_	DT	DT	_	19	det	_	_
19	West	_	NN	NN	_	16	conj	_	_
20	would	_	MD	MD	_	21	aux	_	_
21	refrain	_	VB	VB	_	0	root	_	_
22	from	_	IN	IN	_	21	prep	_	_
23	promoting	_	VBG	VBG	_	22	pcomp	_	_
24	a	_	DT	DT	_	26	det	_	_
25	4th	_	JJ	JJ	_	26	amod	_	_
26	round	_	NN	NN	_	23	dobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	economic	_	JJ	JJ	_	29	amod	_	_
29	sanctions	_	NNS	NNS	_	27	pobj	_	_
30	against	_	IN	IN	_	29	prep	_	_
31	Iran	_	NNP	NNP	_	30	pobj	_	_
32	at	_	IN	IN	_	23	prep	_	_
33	the	_	DT	DT	_	36	det	_	_
34	UN	_	NNP	NNP	_	36	nn	_	_
35	Security	_	NNP	NNP	_	36	nn	_	_
36	Council	_	NNP	NNP	_	32	pobj	_	_
37	.	_	.	.	_	21	punct	_	_

Oracle:
(a / and, op, a2 / add-02)
(a / and, op, r / refrain-01)
(a / and, time, p / period)
(a2 / add-02, ARG0, c / country)
(a2 / add-02, ARG1, c2 / centrifuge)
(a2 / add-02, polarity, - / -)
(c / country, name, n / name)
(n / name, op, "Iran")
(n2 / name, op, "West")
(n3 / name, op, "Council")
(n3 / name, op, "Security")
(n3 / name, op, "UN")
(o / organization, name, n3 / name)
(p / period, duration, t / temporal-quantity)
(p / period, mod, f / freeze-for-freeze)
(p2 / promote-02, ARG0, w2 / world-region)
(p2 / promote-02, ARG1, r2 / round)
(p2 / promote-02, ARG2, o / organization)
(r / refrain-01, ARG0, w2 / world-region)
(r / refrain-01, ARG1, p2 / promote-02)
(r2 / round, mod, s / sanction-02)
(s / sanction-02, ARG1, c / country)
(s / sanction-02, mod, e / economy)
(t / temporal-quantity, quant, 6 / 6)
(t / temporal-quantity, unit, w / week)
(w2 / world-region, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),economic,round,false), Span(33,36,List(5, 4, 3, 2, 1),Council.,(organization :name (name :op "UN" :op "Security" :op "Council")),false), Span(15,16,List(6),the,centrifuge,false), Span(16,17,List(7),West,and,false), Span(18,19,List(10, 9, 8),refrain,(world-region :name (name :op "West")),false), Span(30,31,List(13, 12, 11),the,(country :name (name :op "Iran")),false), Span(11,12,List(16, 15, 14),add,(country :name (name :op "Iran")),false), Span(4,5,List(17),for,freeze-01,false), Span(22,23,List(18),4th,promote-02,false), Span(8,9,List(19),which,period,false), Span(27,29,List(22, 21, 20),against Iran,(thing :mod economy :ARG2-of sanction-02),false), Span(13,14,List(23),centrifuges,add-02,false), Span(20,21,List(24),promoting,refrain-01,false), Span(0,25,List(26, 25),A 6-week pre-negotiation' freeze for freeze' period during which Iran would add no centrifuges and the West would refrain from promoting a 4th round of,(ordinal-entity :value 100.0),false), Span(6,7,List(27),period,freeze-01,false)),Map(2 -> name, 5 -> "Council", 27 -> freeze-01, 12 -> name, 8 -> world-region, 15 -> name, 21 -> economy, 18 -> promote-02, 24 -> refrain-01, 7 -> and, 1 -> organization, 17 -> freeze-01, 23 -> add-02, 26 -> 100.0, 4 -> "Security", 11 -> country, 14 -> country, 20 -> thing, 6 -> centrifuge, 9 -> name, 0 -> round, 22 -> sanction-02, 16 -> "Iran", 19 -> period, 10 -> "West", 3 -> "UN", 25 -> ordinal-entity, 13 -> "Iran"),Map(e -> economy, n -> name, w -> world-region, t -> thing, p2 -> period, n4 -> name, s -> sanction-02, 1 -> 100.0, r2 -> refrain-01, p -> promote-02, a -> and, n3 -> name, c3 -> country, o2 -> ordinal-entity, a2 -> add-02, r -> round, c -> centrifuge, f2 -> freeze-01, f -> freeze-01, o -> organization, n2 -> name, c2 -> country))),[Ljava.lang.String;@1807225a,Annotation([Ljava.lang.String;@38351228,[Ljava.lang.String;@526fca4d,[Ljava.lang.String;@695861dc),Annotation([Ljava.lang.String;@486c9b5f,[Ljava.lang.String;@58d87428,[Ledu.cmu.lti.nlp.amr.Dependency;@7449f0dc),Annotation([Ljava.lang.String;@5e352908,[Ljava.lang.String;@722ff7f2,[Ljava.lang.String;@694da4ab),Annotation([Ljava.lang.String;@52b9664e,[Ljava.lang.String;@25336878,[Ledu.cmu.lti.nlp.amr.Entity;@282e9b4b))
AMR:
(a / and, domain, c / centrifuge)
(a2 / add-02, ARG1, a / and)
(a2 / add-02, ARG6, c3 / country)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(f / freeze-01, ARG1, f2 / freeze-01)
(f2 / freeze-01, ARG0, t / thing)
(f2 / freeze-01, ARG1, o2 / ordinal-entity)
(n / name, op, "Council")
(n / name, op, "Security")
(n / name, op, "UN")
(n2 / name, op, "West")
(n3 / name, op, "Iran")
(n4 / name, op, "Iran")
(o / organization, name, n / name)
(o / organization, poss, c2 / country)
(o2 / ordinal-entity, calendar, r / round)
(o2 / ordinal-entity, value, 1 / 100.0)
(p / promote-02, ARG0, a / and)
(p / promote-02, ARG1, w / world-region)
(p2 / period, poss, f2 / freeze-01)
(r2 / refrain-01, ARG1, o2 / ordinal-entity)
(r2 / refrain-01, ARG6, p / promote-02)
(s / sanction-02, ARG1, c2 / country)
(s / sanction-02, ARG2, t / thing)
(t / thing, mod, e / economy)
(w / world-region, name, n2 / name)

Decoded in 1,886,631 microseconds
Sentence: US officials repeatedly stated that no negotiations can begin before Iran verifiably halts all enrichment-related activities but the Bush administration recently agreed to the' freeze for freeze' proposal and dispatch burns to Geneva.

Oracle Span 1:  activities => activity
Oracle Span 2:  administration => administrate-01
Oracle Span 3:  agreed => agree-01
Oracle Span 4:  all => all
Oracle Span 5:  and => and
Oracle Span 6:  before => before
Oracle Span 7:  begin => begin-01
Oracle Span 8:  burns => (person :name (name :op "Burns"))
Oracle Span 9:  Bush => (person :name (name :op "Bush"))
Oracle Span 10:  can => possible
Oracle Span 11:  dispatch => dispatch-01
Oracle Span 12:  enrichment => enrich-01
Oracle Span 13:  freeze => freeze-for-freeze
Oracle Span 14:  Geneva => (city :name (name :op "Geneva"))
Oracle Span 15:  halts => halt-01
Oracle Span 16:  Iran => (country :name (name :op "Iran"))
Oracle Span 17:  negotiations => negotiate-01
Oracle Span 18:  no => -
Oracle Span 19:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 20:  proposal => (thing :ARG1-of propose-01)
Oracle Span 21:  recently => recent
Oracle Span 22:  related => relate-01
Oracle Span 23:  repeatedly => repeat-01
Oracle Span 24:  stated => state-01
Oracle Span 25:  US => (country :name (name :op "US"))
Oracle Span 26:  verifiably => verify-01
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Geneva"))
Spans:
Span 34-35:   => (city :name (name :op "Geneva"))
Span 15-16:  activities => activity
Span 21-22:  agreed => agree-01
Span 13-14:  all => all
Span 9-10:  before => before
Span 8-9:  begin => begin-01
Span 30-31:  burns => and
Span 18-19:  Bush => (person :name (name :op "Bush"))
Span 16-17:  but => bunt-01
Span 7-8:  can => possible
Span 29-30:  dispatch => propose-01
Span 14-15:  enrichment-related => (relate-01 :ARG2 enrich-01)
Span 25-26:  for => freeze-01
Span 32-33:  Geneva. => burn-01
Span 10-11:  Iran => (country :name (name :op "Iran"))
Span 6-7:  negotiations => negotiate-01
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 27-28:  proposal => freeze-01
Span 3-4:  stated => state-01
Span 31-32:  to => dispatch-01
Span 0-1:  US => (country :name (name :op "US"))
Span 0-21:  US officials repeatedly stated that no negotiations can begin before Iran verifiably halts all enrichment-related activities but the Bush administration recently => (date-entity :time recently)

Langrangian relaxation converged after 72 iterations. Delta = 0.0
Oracle Span 17-18:  activities => activity
Oracle Span 21-22:  administration => administrate-01
Oracle Span 23-24:  agreed => agree-01
Oracle Span 13-14:  all => all
Oracle Span 32-33:  and => and
Oracle Span 9-10:  before => before
Oracle Span 8-9:  begin => begin-01
Oracle Span 34-35:  burns => (person :name (name :op "Burns"))
Oracle Span 20-21:  Bush => (person :name (name :op "Bush"))
Oracle Span 7-8:  can => possible
Oracle Span 33-34:  dispatch => dispatch-01
Oracle Span 14-15:  enrichment => enrich-01
Oracle Span 27-28:  freeze => freeze-for-freeze
Oracle Span 36-37:  Geneva => (city :name (name :op "Geneva"))
Oracle Span 12-13:  halts => halt-01
Oracle Span 10-11:  Iran => (country :name (name :op "Iran"))
Oracle Span 6-7:  negotiations => negotiate-01
Oracle Span 5-6:  no => -
Oracle Span 1-2:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 31-32:  proposal => (thing :ARG1-of propose-01)
Oracle Span 22-23:  recently => recent
Oracle Span 16-17:  related => relate-01
Oracle Span 2-3:  repeatedly => repeat-01
Oracle Span 3-4:  stated => state-01
Oracle Span 0-1:  US => (country :name (name :op "US"))
Oracle Span 11-12:  verifiably => verify-01

Dependencies:
1	US	_	NNP	NNP	_	2	nn	_	_
2	officials	_	NNS	NNS	_	4	nsubj	_	_
3	repeatedly	_	RB	RB	_	4	advmod	_	_
4	stated	_	VBD	VBD	_	0	root	_	_
5	that	_	IN	IN	_	9	mark	_	_
6	no	_	DT	DT	_	7	neg	_	_
7	negotiations	_	NNS	NNS	_	9	nsubj	_	_
8	can	_	MD	MD	_	9	aux	_	_
9	begin	_	VB	VB	_	4	ccomp	_	_
10	before	_	IN	IN	_	9	prep	_	_
11	Iran	_	NNP	NNP	_	13	nn	_	_
12	verifiably	_	NN	NN	_	13	nn	_	_
13	halts	_	NNS	NNS	_	10	pobj	_	_
14	all	_	DT	DT	_	16	det	_	_
15	enrichment-related	_	JJ	JJ	_	16	amod	_	_
16	activities	_	NNS	NNS	_	9	dobj	_	_
17	but	_	CC	CC	_	16	prep	_	_
18	the	_	DT	DT	_	20	det	_	_
19	Bush	_	NNP	NNP	_	20	nn	_	_
20	administration	_	NN	NN	_	17	pobj	_	_
21	recently	_	RB	RB	_	22	advmod	_	_
22	agreed	_	VBN	VBN	_	20	vmod	_	_
23	to	_	TO	TO	_	22	prep	_	_
24	the	_	NNP	NNP	_	26	poss	_	_
25	'	_	POS	POS	_	24	possessive	_	_
26	freeze	_	NN	NN	_	23	pobj	_	_
27	for	_	IN	IN	_	26	prep	_	_
28	freeze	_	NN	NN	_	30	poss	_	_
29	'	_	POS	POS	_	28	possessive	_	_
30	proposal	_	NN	NN	_	27	pobj	_	_
31	and	_	CC	CC	_	9	cc	_	_
32	dispatch	_	VB	VB	_	9	conj	_	_
33	burns	_	NNS	NNS	_	32	dobj	_	_
34	to	_	TO	TO	_	32	prep	_	_
35	Geneva	_	NNP	NNP	_	34	pobj	_	_
36	.	_	.	.	_	4	punct	_	_

Oracle:
(a / agree-01, ARG1, t / thing)
(a / agree-01, mod, r3 / recent)
(a3 / and, concession, r / repeat-01)
(a3 / and, op, a / agree-01)
(a3 / and, op, d / dispatch-01)
(a4 / activity, quant, a5 / all)
(b / begin-01, ARG1, n2 / negotiate-01)
(b / begin-01, time, b2 / before)
(b2 / before, op, h / halt-01)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(c3 / city, name, n6 / name)
(d / dispatch-01, ARG1, p5 / person)
(d / dispatch-01, ARG2, c3 / city)
(h / halt-01, ARG0, c2 / country)
(h / halt-01, ARG1, a4 / activity)
(h2 / have-org-role-91, ARG1, c / country)
(h2 / have-org-role-91, ARG2, o / official)
(n / name, op, "US")
(n3 / name, op, "Iran")
(n4 / name, op, "Bush")
(n5 / name, op, "Burns")
(n6 / name, op, "Geneva")
(p / possible, domain, b / begin-01)
(p / possible, polarity, - / -)
(p2 / person, name, n4 / name)
(p3 / propose-01, ARG1, t / thing)
(p5 / person, name, n5 / name)
(r / repeat-01, ARG1, s / state-01)
(r2 / relate-01, ARG1, a4 / activity)
(r2 / relate-01, ARG2, e / enrich-01)
(s / state-01, ARG1, p / possible)
(t / thing, mod, f / freeze-for-freeze)
(v / verify-01, ARG1, h / halt-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),all,all,false), Span(0,21,List(2, 1),US officials repeatedly stated that no negotiations can begin before Iran verifiably halts all enrichment-related activities but the Bush administration recently,(date-entity :time recently),false), Span(1,2,List(5, 4, 3),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(15,16,List(6),activities,activity,false), Span(25,26,List(7),for,freeze-01,false), Span(3,4,List(8),stated,state-01,false), Span(6,7,List(9),negotiations,negotiate-01,false), Span(18,19,List(12, 11, 10),Bush,(person :name (name :op "Bush")),false), Span(9,10,List(13),before,before,false), Span(31,32,List(14),to,dispatch-01,false), Span(10,11,List(17, 16, 15),Iran,(country :name (name :op "Iran")),false), Span(34,35,List(20, 19, 18),,(city :name (name :op "Geneva")),false), Span(30,31,List(21),burns,and,false), Span(29,30,List(22),dispatch,propose-01,false), Span(32,33,List(23),Geneva.,burn-01,false), Span(7,8,List(24),can,possible,false), Span(21,22,List(25),agreed,agree-01,false), Span(8,9,List(26),begin,begin-01,false), Span(16,17,List(27),but,bunt-01,false), Span(0,1,List(30, 29, 28),US,(country :name (name :op "US")),false), Span(14,15,List(32, 31),enrichment-related,(relate-01 :ARG2 enrich-01),false), Span(27,28,List(33),proposal,freeze-01,false)),Map(30 -> "US", 2 -> recently, 5 -> official, 33 -> freeze-01, 27 -> bunt-01, 12 -> "Bush", 8 -> state-01, 15 -> country, 21 -> and, 18 -> city, 24 -> possible, 7 -> freeze-01, 1 -> date-entity, 17 -> "Iran", 23 -> burn-01, 26 -> begin-01, 4 -> have-org-role-91, 11 -> name, 32 -> enrich-01, 14 -> dispatch-01, 29 -> name, 20 -> "Geneva", 28 -> country, 6 -> activity, 9 -> negotiate-01, 0 -> all, 22 -> propose-01, 16 -> name, 19 -> name, 10 -> person, 3 -> person, 31 -> relate-01, 25 -> agree-01, 13 -> before),Map(e -> enrich-01, n -> negotiate-01, b3 -> begin-01, h -> have-org-role-91, b -> before, b2 -> burn-01, p2 -> person, n4 -> name, a3 -> and, s -> state-01, d -> date-entity, r2 -> relate-01, p -> person, c3 -> country, a -> all, n3 -> name, p4 -> possible, d2 -> dispatch-01, b4 -> bunt-01, a2 -> activity, r -> recently, c -> country, f2 -> freeze-01, f -> freeze-01, o -> official, p3 -> propose-01, n2 -> name, c2 -> city, a4 -> agree-01, n5 -> name))),[Ljava.lang.String;@5924abea,Annotation([Ljava.lang.String;@1dc8c09a,[Ljava.lang.String;@1122e933,[Ljava.lang.String;@ec23242),Annotation([Ljava.lang.String;@7245a38b,[Ljava.lang.String;@29527149,[Ledu.cmu.lti.nlp.amr.Dependency;@2f3f7e21),Annotation([Ljava.lang.String;@30f019a6,[Ljava.lang.String;@6ff6bdc8,[Ljava.lang.String;@55145146),Annotation([Ljava.lang.String;@18ee3b3,[Ljava.lang.String;@3103f70d,[Ledu.cmu.lti.nlp.amr.Entity;@6bc10418))
AMR:
(a4 / agree-01, ARG1, d / date-entity)
(b2 / burn-01, ARG1, d / date-entity)
(b2 / burn-01, ARG2, b3 / begin-01)
(b2 / burn-01, ARG6, c2 / city)
(b3 / begin-01, ARG1, n / negotiate-01)
(b3 / begin-01, location, c / country)
(b3 / begin-01, time, b / before)
(b4 / bunt-01, ARG0, a2 / activity)
(b4 / bunt-01, ARG1, p2 / person)
(c / country, name, n3 / name)
(c2 / city, name, n4 / name)
(c3 / country, name, n5 / name)
(d / date-entity, time, r / recently)
(d2 / dispatch-01, ARG1, p3 / propose-01)
(f / freeze-01, ARG1, a4 / agree-01)
(f2 / freeze-01, ARG0, f / freeze-01)
(f2 / freeze-01, ARG1, d2 / dispatch-01)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c3 / country)
(h / have-org-role-91, ARG2, o / official)
(n / negotiate-01, ARG1, a / all)
(n2 / name, op, "Bush")
(n3 / name, op, "Iran")
(n4 / name, op, "Geneva")
(n5 / name, op, "US")
(p2 / person, name, n2 / name)
(p3 / propose-01, ARG1, a3 / and)
(p4 / possible, domain, b3 / begin-01)
(r2 / relate-01, ARG0, a4 / agree-01)
(r2 / relate-01, ARG1, a2 / activity)
(r2 / relate-01, ARG2, e / enrich-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, p4 / possible)

Decoded in 5,138,217 microseconds
Sentence: 20080726 during talks in Geneva attended by US Undersecretary of State William J. Burns Iran refused to respond to Solana's offers.

Oracle Span 1:  20080726 => (date-entity :day 26 :month 7 :year 2008)
Oracle Span 2:  attended => attend-01
Oracle Span 3:  Geneva => (city :name (name :op "Geneva"))
Oracle Span 4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5:  offers => (thing :ARG1-of offer-01)
Oracle Span 6:  refused => refuse-01
Oracle Span 7:  respond => respond-01
Oracle Span 8:  Solana => (person :name (name :op "Solana"))
Oracle Span 9:  State => state
Oracle Span 10:  talks => talk-01
Oracle Span 11:  Undersecretary => (have-org-role-91 :ARG2 undersecretary)
Oracle Span 12:  US => (country :name (name :op "US"))
Oracle Span 13:  William J. Burns => (person :name (name :op "Burns" :op "J." :op "William"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (person :name (name :op "Solana"))
NER Entity: (country :name (name :op "Geneva"))
NER Entity: (person :name (name :op "William" :op "J." :op "Burns"))
NER Entity: (organization :name (name :op "US" :op "Undersecretary" :op "of" :op "State"))
mkDayMonthYear(20080726,26,07,2008)
Spans:
Span 21-22:   => offer-01
Span 0-1:  20080726 => 1
Span 5-6:  attended => attend-01
Span 4-5:  Geneva => (city :name (name :op "Geneva"))
Span 15-16:  refused => refuse-01
Span 17-18:  respond => respond-01
Span 19-20:  Solana's => (person :name (name :op "Solana"))
Span 10-11:  State => state
Span 2-3:  talks => talk-01
Span 8-9:  Undersecretary => undersecretary-of-state
Span 7-8:  US => (country :name (name :op "US"))
Span 11-14:  William J. Burns => (person :name (name :op "William" :op "J." :op "Burns"))

Langrangian relaxation converged after 48 iterations. Delta = 0.0
Oracle Span 0-1:  20080726 => (date-entity :day 26 :month 7 :year 2008)
Oracle Span 5-6:  attended => attend-01
Oracle Span 4-5:  Geneva => (city :name (name :op "Geneva"))
Oracle Span 14-15:  Iran => (country :name (name :op "Iran"))
Oracle Span 21-22:  offers => (thing :ARG1-of offer-01)
Oracle Span 15-16:  refused => refuse-01
Oracle Span 17-18:  respond => respond-01
Oracle Span 19-20:  Solana => (person :name (name :op "Solana"))
Oracle Span 10-11:  State => state
Oracle Span 2-3:  talks => talk-01
Oracle Span 8-9:  Undersecretary => (have-org-role-91 :ARG2 undersecretary)
Oracle Span 7-8:  US => (country :name (name :op "US"))
Oracle Span 11-14:  William J. Burns => (person :name (name :op "Burns" :op "J." :op "William"))

Dependencies:
1	20080726	_	CD	CD	_	6	nsubj	_	_
2	during	_	IN	IN	_	1	prep	_	_
3	talks	_	NNS	NNS	_	2	pobj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	Geneva	_	NNP	NNP	_	4	pobj	_	_
6	attended	_	VBD	VBD	_	0	root	_	_
7	by	_	IN	IN	_	6	prep	_	_
8	US	_	NNP	NNP	_	9	nn	_	_
9	Undersecretary	_	NNP	NNP	_	7	pobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	State	_	NNP	NNP	_	15	nn	_	_
12	William	_	NNP	NNP	_	15	nn	_	_
13	J.	_	NNP	NNP	_	15	nn	_	_
14	Burns	_	NNP	NNP	_	15	nn	_	_
15	Iran	_	NNP	NNP	_	10	pobj	_	_
16	refused	_	VBN	VBN	_	15	vmod	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	respond	_	VB	VB	_	16	xcomp	_	_
19	to	_	TO	TO	_	18	prep	_	_
20	Solana	_	NNP	NNP	_	22	poss	_	_
21	's	_	POS	POS	_	20	possessive	_	_
22	offers	_	NNS	NNS	_	19	pobj	_	_
23	.	_	.	.	_	6	punct	_	_

Oracle:
(a / attend-01, ARG0, p2 / person)
(a / attend-01, ARG1, t / talk-01)
(c / country, name, n / name)
(c2 / city, name, n3 / name)
(c3 / country, name, n5 / name)
(d / date-entity, day, 26)
(d / date-entity, month, 7)
(d / date-entity, year, 2008)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c3 / country)
(h / have-org-role-91, ARG2, u / undersecretary)
(n / name, op, "Iran")
(n2 / name, op, "Solana")
(n3 / name, op, "Geneva")
(n4 / name, op, "Burns")
(n4 / name, op, "J.")
(n4 / name, op, "William")
(n5 / name, op, "US")
(o / offer-01, ARG0, p / person)
(o / offer-01, ARG1, t2 / thing)
(p / person, name, n2 / name)
(p2 / person, name, n4 / name)
(r / refuse-01, ARG0, c / country)
(r / refuse-01, ARG1, r2 / respond-01)
(r / refuse-01, time, d / date-entity)
(r / refuse-01, time, t / talk-01)
(r2 / respond-01, ARG0, c / country)
(r2 / respond-01, ARG1, t2 / thing)
(t / talk-01, location, c2 / city)
(u / undersecretary, mod, s / state)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),,offer-01,false), Span(0,1,List(1),20080726,1,false), Span(17,18,List(2),respond,respond-01,false), Span(7,8,List(5, 4, 3),US,(country :name (name :op "US")),false), Span(11,14,List(10, 9, 8, 7, 6),William J. Burns,(person :name (name :op "William" :op "J." :op "Burns")),false), Span(19,20,List(13, 12, 11),Solana's,(person :name (name :op "Solana")),false), Span(15,16,List(14),refused,refuse-01,false), Span(2,3,List(15),talks,talk-01,false), Span(8,9,List(16),Undersecretary,undersecretary-of-state,false), Span(4,5,List(19, 18, 17),Geneva,(city :name (name :op "Geneva")),false), Span(5,6,List(20),attended,attend-01,false), Span(10,11,List(21),State,state,false)),Map(2 -> respond-01, 5 -> "US", 12 -> name, 15 -> talk-01, 8 -> "William", 21 -> state, 18 -> name, 7 -> name, 17 -> city, 1 -> 1, 4 -> name, 11 -> person, 14 -> refuse-01, 20 -> attend-01, 6 -> person, 0 -> offer-01, 9 -> "J.", 16 -> undersecretary-of-state, 19 -> "Geneva", 3 -> country, 10 -> "Burns", 13 -> "Solana"),Map(n -> name, t -> talk-01, p2 -> person, n4 -> name, s -> state, 1 -> 1, p -> person, r2 -> refuse-01, a -> attend-01, n3 -> name, r -> respond-01, c -> country, u -> undersecretary-of-state, o -> offer-01, n2 -> name, c2 -> city))),[Ljava.lang.String;@595d5e83,Annotation([Ljava.lang.String;@6a05b21b,[Ljava.lang.String;@42ad163b,[Ljava.lang.String;@74e6928c),Annotation([Ljava.lang.String;@47fc63d5,[Ljava.lang.String;@ae945b,[Ledu.cmu.lti.nlp.amr.Dependency;@2a1856bb),Annotation([Ljava.lang.String;@6aaad386,[Ljava.lang.String;@4eece7cd,[Ljava.lang.String;@3a14ae07),Annotation([Ljava.lang.String;@52519a70,[Ljava.lang.String;@6edb455f,[Ledu.cmu.lti.nlp.amr.Entity;@472005c6))
AMR:
(a / attend-01, ARG1, t / talk-01)
(c / country, name, n / name)
(c2 / city, name, n4 / name)
(n / name, op, "US")
(n2 / name, op, "Burns")
(n2 / name, op, "J.")
(n2 / name, op, "William")
(n3 / name, op, "Solana")
(n4 / name, op, "Geneva")
(o / offer-01, ARG0, p2 / person)
(o / offer-01, ARG1, 1 / 1)
(p / person, mod, s / state)
(p / person, name, n2 / name)
(p2 / person, name, n3 / name)
(r / respond-01, ARG1, o / offer-01)
(r2 / refuse-01, ARG0, u / undersecretary-of-state)
(r2 / refuse-01, ARG1, r / respond-01)
(t / talk-01, ARG1, r2 / refuse-01)
(t / talk-01, location, c2 / city)
(t / talk-01, location, s / state)
(u / undersecretary-of-state, location, c / country)

Decoded in 1,359,075 microseconds
Sentence: The talks constituted the highest-level diplomatic contact between the US and Iran for nearly 30 years.

Oracle Span 1:  30 => 30
Oracle Span 2:  constituted => constitute-01
Oracle Span 3:  contact => contact-01
Oracle Span 4:  diplomatic => diplomacy
Oracle Span 5:  highest => (high :degree most)
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  level => level
Oracle Span 8:  nearly => nearly
Oracle Span 9:  talks => talk-01
Oracle Span 10:  US => (country :name (name :op "US"))
Oracle Span 11:  years => (temporal-quantity :unit year)
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 14-15:  30 => 30
Span 10-11:  and => and
Span 2-3:  constituted => constitute-01
Span 6-7:  contact => contact-01
Span 5-6:  diplomatic => diplomacy
Span 11-12:  Iran => (country :name (name :op "Iran"))
Span 13-14:  nearly => near
Span 1-2:  talks => talk-01
Span 9-10:  US => (country :name (name :op "US"))
Span 15-16:  years. => year

Langrangian relaxation converged after 26 iterations. Delta = 0.0
Oracle Span 16-17:  30 => 30
Oracle Span 2-3:  constituted => constitute-01
Oracle Span 8-9:  contact => contact-01
Oracle Span 7-8:  diplomatic => diplomacy
Oracle Span 4-5:  highest => (high :degree most)
Oracle Span 13-14:  Iran => (country :name (name :op "Iran"))
Oracle Span 6-7:  level => level
Oracle Span 15-16:  nearly => nearly
Oracle Span 1-2:  talks => talk-01
Oracle Span 11-12:  US => (country :name (name :op "US"))
Oracle Span 17-18:  years => (temporal-quantity :unit year)

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	talks	_	NNS	NNS	_	3	nsubj	_	_
3	constituted	_	VBD	VBD	_	0	root	_	_
4	the	_	DT	DT	_	7	det	_	_
5	highest-level	_	JJ	JJ	_	7	amod	_	_
6	diplomatic	_	JJ	JJ	_	7	amod	_	_
7	contact	_	NN	NN	_	3	dobj	_	_
8	between	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	US	_	NNP	NNP	_	8	pobj	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	Iran	_	NNP	NNP	_	10	conj	_	_
13	for	_	IN	IN	_	3	prep	_	_
14	nearly	_	RB	RB	_	15	quantmod	_	_
15	30	_	CD	CD	_	16	num	_	_
16	years	_	NNS	NNS	_	13	pobj	_	_
17	.	_	.	.	_	3	punct	_	_

Oracle:
(c / constitute-01, ARG0, t / talk-01)
(c / constitute-01, ARG1, c2 / contact-01)
(c2 / contact-01, ARG0, c3 / country)
(c2 / contact-01, ARG1, c4 / country)
(c2 / contact-01, mod, d / diplomacy)
(c2 / contact-01, mod, l / level)
(c2 / contact-01, time, n4 / nearly)
(c3 / country, name, n / name)
(c4 / country, name, n2 / name)
(h / high, degree, m / most)
(l / level, mod, h / high)
(n / name, op, "US")
(n2 / name, op, "Iran")
(n4 / nearly, op, t2 / temporal-quantity)
(t2 / temporal-quantity, quant, 3 / 30)
(t2 / temporal-quantity, unit, y / year)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),nearly,near,false), Span(9,10,List(3, 2, 1),US,(country :name (name :op "US")),false), Span(1,2,List(4),talks,talk-01,false), Span(2,3,List(5),constituted,constitute-01,false), Span(15,16,List(6),years.,year,false), Span(6,7,List(7),contact,contact-01,false), Span(14,15,List(8),30,30,false), Span(11,12,List(11, 10, 9),Iran,(country :name (name :op "Iran")),false), Span(5,6,List(12),diplomatic,diplomacy,false), Span(10,11,List(13),and,and,false)),Map(2 -> name, 5 -> constitute-01, 12 -> diplomacy, 8 -> 30, 7 -> contact-01, 1 -> country, 4 -> talk-01, 11 -> "Iran", 6 -> year, 0 -> near, 9 -> country, 3 -> "US", 10 -> name, 13 -> and),Map(n -> near, t -> talk-01, c4 -> country, d -> diplomacy, y -> year, a -> and, n3 -> name, c3 -> contact-01, c -> country, 3 -> 30, c2 -> constitute-01, n2 -> name))),[Ljava.lang.String;@551c5a68,Annotation([Ljava.lang.String;@21ac7958,[Ljava.lang.String;@130548f8,[Ljava.lang.String;@64c2e69),Annotation([Ljava.lang.String;@31b4fbd2,[Ljava.lang.String;@73902205,[Ledu.cmu.lti.nlp.amr.Dependency;@4a6be607),Annotation([Ljava.lang.String;@2d33a645,[Ljava.lang.String;@3bcfb25a,[Ljava.lang.String;@49bd3f2c),Annotation([Ljava.lang.String;@5c73a3c2,[Ljava.lang.String;@6c422787,[Ledu.cmu.lti.nlp.amr.Entity;@2a591537))
AMR:
(a / and, op, c / country)
(c / country, name, n2 / name)
(c / country, op, c4 / country)
(c / country, op, n / near)
(c2 / constitute-01, ARG1, t / talk-01)
(c2 / constitute-01, time, 3 / 30)
(c3 / contact-01, ARG0, a / and)
(c3 / contact-01, ARG1, d / diplomacy)
(c4 / country, name, n3 / name)
(n2 / name, op, "US")
(n3 / name, op, "Iran")
(t / talk-01, ARG1, y / year)
(t / talk-01, ARG2, a / and)

Decoded in 539,254 microseconds
Sentence: Solana, burns and European envoys set a deadline for Iran to respond positively before initiating new sanctions including prohibitions on selling Iran refined petroleum products vital to the country's economy.

Oracle Span 1:  and => and
Oracle Span 2:  before => before
Oracle Span 3:  burns => (person :name (name :op "Burns"))
Oracle Span 4:  country => country
Oracle Span 5:  deadline => deadline
Oracle Span 6:  economy => economy
Oracle Span 7:  envoys => envoy
Oracle Span 8:  European => (continent :name (name :op "Europe"))
Oracle Span 9:  including => include-01
Oracle Span 10:  initiating => initiate-01
Oracle Span 11:  Iran => (name :op "Iran")
Oracle Span 12:  new => new
Oracle Span 13:  petroleum => petroleum
Oracle Span 14:  positively => positive
Oracle Span 15:  products => product
Oracle Span 16:  prohibitions => prohibit-01
Oracle Span 17:  refined => refine-01
Oracle Span 18:  respond => respond-01
Oracle Span 19:  sanctions => sanction-02
Oracle Span 20:  selling => sell-01
Oracle Span 21:  set => set-01
Oracle Span 22:  Solana => (person :name (name :op "Solana"))
Oracle Span 23:  vital => vital
NER Entity: (person :name (name :op "Solana"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "European"))
Spans:
Span 31-32:   => economy
Span 6-7:  a => set-01
Span 2-3:  and => burn-01
Span 4-5:  envoys => (organization :name (name :op "European"))
Span 3-4:  European => and
Span 8-9:  for => deadline
Span 17-18:  including => (thing :ARG2-of sanction-02)
Span 14-15:  initiating => before
Span 21-22:  Iran => sell-01
Span 15-16:  new => initiate-01
Span 19-20:  on => prohibition
Span 23-24:  petroleum => refine-01
Span 12-13:  positively => respond-01
Span 24-25:  products => petroleum
Span 18-19:  prohibitions => include-01
Span 22-23:  refined => (country :name (name :op "Iran"))
Span 16-17:  sanctions => new
Span 0-1:  Solana, => (person :name (name :op "Solana"))
Span 26-27:  to => vital
Span 10-11:  to => (country :name (name :op "Iran"))
Span 25-26:  vital => product

Langrangian relaxation converged after 30 iterations. Delta = 0.0
Oracle Span 3-4:  and => and
Oracle Span 14-15:  before => before
Oracle Span 2-3:  burns => (person :name (name :op "Burns"))
Oracle Span 29-30:  country => country
Oracle Span 8-9:  deadline => deadline
Oracle Span 31-32:  economy => economy
Oracle Span 5-6:  envoys => envoy
Oracle Span 4-5:  European => (continent :name (name :op "Europe"))
Oracle Span 18-19:  including => include-01
Oracle Span 15-16:  initiating => initiate-01
Oracle Span 10-11:  Iran => (name :op "Iran")
Oracle Span 16-17:  new => new
Oracle Span 24-25:  petroleum => petroleum
Oracle Span 13-14:  positively => positive
Oracle Span 25-26:  products => product
Oracle Span 19-20:  prohibitions => prohibit-01
Oracle Span 23-24:  refined => refine-01
Oracle Span 12-13:  respond => respond-01
Oracle Span 17-18:  sanctions => sanction-02
Oracle Span 21-22:  selling => sell-01
Oracle Span 6-7:  set => set-01
Oracle Span 0-1:  Solana => (person :name (name :op "Solana"))
Oracle Span 26-27:  vital => vital

Dependencies:
1	Solana	_	NNP	NNP	_	7	nsubj	_	_
2	,	_	,	,	_	1	punct	_	_
3	burns	_	NNS	NNS	_	1	conj	_	_
4	and	_	CC	CC	_	1	cc	_	_
5	European	_	JJ	JJ	_	6	amod	_	_
6	envoys	_	NNS	NNS	_	1	conj	_	_
7	set	_	VBD	VBD	_	0	root	_	_
8	a	_	DT	DT	_	9	det	_	_
9	deadline	_	NN	NN	_	7	dobj	_	_
10	for	_	IN	IN	_	7	prep	_	_
11	Iran	_	NNP	NNP	_	10	pobj	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	respond	_	VB	VB	_	7	vmod	_	_
14	positively	_	RB	RB	_	13	advmod	_	_
15	before	_	IN	IN	_	13	prep	_	_
16	initiating	_	VBG	VBG	_	15	pcomp	_	_
17	new	_	JJ	JJ	_	18	amod	_	_
18	sanctions	_	NNS	NNS	_	16	dobj	_	_
19	including	_	VBG	VBG	_	18	prep	_	_
20	prohibitions	_	NNS	NNS	_	19	pobj	_	_
21	on	_	IN	IN	_	20	prep	_	_
22	selling	_	VBG	VBG	_	21	pcomp	_	_
23	Iran	_	NNP	NNP	_	26	nn	_	_
24	refined	_	JJ	JJ	_	26	amod	_	_
25	petroleum	_	NN	NN	_	26	nn	_	_
26	products	_	NNS	NNS	_	27	nsubj	_	_
27	vital	_	JJ	JJ	_	22	xcomp	_	_
28	to	_	TO	TO	_	27	prep	_	_
29	the	_	DT	DT	_	30	det	_	_
30	country	_	NN	NN	_	32	poss	_	_
31	's	_	POS	POS	_	30	possessive	_	_
32	economy	_	NN	NN	_	28	pobj	_	_
33	.	_	.	.	_	7	punct	_	_

Oracle:
(a / and, op, e / envoy)
(a / and, op, p / person)
(a / and, op, p2 / person)
(b / before, op, i / initiate-01)
(c / continent, name, n3 / name)
(c2 / country, name, n4 / name)
(d / deadline, prep-for, r / respond-01)
(e / envoy, mod, c / continent)
(e2 / economy, poss, c2 / country)
(i / initiate-01, ARG0, a / and)
(i / initiate-01, ARG1, s2 / sanction-02)
(i2 / include-01, ARG1, p4 / prohibit-01)
(i2 / include-01, ARG2, s2 / sanction-02)
(n / name, op, "Solana")
(n2 / name, op, "Burns")
(n3 / name, op, "Europe")
(n4 / name, op, "Iran")
(p / person, name, n / name)
(p2 / person, name, n2 / name)
(p4 / prohibit-01, ARG1, s3 / sell-01)
(p5 / product, mod, p6 / petroleum)
(p5 / product, mod, v / vital)
(r / respond-01, ARG0, c2 / country)
(r / respond-01, ARG2, p3 / positive)
(r2 / refine-01, ARG1, p6 / petroleum)
(s / set-01, ARG0, a / and)
(s / set-01, ARG1, d / deadline)
(s / set-01, time, b / before)
(s2 / sanction-02, mod, n5 / new)
(s3 / sell-01, ARG1, p5 / product)
(s3 / sell-01, ARG2, c2 / country)
(v / vital, prep-to, e2 / economy)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),for,deadline,false), Span(26,27,List(1),to,vital,false), Span(31,32,List(2),,economy,false), Span(0,1,List(5, 4, 3),Solana,,(person :name (name :op "Solana")),false), Span(21,22,List(6),Iran,sell-01,false), Span(25,26,List(7),vital,product,false), Span(18,19,List(8),prohibitions,include-01,false), Span(14,15,List(9),initiating,before,false), Span(15,16,List(10),new,initiate-01,false), Span(23,24,List(11),petroleum,refine-01,false), Span(19,20,List(12),on,prohibition,false), Span(10,11,List(15, 14, 13),to,(country :name (name :op "Iran")),false), Span(16,17,List(16),sanctions,new,false), Span(17,18,List(18, 17),including,(thing :ARG2-of sanction-02),false), Span(3,4,List(19),European,and,false), Span(24,25,List(20),products,petroleum,false), Span(22,23,List(23, 22, 21),refined,(country :name (name :op "Iran")),false), Span(4,5,List(26, 25, 24),envoys,(organization :name (name :op "European")),false), Span(6,7,List(27),a,set-01,false), Span(2,3,List(28),and,burn-01,false), Span(12,13,List(29),positively,respond-01,false)),Map(2 -> economy, 5 -> "Solana", 27 -> set-01, 12 -> prohibition, 8 -> include-01, 15 -> "Iran", 21 -> country, 18 -> sanction-02, 24 -> organization, 7 -> product, 1 -> vital, 17 -> thing, 23 -> "Iran", 26 -> "European", 4 -> name, 11 -> refine-01, 14 -> name, 29 -> respond-01, 20 -> petroleum, 28 -> burn-01, 6 -> sell-01, 9 -> before, 0 -> deadline, 22 -> name, 16 -> new, 19 -> and, 10 -> initiate-01, 3 -> person, 25 -> name, 13 -> country),Map(e -> economy, n -> name, s2 -> sanction-02, t -> thing, b -> before, b2 -> burn-01, p2 -> product, n4 -> name, s -> sell-01, v -> vital, d -> deadline, r2 -> respond-01, p -> person, n3 -> new, a -> and, p4 -> petroleum, i2 -> initiate-01, r -> refine-01, i -> include-01, c -> country, s3 -> set-01, o -> organization, p3 -> prohibition, n2 -> name, c2 -> country, n5 -> name))),[Ljava.lang.String;@321d5f2a,Annotation([Ljava.lang.String;@1eb6d35a,[Ljava.lang.String;@40262765,[Ljava.lang.String;@1e6563ba),Annotation([Ljava.lang.String;@46d98b53,[Ljava.lang.String;@6eddacd1,[Ledu.cmu.lti.nlp.amr.Dependency;@1fb1b360),Annotation([Ljava.lang.String;@2afc7b9f,[Ljava.lang.String;@20f5ee80,[Ljava.lang.String;@23cd656b),Annotation([Ljava.lang.String;@3175f8c1,[Ljava.lang.String;@789c4df3,[Ledu.cmu.lti.nlp.amr.Entity;@77122d8e))
AMR:
(a / and, op, b2 / burn-01)
(a / and, op, p / person)
(b / before, op, i2 / initiate-01)
(b2 / burn-01, ARG1, e / economy)
(c / country, name, n2 / name)
(c2 / country, name, n4 / name)
(d / deadline, location, c / country)
(i / include-01, ARG1, s / sell-01)
(i / include-01, ARG2, t / thing)
(i2 / initiate-01, ARG1, t / thing)
(n / name, op, "Solana")
(n2 / name, op, "Iran")
(n4 / name, op, "Iran")
(n5 / name, op, "European")
(o / organization, name, n5 / name)
(p / person, name, n / name)
(p2 / product, mod, p4 / petroleum)
(p3 / prohibition, mod, s / sell-01)
(r / refine-01, ARG1, p2 / product)
(r2 / respond-01, ARG0, d / deadline)
(r2 / respond-01, ARG1, i2 / initiate-01)
(s / sell-01, ARG0, c2 / country)
(s / sell-01, ARG1, p2 / product)
(s2 / sanction-02, ARG1, o / organization)
(s2 / sanction-02, ARG2, t / thing)
(s2 / sanction-02, mod, n3 / new)
(s3 / set-01, ARG0, a / and)
(s3 / set-01, ARG1, d / deadline)
(v / vital, domain, p2 / product)

Decoded in 2,122,127 microseconds
Sentence: Iranian officials refused to commit to stopping expansion or to observe the deadline.

Oracle Span 1:  commit => commit-01
Oracle Span 2:  deadline => deadline
Oracle Span 3:  expansion => expand-01
Oracle Span 4:  Iranian => (country :name (name :op "Iran"))
Oracle Span 5:  observe => observe-00
Oracle Span 6:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 7:  or => or
Oracle Span 8:  refused => refuse-01
Oracle Span 9:  stopping => stop-01
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 4-5:  commit => commit-01
Span 12-13:  deadline. => deadline
Span 7-8:  expansion => expand-01
Span 0-1:  Iranian => (country :name (name :op "Iran"))
Span 10-11:  observe => observe-01
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 8-9:  or => or
Span 2-3:  refused => refuse-01
Span 6-7:  stopping => stop-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  commit => commit-01
Oracle Span 12-13:  deadline => deadline
Oracle Span 7-8:  expansion => expand-01
Oracle Span 0-1:  Iranian => (country :name (name :op "Iran"))
Oracle Span 10-11:  observe => observe-00
Oracle Span 1-2:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 8-9:  or => or
Oracle Span 2-3:  refused => refuse-01
Oracle Span 6-7:  stopping => stop-01

Dependencies:
1	Iranian	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	3	nsubj	_	_
3	refused	_	VBD	VBD	_	0	root	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	commit	_	VB	VB	_	3	ccomp	_	_
6	to	_	TO	TO	_	5	prep	_	_
7	stopping	_	NN	NN	_	8	nn	_	_
8	expansion	_	NN	NN	_	6	pobj	_	_
9	or	_	CC	CC	_	5	cc	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	observe	_	VB	VB	_	5	conj	_	_
12	the	_	DT	DT	_	13	det	_	_
13	deadline	_	NN	NN	_	11	dobj	_	_
14	.	_	.	.	_	3	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / commit-01, ARG2, o2 / or)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Iran")
(o2 / or, op, o3 / observe-00)
(o2 / or, op, s / stop-01)
(o3 / observe-00, ARG1, d / deadline)
(r / refuse-01, ARG1, c2 / commit-01)
(s / stop-01, ARG1, e / expand-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),commit,commit-01,false), Span(1,2,List(3, 2, 1),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(2,3,List(4),refused,refuse-01,false), Span(7,8,List(5),expansion,expand-01,false), Span(10,11,List(6),observe,observe-01,false), Span(8,9,List(7),or,or,false), Span(12,13,List(8),deadline.,deadline,false), Span(0,1,List(11, 10, 9),Iranian,(country :name (name :op "Iran")),false), Span(6,7,List(12),stopping,stop-01,false)),Map(2 -> have-org-role-91, 5 -> expand-01, 12 -> stop-01, 8 -> deadline, 7 -> or, 1 -> person, 4 -> refuse-01, 11 -> "Iran", 6 -> observe-01, 0 -> commit-01, 9 -> country, 3 -> official, 10 -> name),Map(n -> name, e -> expand-01, h -> have-org-role-91, o3 -> or, s -> stop-01, d -> deadline, p -> person, o2 -> observe-01, r -> refuse-01, c -> commit-01, o -> official, c2 -> country))),[Ljava.lang.String;@42bb9b4a,Annotation([Ljava.lang.String;@3822cac0,[Ljava.lang.String;@48c13c48,[Ljava.lang.String;@761ab55a),Annotation([Ljava.lang.String;@68651118,[Ljava.lang.String;@463fa21e,[Ledu.cmu.lti.nlp.amr.Dependency;@7ddf5ed),Annotation([Ljava.lang.String;@24ce3029,[Ljava.lang.String;@64630879,[Ljava.lang.String;@5ff779b9),Annotation([Ljava.lang.String;@37ed8d37,[Ljava.lang.String;@62f7ac9b,[Ledu.cmu.lti.nlp.amr.Entity;@1eab507c))
AMR:
(c / commit-01, ARG1, e / expand-01)
(c2 / country, name, n / name)
(e / expand-01, ARG1, s / stop-01)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Iran")
(o2 / observe-01, ARG1, d / deadline)
(o3 / or, op, c / commit-01)
(o3 / or, op, o2 / observe-01)
(r / refuse-01, ARG0, p / person)
(r / refuse-01, ARG1, c / commit-01)

Decoded in 234,224 microseconds
Sentence: 20080726 ahmadinejad appeared to suggest that Iran might potentially halt expansion at a higher number of centrifuges that previously expected and for over 6 weeks.

Oracle Span 1:  20080726 => (date-entity :day 26 :month 7 :year 2008)
Oracle Span 2:  6 => 6
Oracle Span 3:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 4:  appeared => appear-02
Oracle Span 5:  centrifuges => centrifuge
Oracle Span 6:  expansion => expand-01
Oracle Span 7:  expected => expect-01
Oracle Span 8:  halt => halt-01
Oracle Span 9:  higher => high
Oracle Span 10:  Iran => (country :name (name :op "Iran"))
Oracle Span 11:  number => number
Oracle Span 12:  over => over
Oracle Span 13:  potentially => potential
Oracle Span 14:  previously => previous
Oracle Span 15:  suggest => suggest-01
Oracle Span 16:  weeks => (temporal-quantity :unit week)
NER Entity: (country :name (name :op "Iran"))
mkDayMonthYear(20080726,26,07,2008)
Spans:
Span 0-1:  20080726 => 1
Span 0-19:  20080726 ahmadinejad appeared to suggest that Iran might potentially halt expansion at a higher number of centrifuges that previously => (date-entity :time previously)
Span 23-24:  6 => 6
Span 20-21:  and => and
Span 2-3:  appeared => appear-02
Span 16-17:  centrifuges => centrifuge
Span 10-11:  expansion => expand-01
Span 19-20:  expected => expect-01
Span 21-22:  for => person
Span 9-10:  halt => halt-01
Span 13-14:  higher => (high :degree more)
Span 6-7:  Iran => (country :name (name :op "Iran"))
Span 14-15:  number => number
Span 22-23:  over => over
Span 8-9:  potentially => potential
Span 4-5:  suggest => suggest-01
Span 24-25:  weeks. => week

Langrangian relaxation converged after 45 iterations. Delta = 0.0
Oracle Span 0-1:  20080726 => (date-entity :day 26 :month 7 :year 2008)
Oracle Span 23-24:  6 => 6
Oracle Span 1-2:  ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 2-3:  appeared => appear-02
Oracle Span 16-17:  centrifuges => centrifuge
Oracle Span 10-11:  expansion => expand-01
Oracle Span 19-20:  expected => expect-01
Oracle Span 9-10:  halt => halt-01
Oracle Span 13-14:  higher => high
Oracle Span 6-7:  Iran => (country :name (name :op "Iran"))
Oracle Span 14-15:  number => number
Oracle Span 22-23:  over => over
Oracle Span 8-9:  potentially => potential
Oracle Span 18-19:  previously => previous
Oracle Span 4-5:  suggest => suggest-01
Oracle Span 24-25:  weeks => (temporal-quantity :unit week)

Dependencies:
1	20080726	_	CD	CD	_	2	num	_	_
2	ahmadinejad	_	NN	NN	_	3	nsubj	_	_
3	appeared	_	VBD	VBD	_	0	root	_	_
4	to	_	TO	TO	_	5	aux	_	_
5	suggest	_	VB	VB	_	3	xcomp	_	_
6	that	_	IN	IN	_	10	mark	_	_
7	Iran	_	NNP	NNP	_	10	nsubj	_	_
8	might	_	MD	MD	_	10	aux	_	_
9	potentially	_	RB	RB	_	10	advmod	_	_
10	halt	_	VB	VB	_	5	ccomp	_	_
11	expansion	_	NN	NN	_	10	dobj	_	_
12	at	_	IN	IN	_	10	prep	_	_
13	a	_	DT	DT	_	15	det	_	_
14	higher	_	JJR	JJR	_	15	amod	_	_
15	number	_	NN	NN	_	12	pobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	centrifuges	_	NNS	NNS	_	16	pobj	_	_
18	that	_	WDT	WDT	_	20	nsubj	_	_
19	previously	_	RB	RB	_	20	advmod	_	_
20	expected	_	VBN	VBN	_	17	rcmod	_	_
21	and	_	CC	CC	_	12	cc	_	_
22	for	_	IN	IN	_	12	conj	_	_
23	over	_	IN	IN	_	25	amod	_	_
24	6	_	CD	CD	_	25	num	_	_
25	weeks	_	NNS	NNS	_	22	pobj	_	_
26	.	_	.	.	_	3	punct	_	_

Oracle:
(a / appear-02, ARG1, s / suggest-01)
(a / appear-02, time, d / date-entity)
(c / country, name, n2 / name)
(c2 / centrifuge, quant, n3 / number)
(d / date-entity, day, 26)
(d / date-entity, month, 7)
(d / date-entity, year, 2008)
(e2 / expect-01, time, p3 / previous)
(h / halt-01, ARG0, c / country)
(h / halt-01, ARG1, e / expand-01)
(h / halt-01, duration, o / over)
(h / halt-01, prep-at, n3 / number)
(n / name, op, "Ahmadinejad")
(n2 / name, op, "Iran")
(n3 / number, mod, h2 / high)
(o / over, op, t / temporal-quantity)
(p / person, name, n / name)
(s / suggest-01, ARG0, p / person)
(t / temporal-quantity, quant, 6 / 6)
(t / temporal-quantity, unit, w / week)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),suggest,suggest-01,false), Span(14,15,List(1),number,number,false), Span(16,17,List(2),centrifuges,centrifuge,false), Span(24,25,List(3),weeks.,week,false), Span(21,22,List(4),for,person,false), Span(20,21,List(5),and,and,false), Span(22,23,List(6),over,over,false), Span(0,1,List(7),20080726,1,false), Span(10,11,List(8),expansion,expand-01,false), Span(6,7,List(11, 10, 9),Iran,(country :name (name :op "Iran")),false), Span(2,3,List(12),appeared,appear-02,false), Span(19,20,List(13),expected,expect-01,false), Span(23,24,List(14),6,6,false), Span(13,14,List(16, 15),higher,(high :degree more),false), Span(8,9,List(17),potentially,potential,false), Span(9,10,List(18),halt,halt-01,false), Span(0,19,List(20, 19),20080726 ahmadinejad appeared to suggest that Iran might potentially halt expansion at a higher number of centrifuges that previously,(date-entity :time previously),false)),Map(2 -> centrifuge, 5 -> and, 12 -> appear-02, 15 -> high, 8 -> expand-01, 18 -> halt-01, 7 -> 1, 17 -> potential, 1 -> number, 4 -> person, 11 -> "Iran", 14 -> 6, 20 -> previously, 6 -> over, 0 -> suggest-01, 9 -> country, 16 -> more, 19 -> date-entity, 3 -> week, 10 -> name, 13 -> expect-01),Map(e -> expand-01, n -> number, w -> week, h -> high, h2 -> halt-01, p2 -> potential, e2 -> expect-01, s -> suggest-01, d -> date-entity, m -> more, 1 -> 1, p -> person, a -> and, a2 -> appear-02, 6 -> 6, c -> centrifuge, o -> over, p3 -> previously, c2 -> country, n2 -> name))),[Ljava.lang.String;@1a2edf73,Annotation([Ljava.lang.String;@63af9628,[Ljava.lang.String;@ea0348b,[Ljava.lang.String;@249c9646),Annotation([Ljava.lang.String;@482510e1,[Ljava.lang.String;@57a4c11b,[Ledu.cmu.lti.nlp.amr.Dependency;@582fa308),Annotation([Ljava.lang.String;@184130ed,[Ljava.lang.String;@7803991c,[Ljava.lang.String;@9de231e),Annotation([Ljava.lang.String;@2c4cf6ce,[Ljava.lang.String;@3d1b7df2,[Ledu.cmu.lti.nlp.amr.Entity;@59b4c834))
AMR:
(a / and, op, e2 / expect-01)
(a / and, op, p / person)
(a2 / appear-02, ARG1, s / suggest-01)
(c2 / country, name, n2 / name)
(d / date-entity, time, p3 / previously)
(e / expand-01, ARG0, 1 / 1)
(e2 / expect-01, ARG0, c / centrifuge)
(e2 / expect-01, ARG1, d / date-entity)
(h / high, degree, m / more)
(h2 / halt-01, ARG0, c2 / country)
(h2 / halt-01, ARG1, e / expand-01)
(h2 / halt-01, ARG6, a / and)
(h2 / halt-01, manner, p2 / potential)
(n / number, mod, h / high)
(n2 / name, op, "Iran")
(o / over, calendar, p / person)
(p / person, op, n / number)
(s / suggest-01, ARG1, c2 / country)
(w / week, quant, 6 / 6)
(w / week, quant, o / over)

Decoded in 1,744,173 microseconds
Sentence: Ahmadinejad stated that the West had consented to the existing 5000-6000 centrifuges in operation provided that the number did not increase.

Oracle Span 1:  5000-6000 => 5000
Oracle Span 2:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 3:  centrifuges => centrifuge
Oracle Span 4:  consented => consent-01
Oracle Span 5:  existing => exist-01
Oracle Span 6:  increase => increase-01
Oracle Span 7:  number => number
Oracle Span 8:  operation => operate-01
Oracle Span 9:  stated => state-01
Oracle Span 10:  West => (world-region :name (name :op "West"))
NER Entity: (person :name (name :op "Ahmadinejad"))
NER Entity: (country :name (name :op "West"))
mkDayMonthYear(5000-6000,00,60,5000)
Spans:
Span 0-1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Span 11-12:  centrifuges => centrifuge
Span 6-7:  consented => consent-01
Span 9-10:  existing => exist-01
Span 20-21:  increase. => increase-01
Span 17-18:  number => number
Span 13-14:  operation => operation
Span 14-15:  provided => provide-01
Span 1-2:  stated => state-01
Span 4-5:  West => (world-region :name (name :op "West"))

Langrangian relaxation converged after 85 iterations. Delta = 0.0
Oracle Span 10-11:  5000-6000 => 5000
Oracle Span 0-1:  Ahmadinejad => (person :name (name :op "Ahmadinejad"))
Oracle Span 11-12:  centrifuges => centrifuge
Oracle Span 6-7:  consented => consent-01
Oracle Span 9-10:  existing => exist-01
Oracle Span 20-21:  increase => increase-01
Oracle Span 17-18:  number => number
Oracle Span 13-14:  operation => operate-01
Oracle Span 1-2:  stated => state-01
Oracle Span 4-5:  West => (world-region :name (name :op "West"))

Dependencies:
1	Ahmadinejad	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	7	mark	_	_
4	the	_	DT	DT	_	5	det	_	_
5	West	_	NNP	NNP	_	7	nsubj	_	_
6	had	_	VBD	VBD	_	7	aux	_	_
7	consented	_	VBN	VBN	_	2	ccomp	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	the	_	DT	DT	_	12	det	_	_
10	existing	_	JJ	JJ	_	12	amod	_	_
11	5000-6000	_	CD	CD	_	12	num	_	_
12	centrifuges	_	NNS	NNS	_	8	pobj	_	_
13	in	_	IN	IN	_	7	prep	_	_
14	operation	_	NN	NN	_	13	pobj	_	_
15	provided	_	VBN	VBN	_	14	vmod	_	_
16	that	_	IN	IN	_	21	mark	_	_
17	the	_	DT	DT	_	18	det	_	_
18	number	_	NN	NN	_	21	nsubj	_	_
19	did	_	VBD	VBD	_	21	aux	_	_
20	not	_	RB	RB	_	21	neg	_	_
21	increase	_	VB	VB	_	15	ccomp	_	_
22	.	_	.	.	_	2	punct	_	_

Oracle:
(c / consent-01, ARG0, w / world-region)
(c / consent-01, ARG1, c3 / centrifuge)
(c / consent-01, condition, i / increase-01)
(c3 / centrifuge, quant, n3 / number)
(e / exist-01, ARG1, c3 / centrifuge)
(i / increase-01, ARG0, n3 / number)
(n / name, op, "Ahmadinejad")
(n2 / name, op, "West")
(o / operate-01, ARG1, c3 / centrifuge)
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c / consent-01)
(w / world-region, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(14,15,List(1),provided,provide-01,false), Span(17,18,List(2),number,number,false), Span(6,7,List(3),consented,consent-01,false), Span(4,5,List(6, 5, 4),West,(world-region :name (name :op "West")),false), Span(11,12,List(7),centrifuges,centrifuge,false), Span(0,1,List(10, 9, 8),Ahmadinejad,(person :name (name :op "Ahmadinejad")),false), Span(9,10,List(11),existing,exist-01,false), Span(13,14,List(12),operation,operation,false), Span(20,21,List(13),increase.,increase-01,false)),Map(2 -> number, 5 -> name, 12 -> operation, 8 -> person, 7 -> centrifuge, 1 -> provide-01, 4 -> world-region, 11 -> exist-01, 6 -> "West", 0 -> state-01, 9 -> name, 3 -> consent-01, 10 -> "Ahmadinejad", 13 -> increase-01),Map(e -> exist-01, w -> world-region, n -> number, p2 -> person, s -> state-01, p -> provide-01, n3 -> name, i -> increase-01, c -> consent-01, o -> operation, c2 -> centrifuge, n2 -> name))),[Ljava.lang.String;@4c25cbad,Annotation([Ljava.lang.String;@694a7001,[Ljava.lang.String;@4b054f16,[Ljava.lang.String;@57687fda),Annotation([Ljava.lang.String;@35f2ae39,[Ljava.lang.String;@f020afe,[Ledu.cmu.lti.nlp.amr.Dependency;@6e9e99f7),Annotation([Ljava.lang.String;@7a1cad51,[Ljava.lang.String;@5abf474d,[Ljava.lang.String;@4575e31e),Annotation([Ljava.lang.String;@5fbe8b66,[Ljava.lang.String;@4057d3e5,[Ledu.cmu.lti.nlp.amr.Entity;@6072618d))
AMR:
(c / consent-01, ARG0, w / world-region)
(c / consent-01, ARG1, c2 / centrifuge)
(e / exist-01, ARG1, c2 / centrifuge)
(i / increase-01, ARG1, n / number)
(n2 / name, op, "West")
(n3 / name, op, "Ahmadinejad")
(p / provide-01, ARG0, n / number)
(p / provide-01, ARG1, o / operation)
(p / provide-01, ARG2, c2 / centrifuge)
(p2 / person, name, n3 / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, c / consent-01)
(w / world-region, name, n2 / name)

Decoded in 1,318,537 microseconds
Sentence: 5000 centrifuges can produce sufficient nuclear material for a power plant or an atomic bomb if the material is highly enriched.

Oracle Span 1:  5000 => 5000
Oracle Span 2:  atomic => atom
Oracle Span 3:  bomb => bomb
Oracle Span 4:  can => possible
Oracle Span 5:  centrifuges => centrifuge
Oracle Span 6:  enriched => enrich-01
Oracle Span 7:  highly => high
Oracle Span 8:  material => material
Oracle Span 9:  nuclear => nucleus
Oracle Span 10:  or => or
Oracle Span 11:  plant => plant
Oracle Span 12:  power => power
Oracle Span 13:  produce => produce-01
Oracle Span 14:  sufficient => suffice-01
Spans:
Span 0-1:  5000 => 1
Span 13-14:  atomic => atom
Span 14-15:  bomb => bomb
Span 2-3:  can => possible
Span 1-2:  centrifuges => centrifuge
Span 20-21:  enriched. => enrich-01
Span 19-20:  highly => high
Span 6-7:  material => material
Span 17-18:  material => material
Span 5-6:  nuclear => nucleus
Span 11-12:  or => or
Span 10-11:  plant => plant
Span 9-10:  power => power
Span 3-4:  produce => produce-01
Span 4-5:  sufficient => suffice-01

Langrangian relaxation converged after 46 iterations. Delta = 0.0
Oracle Span 0-1:  5000 => 5000
Oracle Span 13-14:  atomic => atom
Oracle Span 14-15:  bomb => bomb
Oracle Span 2-3:  can => possible
Oracle Span 1-2:  centrifuges => centrifuge
Oracle Span 20-21:  enriched => enrich-01
Oracle Span 19-20:  highly => high
Oracle Span 6-7:  material => material
Oracle Span 5-6:  nuclear => nucleus
Oracle Span 11-12:  or => or
Oracle Span 10-11:  plant => plant
Oracle Span 9-10:  power => power
Oracle Span 3-4:  produce => produce-01
Oracle Span 4-5:  sufficient => suffice-01

Dependencies:
1	5000	_	JJ	JJ	_	2	amod	_	_
2	centrifuges	_	NNS	NNS	_	4	nsubj	_	_
3	can	_	MD	MD	_	4	aux	_	_
4	produce	_	VB	VB	_	0	root	_	_
5	sufficient	_	JJ	JJ	_	7	amod	_	_
6	nuclear	_	JJ	JJ	_	7	amod	_	_
7	material	_	NN	NN	_	4	dobj	_	_
8	for	_	IN	IN	_	4	prep	_	_
9	a	_	DT	DT	_	11	det	_	_
10	power	_	NN	NN	_	11	nn	_	_
11	plant	_	NN	NN	_	8	pobj	_	_
12	or	_	CC	CC	_	11	cc	_	_
13	an	_	DT	DT	_	15	det	_	_
14	atomic	_	JJ	JJ	_	15	amod	_	_
15	bomb	_	NN	NN	_	11	conj	_	_
16	if	_	IN	IN	_	21	mark	_	_
17	the	_	DT	DT	_	18	det	_	_
18	material	_	NN	NN	_	21	nsubj	_	_
19	is	_	VBZ	VBZ	_	21	cop	_	_
20	highly	_	RB	RB	_	21	advmod	_	_
21	enriched	_	JJ	JJ	_	4	advcl	_	_
22	.	_	.	.	_	4	punct	_	_

Oracle:
(b / bomb, mod, a / atom)
(c / centrifuge, quant, 5 / 5000)
(e / enrich-01, ARG1, m / material)
(e / enrich-01, degree, h / high)
(m / material, mod, n / nucleus)
(o / or, op, b / bomb)
(o / or, op, p3 / plant)
(p / possible, condition, e / enrich-01)
(p / possible, domain, p2 / produce-01)
(p2 / produce-01, ARG0, c / centrifuge)
(p2 / produce-01, ARG1, m / material)
(p3 / plant, mod, p4 / power)
(s / suffice-01, ARG0, m / material)
(s / suffice-01, ARG1, o / or)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),nuclear,nucleus,false), Span(10,11,List(1),plant,plant,false), Span(1,2,List(2),centrifuges,centrifuge,false), Span(14,15,List(3),bomb,bomb,false), Span(6,7,List(4),material,material,false), Span(0,1,List(5),5000,1,false), Span(3,4,List(6),produce,produce-01,false), Span(13,14,List(7),atomic,atom,false), Span(4,5,List(8),sufficient,suffice-01,false), Span(17,18,List(9),material,material,false), Span(2,3,List(10),can,possible,false), Span(11,12,List(11),or,or,false), Span(20,21,List(12),enriched.,enrich-01,false), Span(19,20,List(13),highly,high,false), Span(9,10,List(14),power,power,false)),Map(2 -> centrifuge, 5 -> 1, 12 -> enrich-01, 8 -> suffice-01, 7 -> atom, 1 -> plant, 4 -> material, 11 -> or, 14 -> power, 6 -> produce-01, 0 -> nucleus, 9 -> material, 3 -> bomb, 10 -> possible, 13 -> high),Map(e -> enrich-01, n -> nucleus, h -> high, b -> bomb, m2 -> material, p2 -> produce-01, s -> suffice-01, m -> material, 1 -> 1, p -> plant, a -> atom, p4 -> power, c -> centrifuge, o -> or, p3 -> possible))),[Ljava.lang.String;@1cbc1631,Annotation([Ljava.lang.String;@173b21cc,[Ljava.lang.String;@a33ae85,[Ljava.lang.String;@3cb0a6fd),Annotation([Ljava.lang.String;@404122c4,[Ljava.lang.String;@eba5e41,[Ledu.cmu.lti.nlp.amr.Dependency;@196a8e95),Annotation([Ljava.lang.String;@20d4440b,[Ljava.lang.String;@69ca15d7,[Ljava.lang.String;@35de06f9),Annotation([Ljava.lang.String;@788d38f1,[Ljava.lang.String;@7afbdff7,[Ledu.cmu.lti.nlp.amr.Entity;@43a609d2))
AMR:
(b / bomb, mod, a / atom)
(c / centrifuge, mod, 1 / 1)
(e / enrich-01, ARG1, m2 / material)
(e / enrich-01, ARG2, p2 / produce-01)
(e / enrich-01, extent, h / high)
(m / material, mod, n / nucleus)
(o / or, op, b / bomb)
(o / or, op, p / plant)
(p / plant, mod, p4 / power)
(p2 / produce-01, ARG0, c / centrifuge)
(p2 / produce-01, ARG1, m / material)
(p2 / produce-01, location, p / plant)
(p3 / possible, domain, p2 / produce-01)
(s / suffice-01, ARG1, m / material)

Decoded in 1,039,634 microseconds
Sentence: 6000 centrifuges running continuously can produce sufficient weapons-grade uranium for 1 bomb in 6 months.

Oracle Span 1:  1 => 1
Oracle Span 2:  6 => 6
Oracle Span 3:  6000 => 6000
Oracle Span 4:  bomb => bomb
Oracle Span 5:  can => possible
Oracle Span 6:  centrifuges => centrifuge
Oracle Span 7:  continuously => continue-01
Oracle Span 8:  months => (temporal-quantity :unit month)
Oracle Span 9:  produce => produce-01
Oracle Span 10:  running => run-01
Oracle Span 11:  sufficient => suffice-01
Oracle Span 12:  uranium => uranium
Oracle Span 13:  weapons => weapons-grade
Spans:
Span 13-14:  6 => 6
Span 0-1:  6000 => 1
Span 11-12:  bomb => bomb
Span 4-5:  can => possible
Span 1-2:  centrifuges => centrifuge
Span 14-15:  months. => month
Span 5-6:  produce => produce-01
Span 2-3:  running => run-01
Span 6-7:  sufficient => suffice-01
Span 8-9:  uranium => uranium
Span 7-8:  weapons-grade => weapons-grade

Langrangian relaxation converged after 23 iterations. Delta = 0.0
Oracle Span 12-13:  1 => 1
Oracle Span 15-16:  6 => 6
Oracle Span 0-1:  6000 => 6000
Oracle Span 13-14:  bomb => bomb
Oracle Span 4-5:  can => possible
Oracle Span 1-2:  centrifuges => centrifuge
Oracle Span 3-4:  continuously => continue-01
Oracle Span 16-17:  months => (temporal-quantity :unit month)
Oracle Span 5-6:  produce => produce-01
Oracle Span 2-3:  running => run-01
Oracle Span 6-7:  sufficient => suffice-01
Oracle Span 10-11:  uranium => uranium
Oracle Span 7-8:  weapons => weapons-grade

Dependencies:
1	6000	_	CD	CD	_	2	num	_	_
2	centrifuges	_	NNS	NNS	_	6	nsubj	_	_
3	running	_	VBG	VBG	_	2	vmod	_	_
4	continuously	_	RB	RB	_	3	advmod	_	_
5	can	_	MD	MD	_	6	aux	_	_
6	produce	_	VB	VB	_	0	root	_	_
7	sufficient	_	JJ	JJ	_	9	amod	_	_
8	weapons-grade	_	JJ	JJ	_	9	amod	_	_
9	uranium	_	NN	NN	_	6	dobj	_	_
10	for	_	IN	IN	_	6	prep	_	_
11	1	_	CD	CD	_	12	num	_	_
12	bomb	_	NN	NN	_	10	pobj	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	6	_	CD	CD	_	15	num	_	_
15	months	_	NNS	NNS	_	13	pobj	_	_
16	.	_	.	.	_	6	punct	_	_

Oracle:
(b / bomb, duration, t / temporal-quantity)
(b / bomb, quant, 1 / 1)
(c / centrifuge, quant, 62 / 6000)
(c2 / continue-01, ARG1, r / run-01)
(p / possible, domain, p2 / produce-01)
(p2 / produce-01, ARG0, c / centrifuge)
(p2 / produce-01, ARG1, u / uranium)
(r / run-01, ARG0, c / centrifuge)
(s / suffice-01, ARG0, u / uranium)
(s / suffice-01, ARG1, b / bomb)
(t / temporal-quantity, quant, 6 / 6)
(t / temporal-quantity, unit, m / month)
(u / uranium, mod, w2 / weapons-grade)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),6000,1,false), Span(6,7,List(1),sufficient,suffice-01,false), Span(13,14,List(2),6,6,false), Span(14,15,List(3),months.,month,false), Span(2,3,List(4),running,run-01,false), Span(5,6,List(5),produce,produce-01,false), Span(11,12,List(6),bomb,bomb,false), Span(8,9,List(7),uranium,uranium,false), Span(7,8,List(8),weapons-grade,weapons-grade,false), Span(4,5,List(9),can,possible,false), Span(1,2,List(10),centrifuges,centrifuge,false)),Map(2 -> 6, 5 -> produce-01, 8 -> weapons-grade, 7 -> uranium, 1 -> suffice-01, 4 -> run-01, 6 -> bomb, 9 -> possible, 0 -> 1, 10 -> centrifuge, 3 -> month),Map(w -> weapons-grade, b -> bomb, p2 -> possible, s -> suffice-01, m -> month, p -> produce-01, 1 -> 1, r -> run-01, c -> centrifuge, u -> uranium, 6 -> 6))),[Ljava.lang.String;@4cde4b23,Annotation([Ljava.lang.String;@20227fd5,[Ljava.lang.String;@617001fa,[Ljava.lang.String;@bcd629c),Annotation([Ljava.lang.String;@3574b795,[Ljava.lang.String;@69bba39,[Ledu.cmu.lti.nlp.amr.Dependency;@670514c1),Annotation([Ljava.lang.String;@7bc533f,[Ljava.lang.String;@17e49442,[Ljava.lang.String;@4c75aef5),Annotation([Ljava.lang.String;@31908a6,[Ljava.lang.String;@66598651,[Ledu.cmu.lti.nlp.amr.Entity;@552c485c))
AMR:
(p / produce-01, ARG0, c / centrifuge)
(p / produce-01, ARG1, u / uranium)
(p / produce-01, ARG2, 6 / 6)
(p / produce-01, time, b / bomb)
(p2 / possible, domain, p / produce-01)
(r / run-01, ARG1, c / centrifuge)
(r / run-01, ARG6, 1 / 1)
(s / suffice-01, ARG0, p / produce-01)
(s / suffice-01, ARG1, m / month)
(u / uranium, mod, w / weapons-grade)

Decoded in 415,905 microseconds
Sentence: 20080500 the International Atomic Energy Agency stated that Iran possessed 3500 centrifuges in operations.

Oracle Span 1:  20080500 => 2008
Oracle Span 2:  3500 => 3500
Oracle Span 3:  centrifuges => centrifuge
Oracle Span 4:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 5:  Iran => (country :name (name :op "Iran"))
Oracle Span 6:  operations => operate-01
Oracle Span 7:  possessed => possess-01
Oracle Span 8:  stated => state-01
NER Entity: (organization :name (name :op "International" :op "Atomic" :op "Energy" :op "Agency"))
NER Entity: (country :name (name :op "Iran"))
mkDayMonthYear(20080500,00,05,2008)
Spans:
Span 0-1:  20080500 => 1
Span 3-6:  Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic"))
Span 11-12:  centrifuges => centrifuge
Span 8-9:  Iran => (country :name (name :op "Iran"))
Span 13-14:  operations. => operation
Span 9-10:  possessed => possess-01
Span 6-7:  stated => state-01

Langrangian relaxation converged after 24 iterations. Delta = 0.0
Oracle Span 0-1:  20080500 => 2008
Oracle Span 10-11:  3500 => 3500
Oracle Span 11-12:  centrifuges => centrifuge
Oracle Span 2-6:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 8-9:  Iran => (country :name (name :op "Iran"))
Oracle Span 13-14:  operations => operate-01
Oracle Span 9-10:  possessed => possess-01
Oracle Span 6-7:  stated => state-01

Dependencies:
1	20080500	_	CD	CD	_	7	nsubj	_	_
2	the	_	DT	DT	_	6	det	_	_
3	International	_	NNP	NNP	_	6	nn	_	_
4	Atomic	_	NNP	NNP	_	6	nn	_	_
5	Energy	_	NNP	NNP	_	6	nn	_	_
6	Agency	_	NNP	NNP	_	1	dep	_	_
7	stated	_	VBD	VBD	_	0	root	_	_
8	that	_	IN	IN	_	10	mark	_	_
9	Iran	_	NNP	NNP	_	10	nsubj	_	_
10	possessed	_	VBD	VBD	_	7	ccomp	_	_
11	3500	_	CD	CD	_	12	num	_	_
12	centrifuges	_	NNS	NNS	_	10	dobj	_	_
13	in	_	IN	IN	_	10	prep	_	_
14	operations	_	NNS	NNS	_	13	pobj	_	_
15	.	_	.	.	_	7	punct	_	_

Oracle:
(c / country, name, n2 / name)
(c2 / centrifuge, quant, 3 / 3500)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n2 / name, op, "Iran")
(o / organization, name, n / name)
(o2 / operate-01, ARG1, c2 / centrifuge)
(p / possess-01, ARG0, c / country)
(p / possess-01, ARG1, c2 / centrifuge)
(s / state-01, ARG0, o / organization)
(s / state-01, ARG1, p / possess-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,6,List(4, 3, 2, 1, 0),Atomic Energy Agency,(organization :name (name :op "Agency" :op "Energy" :op "Atomic")),false), Span(0,1,List(5),20080500,1,false), Span(9,10,List(6),possessed,possess-01,false), Span(6,7,List(7),stated,state-01,false), Span(8,9,List(10, 9, 8),Iran,(country :name (name :op "Iran")),false), Span(11,12,List(11),centrifuges,centrifuge,false), Span(13,14,List(12),operations.,operation,false)),Map(2 -> "Agency", 5 -> 1, 12 -> operation, 8 -> country, 7 -> state-01, 1 -> name, 4 -> "Atomic", 11 -> centrifuge, 6 -> possess-01, 0 -> organization, 9 -> name, 3 -> "Energy", 10 -> "Iran"),Map(n -> name, s -> state-01, p -> possess-01, 1 -> 1, o2 -> operation, c -> country, o -> organization, c2 -> centrifuge, n2 -> name))),[Ljava.lang.String;@5ae3e247,Annotation([Ljava.lang.String;@2594ceb0,[Ljava.lang.String;@3362bb5f,[Ljava.lang.String;@14d1daab),Annotation([Ljava.lang.String;@5165f3ac,[Ljava.lang.String;@5207567e,[Ledu.cmu.lti.nlp.amr.Dependency;@7419b722),Annotation([Ljava.lang.String;@6e873f88,[Ljava.lang.String;@10014967,[Ljava.lang.String;@785d49bf),Annotation([Ljava.lang.String;@41444131,[Ljava.lang.String;@16e85dee,[Ledu.cmu.lti.nlp.amr.Entity;@c386425))
AMR:
(c / country, name, n2 / name)
(c2 / centrifuge, location, o2 / operation)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n2 / name, op, "Iran")
(o / organization, name, n / name)
(p / possess-01, ARG0, c / country)
(p / possess-01, ARG1, c2 / centrifuge)
(p / possess-01, ARG6, 1 / 1)
(s / state-01, ARG0, o / organization)
(s / state-01, ARG1, p / possess-01)

Decoded in 422,185 microseconds
Sentence: 2008-11-14

Oracle Span 1:  2008-11-14 => (date-entity :day 14 :month 11 :year 2008)
mkDayMonthYear(2008-11-14,14,11,2008)
Spans:
Span 0-1:  2008-11-14 => (date-entity :year 2008 :month 11 :day 14)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2008-11-14 => (date-entity :day 14 :month 11 :year 2008)

Dependencies:
1	2008-11-14	_	NNP	NNP	_	0	root	_	_

Oracle:
(d / date-entity, day, 14)
(d / date-entity, month, 11)
(d / date-entity, year, 2008)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2008-11-14,(date-entity :year 2008 :month 11 :day 14),false)),Map(2 -> 11, 1 -> 2008, 0 -> date-entity, 3 -> 14),Map(2 -> 2008, 12 -> 14, d -> date-entity, 1 -> 11))),[Ljava.lang.String;@7b3e817f,Annotation([Ljava.lang.String;@2f15ef1b,[Ljava.lang.String;@3d38b0ff,[Ljava.lang.String;@5c0e457c),Annotation([Ljava.lang.String;@533412fb,[Ljava.lang.String;@535952b1,[Ledu.cmu.lti.nlp.amr.Dependency;@2b1ebf6d),Annotation([Ljava.lang.String;@5953ad7,[Ljava.lang.String;@76454354,[Ljava.lang.String;@6f904bf7),Annotation([Ljava.lang.String;@31ab64bf,[Ljava.lang.String;@1dc4a3df,[Ledu.cmu.lti.nlp.amr.Entity;@41471cd0))
AMR:
(d / date-entity, day, 12 / 14)
(d / date-entity, month, 1 / 11)
(d / date-entity, year, 2 / 2008)

Decoded in 24,461 microseconds
Sentence: Iran (IR); Russian Federation (RU); China (CN); France (FR); United States (US)

Oracle Span 1:  ; => and
Oracle Span 2:  China => (country :name (name :op "China"))
Oracle Span 3:  France => (country :name (name :op "France"))
Oracle Span 4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5:  Russian Federation => (country :name (name :op "Federation" :op "Russian"))
Oracle Span 6:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Russian" :op "Federation"))
NER Entity: (country :name (name :op "China"))
NER Entity: (country :name (name :op "France"))
NER Entity: (country :name (name :op "United" :op "States"))
Spans:
Span 16-17:   => (country :name (name :op "France"))
Span 21-23:   => (country :name (name :op "United" :op "States"))
Span 11-12:  (US) => (country :name (name :op "China"))
Span 5-7:  China (CN); => (country :name (name :op "Federation" :op "Russian"))
Span 0-1:  Iran => (country :name (name :op "Iran"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  ; => and
Oracle Span 11-12:  China => (country :name (name :op "China"))
Oracle Span 16-17:  France => (country :name (name :op "France"))
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 5-7:  Russian Federation => (country :name (name :op "Federation" :op "Russian"))
Oracle Span 21-23:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	Iran	_	NNP	NNP	_	3	nn	_	_
2	(	_	(	(	_	3	punct	_	_
3	IR	_	NN	NN	_	0	root	_	_
4	)	_	)	)	_	3	punct	_	_
5	;	_	:	:	_	3	punct	_	_
6	Russian	_	NNP	NNP	_	7	nn	_	_
7	Federation	_	NNP	NNP	_	3	dep	_	_
8	(	_	(	(	_	9	punct	_	_
9	RU	_	NNP	NNP	_	7	appos	_	_
10	)	_	)	)	_	9	punct	_	_
11	;	_	:	:	_	7	punct	_	_
12	China	_	NNP	NNP	_	7	dep	_	_
13	(	_	(	(	_	14	punct	_	_
14	CN	_	NNP	NNP	_	12	appos	_	_
15	)	_	)	)	_	14	punct	_	_
16	;	_	:	:	_	7	punct	_	_
17	France	_	NNP	NNP	_	7	dep	_	_
18	(	_	(	(	_	19	punct	_	_
19	FR	_	NNP	NNP	_	17	appos	_	_
20	)	_	)	)	_	19	punct	_	_
21	;	_	:	:	_	7	punct	_	_
22	United	_	NNP	NNP	_	23	nn	_	_
23	States	_	NNPS	NNPS	_	7	dep	_	_
24	(	_	(	(	_	25	punct	_	_
25	US	_	NNP	NNP	_	23	appos	_	_
26	)	_	)	)	_	25	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, c2 / country)
(a / and, op, c3 / country)
(a / and, op, c4 / country)
(a / and, op, c5 / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / country, name, n5 / name)
(n / name, op, "Iran")
(n2 / name, op, "Federation")
(n2 / name, op, "Russian")
(n3 / name, op, "China")
(n4 / name, op, "France")
(n5 / name, op, "States")
(n5 / name, op, "United")

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(2, 1, 0),(US),(country :name (name :op "China")),false), Span(16,17,List(5, 4, 3),,(country :name (name :op "France")),false), Span(5,7,List(9, 8, 7, 6),China (CN);,(country :name (name :op "Federation" :op "Russian")),false), Span(21,23,List(13, 12, 11, 10),,(country :name (name :op "United" :op "States")),false), Span(0,1,List(16, 15, 14),Iran,(country :name (name :op "Iran")),false)),Map(2 -> "China", 5 -> "France", 12 -> "United", 15 -> name, 8 -> "Federation", 7 -> name, 1 -> name, 4 -> name, 11 -> name, 14 -> country, 6 -> country, 0 -> country, 9 -> "Russian", 16 -> "Iran", 3 -> country, 10 -> country, 13 -> "States"),Map(n -> name, n4 -> name, c4 -> country, n3 -> name, c3 -> country, c -> country, n2 -> name, c2 -> country, n5 -> name, c5 -> country))),[Ljava.lang.String;@6d68c515,Annotation([Ljava.lang.String;@42634f84,[Ljava.lang.String;@10861f99,[Ljava.lang.String;@d31f25),Annotation([Ljava.lang.String;@2b383247,[Ljava.lang.String;@737f57cb,[Ledu.cmu.lti.nlp.amr.Dependency;@5325e4ea),Annotation([Ljava.lang.String;@4b97e39c,[Ljava.lang.String;@21574aa3,[Ljava.lang.String;@289f804d),Annotation([Ljava.lang.String;@54613300,[Ljava.lang.String;@201ea113,[Ledu.cmu.lti.nlp.amr.Entity;@3b87f5e1))
AMR:
(c / country, name, n / name)
(c2 / country, calendar, c3 / country)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / country, domain, c / country)
(c5 / country, domain, c2 / country)
(c5 / country, example, c4 / country)
(c5 / country, name, n5 / name)
(n / name, op, "China")
(n2 / name, op, "France")
(n3 / name, op, "Federation")
(n3 / name, op, "Russian")
(n4 / name, op, "States")
(n4 / name, op, "United")
(n5 / name, op, "Iran")

Decoded in 313,449 microseconds
Sentence: International; weapons; proliferation; Government; politics; energy

Oracle Span 1:  ; => and
Oracle Span 2:  energy => energy
Oracle Span 3:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 4:  International => international
Oracle Span 5:  politics => politics
Oracle Span 6:  proliferation => proliferate-01
Oracle Span 7:  weapons => weapon
Spans:
Span 8-9:   => politics
Span 10-11:   => energy
Span 6-7:   => (government-organization :ARG0-of govern-01)
Span 0-1:  International; => international
Span 4-5:  politics; => proliferate-01
Span 2-3:  proliferation; => weapon
Span 1-2:  weapons; => and

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 10-11:  energy => energy
Oracle Span 6-7:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 0-1:  International => international
Oracle Span 8-9:  politics => politics
Oracle Span 4-5:  proliferation => proliferate-01
Oracle Span 2-3:  weapons => weapon

Dependencies:
1	International	_	NNP	NNP	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	weapons	_	NNS	NNS	_	1	dep	_	_
4	;	_	:	:	_	3	punct	_	_
5	proliferation	_	NN	NN	_	3	dep	_	_
6	;	_	:	:	_	5	punct	_	_
7	Government	_	NNP	NNP	_	5	dep	_	_
8	;	_	:	:	_	3	punct	_	_
9	politics	_	NNS	NNS	_	3	dep	_	_
10	;	_	:	:	_	1	punct	_	_
11	energy	_	VBN	VBN	_	1	dep	_	_

Oracle:
(a / and, op, e / energy)
(a / and, op, g / government-organization)
(a / and, op, i / international)
(a / and, op, p / proliferate-01)
(a / and, op, p2 / politics)
(a / and, op, w / weapon)
(g2 / govern-01, ARG0, g / government-organization)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),,politics,false), Span(10,11,List(1),,energy,false), Span(6,7,List(3, 2),,(government-organization :ARG0-of govern-01),false), Span(2,3,List(4),proliferation;,weapon,false), Span(0,1,List(5),International;,international,false), Span(4,5,List(6),politics;,proliferate-01,false), Span(1,2,List(7),weapons;,and,false)),Map(2 -> government-organization, 5 -> international, 7 -> and, 1 -> energy, 4 -> weapon, 6 -> proliferate-01, 0 -> politics, 3 -> govern-01),Map(w -> weapon, e -> energy, p2 -> proliferate-01, g2 -> govern-01, g -> government-organization, p -> politics, a -> and, i -> international))),[Ljava.lang.String;@69972f2b,Annotation([Ljava.lang.String;@59ec7a21,[Ljava.lang.String;@66d951c3,[Ljava.lang.String;@5e6caa5f),Annotation([Ljava.lang.String;@e5238ce,[Ljava.lang.String;@34d56657,[Ledu.cmu.lti.nlp.amr.Dependency;@182e7e47),Annotation([Ljava.lang.String;@232b014f,[Ljava.lang.String;@3ca0c9ac,[Ljava.lang.String;@23d8e7b1),Annotation([Ljava.lang.String;@48ef79cb,[Ljava.lang.String;@333538e0,[Ledu.cmu.lti.nlp.amr.Entity;@9627a83))
AMR:
(a / and, op, e / energy)
(a / and, op, g / government-organization)
(a / and, op, i / international)
(a / and, op, p / politics)
(a / and, op, p2 / proliferate-01)
(a / and, op, w / weapon)
(g2 / govern-01, ARG0, g / government-organization)

Decoded in 123,119 microseconds
Sentence: A diplomatic meeting in Paris concludes with no agreement on further steps to pressure Iran to halt uranium enrichment at Iran's facility in Natanz.

Oracle Span 1:  agreement => agree-01
Oracle Span 2:  concludes => conclude-02
Oracle Span 3:  diplomatic => diplomacy
Oracle Span 4:  enrichment => enrich-01
Oracle Span 5:  facility => facility
Oracle Span 6:  further => further
Oracle Span 7:  halt => halt-01
Oracle Span 8:  Iran => (country :name (name :op "Iran"))
Oracle Span 9:  meeting => meet-03
Oracle Span 10:  Natanz => (city :name (name :op "Natanz"))
Oracle Span 11:  no => -
Oracle Span 12:  Paris => (city :name (name :op "Paris"))
Oracle Span 13:  pressure => pressure-01
Oracle Span 14:  steps => step-01
Oracle Span 15:  uranium => uranium
NER Entity: (country :name (name :op "Paris"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Natanz"))
Spans:
Span 24-25:   => (city :name (name :op "Natanz"))
Span 8-9:  agreement => agree-01
Span 5-6:  concludes => conclude-01
Span 1-2:  diplomatic => diplomacy
Span 18-19:  enrichment => enrich-01
Span 10-11:  further => further
Span 16-17:  halt => halt-01
Span 22-23:  in => facility
Span 14-15:  Iran => (country :name (name :op "Iran"))
Span 2-3:  meeting => meet-01
Span 4-5:  Paris => (city :name (name :op "Paris"))
Span 13-14:  pressure => pressure-01
Span 11-12:  steps => step-01
Span 17-18:  uranium => uranium

Langrangian relaxation converged after 91 iterations. Delta = 0.0
Oracle Span 8-9:  agreement => agree-01
Oracle Span 5-6:  concludes => conclude-02
Oracle Span 1-2:  diplomatic => diplomacy
Oracle Span 18-19:  enrichment => enrich-01
Oracle Span 22-23:  facility => facility
Oracle Span 10-11:  further => further
Oracle Span 16-17:  halt => halt-01
Oracle Span 14-15:  Iran => (country :name (name :op "Iran"))
Oracle Span 2-3:  meeting => meet-03
Oracle Span 24-25:  Natanz => (city :name (name :op "Natanz"))
Oracle Span 7-8:  no => -
Oracle Span 4-5:  Paris => (city :name (name :op "Paris"))
Oracle Span 13-14:  pressure => pressure-01
Oracle Span 11-12:  steps => step-01
Oracle Span 17-18:  uranium => uranium

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	diplomatic	_	JJ	JJ	_	3	amod	_	_
3	meeting	_	NN	NN	_	6	nsubj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	Paris	_	NNP	NNP	_	4	pobj	_	_
6	concludes	_	VBZ	VBZ	_	0	root	_	_
7	with	_	IN	IN	_	6	prep	_	_
8	no	_	DT	DT	_	9	neg	_	_
9	agreement	_	NN	NN	_	7	pobj	_	_
10	on	_	IN	IN	_	9	prep	_	_
11	further	_	JJ	JJ	_	12	amod	_	_
12	steps	_	NNS	NNS	_	10	pobj	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	pressure	_	VB	VB	_	6	xcomp	_	_
15	Iran	_	NNP	NNP	_	14	dobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	halt	_	VB	VB	_	14	xcomp	_	_
18	uranium	_	NN	NN	_	19	nn	_	_
19	enrichment	_	NN	NN	_	17	dobj	_	_
20	at	_	IN	IN	_	17	prep	_	_
21	Iran	_	NNP	NNP	_	23	poss	_	_
22	's	_	POS	POS	_	21	possessive	_	_
23	facility	_	NN	NN	_	20	pobj	_	_
24	in	_	IN	IN	_	23	prep	_	_
25	Natanz	_	NNP	NNP	_	24	pobj	_	_
26	.	_	.	.	_	6	punct	_	_

Oracle:
(a / agree-01, ARG1, s / step-01)
(a / agree-01, polarity, - / -)
(c / conclude-02, ARG1, m / meet-03)
(c / conclude-02, ARG2, a / agree-01)
(c2 / country, name, n / name)
(c3 / city, name, n2 / name)
(c4 / city, name, n3 / name)
(e / enrich-01, ARG1, u / uranium)
(e / enrich-01, location, f2 / facility)
(f2 / facility, location, c3 / city)
(f2 / facility, mod, c2 / country)
(h / halt-01, ARG0, c2 / country)
(h / halt-01, ARG1, e / enrich-01)
(m / meet-03, location, c4 / city)
(m / meet-03, mod, d / diplomacy)
(n / name, op, "Iran")
(n2 / name, op, "Natanz")
(n3 / name, op, "Paris")
(p / pressure-01, ARG1, c2 / country)
(p / pressure-01, ARG2, h / halt-01)
(s / step-01, ARG2, p / pressure-01)
(s / step-01, degree, f / further)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(2, 1, 0),,(city :name (name :op "Natanz")),false), Span(13,14,List(3),pressure,pressure-01,false), Span(17,18,List(4),uranium,uranium,false), Span(4,5,List(7, 6, 5),Paris,(city :name (name :op "Paris")),false), Span(14,15,List(10, 9, 8),Iran,(country :name (name :op "Iran")),false), Span(5,6,List(11),concludes,conclude-01,false), Span(8,9,List(12),agreement,agree-01,false), Span(1,2,List(13),diplomatic,diplomacy,false), Span(18,19,List(14),enrichment,enrich-01,false), Span(16,17,List(15),halt,halt-01,false), Span(11,12,List(16),steps,step-01,false), Span(2,3,List(17),meeting,meet-01,false), Span(10,11,List(18),further,further,false), Span(22,23,List(19),in,facility,false)),Map(2 -> "Natanz", 5 -> city, 12 -> agree-01, 15 -> halt-01, 8 -> country, 18 -> further, 7 -> "Paris", 17 -> meet-01, 1 -> name, 4 -> uranium, 11 -> conclude-01, 14 -> enrich-01, 6 -> name, 0 -> city, 9 -> name, 16 -> step-01, 19 -> facility, 3 -> pressure-01, 10 -> "Iran", 13 -> diplomacy),Map(e -> enrich-01, n -> name, h -> halt-01, c4 -> conclude-01, s -> step-01, m -> meet-01, d -> diplomacy, p -> pressure-01, c3 -> country, n3 -> name, a -> agree-01, c -> city, f2 -> facility, u -> uranium, f -> further, c2 -> city, n2 -> name))),[Ljava.lang.String;@1ca9442,Annotation([Ljava.lang.String;@29af7136,[Ljava.lang.String;@46631465,[Ljava.lang.String;@7f82064e),Annotation([Ljava.lang.String;@2abff578,[Ljava.lang.String;@784b07d8,[Ledu.cmu.lti.nlp.amr.Dependency;@2655f488),Annotation([Ljava.lang.String;@490a267a,[Ljava.lang.String;@1c4b0e16,[Ljava.lang.String;@3c1ebf80),Annotation([Ljava.lang.String;@35e6fd3f,[Ljava.lang.String;@2dc7340f,[Ledu.cmu.lti.nlp.amr.Entity;@69b8b41f))
AMR:
(a / agree-01, ARG1, u / uranium)
(c / city, name, n / name)
(c2 / city, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / conclude-01, ARG0, m / meet-01)
(c4 / conclude-01, ARG1, a / agree-01)
(c4 / conclude-01, ARG2, p / pressure-01)
(e / enrich-01, ARG1, f2 / facility)
(f2 / facility, location, c / city)
(h / halt-01, ARG0, c3 / country)
(h / halt-01, ARG1, e / enrich-01)
(m / meet-01, ARG1, c2 / city)
(m / meet-01, mod, d / diplomacy)
(n / name, op, "Natanz")
(n2 / name, op, "Paris")
(n3 / name, op, "Iran")
(p / pressure-01, ARG1, c3 / country)
(s / step-01, ARG1, p / pressure-01)
(s / step-01, mod, f / further)

Decoded in 2,439,032 microseconds
Sentence: On 081114 diplomats stated to the media that American, European, Russian and Chinese officials at a meeting on 081113 in Paris did not reach agreement on further actions to persuade Iran to halt uranium enrichment at Iran's facility in Natanz.

Oracle Span 1:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 2:  081114 => (date-entity :day 14 :month 11 :year 2008)
Oracle Span 3:  agreement => agree-01
Oracle Span 4:  and => and
Oracle Span 5:  Chinese => (country :name (name :op "China"))
Oracle Span 6:  diplomats => (have-org-role-91 :ARG2 diplomat)
Oracle Span 7:  enrichment => enrich-01
Oracle Span 8:  European => (have-org-role-91 :ARG1 (continent :name (name :op "Europe")))
Oracle Span 9:  facility => facility
Oracle Span 10:  further => further
Oracle Span 11:  halt => halt-01
Oracle Span 12:  Iran => (country :name (name :op "Iran"))
Oracle Span 13:  media => media
Oracle Span 14:  meeting => meet-03
Oracle Span 15:  Natanz => (city :name (name :op "Natanz"))
Oracle Span 16:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 17:  Paris => (city :name (name :op "Paris"))
Oracle Span 18:  persuade => persuade-01
Oracle Span 19:  reach => reach-01
Oracle Span 20:  Russian => (have-org-role-91 :ARG1 (country :name (name :op "Russia")))
Oracle Span 21:  stated => state-01
Oracle Span 22:  uranium => uranium
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Natanz"))
NER Entity: (country :name (name :op "Paris"))
NER Entity: (thing :name (name :op "European"))
NER Entity: (thing :name (name :op "Russian"))
NER Entity: (thing :name (name :op "Chinese"))
mkDayMonthYear(081113,13,11,2008)
mkDayMonthYear(081113,13,11,08)
mkDayMonthYear(081114,14,11,2008)
mkDayMonthYear(081114,14,11,08)
Spans:
Span 40-41:   => facility
Span 42-43:   => (city :name (name :op "Natanz"))
Span 18-19:  081113 => meet-01
Span 15-16:  a => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 8-9:  American, => "States"
Span 14-15:  at => (country :name (name :op "China"))
Span 35-36:  at => uranium
Span 12-13:  Chinese => (country :name (name :op "Russia"))
Span 2-3:  diplomats => (person :ARG0-of (have-org-role-91 :ARG2 diplomat))
Span 34-35:  enrichment => halt-01
Span 9-10:  European, => and
Span 26-27:  further => agree-01
Span 32-33:  halt => (country :name (name :op "Iran"))
Span 36-37:  Iran's => enrich-01
Span 6-7:  media => media
Span 22-23:  not => (city :name (name :op "Paris"))
Span 13-14:  officials => and
Span 0-1:  On => 1
Span 25-26:  on => reach-01
Span 29-30:  persuade => action
Span 10-11:  Russian => (organization :name (name :op "European"))
Span 3-4:  stated => state-01
Span 28-29:  to => further
Span 31-32:  to => persuade-01

Langrangian relaxation converged after 83 iterations. Delta = 0.0
Oracle Span 20-21:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 1-2:  081114 => (date-entity :day 14 :month 11 :year 2008)
Oracle Span 26-27:  agreement => agree-01
Oracle Span 13-14:  and => and
Oracle Span 14-15:  Chinese => (country :name (name :op "China"))
Oracle Span 2-3:  diplomats => (have-org-role-91 :ARG2 diplomat)
Oracle Span 36-37:  enrichment => enrich-01
Oracle Span 10-11:  European => (have-org-role-91 :ARG1 (continent :name (name :op "Europe")))
Oracle Span 40-41:  facility => facility
Oracle Span 28-29:  further => further
Oracle Span 34-35:  halt => halt-01
Oracle Span 32-33:  Iran => (country :name (name :op "Iran"))
Oracle Span 6-7:  media => media
Oracle Span 18-19:  meeting => meet-03
Oracle Span 42-43:  Natanz => (city :name (name :op "Natanz"))
Oracle Span 15-16:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 22-23:  Paris => (city :name (name :op "Paris"))
Oracle Span 31-32:  persuade => persuade-01
Oracle Span 25-26:  reach => reach-01
Oracle Span 12-13:  Russian => (have-org-role-91 :ARG1 (country :name (name :op "Russia")))
Oracle Span 3-4:  stated => state-01
Oracle Span 35-36:  uranium => uranium

Dependencies:
1	On	_	IN	IN	_	26	prep	_	_
2	081114	_	CD	CD	_	3	num	_	_
3	diplomats	_	NNS	NNS	_	1	pobj	_	_
4	stated	_	VBN	VBN	_	3	vmod	_	_
5	to	_	TO	TO	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	media	_	NNS	NNS	_	5	pobj	_	_
8	that	_	DT	DT	_	16	det	_	_
9	American	_	JJ	JJ	_	16	amod	_	_
10	,	_	,	,	_	9	punct	_	_
11	European	_	JJ	JJ	_	9	conj	_	_
12	,	_	,	,	_	9	punct	_	_
13	Russian	_	JJ	JJ	_	9	conj	_	_
14	and	_	CC	CC	_	9	cc	_	_
15	Chinese	_	JJ	JJ	_	9	conj	_	_
16	officials	_	NNS	NNS	_	26	nsubj	_	_
17	at	_	IN	IN	_	16	prep	_	_
18	a	_	DT	DT	_	19	det	_	_
19	meeting	_	NN	NN	_	17	pobj	_	_
20	on	_	IN	IN	_	19	prep	_	_
21	081113	_	CD	CD	_	20	pobj	_	_
22	in	_	IN	IN	_	21	prep	_	_
23	Paris	_	NNP	NNP	_	22	pobj	_	_
24	did	_	VBD	VBD	_	26	aux	_	_
25	not	_	RB	RB	_	26	neg	_	_
26	reach	_	VB	VB	_	0	root	_	_
27	agreement	_	NN	NN	_	26	dobj	_	_
28	on	_	IN	IN	_	27	prep	_	_
29	further	_	JJ	JJ	_	30	amod	_	_
30	actions	_	NNS	NNS	_	28	pobj	_	_
31	to	_	TO	TO	_	32	aux	_	_
32	persuade	_	VB	VB	_	26	vmod	_	_
33	Iran	_	NNP	NNP	_	32	dobj	_	_
34	to	_	TO	TO	_	35	aux	_	_
35	halt	_	VB	VB	_	32	xcomp	_	_
36	uranium	_	NN	NN	_	37	nn	_	_
37	enrichment	_	NN	NN	_	35	dobj	_	_
38	at	_	IN	IN	_	35	prep	_	_
39	Iran	_	NNP	NNP	_	41	poss	_	_
40	's	_	POS	POS	_	39	possessive	_	_
41	facility	_	NN	NN	_	38	pobj	_	_
42	in	_	IN	IN	_	41	prep	_	_
43	Natanz	_	NNP	NNP	_	42	pobj	_	_
44	.	_	.	.	_	26	punct	_	_

Oracle:
(a / agree-01, ARG0, a2 / and)
(c2 / continent, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / city, name, n5 / name)
(c6 / country, name, n6 / name)
(c7 / city, name, n7 / name)
(d / date-entity, day, 14)
(d / date-entity, month, 11)
(d / date-entity, year, 2008)
(d3 / date-entity, day, 13)
(d3 / date-entity, month, 11)
(d3 / date-entity, year, 2008)
(e / enrich-01, ARG1, u / uranium)
(e / enrich-01, location, f2 / facility)
(f2 / facility, location, c7 / city)
(f2 / facility, mod, c6 / country)
(h / halt-01, ARG0, c6 / country)
(h / halt-01, ARG1, e / enrich-01)
(h3 / have-org-role-91, ARG1, c2 / continent)
(h4 / have-org-role-91, ARG1, c3 / country)
(h5 / have-org-role-91, ARG1, c4 / country)
(h5 / have-org-role-91, ARG2, o4 / official)
(h6 / have-org-role-91, ARG2, d2 / diplomat)
(m2 / meet-03, location, c5 / city)
(m2 / meet-03, time, d3 / date-entity)
(n2 / name, op, "Europe")
(n3 / name, op, "Russia")
(n4 / name, op, "China")
(n5 / name, op, "Paris")
(n6 / name, op, "Iran")
(n7 / name, op, "Natanz")
(p / persuade-01, ARG1, c6 / country)
(p / persuade-01, ARG2, h / halt-01)
(r / reach-01, ARG0, a2 / and)
(r / reach-01, ARG1, a / agree-01)
(r / reach-01, time, m2 / meet-03)
(s / state-01, ARG1, r / reach-01)
(s / state-01, ARG2, m / media)
(s / state-01, time, d / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),American,,"States",false), Span(3,4,List(1),stated,state-01,false), Span(14,15,List(4, 3, 2),at,(country :name (name :op "China")),false), Span(29,30,List(5),persuade,action,false), Span(34,35,List(6),enrichment,halt-01,false), Span(40,41,List(7),,facility,false), Span(32,33,List(10, 9, 8),halt,(country :name (name :op "Iran")),false), Span(15,16,List(13, 12, 11),a,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(28,29,List(14),to,further,false), Span(9,10,List(15),European,,and,false), Span(22,23,List(18, 17, 16),not,(city :name (name :op "Paris")),false), Span(0,1,List(19),On,1,false), Span(12,13,List(22, 21, 20),Chinese,(country :name (name :op "Russia")),false), Span(26,27,List(23),further,agree-01,false), Span(25,26,List(24),on,reach-01,false), Span(13,14,List(25),officials,and,false), Span(31,32,List(26),to,persuade-01,false), Span(35,36,List(27),at,uranium,false), Span(2,3,List(30, 29, 28),diplomats,(person :ARG0-of (have-org-role-91 :ARG2 diplomat)),false), Span(6,7,List(31),media,media,false), Span(18,19,List(32),081113,meet-01,false), Span(42,43,List(35, 34, 33),,(city :name (name :op "Natanz")),false), Span(10,11,List(38, 37, 36),Russian,(organization :name (name :op "European")),false), Span(36,37,List(39),Iran's,enrich-01,false)),Map(39 -> enrich-01, 30 -> diplomat, 2 -> country, 5 -> action, 33 -> city, 27 -> uranium, 12 -> have-org-role-91, 8 -> country, 15 -> and, 36 -> organization, 21 -> name, 18 -> "Paris", 24 -> reach-01, 35 -> "Natanz", 7 -> facility, 1 -> state-01, 17 -> name, 23 -> agree-01, 38 -> "European", 26 -> persuade-01, 4 -> "China", 11 -> person, 32 -> meet-01, 14 -> further, 29 -> have-org-role-91, 20 -> country, 34 -> name, 28 -> person, 6 -> halt-01, 9 -> name, 0 -> "States", 22 -> "Russia", 16 -> city, 37 -> name, 19 -> 1, 10 -> "Iran", 3 -> name, 31 -> media, 25 -> and, 13 -> official),Map(S -> "States", e -> enrich-01, n -> name, h -> halt-01, h2 -> have-org-role-91, m2 -> meet-01, p2 -> persuade-01, c4 -> country, n4 -> name, a3 -> agree-01, s -> state-01, m -> media, d -> diplomat, 1 -> 1, p -> person, a -> action, c3 -> city, n3 -> name, n6 -> name, o2 -> organization, a2 -> and, r -> reach-01, c -> country, h3 -> have-org-role-91, f2 -> further, u -> uranium, f -> facility, o -> official, p3 -> person, n2 -> name, c2 -> country, a4 -> and, n5 -> name, c5 -> city))),[Ljava.lang.String;@56a91311,Annotation([Ljava.lang.String;@735322de,[Ljava.lang.String;@60ed0c34,[Ljava.lang.String;@6d44240e),Annotation([Ljava.lang.String;@73eb832c,[Ljava.lang.String;@19c40a5d,[Ledu.cmu.lti.nlp.amr.Dependency;@114039fd),Annotation([Ljava.lang.String;@5d681b8f,[Ljava.lang.String;@723511ed,[Ljava.lang.String;@4b1a6b14),Annotation([Ljava.lang.String;@5b052c5b,[Ljava.lang.String;@462cf0d7,[Ledu.cmu.lti.nlp.amr.Entity;@1c4c2b86))
AMR:
(1 / 1, op, p3 / person)
(S / "States", calendar, a2 / and)
(a / action, mod, f2 / further)
(a2 / and, op, o2 / organization)
(a3 / agree-01, ARG1, a / action)
(a3 / agree-01, ARG2, p3 / person)
(a4 / and, op, m2 / meet-01)
(a4 / and, op, p / person)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / city, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / city, name, n5 / name)
(e / enrich-01, ARG1, u / uranium)
(e / enrich-01, ARG2, f / facility)
(f / facility, location, c5 / city)
(h / halt-01, ARG0, c2 / country)
(h / halt-01, ARG1, e / enrich-01)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG1, c / country)
(h2 / have-org-role-91, ARG2, o / official)
(h3 / have-org-role-91, ARG0, p3 / person)
(h3 / have-org-role-91, ARG1, c4 / country)
(h3 / have-org-role-91, ARG2, d / diplomat)
(m2 / meet-01, ARG1, c3 / city)
(n / name, op, "China")
(n2 / name, op, "Iran")
(n3 / name, op, "Paris")
(n4 / name, op, "Russia")
(n5 / name, op, "Natanz")
(n6 / name, op, "European")
(o2 / organization, name, n6 / name)
(p2 / persuade-01, ARG1, c2 / country)
(r / reach-01, ARG0, p / person)
(r / reach-01, ARG1, a3 / agree-01)
(r / reach-01, ARG2, h / halt-01)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, a2 / and)
(s / state-01, ARG2, m / media)

Decoded in 7,523,987 microseconds
Sentence: Uranium enrichment is a highly technical process that can produce fuel for a nuclear power plant or fissile material for atomic weapons.

Oracle Span 1:  atomic => atom
Oracle Span 2:  can => possible
Oracle Span 3:  enrichment => enrich-01
Oracle Span 4:  fissile => fissile
Oracle Span 5:  fuel => fuel
Oracle Span 6:  highly => high
Oracle Span 7:  material => material
Oracle Span 8:  nuclear => nucleus
Oracle Span 9:  or => or
Oracle Span 10:  plant => plant
Oracle Span 11:  power => power
Oracle Span 12:  process => process
Oracle Span 13:  produce => produce-01
Oracle Span 14:  technical => technical
Oracle Span 15:  Uranium => uranium
Oracle Span 16:  weapons => weapon
Spans:
Span 20-21:  atomic => atom
Span 8-9:  can => possible
Span 1-2:  enrichment => enrich-01
Span 17-18:  fissile => fissile
Span 10-11:  fuel => fuel
Span 4-5:  highly => high
Span 18-19:  material => material
Span 13-14:  nuclear => nucleus
Span 16-17:  or => or
Span 15-16:  plant => plant
Span 14-15:  power => power
Span 6-7:  process => process
Span 9-10:  produce => produce-01
Span 5-6:  technical => technical
Span 0-1:  Uranium => uranium
Span 21-22:  weapons. => weapon

Langrangian relaxation converged after 41 iterations. Delta = 0.0
Oracle Span 20-21:  atomic => atom
Oracle Span 8-9:  can => possible
Oracle Span 1-2:  enrichment => enrich-01
Oracle Span 17-18:  fissile => fissile
Oracle Span 10-11:  fuel => fuel
Oracle Span 4-5:  highly => high
Oracle Span 18-19:  material => material
Oracle Span 13-14:  nuclear => nucleus
Oracle Span 16-17:  or => or
Oracle Span 15-16:  plant => plant
Oracle Span 14-15:  power => power
Oracle Span 6-7:  process => process
Oracle Span 9-10:  produce => produce-01
Oracle Span 5-6:  technical => technical
Oracle Span 0-1:  Uranium => uranium
Oracle Span 21-22:  weapons => weapon

Dependencies:
1	Uranium	_	JJ	JJ	_	2	amod	_	_
2	enrichment	_	NN	NN	_	7	nsubj	_	_
3	is	_	VBZ	VBZ	_	7	cop	_	_
4	a	_	DT	DT	_	7	det	_	_
5	highly	_	RB	RB	_	6	advmod	_	_
6	technical	_	JJ	JJ	_	7	amod	_	_
7	process	_	NN	NN	_	0	root	_	_
8	that	_	WDT	WDT	_	10	nsubj	_	_
9	can	_	MD	MD	_	10	aux	_	_
10	produce	_	VB	VB	_	7	rcmod	_	_
11	fuel	_	NN	NN	_	10	dobj	_	_
12	for	_	IN	IN	_	10	prep	_	_
13	a	_	DT	DT	_	16	det	_	_
14	nuclear	_	JJ	JJ	_	16	amod	_	_
15	power	_	NN	NN	_	16	nn	_	_
16	plant	_	NN	NN	_	12	pobj	_	_
17	or	_	CC	CC	_	16	cc	_	_
18	fissile	_	NN	NN	_	19	nn	_	_
19	material	_	NN	NN	_	16	conj	_	_
20	for	_	IN	IN	_	16	prep	_	_
21	atomic	_	JJ	JJ	_	22	amod	_	_
22	weapons	_	NNS	NNS	_	20	pobj	_	_
23	.	_	.	.	_	7	punct	_	_

Oracle:
(e / enrich-01, ARG2, u / uranium)
(m / material, mod, f2 / fissile)
(m / material, purpose, w / weapon)
(o / or, op, p4 / produce-01)
(p / process, domain, e / enrich-01)
(p / process, mod, p2 / possible)
(p / process, mod, t / technical)
(p2 / possible, domain, o / or)
(p4 / produce-01, ARG0, p / process)
(p4 / produce-01, ARG1, m / material)
(p5 / plant, mod, p6 / power)
(p6 / power, mod, n / nucleus)
(t / technical, mod, h / high)
(w / weapon, mod, a / atom)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),atomic,atom,false), Span(5,6,List(1),technical,technical,false), Span(18,19,List(2),material,material,false), Span(0,1,List(3),Uranium,uranium,false), Span(15,16,List(4),plant,plant,false), Span(17,18,List(5),fissile,fissile,false), Span(1,2,List(6),enrichment,enrich-01,false), Span(10,11,List(7),fuel,fuel,false), Span(6,7,List(8),process,process,false), Span(8,9,List(9),can,possible,false), Span(13,14,List(10),nuclear,nucleus,false), Span(21,22,List(11),weapons.,weapon,false), Span(16,17,List(12),or,or,false), Span(4,5,List(13),highly,high,false), Span(14,15,List(14),power,power,false), Span(9,10,List(15),produce,produce-01,false)),Map(2 -> material, 5 -> fissile, 12 -> or, 15 -> produce-01, 8 -> process, 7 -> fuel, 1 -> technical, 4 -> plant, 11 -> weapon, 14 -> power, 6 -> enrich-01, 0 -> atom, 9 -> possible, 3 -> uranium, 10 -> nucleus, 13 -> high),Map(e -> enrich-01, n -> nucleus, w -> weapon, h -> high, p5 -> produce-01, t -> technical, p2 -> process, m -> material, p -> plant, a -> atom, p4 -> power, u -> uranium, f2 -> fuel, f -> fissile, o -> or, p3 -> possible))),[Ljava.lang.String;@7edecc61,Annotation([Ljava.lang.String;@531324b,[Ljava.lang.String;@750c5333,[Ljava.lang.String;@40b790bf),Annotation([Ljava.lang.String;@4882e10c,[Ljava.lang.String;@44ad313d,[Ledu.cmu.lti.nlp.amr.Dependency;@53af6750),Annotation([Ljava.lang.String;@2f6127f2,[Ljava.lang.String;@70342993,[Ljava.lang.String;@5d3dca71),Annotation([Ljava.lang.String;@7500a361,[Ljava.lang.String;@53784484,[Ledu.cmu.lti.nlp.amr.Entity;@25187c9))
AMR:
(e / enrich-01, mod, t / technical)
(e / enrich-01, mod, u / uranium)
(m / material, mod, f / fissile)
(m / material, poss, w / weapon)
(o / or, op, m / material)
(o / or, op, p / plant)
(p / plant, mod, p4 / power)
(p2 / process, mod, t / technical)
(p3 / possible, domain, p5 / produce-01)
(p4 / power, mod, n / nucleus)
(p5 / produce-01, ARG0, p2 / process)
(p5 / produce-01, ARG1, f2 / fuel)
(p5 / produce-01, ARG2, p / plant)
(t / technical, degree, h / high)
(w / weapon, mod, a / atom)

Decoded in 1,097,607 microseconds
Sentence: The 081113 meeting ended without any new measures to announce.

Oracle Span 1:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 2:  announce => announce-01
Oracle Span 3:  ended => end-01
Oracle Span 4:  measures => measure
Oracle Span 5:  meeting => meet-03
Oracle Span 6:  new => new
mkDayMonthYear(081113,13,11,2008)
mkDayMonthYear(081113,13,11,08)
Spans:
Span 9-10:  announce. => announce-01
Span 5-6:  any => any
Span 3-4:  ended => end-01
Span 7-8:  measures => measure
Span 2-3:  meeting => meet-01
Span 6-7:  new => new
Span 0-1:  The => 1

Langrangian relaxation converged after 11 iterations. Delta = 0.0
Oracle Span 1-2:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 9-10:  announce => announce-01
Oracle Span 3-4:  ended => end-01
Oracle Span 7-8:  measures => measure
Oracle Span 2-3:  meeting => meet-03
Oracle Span 6-7:  new => new

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	081113	_	CD	CD	_	3	num	_	_
3	meeting	_	NN	NN	_	4	nsubj	_	_
4	ended	_	VBD	VBD	_	0	root	_	_
5	without	_	IN	IN	_	4	prep	_	_
6	any	_	DT	DT	_	8	det	_	_
7	new	_	JJ	JJ	_	8	amod	_	_
8	measures	_	NNS	NNS	_	5	pobj	_	_
9	to	_	TO	TO	_	10	aux	_	_
10	announce	_	VB	VB	_	4	xcomp	_	_
11	.	_	.	.	_	4	punct	_	_

Oracle:
(a / announce-01, ARG1, m2 / measure)
(d / date-entity, day, 13)
(d / date-entity, month, 11)
(d / date-entity, year, 2008)
(e / end-01, ARG1, m / meet-03)
(e / end-01, ARG2, m2 / measure)
(m / meet-03, time, d / date-entity)
(m2 / measure, mod, n / new)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),The,1,false), Span(7,8,List(1),measures,measure,false), Span(9,10,List(2),announce.,announce-01,false), Span(3,4,List(3),ended,end-01,false), Span(2,3,List(4),meeting,meet-01,false), Span(5,6,List(5),any,any,false), Span(6,7,List(6),new,new,false)),Map(2 -> announce-01, 5 -> any, 1 -> measure, 4 -> meet-01, 6 -> new, 0 -> 1, 3 -> end-01),Map(n -> new, e -> end-01, m2 -> meet-01, m -> measure, 1 -> 1, a -> announce-01, a2 -> any))),[Ljava.lang.String;@748b3b6b,Annotation([Ljava.lang.String;@4744cb98,[Ljava.lang.String;@6bcaa84d,[Ljava.lang.String;@7dfbf642),Annotation([Ljava.lang.String;@5086caf5,[Ljava.lang.String;@31ffd376,[Ledu.cmu.lti.nlp.amr.Dependency;@f499dc4),Annotation([Ljava.lang.String;@2da23389,[Ljava.lang.String;@4b1595aa,[Ljava.lang.String;@4be8bdd),Annotation([Ljava.lang.String;@475a9133,[Ljava.lang.String;@7bd8dc2a,[Ledu.cmu.lti.nlp.amr.Entity;@1c07be3e))
AMR:
(a / announce-01, ARG0, m / measure)
(a / announce-01, ARG1, a2 / any)
(e / end-01, ARG1, m2 / meet-01)
(e / end-01, ARG2, a / announce-01)
(m / measure, mod, n / new)
(m2 / meet-01, ARG1, 1 / 1)

Decoded in 162,627 microseconds
Sentence: After the 081113 meeting the French foreign ministry released a statement declaring the international community had reaffirmed the importance of the dual-track approach of engaging diplomatically with Iran and working towards sanctions.

Oracle Span 1:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 2:  After => after
Oracle Span 3:  and => and
Oracle Span 4:  approach => approach-02
Oracle Span 5:  community => community
Oracle Span 6:  declaring => declare-01
Oracle Span 7:  diplomatically => diplomacy
Oracle Span 8:  dual => dual
Oracle Span 9:  engaging => engage-01
Oracle Span 10:  foreign ministry => (government-organization :name (name :op "Ministry" :op "Foreign"))
Oracle Span 11:  French => (country :name (name :op "France"))
Oracle Span 12:  importance => importance
Oracle Span 13:  international => international
Oracle Span 14:  Iran => (country :name (name :op "Iran"))
Oracle Span 15:  meeting => meet-03
Oracle Span 16:  reaffirmed => reaffirm-01
Oracle Span 17:  released => release-01
Oracle Span 18:  sanctions => sanction-02
Oracle Span 19:  statement => (thing :ARG1-of state-01)
Oracle Span 20:  track => track
Oracle Span 21:  working => work-06
mkDayMonthYear(081113,13,11,2008)
mkDayMonthYear(081113,13,11,08)
NER Entity: (thing :name (name :op "French"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 0-1:  After => 1
Span 0-1:  After => after
Span 28-29:  and => and
Span 22-23:  approach => approach-01
Span 14-15:  community => community
Span 11-12:  declaring => declare-01
Span 21-22:  dual-track => dual-track
Span 24-25:  engaging => engage-01
Span 6-7:  foreign => (country :name (name :op "Libya"))
Span 5-6:  French => (country :name (name :op "France"))
Span 18-19:  importance => important
Span 13-14:  international => international
Span 27-28:  Iran => (country :name (name :op "Iran"))
Span 3-4:  meeting => melt-01
Span 7-8:  ministry => ministry
Span 16-17:  reaffirmed => reaffirm-01
Span 8-9:  released => release-01
Span 31-32:  sanctions. => (thing :ARG2-of sanction-02)
Span 10-11:  statement => stagnate-01
Span 4-5:  the => (country :name (name :op "North"))
Span 29-30:  working => work-01

Langrangian relaxation converged after 47 iterations. Delta = 0.0
Oracle Span 2-3:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 0-1:  After => after
Oracle Span 30-31:  and => and
Oracle Span 24-25:  approach => approach-02
Oracle Span 14-15:  community => community
Oracle Span 11-12:  declaring => declare-01
Oracle Span 27-28:  diplomatically => diplomacy
Oracle Span 21-22:  dual => dual
Oracle Span 26-27:  engaging => engage-01
Oracle Span 6-8:  foreign ministry => (government-organization :name (name :op "Ministry" :op "Foreign"))
Oracle Span 5-6:  French => (country :name (name :op "France"))
Oracle Span 18-19:  importance => importance
Oracle Span 13-14:  international => international
Oracle Span 29-30:  Iran => (country :name (name :op "Iran"))
Oracle Span 3-4:  meeting => meet-03
Oracle Span 16-17:  reaffirmed => reaffirm-01
Oracle Span 8-9:  released => release-01
Oracle Span 33-34:  sanctions => sanction-02
Oracle Span 10-11:  statement => (thing :ARG1-of state-01)
Oracle Span 23-24:  track => track
Oracle Span 31-32:  working => work-06

Dependencies:
1	After	_	IN	IN	_	9	prep	_	_
2	the	_	DT	DT	_	4	det	_	_
3	081113	_	CD	CD	_	4	num	_	_
4	meeting	_	NN	NN	_	1	pobj	_	_
5	the	_	DT	DT	_	8	det	_	_
6	French	_	JJ	JJ	_	8	amod	_	_
7	foreign	_	JJ	JJ	_	8	amod	_	_
8	ministry	_	NN	NN	_	9	nsubj	_	_
9	released	_	VBD	VBD	_	0	root	_	_
10	a	_	DT	DT	_	11	det	_	_
11	statement	_	NN	NN	_	17	nsubj	_	_
12	declaring	_	VBG	VBG	_	11	vmod	_	_
13	the	_	DT	DT	_	15	det	_	_
14	international	_	JJ	JJ	_	15	amod	_	_
15	community	_	NN	NN	_	12	dobj	_	_
16	had	_	VBD	VBD	_	17	aux	_	_
17	reaffirmed	_	VBD	VBD	_	9	ccomp	_	_
18	the	_	DT	DT	_	19	det	_	_
19	importance	_	NN	NN	_	17	dobj	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	23	det	_	_
22	dual-track	_	JJ	JJ	_	23	amod	_	_
23	approach	_	NN	NN	_	20	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	engaging	_	VBG	VBG	_	24	pcomp	_	_
26	diplomatically	_	RB	RB	_	25	advmod	_	_
27	with	_	IN	IN	_	25	prep	_	_
28	Iran	_	NNP	NNP	_	27	pobj	_	_
29	and	_	CC	CC	_	25	cc	_	_
30	working	_	VBG	VBG	_	25	conj	_	_
31	towards	_	IN	IN	_	30	prep	_	_
32	sanctions	_	NNS	NNS	_	31	pobj	_	_
33	.	_	.	.	_	9	punct	_	_

Oracle:
(a / approach-02, ARG1, a2 / and)
(a / approach-02, mod, t / track)
(a2 / and, op, e / engage-01)
(a2 / and, op, w / work-06)
(a3 / after, op, m2 / meet-03)
(c / country, name, n / name)
(c2 / community, mod, i / international)
(c3 / country, name, n2 / name)
(d / declare-01, ARG0, t2 / thing)
(d / declare-01, ARG1, r2 / reaffirm-01)
(d2 / date-entity, day, 13)
(d2 / date-entity, month, 11)
(d2 / date-entity, year, 2008)
(e / engage-01, ARG1, c3 / country)
(e / engage-01, manner, d3 / diplomacy)
(g / government-organization, mod, c / country)
(g / government-organization, name, n3 / name)
(i2 / importance, poss, a / approach-02)
(m2 / meet-03, time, d2 / date-entity)
(n / name, op, "France")
(n2 / name, op, "Iran")
(n3 / name, op, "Foreign")
(n3 / name, op, "Ministry")
(r / release-01, ARG0, g / government-organization)
(r / release-01, ARG1, t2 / thing)
(r / release-01, time, a3 / after)
(r2 / reaffirm-01, ARG0, c2 / community)
(r2 / reaffirm-01, ARG1, i2 / importance)
(s / state-01, ARG1, t2 / thing)
(t / track, mod, d4 / dual)
(w / work-06, ARG4, s2 / sanction-02)

Input(Some(Graph(null,ArrayBuffer(Span(18,19,List(0),importance,important,false), Span(31,32,List(2, 1),sanctions.,(thing :ARG2-of sanction-02),false), Span(27,28,List(5, 4, 3),Iran,(country :name (name :op "Iran")),false), Span(14,15,List(6),community,community,false), Span(6,7,List(9, 8, 7),foreign,(country :name (name :op "Libya")),false), Span(8,9,List(10),released,release-01,false), Span(3,4,List(11),meeting,melt-01,false), Span(16,17,List(12),reaffirmed,reaffirm-01,false), Span(4,5,List(15, 14, 13),the,(country :name (name :op "North")),false), Span(0,1,List(16),After,1,false), Span(29,30,List(17),working,work-01,false), Span(0,1,List(18),After,after,false), Span(22,23,List(19),approach,approach-01,false), Span(21,22,List(20),dual-track,dual-track,false), Span(5,6,List(23, 22, 21),French,(country :name (name :op "France")),false), Span(13,14,List(24),international,international,false), Span(11,12,List(25),declaring,declare-01,false), Span(7,8,List(26),ministry,ministry,false), Span(24,25,List(27),engaging,engage-01,false), Span(28,29,List(28),and,and,false), Span(10,11,List(29),statement,stagnate-01,false)),Map(2 -> sanction-02, 5 -> "Iran", 27 -> engage-01, 12 -> reaffirm-01, 8 -> name, 15 -> "North", 21 -> country, 18 -> after, 24 -> international, 7 -> country, 1 -> thing, 17 -> work-01, 23 -> "France", 26 -> ministry, 4 -> name, 11 -> melt-01, 14 -> name, 29 -> stagnate-01, 20 -> dual-track, 28 -> and, 6 -> community, 9 -> "Libya", 0 -> important, 22 -> name, 16 -> 1, 19 -> approach-01, 10 -> release-01, 3 -> country, 25 -> declare-01, 13 -> country),Map(e -> engage-01, n -> name, w -> work-01, s2 -> stagnate-01, t -> thing, m2 -> ministry, c4 -> country, n4 -> name, a3 -> and, s -> sanction-02, m -> melt-01, d -> dual-track, 1 -> 1, r2 -> reaffirm-01, n3 -> name, c3 -> country, a -> after, d2 -> declare-01, i2 -> international, r -> release-01, i -> important, a2 -> approach-01, c -> country, n2 -> name, c2 -> community, c5 -> country))),[Ljava.lang.String;@7f7ec217,Annotation([Ljava.lang.String;@65d73895,[Ljava.lang.String;@3909f495,[Ljava.lang.String;@2001e7fb),Annotation([Ljava.lang.String;@29e6e796,[Ljava.lang.String;@75a961af,[Ledu.cmu.lti.nlp.amr.Dependency;@3729ed3),Annotation([Ljava.lang.String;@2ce39f79,[Ljava.lang.String;@32270724,[Ljava.lang.String;@cbdacd6),Annotation([Ljava.lang.String;@1bae3f94,[Ljava.lang.String;@2b0673cf,[Ledu.cmu.lti.nlp.amr.Entity;@21925fac))
AMR:
(1 / 1, op, m / melt-01)
(a / after, op, m / melt-01)
(a2 / approach-01, ARG0, d / dual-track)
(a2 / approach-01, ARG1, e / engage-01)
(a3 / and, mod, c / country)
(a3 / and, op, w / work-01)
(c / country, name, n / name)
(c3 / country, name, n2 / name)
(c4 / country, name, n3 / name)
(c5 / country, name, n4 / name)
(d2 / declare-01, ARG1, c2 / community)
(e / engage-01, ARG1, w / work-01)
(m / melt-01, ARG1, i2 / international)
(m2 / ministry, mod, c4 / country)
(m2 / ministry, poss, c3 / country)
(m2 / ministry, poss, c5 / country)
(n / name, op, "Iran")
(n2 / name, op, "Libya")
(n3 / name, op, "North")
(n4 / name, op, "France")
(r / release-01, ARG0, m2 / ministry)
(r / release-01, ARG1, r2 / reaffirm-01)
(r / release-01, time, a / after)
(r2 / reaffirm-01, ARG0, s2 / stagnate-01)
(r2 / reaffirm-01, ARG1, i / important)
(s / sanction-02, ARG1, a3 / and)
(s / sanction-02, ARG2, t / thing)
(s2 / stagnate-01, ARG1, d2 / declare-01)
(w / work-01, ARG1, s2 / stagnate-01)

Decoded in 2,910,351 microseconds
Sentence: Russia and China have resisted new sanctions against Iran.

Oracle Span 1:  and => and
Oracle Span 2:  China => (country :name (name :op "China"))
Oracle Span 3:  Iran => (country :name (name :op "Iran"))
Oracle Span 4:  new => new
Oracle Span 5:  resisted => resist-01
Oracle Span 6:  Russia => (country :name (name :op "Russia"))
Oracle Span 7:  sanctions => sanction-02
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "China"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 1-2:  and => and
Span 2-3:  China => (country :name (name :op "China"))
Span 5-6:  new => new
Span 4-5:  resisted => resist-01
Span 0-1:  Russia => (country :name (name :op "Russia"))
Span 6-7:  sanctions => (thing :ARG2-of sanction-02)

Langrangian relaxation converged after 73 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 2-3:  China => (country :name (name :op "China"))
Oracle Span 8-9:  Iran => (country :name (name :op "Iran"))
Oracle Span 5-6:  new => new
Oracle Span 4-5:  resisted => resist-01
Oracle Span 0-1:  Russia => (country :name (name :op "Russia"))
Oracle Span 6-7:  sanctions => sanction-02

Dependencies:
1	Russia	_	NNP	NNP	_	5	nsubj	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	China	_	NNP	NNP	_	1	conj	_	_
4	have	_	VBP	VBP	_	5	aux	_	_
5	resisted	_	VBN	VBN	_	0	root	_	_
6	new	_	JJ	JJ	_	7	amod	_	_
7	sanctions	_	NNS	NNS	_	5	dobj	_	_
8	against	_	IN	IN	_	5	prep	_	_
9	Iran	_	NNP	NNP	_	8	pobj	_	_
10	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, c2 / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(n / name, op, "Russia")
(n2 / name, op, "China")
(n3 / name, op, "Iran")
(r / resist-01, ARG0, a / and)
(r / resist-01, ARG1, s / sanction-02)
(s / sanction-02, ARG1, c3 / country)
(s / sanction-02, mod, n4 / new)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(1, 0),sanctions,(thing :ARG2-of sanction-02),false), Span(5,6,List(2),new,new,false), Span(0,1,List(5, 4, 3),Russia,(country :name (name :op "Russia")),false), Span(4,5,List(6),resisted,resist-01,false), Span(2,3,List(9, 8, 7),China,(country :name (name :op "China")),false), Span(1,2,List(10),and,and,false)),Map(2 -> new, 5 -> "Russia", 8 -> name, 7 -> country, 1 -> sanction-02, 4 -> name, 6 -> resist-01, 9 -> "China", 0 -> thing, 10 -> and, 3 -> country),Map(n -> new, t -> thing, s -> sanction-02, a -> and, n3 -> name, r -> resist-01, c -> country, c2 -> country, n2 -> name))),[Ljava.lang.String;@342a17d5,Annotation([Ljava.lang.String;@15e17f0,[Ljava.lang.String;@39d6ef22,[Ljava.lang.String;@69b2007b),Annotation([Ljava.lang.String;@d422627,[Ljava.lang.String;@7cd251e8,[Ledu.cmu.lti.nlp.amr.Dependency;@72730eaf),Annotation([Ljava.lang.String;@b3b6942,[Ljava.lang.String;@1754151c,[Ljava.lang.String;@79e74b0f),Annotation([Ljava.lang.String;@130b34ea,[Ljava.lang.String;@432a2eb0,[Ledu.cmu.lti.nlp.amr.Entity;@74e13f3c))
AMR:
(a / and, op, c2 / country)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(n2 / name, op, "Russia")
(n3 / name, op, "China")
(r / resist-01, ARG0, c / country)
(r / resist-01, ARG1, t / thing)
(s / sanction-02, ARG1, a / and)
(s / sanction-02, ARG2, t / thing)
(s / sanction-02, mod, n / new)

Decoded in 626,281 microseconds
Sentence: Russia and China have close political and business ties with Iran and feel no domestic pressure to act against the Islamic Republic of Iran.

Oracle Span 1:  act => act-02
Oracle Span 2:  and => and
Oracle Span 3:  and => and
Oracle Span 4:  and => and
Oracle Span 5:  business => business
Oracle Span 6:  China => (country :name (name :op "China"))
Oracle Span 7:  close => close
Oracle Span 8:  domestic => domestic
Oracle Span 9:  feel => feel-01
Oracle Span 10:  Islamic Republic of Iran => (country :name (name :op "Iran" :op "of" :op "Republic" :op "Islamic"))
Oracle Span 11:  no => -
Oracle Span 12:  political => politics
Oracle Span 13:  pressure => pressure-01
Oracle Span 14:  Russia => (country :name (name :op "Russia"))
Oracle Span 15:  ties => tie-01
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "China"))
NER Entity: (country :name (name :op "Islamic" :op "Republic" :op "of" :op "Iran"))
Spans:
Span 17-18:  act => act-02
Span 6-7:  and => and
Span 11-12:  and => and
Span 1-2:  and => and
Span 7-8:  business => business
Span 2-3:  China => (country :name (name :op "China"))
Span 4-5:  close => close
Span 14-15:  domestic => domestic
Span 12-13:  feel => feel-01
Span 3-4:  have => have-03
Span 10-11:  Iran => (country :name (name :op "Iran"))
Span 20-21:  Islamic => (religious-group :name (name :op "Islamic"))
Span 22-23:  of => of-course
Span 5-6:  political => politics
Span 15-16:  pressure => pressure-01
Span 21-22:  Republic => (include-91 :ARG2 republic)
Span 0-1:  Russia => (country :name (name :op "Russia"))
Span 8-9:  ties => tie-01

Langrangian relaxation converged after 38 iterations. Delta = 0.0
Oracle Span 17-18:  act => act-02
Oracle Span 1-2:  and => and
Oracle Span 6-7:  and => and
Oracle Span 11-12:  and => and
Oracle Span 7-8:  business => business
Oracle Span 2-3:  China => (country :name (name :op "China"))
Oracle Span 4-5:  close => close
Oracle Span 14-15:  domestic => domestic
Oracle Span 12-13:  feel => feel-01
Oracle Span 20-24:  Islamic Republic of Iran => (country :name (name :op "Iran" :op "of" :op "Republic" :op "Islamic"))
Oracle Span 13-14:  no => -
Oracle Span 5-6:  political => politics
Oracle Span 15-16:  pressure => pressure-01
Oracle Span 0-1:  Russia => (country :name (name :op "Russia"))
Oracle Span 8-9:  ties => tie-01

Dependencies:
1	Russia	_	NNP	NNP	_	4	nsubj	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	China	_	NNP	NNP	_	1	conj	_	_
4	have	_	VBP	VBP	_	0	root	_	_
5	close	_	VB	VB	_	4	ccomp	_	_
6	political	_	JJ	JJ	_	9	amod	_	_
7	and	_	CC	CC	_	6	cc	_	_
8	business	_	NN	NN	_	6	conj	_	_
9	ties	_	NNS	NNS	_	5	dobj	_	_
10	with	_	IN	IN	_	5	prep	_	_
11	Iran	_	NNP	NNP	_	10	pobj	_	_
12	and	_	CC	CC	_	5	cc	_	_
13	feel	_	VB	VB	_	5	conj	_	_
14	no	_	DT	DT	_	16	neg	_	_
15	domestic	_	JJ	JJ	_	16	amod	_	_
16	pressure	_	NN	NN	_	13	dobj	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	act	_	VB	VB	_	13	vmod	_	_
19	against	_	IN	IN	_	18	prep	_	_
20	the	_	DT	DT	_	22	det	_	_
21	Islamic	_	JJ	JJ	_	22	amod	_	_
22	Republic	_	NN	NN	_	19	pobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	Iran	_	NNP	NNP	_	23	pobj	_	_
25	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, c2 / country)
(a2 / and, op, f / feel-01)
(a2 / and, op, t / tie-01)
(a3 / act-02, ARG0, a / and)
(a3 / act-02, prep-against, c3 / country)
(a5 / and, op, b / business)
(a5 / and, op, p2 / politics)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(f / feel-01, ARG0, a / and)
(f / feel-01, ARG1, p / pressure-01)
(f / feel-01, polarity, - / -)
(n / name, op, "Russia")
(n2 / name, op, "China")
(n3 / name, op, "Iran")
(n3 / name, op, "Islamic")
(n3 / name, op, "Republic")
(n3 / name, op, "of")
(p / pressure-01, ARG1, a / and)
(p / pressure-01, ARG2, a3 / act-02)
(p / pressure-01, mod, d / domestic)
(t / tie-01, ARG0, a / and)
(t / tie-01, ARG1, c3 / country)
(t / tie-01, ARG2, a5 / and)
(t / tie-01, mod, c5 / close)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(1, 0),Republic,(include-91 :ARG2 republic),false), Span(6,7,List(2),and,and,false), Span(11,12,List(3),and,and,false), Span(20,21,List(6, 5, 4),Islamic,(religious-group :name (name :op "Islamic")),false), Span(0,1,List(9, 8, 7),Russia,(country :name (name :op "Russia")),false), Span(17,18,List(10),act,act-02,false), Span(2,3,List(13, 12, 11),China,(country :name (name :op "China")),false), Span(10,11,List(16, 15, 14),Iran,(country :name (name :op "Iran")),false), Span(12,13,List(17),feel,feel-01,false), Span(5,6,List(18),political,politics,false), Span(22,23,List(19),of,of-course,false), Span(14,15,List(20),domestic,domestic,false), Span(15,16,List(21),pressure,pressure-01,false), Span(4,5,List(22),close,close,false), Span(8,9,List(23),ties,tie-01,false), Span(7,8,List(24),business,business,false), Span(1,2,List(25),and,and,false), Span(3,4,List(26),have,have-03,false)),Map(2 -> and, 5 -> name, 12 -> name, 8 -> name, 15 -> name, 21 -> pressure-01, 18 -> politics, 24 -> business, 7 -> country, 1 -> republic, 17 -> feel-01, 23 -> tie-01, 26 -> have-03, 4 -> religious-group, 11 -> country, 14 -> country, 20 -> domestic, 6 -> "Islamic", 9 -> "Russia", 0 -> include-91, 22 -> close, 16 -> "Iran", 19 -> of-course, 10 -> act-02, 3 -> and, 25 -> and, 13 -> "China"),Map(n -> name, h -> have-03, b -> business, t -> tie-01, p2 -> pressure-01, c4 -> close, a3 -> act-02, n4 -> name, d -> domestic, p -> politics, r2 -> religious-group, a -> and, n3 -> name, c3 -> country, i -> include-91, r -> republic, a2 -> and, c -> country, f -> feel-01, o -> of-course, n2 -> name, c2 -> country, a4 -> and))),[Ljava.lang.String;@1ae66107,Annotation([Ljava.lang.String;@4fc1ed39,[Ljava.lang.String;@710b6f5d,[Ljava.lang.String;@350495d1),Annotation([Ljava.lang.String;@1cc3242f,[Ljava.lang.String;@5c2baaab,[Ledu.cmu.lti.nlp.amr.Dependency;@76f057f4),Annotation([Ljava.lang.String;@674bfee6,[Ljava.lang.String;@62ac5c7c,[Ljava.lang.String;@63d3cc70),Annotation([Ljava.lang.String;@17e86809,[Ljava.lang.String;@2fec08dc,[Ledu.cmu.lti.nlp.amr.Entity;@2f23fee1))
AMR:
(a / and, op, t / tie-01)
(a2 / and, op, c4 / close)
(a2 / and, op, f / feel-01)
(a3 / act-02, ARG1, i / include-91)
(a4 / and, mod, p / politics)
(a4 / and, op, c2 / country)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(f / feel-01, ARG0, c / country)
(f / feel-01, ARG1, p2 / pressure-01)
(h / have-03, ARG0, a4 / and)
(h / have-03, ARG1, a2 / and)
(i / include-91, ARG1, b / business)
(i / include-91, ARG2, r / republic)
(i / include-91, mod, r2 / religious-group)
(n / name, op, "Islamic")
(n2 / name, op, "Russia")
(n3 / name, op, "China")
(n4 / name, op, "Iran")
(p2 / pressure-01, ARG1, a3 / act-02)
(p2 / pressure-01, mod, d / domestic)
(r2 / religious-group, name, n / name)
(t / tie-01, ARG0, o / of-course)
(t / tie-01, ARG1, c3 / country)
(t / tie-01, ARG2, a2 / and)

Decoded in 1,845,168 microseconds
Sentence: The United States does not have close political and business ties with Iran and feels domestic pressure to act against the Islamic Republic of Iran.

Oracle Span 1:  act => act-02
Oracle Span 2:  and => and
Oracle Span 3:  and => and
Oracle Span 4:  business => business
Oracle Span 5:  close => close
Oracle Span 6:  domestic => domestic
Oracle Span 7:  feels => feel-01
Oracle Span 8:  Islamic Republic of Iran => (country :name (name :op "Iran" :op "of" :op "Republic" :op "Islamic"))
Oracle Span 9:  political => politics
Oracle Span 10:  pressure => pressure-01
Oracle Span 11:  ties => tie-01
Oracle Span 12:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (country :name (name :op "Islamic" :op "Republic" :op "of" :op "Iran"))
Spans:
Span 18-19:  act => act-02
Span 8-9:  and => and
Span 13-14:  and => and
Span 9-10:  business => business
Span 6-7:  close => close
Span 15-16:  domestic => domestic
Span 14-15:  feels => feel-01
Span 5-6:  have => have-03
Span 12-13:  Iran => (country :name (name :op "Iran"))
Span 21-22:  Islamic => (religious-group :name (name :op "Islamic"))
Span 23-24:  of => of-course
Span 7-8:  political => politics
Span 16-17:  pressure => pressure-01
Span 22-23:  Republic => (include-91 :ARG2 republic)
Span 10-11:  ties => tie-01
Span 1-3:  United States => (country :name (name :op "United" :op "States"))

Langrangian relaxation converged after 43 iterations. Delta = 0.0
Oracle Span 18-19:  act => act-02
Oracle Span 8-9:  and => and
Oracle Span 13-14:  and => and
Oracle Span 9-10:  business => business
Oracle Span 6-7:  close => close
Oracle Span 15-16:  domestic => domestic
Oracle Span 14-15:  feels => feel-01
Oracle Span 21-25:  Islamic Republic of Iran => (country :name (name :op "Iran" :op "of" :op "Republic" :op "Islamic"))
Oracle Span 7-8:  political => politics
Oracle Span 16-17:  pressure => pressure-01
Oracle Span 10-11:  ties => tie-01
Oracle Span 1-3:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	United	_	NNP	NNP	_	3	nn	_	_
3	States	_	NNPS	NNPS	_	6	nsubj	_	_
4	does	_	VBZ	VBZ	_	6	aux	_	_
5	not	_	RB	RB	_	6	neg	_	_
6	have	_	VB	VB	_	0	root	_	_
7	close	_	JJ	JJ	_	11	amod	_	_
8	political	_	JJ	JJ	_	11	amod	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	business	_	NN	NN	_	8	conj	_	_
11	ties	_	NNS	NNS	_	6	dobj	_	_
12	with	_	IN	IN	_	6	prep	_	_
13	Iran	_	NNP	NNP	_	12	pobj	_	_
14	and	_	CC	CC	_	6	cc	_	_
15	feels	_	VBZ	VBZ	_	6	conj	_	_
16	domestic	_	JJ	JJ	_	17	amod	_	_
17	pressure	_	NN	NN	_	15	dobj	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	act	_	VB	VB	_	15	vmod	_	_
20	against	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	23	det	_	_
22	Islamic	_	JJ	JJ	_	23	amod	_	_
23	Republic	_	NN	NN	_	20	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	Iran	_	NNP	NNP	_	24	pobj	_	_
26	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, f / feel-01)
(a / and, op, t / tie-01)
(a2 / act-02, ARG0, c / country)
(a4 / and, op, b / business)
(a4 / and, op, p / politics)
(c / country, name, n / name)
(c3 / country, name, n3 / name)
(f / feel-01, ARG0, c / country)
(f / feel-01, ARG1, p2 / pressure-01)
(n / name, op, "States")
(n / name, op, "United")
(n3 / name, op, "Iran")
(n3 / name, op, "Islamic")
(n3 / name, op, "Republic")
(n3 / name, op, "of")
(p2 / pressure-01, ARG1, c / country)
(p2 / pressure-01, ARG2, a2 / act-02)
(p2 / pressure-01, mod, d / domestic)
(t / tie-01, ARG0, c / country)
(t / tie-01, ARG1, c3 / country)
(t / tie-01, ARG2, a4 / and)
(t / tie-01, mod, c4 / close)

Input(Some(Graph(null,ArrayBuffer(Span(1,3,List(3, 2, 1, 0),United States,(country :name (name :op "United" :op "States")),false), Span(14,15,List(4),feels,feel-01,false), Span(7,8,List(5),political,politics,false), Span(10,11,List(6),ties,tie-01,false), Span(9,10,List(7),business,business,false), Span(5,6,List(8),have,have-03,false), Span(6,7,List(9),close,close,false), Span(15,16,List(10),domestic,domestic,false), Span(18,19,List(11),act,act-02,false), Span(12,13,List(14, 13, 12),Iran,(country :name (name :op "Iran")),false), Span(21,22,List(17, 16, 15),Islamic,(religious-group :name (name :op "Islamic")),false), Span(8,9,List(18),and,and,false), Span(13,14,List(19),and,and,false), Span(22,23,List(21, 20),Republic,(include-91 :ARG2 republic),false), Span(23,24,List(22),of,of-course,false), Span(16,17,List(23),pressure,pressure-01,false)),Map(2 -> "United", 5 -> politics, 12 -> country, 15 -> religious-group, 8 -> have-03, 21 -> republic, 18 -> and, 7 -> business, 17 -> "Islamic", 1 -> name, 23 -> pressure-01, 4 -> feel-01, 11 -> act-02, 14 -> "Iran", 20 -> include-91, 6 -> tie-01, 22 -> of-course, 0 -> country, 9 -> close, 16 -> name, 19 -> and, 3 -> "States", 10 -> domestic, 13 -> name),Map(n -> name, h -> have-03, t -> tie-01, b -> business, p2 -> pressure-01, a3 -> and, d -> domestic, r2 -> republic, p -> politics, n3 -> name, a -> act-02, c3 -> country, i -> include-91, a2 -> and, r -> religious-group, c -> country, f -> feel-01, o -> of-course, c2 -> close, n2 -> name))),[Ljava.lang.String;@53462f81,Annotation([Ljava.lang.String;@5cee2307,[Ljava.lang.String;@370409c9,[Ljava.lang.String;@128ed390),Annotation([Ljava.lang.String;@7056cc67,[Ljava.lang.String;@5d0d3f71,[Ledu.cmu.lti.nlp.amr.Dependency;@4a503f58),Annotation([Ljava.lang.String;@2e2677d1,[Ljava.lang.String;@6855b386,[Ljava.lang.String;@5c97ff4a),Annotation([Ljava.lang.String;@17f6a17f,[Ljava.lang.String;@a73d4af,[Ledu.cmu.lti.nlp.amr.Entity;@4f7f8fe4))
AMR:
(a / act-02, ARG0, p / politics)
(a / act-02, ARG1, i / include-91)
(a2 / and, op, t / tie-01)
(a3 / and, op, f / feel-01)
(c / country, name, n / name)
(c3 / country, name, n2 / name)
(f / feel-01, ARG0, o / of-course)
(f / feel-01, ARG1, p2 / pressure-01)
(h / have-03, ARG0, c / country)
(h / have-03, ARG1, a3 / and)
(i / include-91, ARG2, r2 / republic)
(i / include-91, mod, r / religious-group)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "Iran")
(n3 / name, op, "Islamic")
(p2 / pressure-01, ARG1, a / act-02)
(p2 / pressure-01, mod, d / domestic)
(r / religious-group, name, n3 / name)
(t / tie-01, ARG0, c / country)
(t / tie-01, ARG1, c3 / country)
(t / tie-01, ARG6, b / business)
(t / tie-01, mod, c2 / close)

Decoded in 1,700,386 microseconds
Sentence: Russia and China hold veto power over Security Council decisions.

Oracle Span 1:  and => and
Oracle Span 2:  China => (country :name (name :op "China"))
Oracle Span 3:  decisions => decide-01
Oracle Span 4:  hold => hold-01
Oracle Span 5:  power => power
Oracle Span 6:  Russia => (country :name (name :op "Russia"))
Oracle Span 7:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 8:  veto => veto-01
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "China"))
NER Entity: (organization :name (name :op "Security" :op "Council"))
Spans:
Span 1-2:  and => and
Span 2-3:  China => (country :name (name :op "China"))
Span 9-10:  decisions. => decide-01
Span 3-4:  hold => hold-01
Span 5-6:  power => power
Span 0-1:  Russia => (country :name (name :op "Russia"))
Span 7-9:  Security Council => (organization :name (name :op "Council" :op "Security"))
Span 4-5:  veto => veto

Langrangian relaxation converged after 5 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 2-3:  China => (country :name (name :op "China"))
Oracle Span 9-10:  decisions => decide-01
Oracle Span 3-4:  hold => hold-01
Oracle Span 5-6:  power => power
Oracle Span 0-1:  Russia => (country :name (name :op "Russia"))
Oracle Span 7-9:  Security Council => (organization :name (name :op "Council" :op "Security"))
Oracle Span 4-5:  veto => veto-01

Dependencies:
1	Russia	_	NNP	NNP	_	4	nsubj	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	China	_	NNP	NNP	_	1	conj	_	_
4	hold	_	VBP	VBP	_	0	root	_	_
5	veto	_	NN	NN	_	6	nn	_	_
6	power	_	NN	NN	_	4	dobj	_	_
7	over	_	IN	IN	_	6	prep	_	_
8	Security	_	NNP	NNP	_	10	nn	_	_
9	Council	_	NNP	NNP	_	10	nn	_	_
10	decisions	_	NNS	NNS	_	7	pobj	_	_
11	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, c2 / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(d / decide-01, ARG0, o / organization)
(h / hold-01, ARG0, a / and)
(h / hold-01, ARG1, p / power)
(n / name, op, "Russia")
(n2 / name, op, "China")
(n3 / name, op, "Council")
(n3 / name, op, "Security")
(o / organization, name, n3 / name)
(p / power, mod, v / veto-01)
(v / veto-01, ARG1, d / decide-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,9,List(3, 2, 1, 0),Security Council,(organization :name (name :op "Council" :op "Security")),false), Span(9,10,List(4),decisions.,decide-01,false), Span(5,6,List(5),power,power,false), Span(0,1,List(8, 7, 6),Russia,(country :name (name :op "Russia")),false), Span(4,5,List(9),veto,veto,false), Span(2,3,List(12, 11, 10),China,(country :name (name :op "China")),false), Span(3,4,List(13),hold,hold-01,false), Span(1,2,List(14),and,and,false)),Map(2 -> "Council", 5 -> power, 12 -> "China", 8 -> "Russia", 7 -> name, 1 -> name, 4 -> decide-01, 11 -> name, 14 -> and, 6 -> country, 0 -> organization, 9 -> veto, 3 -> "Security", 10 -> country, 13 -> hold-01),Map(n -> name, h -> hold-01, v -> veto, d -> decide-01, p -> power, a -> and, n3 -> name, c -> country, o -> organization, c2 -> country, n2 -> name))),[Ljava.lang.String;@3a591b6,Annotation([Ljava.lang.String;@3e00d492,[Ljava.lang.String;@5db3f690,[Ljava.lang.String;@1f8a543),Annotation([Ljava.lang.String;@2e7faceb,[Ljava.lang.String;@16e359f2,[Ledu.cmu.lti.nlp.amr.Dependency;@54263ac8),Annotation([Ljava.lang.String;@10305fb2,[Ljava.lang.String;@437ba1ab,[Ljava.lang.String;@4fdb5cff),Annotation([Ljava.lang.String;@2a4edfb6,[Ljava.lang.String;@3891d882,[Ledu.cmu.lti.nlp.amr.Entity;@26f950c2))
AMR:
(a / and, op, c / country)
(a / and, op, c2 / country)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(d / decide-01, ARG0, c / country)
(d / decide-01, ARG1, o / organization)
(h / hold-01, ARG0, a / and)
(h / hold-01, ARG1, p / power)
(n / name, op, "Council")
(n / name, op, "Security")
(n2 / name, op, "Russia")
(n3 / name, op, "China")
(o / organization, name, n / name)
(p / power, mod, v / veto)

Decoded in 231,005 microseconds
Sentence: Moscow's Interfax news agency quoted Russian diplomat Sergei ryabkov as stating that the parties struck no deal on sanctions against Iran at the 081113 meeting and that the Western countries are in favor of the sanctions against Iran while China and Russia did not support sanctions against Iran.

Oracle Span 1:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 2:  agency => agency
Oracle Span 3:  and => and
Oracle Span 4:  and => and
Oracle Span 5:  China => (country :name (name :op "China"))
Oracle Span 6:  countries => country
Oracle Span 7:  deal => deal-01
Oracle Span 8:  diplomat => (have-org-role-91 :ARG2 diplomat)
Oracle Span 9:  favor => favor-01
Oracle Span 10:  Interfax => (name :op "Interfax")
Oracle Span 11:  Iran => (country :name (name :op "Iran"))
Oracle Span 12:  meeting => meet-03
Oracle Span 13:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 14:  news => news
Oracle Span 15:  no => -
Oracle Span 16:  parties => party
Oracle Span 17:  quoted => quote-01
Oracle Span 18:  Russia => (country :name (name :op "Russia"))
Oracle Span 19:  sanctions => sanction-02
Oracle Span 20:  Sergei ryabkov => (person :name (name :op "Ryabkov" :op "Sergei"))
Oracle Span 21:  struck => strike-05
Oracle Span 22:  support => support-01
Oracle Span 23:  Western => (world-region :name (name :op "West"))
NER Entity: (organization :name (name :op "Interfax"))
NER Entity: (country :name (name :op "Moscow"))
NER Entity: (person :name (name :op "Sergei" :op "ryabkov"))
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "China"))
NER Entity: (thing :name (name :op "Western"))
mkDayMonthYear(081113,13,11,2008)
mkDayMonthYear(081113,13,11,08)
Spans:
Span 46-47:  against => (thing :ARG2-of sanction-02)
Span 36-37:  against => (thing :ARG2-of sanction-02)
Span 19-20:  against => sanction-01
Span 3-4:  agency => news
Span 25-26:  and => meet-01
Span 30-31:  are => country
Span 21-22:  at => (country :name (name :op "Iran"))
Span 39-40:  China => will-01
Span 29-30:  countries => west
Span 42-43:  did => (country :name (name :op "Russia"))
Span 6-7:  diplomat => (country :name (name :op "Russia"))
Span 0-1:  Moscow's => (city :name (name :op "Moscow"))
Span 0-1:  Moscow's => 1
Span 2-3:  news => (publication :name (name :op "Interfax"))
Span 15-16:  no => democratic
Span 33-34:  of => favor-01
Span 17-18:  on => deal-01
Span 41-42:  Russia => and
Span 5-6:  Russian => quote-01
Span 8-10:  ryabkov as => (person :name (name :op "Sergei" :op "ryabkov"))
Span 45-46:  sanctions => support-01
Span 7-8:  Sergei => (person :ARG0-of (have-org-role-91 :ARG2 diplomat))
Span 14-15:  struck => party
Span 26-27:  that => and
Span 11-12:  that => state-01
Span 38-39:  while => (country :name (name :op "Iran"))

Langrangian relaxation converged after 47 iterations. Delta = 0.0
Oracle Span 24-25:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 4-5:  agency => agency
Oracle Span 26-27:  and => and
Oracle Span 41-42:  and => and
Oracle Span 40-41:  China => (country :name (name :op "China"))
Oracle Span 30-31:  countries => country
Oracle Span 17-18:  deal => deal-01
Oracle Span 7-8:  diplomat => (have-org-role-91 :ARG2 diplomat)
Oracle Span 33-34:  favor => favor-01
Oracle Span 2-3:  Interfax => (name :op "Interfax")
Oracle Span 21-22:  Iran => (country :name (name :op "Iran"))
Oracle Span 25-26:  meeting => meet-03
Oracle Span 0-1:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 3-4:  news => news
Oracle Span 16-17:  no => -
Oracle Span 14-15:  parties => party
Oracle Span 5-6:  quoted => quote-01
Oracle Span 42-43:  Russia => (country :name (name :op "Russia"))
Oracle Span 19-20:  sanctions => sanction-02
Oracle Span 8-10:  Sergei ryabkov => (person :name (name :op "Ryabkov" :op "Sergei"))
Oracle Span 15-16:  struck => strike-05
Oracle Span 45-46:  support => support-01
Oracle Span 29-30:  Western => (world-region :name (name :op "West"))

Dependencies:
1	Moscow	_	NNP	NNP	_	5	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	Interfax	_	NNP	NNP	_	5	nn	_	_
4	news	_	NN	NN	_	5	nn	_	_
5	agency	_	NN	NN	_	6	nsubj	_	_
6	quoted	_	VBD	VBD	_	0	root	_	_
7	Russian	_	JJ	JJ	_	10	amod	_	_
8	diplomat	_	NN	NN	_	10	nn	_	_
9	Sergei	_	NNP	NNP	_	10	nn	_	_
10	ryabkov	_	NNP	NNP	_	6	dobj	_	_
11	as	_	IN	IN	_	6	prep	_	_
12	stating	_	VBG	VBG	_	11	pcomp	_	_
13	that	_	IN	IN	_	16	mark	_	_
14	the	_	DT	DT	_	15	det	_	_
15	parties	_	NNS	NNS	_	16	nsubj	_	_
16	struck	_	VBD	VBD	_	12	ccomp	_	_
17	no	_	DT	DT	_	18	neg	_	_
18	deal	_	NN	NN	_	16	dobj	_	_
19	on	_	IN	IN	_	16	prep	_	_
20	sanctions	_	NNS	NNS	_	19	pobj	_	_
21	against	_	IN	IN	_	20	prep	_	_
22	Iran	_	NNP	NNP	_	21	pobj	_	_
23	at	_	IN	IN	_	16	prep	_	_
24	the	_	DT	DT	_	26	det	_	_
25	081113	_	CD	CD	_	26	num	_	_
26	meeting	_	NN	NN	_	23	pobj	_	_
27	and	_	CC	CC	_	16	cc	_	_
28	that	_	IN	IN	_	32	mark	_	_
29	the	_	DT	DT	_	31	det	_	_
30	Western	_	JJ	JJ	_	31	amod	_	_
31	countries	_	NNS	NNS	_	32	nsubj	_	_
32	are	_	VBP	VBP	_	16	conj	_	_
33	in	_	IN	IN	_	32	prep	_	_
34	favor	_	NN	NN	_	33	pobj	_	_
35	of	_	IN	IN	_	34	prep	_	_
36	the	_	DT	DT	_	37	det	_	_
37	sanctions	_	NNS	NNS	_	35	pobj	_	_
38	against	_	IN	IN	_	37	prep	_	_
39	Iran	_	NNP	NNP	_	38	pobj	_	_
40	while	_	IN	IN	_	46	mark	_	_
41	China	_	NNP	NNP	_	46	nsubj	_	_
42	and	_	CC	CC	_	41	cc	_	_
43	Russia	_	NNP	NNP	_	41	conj	_	_
44	did	_	VBD	VBD	_	46	aux	_	_
45	not	_	RB	RB	_	46	neg	_	_
46	support	_	VB	VB	_	32	advcl	_	_
47	sanctions	_	NNS	NNS	_	46	dobj	_	_
48	against	_	IN	IN	_	46	prep	_	_
49	Iran	_	NNP	NNP	_	48	pobj	_	_
50	.	_	.	.	_	6	punct	_	_

Oracle:
(a / agency, location, c6 / city)
(a / agency, mod, n / news)
(a / agency, name, n2 / name)
(a2 / and, op, s / strike-05)
(a3 / and, op, c / country)
(a3 / and, op, c5 / country)
(c / country, name, n3 / name)
(c2 / country, name, n5 / name)
(c3 / country, mod, w / world-region)
(c5 / country, name, n7 / name)
(c6 / city, name, n8 / name)
(d2 / deal-01, ARG1, s3 / sanction-02)
(d3 / date-entity, day, 13)
(d3 / date-entity, month, 11)
(d3 / date-entity, year, 2008)
(f / favor-01, ARG0, c3 / country)
(f / favor-01, ARG1, s3 / sanction-02)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, d / diplomat)
(m / meet-03, time, d3 / date-entity)
(n2 / name, op, "Interfax")
(n3 / name, op, "Russia")
(n4 / name, op, "Ryabkov")
(n4 / name, op, "Sergei")
(n5 / name, op, "Iran")
(n6 / name, op, "West")
(n7 / name, op, "China")
(n8 / name, op, "Moscow")
(p2 / person, name, n4 / name)
(q / quote-01, ARG0, a / agency)
(q / quote-01, ARG1, p2 / person)
(q / quote-01, ARG2, a2 / and)
(s / strike-05, ARG0, p / party)
(s / strike-05, ARG1, d2 / deal-01)
(s / strike-05, polarity, - / -)
(s / strike-05, time, m / meet-03)
(s3 / sanction-02, ARG1, c2 / country)
(s5 / support-01, ARG0, a3 / and)
(s5 / support-01, ARG1, s3 / sanction-02)
(w / world-region, name, n6 / name)

Input(Some(Graph(null,ArrayBuffer(Span(8,10,List(3, 2, 1, 0),ryabkov as,(person :name (name :op "Sergei" :op "ryabkov")),false), Span(30,31,List(4),are,country,false), Span(39,40,List(5),China,will-01,false), Span(25,26,List(6),and,meet-01,false), Span(5,6,List(7),Russian,quote-01,false), Span(26,27,List(8),that,and,false), Span(21,22,List(11, 10, 9),at,(country :name (name :op "Iran")),false), Span(6,7,List(14, 13, 12),diplomat,(country :name (name :op "Russia")),false), Span(41,42,List(15),Russia,and,false), Span(11,12,List(16),that,state-01,false), Span(7,8,List(19, 18, 17),Sergei,(person :ARG0-of (have-org-role-91 :ARG2 diplomat)),false), Span(45,46,List(20),sanctions,support-01,false), Span(46,47,List(22, 21),against,(thing :ARG2-of sanction-02),false), Span(42,43,List(25, 24, 23),did,(country :name (name :op "Russia")),false), Span(36,37,List(27, 26),against,(thing :ARG2-of sanction-02),false), Span(2,3,List(30, 29, 28),news,(publication :name (name :op "Interfax")),false), Span(29,30,List(31),countries,west,false), Span(0,1,List(34, 33, 32),Moscow's,(city :name (name :op "Moscow")),false), Span(0,1,List(35),Moscow's,1,false), Span(14,15,List(36),struck,party,false), Span(38,39,List(39, 38, 37),while,(country :name (name :op "Iran")),false), Span(17,18,List(40),on,deal-01,false), Span(3,4,List(41),agency,news,false), Span(33,34,List(42),of,favor-01,false), Span(19,20,List(43),against,sanction-01,false), Span(15,16,List(44),no,democratic,false)),Map(39 -> "Iran", 30 -> "Interfax", 2 -> "Sergei", 5 -> will-01, 33 -> name, 27 -> sanction-02, 12 -> country, 8 -> and, 15 -> and, 42 -> favor-01, 36 -> party, 21 -> thing, 18 -> have-org-role-91, 24 -> name, 41 -> news, 35 -> 1, 7 -> quote-01, 1 -> name, 17 -> person, 44 -> democratic, 23 -> country, 38 -> name, 26 -> thing, 4 -> country, 11 -> "Iran", 32 -> city, 14 -> "Russia", 29 -> name, 20 -> support-01, 34 -> "Moscow", 28 -> publication, 6 -> meet-01, 40 -> deal-01, 43 -> sanction-01, 9 -> country, 0 -> person, 22 -> sanction-02, 16 -> state-01, 37 -> country, 19 -> diplomat, 10 -> name, 3 -> "ryabkov", 31 -> west, 25 -> "Russia", 13 -> name),Map(s5 -> sanction-01, w -> will-01, n -> name, h -> have-org-role-91, q -> quote-01, s2 -> support-01, t -> thing, d3 -> democratic, n7 -> name, p2 -> person, c4 -> country, n4 -> name, s -> state-01, s4 -> sanction-02, m -> meet-01, d -> diplomat, 1 -> 1, p -> person, n3 -> name, c3 -> country, a -> and, p4 -> party, d2 -> deal-01, n6 -> name, c6 -> country, t2 -> thing, w2 -> west, a2 -> and, c -> country, s3 -> sanction-02, n8 -> news, f -> favor-01, p3 -> publication, n2 -> name, c2 -> country, c5 -> city, n5 -> name))),[Ljava.lang.String;@7ed2266d,Annotation([Ljava.lang.String;@5fae21da,[Ljava.lang.String;@52406c57,[Ljava.lang.String;@49b5d78e),Annotation([Ljava.lang.String;@26bb619b,[Ljava.lang.String;@8b53467,[Ledu.cmu.lti.nlp.amr.Dependency;@59c6d3f2),Annotation([Ljava.lang.String;@3ea866e3,[Ljava.lang.String;@43e27f14,[Ljava.lang.String;@62d56d03),Annotation([Ljava.lang.String;@d637be8,[Ljava.lang.String;@70018bd9,[Ledu.cmu.lti.nlp.amr.Entity;@204b4012))
AMR:
(a / and, op, d3 / democratic)
(a2 / and, op, c / country)
(a2 / and, op, c4 / country)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / city, name, n6 / name)
(c6 / country, name, n7 / name)
(d2 / deal-01, ARG0, p4 / party)
(d2 / deal-01, ARG1, s5 / sanction-01)
(d3 / democratic, mod, p4 / party)
(f / favor-01, ARG0, p4 / party)
(f / favor-01, ARG1, t2 / thing)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c3 / country)
(h / have-org-role-91, ARG2, d / diplomat)
(m / meet-01, ARG0, p4 / party)
(m / meet-01, ARG1, n8 / news)
(n / name, op, "Sergei")
(n / name, op, "ryabkov")
(n2 / name, op, "Iran")
(n3 / name, op, "Russia")
(n4 / name, op, "Russia")
(n5 / name, op, "Interfax")
(n6 / name, op, "Moscow")
(n7 / name, op, "Iran")
(n8 / news, poss, 1 / 1)
(n8 / news, poss, c5 / city)
(p / person, name, n / name)
(p3 / publication, name, n5 / name)
(q / quote-01, ARG0, p3 / publication)
(q / quote-01, ARG1, p2 / person)
(q / quote-01, ARG2, s / state-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / and)
(s2 / support-01, ARG0, a2 / and)
(s2 / support-01, ARG1, t / thing)
(s3 / sanction-02, ARG1, f / favor-01)
(s3 / sanction-02, ARG2, t / thing)
(s4 / sanction-02, ARG1, c6 / country)
(s4 / sanction-02, ARG2, t2 / thing)
(s5 / sanction-01, ARG1, c2 / country)
(w / will-01, ARG0, s2 / support-01)
(w / will-01, ARG1, w2 / west)

Decoded in 6,047,832 microseconds
Sentence: Sergei ryabkov attended the 081113 meeting.

Oracle Span 1:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 2:  attended => attend-01
Oracle Span 3:  meeting => meet-03
Oracle Span 4:  Sergei ryabkov => (person :name (name :op "Ryabkov" :op "Sergei"))
NER Entity: (person :name (name :op "Sergei"))
mkDayMonthYear(081113,13,11,2008)
mkDayMonthYear(081113,13,11,08)
Spans:
Span 2-3:  attended => attend-01
Span 5-6:  meeting. => meet-01
Span 0-1:  Sergei => 1
Span 0-2:  Sergei ryabkov => (person :name (name :op "Sergei" :op "ryabkov"))

Langrangian relaxation converged after 2 iterations. Delta = 0.0
Oracle Span 4-5:  081113 => (date-entity :day 13 :month 11 :year 2008)
Oracle Span 2-3:  attended => attend-01
Oracle Span 5-6:  meeting => meet-03
Oracle Span 0-2:  Sergei ryabkov => (person :name (name :op "Ryabkov" :op "Sergei"))

Dependencies:
1	Sergei	_	NNP	NNP	_	2	nn	_	_
2	ryabkov	_	NNP	NNP	_	3	nsubj	_	_
3	attended	_	VBD	VBD	_	0	root	_	_
4	the	_	DT	DT	_	6	det	_	_
5	081113	_	CD	CD	_	6	num	_	_
6	meeting	_	NN	NN	_	3	dobj	_	_
7	.	_	.	.	_	3	punct	_	_

Oracle:
(a / attend-01, ARG0, p / person)
(a / attend-01, ARG1, m / meet-03)
(d / date-entity, day, 13)
(d / date-entity, month, 11)
(d / date-entity, year, 2008)
(m / meet-03, time, d / date-entity)
(n / name, op, "Ryabkov")
(n / name, op, "Sergei")
(p / person, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(0,2,List(3, 2, 1, 0),Sergei ryabkov,(person :name (name :op "Sergei" :op "ryabkov")),false), Span(0,1,List(4),Sergei,1,false), Span(2,3,List(5),attended,attend-01,false), Span(5,6,List(6),meeting.,meet-01,false)),Map(2 -> "Sergei", 5 -> attend-01, 1 -> name, 4 -> 1, 6 -> meet-01, 0 -> person, 3 -> "ryabkov"),Map(n -> name, m -> meet-01, 1 -> 1, p -> person, a -> attend-01))),[Ljava.lang.String;@106b832,Annotation([Ljava.lang.String;@15bf7ce7,[Ljava.lang.String;@643b9d96,[Ljava.lang.String;@3eab9bdf),Annotation([Ljava.lang.String;@ad86310,[Ljava.lang.String;@646e7ee8,[Ledu.cmu.lti.nlp.amr.Dependency;@5c0198de),Annotation([Ljava.lang.String;@3e9685e2,[Ljava.lang.String;@779fb1c3,[Ljava.lang.String;@609118e6),Annotation([Ljava.lang.String;@3006ab42,[Ljava.lang.String;@3ab59135,[Ledu.cmu.lti.nlp.amr.Entity;@302e3e09))
AMR:
(1 / 1, mod, p / person)
(a / attend-01, ARG0, p / person)
(a / attend-01, ARG1, m / meet-01)
(n / name, op, "Sergei")
(n / name, op, "ryabkov")
(p / person, name, n / name)

Decoded in 75,799 microseconds
Sentence: A report released this week says Iran has made significant progress at Iran's heavy-water research reactor facility near the city of Arak.

Oracle Span 1:  Arak => (name :op "Arak")
Oracle Span 2:  city => city
Oracle Span 3:  facility => facility
Oracle Span 4:  heavy => heavy
Oracle Span 5:  Iran => (country :name (name :op "Iran"))
Oracle Span 6:  near => near
Oracle Span 7:  progress => progress-01
Oracle Span 8:  reactor => reactor
Oracle Span 9:  released => release-01
Oracle Span 10:  report => report-01
Oracle Span 11:  research => research-01
Oracle Span 12:  significant => significant
Oracle Span 13:  this => this
Oracle Span 14:  water => water
Oracle Span 15:  week => week
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Arak"))
Spans:
Span 22-23:   => (city :name (name :op "Arak"))
Span 0-4:  A report released this => (date-entity :time this :time week)
Span 16-17:  facility => reactor
Span 17-18:  near => facility
Span 10-11:  progress => progress-01
Span 15-16:  reactor => research-01
Span 2-3:  released => release-01
Span 1-2:  report => report
Span 5-6:  says => say-01
Span 9-10:  significant => significant
Span 18-19:  the => near

Langrangian relaxation converged after 39 iterations. Delta = 0.0
Oracle Span 24-25:  Arak => (name :op "Arak")
Oracle Span 22-23:  city => city
Oracle Span 19-20:  facility => facility
Oracle Span 14-15:  heavy => heavy
Oracle Span 6-7:  Iran => (country :name (name :op "Iran"))
Oracle Span 20-21:  near => near
Oracle Span 10-11:  progress => progress-01
Oracle Span 18-19:  reactor => reactor
Oracle Span 2-3:  released => release-01
Oracle Span 1-2:  report => report-01
Oracle Span 17-18:  research => research-01
Oracle Span 9-10:  significant => significant
Oracle Span 3-4:  this => this
Oracle Span 16-17:  water => water
Oracle Span 4-5:  week => week

Dependencies:
1	A	_	DT	DT	_	2	det	_	_
2	report	_	NN	NN	_	6	nsubj	_	_
3	released	_	VBN	VBN	_	2	vmod	_	_
4	this	_	DT	DT	_	5	det	_	_
5	week	_	NN	NN	_	3	tmod	_	_
6	says	_	VBZ	VBZ	_	0	root	_	_
7	Iran	_	NNP	NNP	_	9	nsubj	_	_
8	has	_	VBZ	VBZ	_	9	aux	_	_
9	made	_	VBN	VBN	_	6	ccomp	_	_
10	significant	_	JJ	JJ	_	11	amod	_	_
11	progress	_	NN	NN	_	9	dobj	_	_
12	at	_	IN	IN	_	9	prep	_	_
13	Iran	_	NNP	NNP	_	18	poss	_	_
14	's	_	POS	POS	_	13	possessive	_	_
15	heavy-water	_	NN	NN	_	18	nn	_	_
16	research	_	NN	NN	_	18	nn	_	_
17	reactor	_	NN	NN	_	18	nn	_	_
18	facility	_	NN	NN	_	12	pobj	_	_
19	near	_	IN	IN	_	9	prep	_	_
20	the	_	DT	DT	_	21	det	_	_
21	city	_	NN	NN	_	19	pobj	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	Arak	_	NNP	NNP	_	22	pobj	_	_
24	.	_	.	.	_	6	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / city, name, n3 / name)
(f / facility, location, n2 / near)
(f / facility, mod, r3 / reactor)
(n / name, op, "Iran")
(n2 / near, op, c2 / city)
(n3 / name, op, "Arak")
(p / progress-01, ARG1, c / country)
(p / progress-01, mod, s / significant)
(p / progress-01, topic, f / facility)
(r / report-01, ARG1, p / progress-01)
(r2 / release-01, ARG1, r / report-01)
(r2 / release-01, time, w / week)
(r3 / reactor, mod, w2 / water)
(r3 / reactor, purpose, r4 / research-01)
(w / week, mod, t / this)
(w2 / water, mod, h / heavy)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),facility,reactor,false), Span(17,18,List(1),near,facility,false), Span(2,3,List(2),released,release-01,false), Span(18,19,List(3),the,near,false), Span(22,23,List(6, 5, 4),,(city :name (name :op "Arak")),false), Span(15,16,List(7),reactor,research-01,false), Span(10,11,List(8),progress,progress-01,false), Span(0,4,List(11, 10, 9),A report released this,(date-entity :time this :time week),false), Span(9,10,List(12),significant,significant,false), Span(5,6,List(13),says,say-01,false), Span(1,2,List(14),report,report,false)),Map(2 -> release-01, 5 -> name, 12 -> significant, 8 -> progress-01, 7 -> research-01, 1 -> facility, 4 -> city, 11 -> week, 14 -> report, 6 -> "Arak", 0 -> reactor, 9 -> date-entity, 3 -> near, 10 -> this, 13 -> say-01),Map(n -> near, w -> week, r3 -> research-01, s2 -> say-01, t -> this, s -> significant, d -> date-entity, r2 -> release-01, p -> progress-01, r4 -> report, r -> reactor, c -> city, f -> facility, n2 -> name))),[Ljava.lang.String;@7f44b2e2,Annotation([Ljava.lang.String;@ba81f65,[Ljava.lang.String;@1d71145f,[Ljava.lang.String;@14046a05),Annotation([Ljava.lang.String;@4e0d19c5,[Ljava.lang.String;@5156456,[Ledu.cmu.lti.nlp.amr.Dependency;@10d34b47),Annotation([Ljava.lang.String;@27b04f1a,[Ljava.lang.String;@1d5a918,[Ljava.lang.String;@2fcc4aa0),Annotation([Ljava.lang.String;@254fb56d,[Ljava.lang.String;@a2e641,[Ledu.cmu.lti.nlp.amr.Entity;@2c931224))
AMR:
(c / city, name, n2 / name)
(d / date-entity, time, t / this)
(d / date-entity, time, w / week)
(f / facility, mod, r / reactor)
(n / near, mod, f / facility)
(n2 / name, op, "Arak")
(p / progress-01, ARG0, f / facility)
(p / progress-01, ARG1, c / city)
(p / progress-01, ARG2, s / significant)
(r2 / release-01, ARG1, r4 / report)
(r3 / research-01, ARG1, r / reactor)
(s2 / say-01, ARG0, r4 / report)
(s2 / say-01, ARG1, p / progress-01)
(s2 / say-01, ARG6, d / date-entity)

Decoded in 1,032,411 microseconds
Sentence: Iran's heavy-water research reactor near Arak could eventually produce plutonium that might be used in a nuclear weapon.

Oracle Span 1:  Arak => (city :name (name :op "Arak"))
Oracle Span 2:  could => possible
Oracle Span 3:  eventually => eventual
Oracle Span 4:  heavy => heavy
Oracle Span 5:  Iran => (country :name (name :op "Iran"))
Oracle Span 6:  near => near
Oracle Span 7:  nuclear => nucleus
Oracle Span 8:  plutonium => plutonium
Oracle Span 9:  produce => produce-01
Oracle Span 10:  reactor => reactor
Oracle Span 11:  research => research-01
Oracle Span 12:  used => use-01
Oracle Span 13:  water => water
Oracle Span 14:  weapon => weapon
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Arak"))
Spans:
Span 18-19:   => weapon
Span 5-6:  Arak => near
Span 6-7:  could => (city :name (name :op "Arak"))
Span 7-8:  eventually => possible
Span 14-15:  in => use-01
Span 0-1:  Iran's => (country :name (name :op "Iran"))
Span 4-5:  near => reactor
Span 9-10:  plutonium => produce-01
Span 8-9:  produce => eventual
Span 3-4:  reactor => research-01
Span 10-11:  that => plutonium
Span 17-18:  weapon. => nucleus

Langrangian relaxation converged after 28 iterations. Delta = 0.0
Oracle Span 8-9:  Arak => (city :name (name :op "Arak"))
Oracle Span 9-10:  could => possible
Oracle Span 10-11:  eventually => eventual
Oracle Span 2-3:  heavy => heavy
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 7-8:  near => near
Oracle Span 19-20:  nuclear => nucleus
Oracle Span 12-13:  plutonium => plutonium
Oracle Span 11-12:  produce => produce-01
Oracle Span 6-7:  reactor => reactor
Oracle Span 5-6:  research => research-01
Oracle Span 16-17:  used => use-01
Oracle Span 4-5:  water => water
Oracle Span 20-21:  weapon => weapon

Dependencies:
1	Iran	_	NNP	NNP	_	5	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	heavy-water	_	NN	NN	_	5	nn	_	_
4	research	_	NN	NN	_	5	nn	_	_
5	reactor	_	NN	NN	_	10	nsubj	_	_
6	near	_	IN	IN	_	5	prep	_	_
7	Arak	_	NNP	NNP	_	6	pobj	_	_
8	could	_	MD	MD	_	10	aux	_	_
9	eventually	_	RB	RB	_	10	advmod	_	_
10	produce	_	VB	VB	_	0	root	_	_
11	plutonium	_	NN	NN	_	10	dobj	_	_
12	that	_	WDT	WDT	_	15	nsubjpass	_	_
13	might	_	MD	MD	_	15	aux	_	_
14	be	_	VB	VB	_	15	auxpass	_	_
15	used	_	VBN	VBN	_	11	rcmod	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	a	_	DT	DT	_	19	det	_	_
18	nuclear	_	JJ	JJ	_	19	amod	_	_
19	weapon	_	NN	NN	_	16	pobj	_	_
20	.	_	.	.	_	10	punct	_	_

Oracle:
(c / city, name, n3 / name)
(c2 / country, name, n4 / name)
(n2 / near, op, c / city)
(n3 / name, op, "Arak")
(n4 / name, op, "Iran")
(p / possible, domain, p2 / produce-01)
(p / possible, mod, e / eventual)
(p2 / produce-01, ARG0, r / reactor)
(p2 / produce-01, ARG1, p3 / plutonium)
(r / reactor, location, n2 / near)
(r / reactor, mod, c2 / country)
(r / reactor, mod, w2 / water)
(r / reactor, purpose, r2 / research-01)
(u / use-01, ARG1, p3 / plutonium)
(u / use-01, ARG2, w / weapon)
(w / weapon, mod, n / nucleus)
(w2 / water, mod, h / heavy)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),Arak,near,false), Span(14,15,List(1),in,use-01,false), Span(7,8,List(2),eventually,possible,false), Span(6,7,List(5, 4, 3),could,(city :name (name :op "Arak")),false), Span(8,9,List(6),produce,eventual,false), Span(18,19,List(7),,weapon,false), Span(4,5,List(8),near,reactor,false), Span(0,1,List(11, 10, 9),Iran's,(country :name (name :op "Iran")),false), Span(10,11,List(12),that,plutonium,false), Span(17,18,List(13),weapon.,nucleus,false), Span(9,10,List(14),plutonium,produce-01,false), Span(3,4,List(15),reactor,research-01,false)),Map(2 -> possible, 5 -> "Arak", 12 -> plutonium, 15 -> research-01, 8 -> reactor, 7 -> weapon, 1 -> use-01, 4 -> name, 11 -> "Iran", 14 -> produce-01, 6 -> eventual, 0 -> near, 9 -> country, 3 -> city, 10 -> name, 13 -> nucleus),Map(e -> eventual, n -> near, w -> weapon, p2 -> plutonium, n4 -> nucleus, r2 -> research-01, p -> possible, n3 -> name, r -> reactor, c -> city, u -> use-01, p3 -> produce-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@12f7db91,Annotation([Ljava.lang.String;@4cd8b01d,[Ljava.lang.String;@4e6a08c,[Ljava.lang.String;@529f57b9),Annotation([Ljava.lang.String;@7e183528,[Ljava.lang.String;@77c93aae,[Ledu.cmu.lti.nlp.amr.Dependency;@469a061b),Annotation([Ljava.lang.String;@6e90b3ee,[Ljava.lang.String;@519e7a61,[Ljava.lang.String;@6f3c36b6),Annotation([Ljava.lang.String;@79004f94,[Ljava.lang.String;@12e49c99,[Ledu.cmu.lti.nlp.amr.Entity;@308ba1d6))
AMR:
(c / city, location, p / possible)
(c / city, mod, n / near)
(c / city, name, n2 / name)
(c / city, poss, c2 / country)
(c2 / country, name, n3 / name)
(n / near, mod, r / reactor)
(n2 / name, op, "Arak")
(n3 / name, op, "Iran")
(p / possible, op, e / eventual)
(p3 / produce-01, ARG0, c2 / country)
(p3 / produce-01, ARG1, p2 / plutonium)
(r2 / research-01, ARG1, r / reactor)
(u / use-01, ARG2, p3 / produce-01)
(u / use-01, ARG6, n4 / nucleus)
(w / weapon, mod, n4 / nucleus)

Decoded in 688,693 microseconds
Sentence: Satellite images published by the Institute for Science and International Security show construction at the heavy-water research reactor facility near the city of Arak has progressed significantly between 080200 and 081000.

Oracle Span 1:  080200 => (date-entity :year 2008 :month 2)
Oracle Span 2:  081000 => (date-entity :year 2008 :month 10)
Oracle Span 3:  Arak => (name :op "Arak")
Oracle Span 4:  city => city
Oracle Span 5:  construction => construct-01
Oracle Span 6:  facility => facility
Oracle Span 7:  heavy => heavy
Oracle Span 8:  images => image
Oracle Span 9:  Institute for Science and International Security => (organization :name (name :op "Security" :op "International" :op "and" :op "Science" :op "for" :op "Institute"))
Oracle Span 10:  near => near
Oracle Span 11:  progressed => progress-01
Oracle Span 12:  published => publish-01
Oracle Span 13:  reactor => reactor
Oracle Span 14:  research => research-01
Oracle Span 15:  Satellite => satellite
Oracle Span 16:  show => show-01
Oracle Span 17:  significantly => significant
Oracle Span 18:  water => water
NER Entity: (organization :name (name :op "Institute" :op "for" :op "Science" :op "and" :op "International" :op "Security"))
mkDayMonthYear(080200,00,02,08)
mkDayMonthYear(081000,00,10,08)
NER Entity: (country :name (name :op "Arak"))
Spans:
Span 23-24:  Arak => (city :name (name :op "Arak"))
Span 27-28:  between => between
Span 12-13:  construction => construct-01
Span 18-19:  facility => facility
Span 1-2:  images => image
Span 5-11:  Institute for Science and International Security => (organization :name (name :op "Security" :op "for" :op "and" :op "International" :op "Science" :op "Institute"))
Span 19-20:  near => near
Span 25-26:  progressed => progress-01
Span 2-3:  published => publish-01
Span 17-18:  reactor => reactor
Span 16-17:  research => research-01
Span 0-1:  Satellite => satellite
Span 0-1:  Satellite => 1
Span 11-12:  show => show-01
Span 26-27:  significantly => significant

Langrangian relaxation converged after 37 iterations. Delta = 0.0
Oracle Span 30-31:  080200 => (date-entity :year 2008 :month 2)
Oracle Span 32-33:  081000 => (date-entity :year 2008 :month 10)
Oracle Span 25-26:  Arak => (name :op "Arak")
Oracle Span 23-24:  city => city
Oracle Span 12-13:  construction => construct-01
Oracle Span 20-21:  facility => facility
Oracle Span 15-16:  heavy => heavy
Oracle Span 1-2:  images => image
Oracle Span 5-11:  Institute for Science and International Security => (organization :name (name :op "Security" :op "International" :op "and" :op "Science" :op "for" :op "Institute"))
Oracle Span 21-22:  near => near
Oracle Span 27-28:  progressed => progress-01
Oracle Span 2-3:  published => publish-01
Oracle Span 19-20:  reactor => reactor
Oracle Span 18-19:  research => research-01
Oracle Span 0-1:  Satellite => satellite
Oracle Span 11-12:  show => show-01
Oracle Span 28-29:  significantly => significant
Oracle Span 17-18:  water => water

Dependencies:
1	Satellite	_	NNP	NNP	_	2	nn	_	_
2	images	_	NNS	NNS	_	26	nsubj	_	_
3	published	_	VBN	VBN	_	2	vmod	_	_
4	by	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	19	det	_	_
6	Institute	_	NNP	NNP	_	19	dep	_	_
7	for	_	IN	IN	_	6	prep	_	_
8	Science	_	NNP	NNP	_	13	nn	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	International	_	NNP	NNP	_	8	conj	_	_
11	Security	_	NNP	NNP	_	13	nn	_	_
12	show	_	NN	NN	_	13	nn	_	_
13	construction	_	NN	NN	_	7	pobj	_	_
14	at	_	IN	IN	_	13	prep	_	_
15	the	_	DT	DT	_	17	det	_	_
16	heavy-water	_	NN	NN	_	17	nn	_	_
17	research	_	NN	NN	_	14	pobj	_	_
18	reactor	_	NN	NN	_	19	nn	_	_
19	facility	_	NN	NN	_	4	pobj	_	_
20	near	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	22	det	_	_
22	city	_	NN	NN	_	20	pobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	Arak	_	NNP	NNP	_	23	pobj	_	_
25	has	_	VBZ	VBZ	_	26	aux	_	_
26	progressed	_	VBN	VBN	_	0	root	_	_
27	significantly	_	RB	RB	_	26	advmod	_	_
28	between	_	IN	IN	_	26	prep	_	_
29	080200	_	CD	CD	_	28	pobj	_	_
30	and	_	CC	CC	_	29	cc	_	_
31	081000	_	CD	CD	_	29	conj	_	_
32	.	_	.	.	_	26	punct	_	_

Oracle:
(c / construct-01, ARG1, f / facility)
(c2 / city, name, n3 / name)
(d / date-entity, month, 2)
(d / date-entity, year, 2008)
(d2 / date-entity, month, 10)
(d2 / date-entity, year, 2008)
(f / facility, location, n2 / near)
(f / facility, mod, r2 / reactor)
(i / image, source, s2 / satellite)
(n / name, op, "Institute")
(n / name, op, "International")
(n / name, op, "Science")
(n / name, op, "Security")
(n / name, op, "and")
(n / name, op, "for")
(n2 / near, op, c2 / city)
(n3 / name, op, "Arak")
(o / organization, name, n / name)
(p / publish-01, ARG0, o / organization)
(p / publish-01, ARG1, i / image)
(p2 / progress-01, ARG1, c / construct-01)
(p2 / progress-01, mod, s3 / significant)
(r2 / reactor, mod, w / water)
(r2 / reactor, purpose, r3 / research-01)
(s / show-01, ARG0, i / image)
(s / show-01, ARG1, p2 / progress-01)
(w / water, mod, h / heavy)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),show,show-01,false), Span(5,11,List(8, 7, 6, 5, 4, 3, 2, 1),Institute for Science and International Security,(organization :name (name :op "Security" :op "for" :op "and" :op "International" :op "Science" :op "Institute")),false), Span(2,3,List(9),published,publish-01,false), Span(0,1,List(10),Satellite,satellite,false), Span(1,2,List(11),images,image,false), Span(23,24,List(14, 13, 12),Arak,(city :name (name :op "Arak")),false), Span(17,18,List(15),reactor,reactor,false), Span(27,28,List(16),between,between,false), Span(19,20,List(17),near,near,false), Span(16,17,List(18),research,research-01,false), Span(0,1,List(19),Satellite,1,false), Span(25,26,List(20),progressed,progress-01,false), Span(26,27,List(21),significantly,significant,false), Span(12,13,List(22),construction,construct-01,false), Span(18,19,List(23),facility,facility,false)),Map(2 -> name, 5 -> "and", 12 -> city, 15 -> reactor, 8 -> "Institute", 21 -> significant, 18 -> research-01, 7 -> "Science", 17 -> near, 1 -> organization, 23 -> facility, 4 -> "for", 11 -> image, 14 -> "Arak", 20 -> progress-01, 6 -> "International", 22 -> construct-01, 0 -> show-01, 9 -> publish-01, 16 -> between, 19 -> 1, 3 -> "Security", 10 -> satellite, 13 -> name),Map(n -> name, s2 -> satellite, b -> between, p2 -> progress-01, s -> show-01, 1 -> 1, p -> publish-01, r2 -> research-01, n3 -> near, i -> image, r -> reactor, s3 -> significant, c -> city, f -> facility, o -> organization, c2 -> construct-01, n2 -> name))),[Ljava.lang.String;@f7d0ed1,Annotation([Ljava.lang.String;@71a7673,[Ljava.lang.String;@6714f56a,[Ljava.lang.String;@d656f19),Annotation([Ljava.lang.String;@6a89f3e2,[Ljava.lang.String;@3ef4b92e,[Ledu.cmu.lti.nlp.amr.Dependency;@7e8bb43f),Annotation([Ljava.lang.String;@58300150,[Ljava.lang.String;@7d03ef57,[Ljava.lang.String;@66250410),Annotation([Ljava.lang.String;@452c7ea7,[Ljava.lang.String;@1d4eddd3,[Ledu.cmu.lti.nlp.amr.Entity;@7fd5e07a))
AMR:
(b / between, quant, s3 / significant)
(c / city, name, n2 / name)
(c2 / construct-01, ARG0, f / facility)
(c2 / construct-01, ARG1, s / show-01)
(f / facility, mod, r / reactor)
(i / image, mod, 1 / 1)
(i / image, mod, s2 / satellite)
(n / name, op, "Institute")
(n / name, op, "International")
(n / name, op, "Science")
(n / name, op, "Security")
(n / name, op, "and")
(n / name, op, "for")
(n2 / name, op, "Arak")
(n3 / near, mod, f / facility)
(o / organization, name, n / name)
(p / publish-01, ARG1, i / image)
(p / publish-01, ARG2, s / show-01)
(p2 / progress-01, ARG1, p / publish-01)
(r2 / research-01, ARG1, r / reactor)
(s / show-01, ARG0, c / city)
(s / show-01, ARG1, o / organization)
(s3 / significant, name, c / city)

Decoded in 1,572,632 microseconds
Sentence: David Albright stated that Iran's heavy-water research reactor near Arak has evaded the international security community's notice.

Oracle Span 1:  Arak => (city :name (name :op "Arak"))
Oracle Span 2:  community => community
Oracle Span 3:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 4:  evaded => evade-01
Oracle Span 5:  heavy => heavy
Oracle Span 6:  international => international
Oracle Span 7:  Iran => (country :name (name :op "Iran"))
Oracle Span 8:  near => near
Oracle Span 9:  notice => notice-01
Oracle Span 10:  reactor => reactor
Oracle Span 11:  research => research-01
Oracle Span 12:  security => security
Oracle Span 13:  stated => state-01
Oracle Span 14:  water => water
NER Entity: (person :name (name :op "David" :op "Albright"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Arak"))
Spans:
Span 18-19:   => notice
Span 9-10:  Arak => near
Span 15-16:  community's => security
Span 0-2:  David Albright => (person :name (name :op "David" :op "Albright"))
Span 10-11:  has => (city :name (name :op "Arak"))
Span 8-9:  near => reactor
Span 16-17:  notice. => community
Span 7-8:  reactor => research-01
Span 14-15:  security => international
Span 2-3:  stated => state-01
Span 12-13:  the => evade-01

Langrangian relaxation converged after 42 iterations. Delta = 0.0
Oracle Span 12-13:  Arak => (city :name (name :op "Arak"))
Oracle Span 18-19:  community => community
Oracle Span 0-2:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 14-15:  evaded => evade-01
Oracle Span 6-7:  heavy => heavy
Oracle Span 16-17:  international => international
Oracle Span 4-5:  Iran => (country :name (name :op "Iran"))
Oracle Span 11-12:  near => near
Oracle Span 20-21:  notice => notice-01
Oracle Span 10-11:  reactor => reactor
Oracle Span 9-10:  research => research-01
Oracle Span 17-18:  security => security
Oracle Span 2-3:  stated => state-01
Oracle Span 8-9:  water => water

Dependencies:
1	David	_	NNP	NNP	_	2	nn	_	_
2	Albright	_	NNP	NNP	_	3	nsubj	_	_
3	stated	_	VBD	VBD	_	0	root	_	_
4	that	_	IN	IN	_	13	mark	_	_
5	Iran	_	NNP	NNP	_	9	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	heavy-water	_	NN	NN	_	9	nn	_	_
8	research	_	NN	NN	_	9	nn	_	_
9	reactor	_	NN	NN	_	13	nsubj	_	_
10	near	_	IN	IN	_	9	prep	_	_
11	Arak	_	NNP	NNP	_	10	pobj	_	_
12	has	_	VBZ	VBZ	_	13	aux	_	_
13	evaded	_	VBN	VBN	_	3	ccomp	_	_
14	the	_	DT	DT	_	17	det	_	_
15	international	_	JJ	JJ	_	17	amod	_	_
16	security	_	NN	NN	_	17	nn	_	_
17	community	_	NN	NN	_	19	poss	_	_
18	's	_	POS	POS	_	17	possessive	_	_
19	notice	_	NN	NN	_	13	dobj	_	_
20	.	_	.	.	_	3	punct	_	_

Oracle:
(c / city, name, n3 / name)
(c2 / community, mod, s2 / security)
(c3 / country, name, n5 / name)
(e / evade-01, ARG0, r / reactor)
(e / evade-01, ARG1, n4 / notice-01)
(n / name, op, "Albright")
(n / name, op, "David")
(n2 / near, op, c / city)
(n3 / name, op, "Arak")
(n4 / notice-01, ARG0, c2 / community)
(n5 / name, op, "Iran")
(p / person, name, n / name)
(r / reactor, location, n2 / near)
(r / reactor, mod, c3 / country)
(r / reactor, mod, w / water)
(r / reactor, purpose, r2 / research-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, e / evade-01)
(s2 / security, mod, i / international)
(w / water, mod, h / heavy)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),near,reactor,false), Span(15,16,List(1),community's,security,false), Span(18,19,List(2),,notice,false), Span(16,17,List(3),notice.,community,false), Span(7,8,List(4),reactor,research-01,false), Span(9,10,List(5),Arak,near,false), Span(12,13,List(6),the,evade-01,false), Span(0,2,List(10, 9, 8, 7),David Albright,(person :name (name :op "David" :op "Albright")),false), Span(2,3,List(11),stated,state-01,false), Span(14,15,List(12),security,international,false), Span(10,11,List(15, 14, 13),has,(city :name (name :op "Arak")),false)),Map(2 -> notice, 5 -> near, 12 -> international, 15 -> "Arak", 8 -> name, 7 -> person, 1 -> security, 4 -> research-01, 11 -> state-01, 14 -> name, 6 -> evade-01, 0 -> reactor, 9 -> "David", 3 -> community, 10 -> "Albright", 13 -> city),Map(e -> evade-01, n -> notice, s2 -> state-01, n4 -> name, s -> security, r2 -> research-01, p -> person, n3 -> name, r -> reactor, i -> international, c -> community, n2 -> near, c2 -> city))),[Ljava.lang.String;@3e0b870d,Annotation([Ljava.lang.String;@63d95cfd,[Ljava.lang.String;@1692ae90,[Ljava.lang.String;@52dcbe96),Annotation([Ljava.lang.String;@300d782f,[Ljava.lang.String;@199af467,[Ledu.cmu.lti.nlp.amr.Dependency;@1aff2fea),Annotation([Ljava.lang.String;@2de00a2d,[Ljava.lang.String;@7677c3be,[Ljava.lang.String;@380038db),Annotation([Ljava.lang.String;@5b63c04e,[Ljava.lang.String;@76ff086d,[Ledu.cmu.lti.nlp.amr.Entity;@3e5d4f3f))
AMR:
(c2 / city, mod, n2 / near)
(c2 / city, name, n4 / name)
(e / evade-01, ARG1, p / person)
(i / international, calendar, c2 / city)
(n / notice, mod, c / community)
(n / notice, mod, s / security)
(n / notice, poss, p / person)
(n2 / near, mod, r / reactor)
(n3 / name, op, "Albright")
(n3 / name, op, "David")
(n4 / name, op, "Arak")
(p / person, name, n3 / name)
(r2 / research-01, ARG1, r / reactor)
(s2 / state-01, ARG0, p / person)
(s2 / state-01, ARG1, i / international)

Decoded in 868,439 microseconds
Sentence: David Albright stated that Iran's heavy-water research reactor near Arak is making significant progress according to the satellite images and that in a year and a half the heavy-water research reactor near Arak has progressed from building frames to a largely finished facility.

Oracle Span 1:  and => and
Oracle Span 2:  Arak => (city :name (name :op "Arak"))
Oracle Span 3:  building => building
Oracle Span 4:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 5:  facility => facility
Oracle Span 6:  finished => finish-01
Oracle Span 7:  frames => frame
Oracle Span 8:  heavy => heavy
Oracle Span 9:  images => image
Oracle Span 10:  Iran => (country :name (name :op "Iran"))
Oracle Span 11:  largely => large
Oracle Span 12:  near => near
Oracle Span 13:  progress => progress-01
Oracle Span 14:  progressed => progress-01
Oracle Span 15:  reactor => reactor
Oracle Span 16:  research => research-01
Oracle Span 17:  satellite => satellite
Oracle Span 18:  significant => significant
Oracle Span 19:  stated => state-01
Oracle Span 20:  water => water
Oracle Span 21:  year => (temporal-quantity :unit year)
NER Entity: (person :name (name :op "David" :op "Albright"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Arak"))
Spans:
Span 43-44:   => facility
Span 25-26:  a => and
Span 14-15:  according => progress-01
Span 24-25:  and => year
Span 19-20:  and => image
Span 9-10:  Arak => near
Span 32-33:  Arak => near
Span 0-2:  David Albright => (person :name (name :op "David" :op "Albright"))
Span 42-43:  facility. => finish-01
Span 41-42:  finished => large
Span 37-38:  frames => building
Span 35-36:  from => progress-01
Span 33-34:  has => (city :name (name :op "Arak"))
Span 18-19:  images => satellite
Span 10-11:  is => (city :name (name :op "Arak"))
Span 8-9:  near => reactor
Span 31-32:  near => reactor
Span 13-14:  progress => significant
Span 30-31:  reactor => research-01
Span 7-8:  reactor => research-01
Span 2-3:  stated => state-01
Span 20-21:  that => and
Span 38-39:  to => frame

Langrangian relaxation converged after 33 iterations. Delta = 0.0
Oracle Span 22-23:  and => and
Oracle Span 12-13:  Arak => (city :name (name :op "Arak"))
Oracle Span 41-42:  building => building
Oracle Span 0-2:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 47-48:  facility => facility
Oracle Span 46-47:  finished => finish-01
Oracle Span 42-43:  frames => frame
Oracle Span 6-7:  heavy => heavy
Oracle Span 21-22:  images => image
Oracle Span 4-5:  Iran => (country :name (name :op "Iran"))
Oracle Span 45-46:  largely => large
Oracle Span 11-12:  near => near
Oracle Span 16-17:  progress => progress-01
Oracle Span 39-40:  progressed => progress-01
Oracle Span 10-11:  reactor => reactor
Oracle Span 9-10:  research => research-01
Oracle Span 20-21:  satellite => satellite
Oracle Span 15-16:  significant => significant
Oracle Span 2-3:  stated => state-01
Oracle Span 8-9:  water => water
Oracle Span 26-27:  year => (temporal-quantity :unit year)

Dependencies:
1	David	_	NNP	NNP	_	2	nn	_	_
2	Albright	_	NNP	NNP	_	3	nsubj	_	_
3	stated	_	VBD	VBD	_	0	root	_	_
4	that	_	IN	IN	_	13	mark	_	_
5	Iran	_	NNP	NNP	_	9	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	heavy-water	_	NN	NN	_	9	nn	_	_
8	research	_	NN	NN	_	9	nn	_	_
9	reactor	_	NN	NN	_	13	nsubj	_	_
10	near	_	IN	IN	_	9	prep	_	_
11	Arak	_	NNP	NNP	_	10	pobj	_	_
12	is	_	VBZ	VBZ	_	13	aux	_	_
13	making	_	VBG	VBG	_	3	ccomp	_	_
14	significant	_	JJ	JJ	_	15	amod	_	_
15	progress	_	NN	NN	_	13	dobj	_	_
16	according	_	VBG	VBG	_	13	prep	_	_
17	to	_	TO	TO	_	16	pcomp	_	_
18	the	_	DT	DT	_	20	det	_	_
19	satellite	_	NN	NN	_	20	nn	_	_
20	images	_	NNS	NNS	_	17	pobj	_	_
21	and	_	CC	CC	_	13	cc	_	_
22	that	_	IN	IN	_	36	mark	_	_
23	in	_	IN	IN	_	36	prep	_	_
24	a	_	DT	DT	_	25	det	_	_
25	year	_	NN	NN	_	23	pobj	_	_
26	and	_	CC	CC	_	25	cc	_	_
27	a	_	DT	DT	_	28	det	_	_
28	half	_	NN	NN	_	25	conj	_	_
29	the	_	DT	DT	_	32	det	_	_
30	heavy-water	_	NN	NN	_	32	nn	_	_
31	research	_	NN	NN	_	32	nn	_	_
32	reactor	_	NN	NN	_	36	nsubj	_	_
33	near	_	IN	IN	_	32	prep	_	_
34	Arak	_	NNP	NNP	_	33	pobj	_	_
35	has	_	VBZ	VBZ	_	36	aux	_	_
36	progressed	_	VBN	VBN	_	13	conj	_	_
37	from	_	IN	IN	_	36	prep	_	_
38	building	_	NN	NN	_	39	nn	_	_
39	frames	_	NNS	NNS	_	37	pobj	_	_
40	to	_	TO	TO	_	36	prep	_	_
41	a	_	DT	DT	_	44	det	_	_
42	largely	_	RB	RB	_	43	advmod	_	_
43	finished	_	VBN	VBN	_	44	amod	_	_
44	facility	_	NN	NN	_	40	pobj	_	_
45	.	_	.	.	_	3	punct	_	_

Oracle:
(a / and, op, p3 / progress-01)
(c / country, name, n2 / name)
(c2 / city, name, n4 / name)
(f / frame, mod, b / building)
(f3 / finish-01, ARG1, f2 / facility)
(f3 / finish-01, degree, l / large)
(i2 / image, source, s3 / satellite)
(n / name, op, "Albright")
(n / name, op, "David")
(n2 / name, op, "Iran")
(n3 / near, op, c2 / city)
(n4 / name, op, "Arak")
(p / person, name, n / name)
(p2 / progress-01, ARG1, r / reactor)
(p2 / progress-01, mod, s4 / significant)
(p3 / progress-01, ARG1, r / reactor)
(p3 / progress-01, ARG3, f / frame)
(p3 / progress-01, ARG4, f2 / facility)
(r / reactor, location, n3 / near)
(r / reactor, mod, c / country)
(r / reactor, mod, w / water)
(r / reactor, purpose, r2 / research-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / and)
(t / temporal-quantity, unit, y / year)
(w / water, mod, h / heavy)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),near,reactor,false), Span(13,14,List(1),progress,significant,false), Span(30,31,List(2),reactor,research-01,false), Span(37,38,List(3),frames,building,false), Span(9,10,List(4),Arak,near,false), Span(24,25,List(5),and,year,false), Span(41,42,List(6),finished,large,false), Span(20,21,List(7),that,and,false), Span(2,3,List(8),stated,state-01,false), Span(25,26,List(9),a,and,false), Span(14,15,List(10),according,progress-01,false), Span(42,43,List(11),facility.,finish-01,false), Span(19,20,List(12),and,image,false), Span(32,33,List(13),Arak,near,false), Span(33,34,List(16, 15, 14),has,(city :name (name :op "Arak")),false), Span(35,36,List(17),from,progress-01,false), Span(7,8,List(18),reactor,research-01,false), Span(18,19,List(19),images,satellite,false), Span(31,32,List(20),near,reactor,false), Span(0,2,List(24, 23, 22, 21),David Albright,(person :name (name :op "David" :op "Albright")),false), Span(38,39,List(25),to,frame,false), Span(43,44,List(26),,facility,false), Span(10,11,List(29, 28, 27),is,(city :name (name :op "Arak")),false)),Map(2 -> research-01, 5 -> year, 27 -> city, 12 -> image, 8 -> state-01, 15 -> name, 21 -> person, 18 -> research-01, 24 -> "Albright", 7 -> and, 1 -> significant, 17 -> progress-01, 23 -> "David", 26 -> facility, 4 -> near, 11 -> finish-01, 14 -> city, 29 -> "Arak", 20 -> reactor, 28 -> name, 6 -> large, 9 -> and, 0 -> reactor, 22 -> name, 16 -> "Arak", 19 -> satellite, 10 -> progress-01, 3 -> building, 25 -> frame, 13 -> near),Map(n -> near, r3 -> research-01, s2 -> state-01, b -> building, p2 -> progress-01, n4 -> name, s -> significant, y -> year, r2 -> research-01, p -> progress-01, a -> and, n3 -> name, f3 -> facility, i -> image, a2 -> and, r -> reactor, r4 -> reactor, c -> city, s3 -> satellite, f2 -> frame, l -> large, f -> finish-01, p3 -> person, n2 -> near, c2 -> city, n5 -> name))),[Ljava.lang.String;@2a125236,Annotation([Ljava.lang.String;@4751d3a3,[Ljava.lang.String;@61d21586,[Ljava.lang.String;@4e56aed6),Annotation([Ljava.lang.String;@766dd6c8,[Ljava.lang.String;@3f68df6d,[Ledu.cmu.lti.nlp.amr.Dependency;@4e679323),Annotation([Ljava.lang.String;@353cb427,[Ljava.lang.String;@2dffefde,[Ljava.lang.String;@5495debb),Annotation([Ljava.lang.String;@2699a181,[Ljava.lang.String;@7654a4f9,[Ledu.cmu.lti.nlp.amr.Entity;@248724f2))
AMR:
(a / and, op, p3 / person)
(a2 / and, calendar, y / year)
(a2 / and, op, p3 / person)
(c / city, name, n3 / name)
(c2 / city, mod, n / near)
(c2 / city, name, n5 / name)
(f / finish-01, ARG1, l / large)
(f / finish-01, ARG6, f3 / facility)
(f / finish-01, location, y / year)
(f2 / frame, location, l / large)
(n / near, mod, r / reactor)
(n2 / near, direction, c / city)
(n2 / near, mod, r4 / reactor)
(n3 / name, op, "Arak")
(n4 / name, op, "Albright")
(n4 / name, op, "David")
(n5 / name, op, "Arak")
(p / progress-01, ARG0, c2 / city)
(p / progress-01, ARG1, s / significant)
(p / progress-01, ARG6, s3 / satellite)
(p2 / progress-01, ARG0, r4 / reactor)
(p2 / progress-01, ARG1, b / building)
(p2 / progress-01, ARG6, f2 / frame)
(p3 / person, name, n4 / name)
(r2 / research-01, ARG1, a2 / and)
(r3 / research-01, ARG1, r / reactor)
(s2 / state-01, ARG0, p3 / person)
(s2 / state-01, ARG1, p / progress-01)
(s3 / satellite, calendar, i / image)

Decoded in 2,684,572 microseconds
Sentence: David Albright is a former arms inspector and Director of the Institute for Science and International Security that is based in Washington, D.C..

Oracle Span 1:  and => and
Oracle Span 2:  arms => arm
Oracle Span 3:  based => base-01
Oracle Span 4:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 5:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 6:  former => former
Oracle Span 7:  inspector => inspect-01
Oracle Span 8:  Institute for Science and International Security => (organization :name (name :op "Security" :op "International" :op "and" :op "Science" :op "for" :op "Institute"))
Oracle Span 9:  Washington , D.C. => (city :name (name :op "D.C." :op "Washington"))
NER Entity: (person :name (name :op "David" :op "Albright"))
NER Entity: (organization :name (name :op "Institute" :op "for" :op "Science" :op "and" :op "International" :op "Security"))
NER Entity: (country :name (name :op "Washington"))
Spans:
Span 7-8:  and => and
Span 5-6:  arms => arm
Span 19-20:  based => base-01
Span 0-2:  David Albright => (person :name (name :op "David" :op "Albright"))
Span 8-9:  Director => (have-org-role-91 :ARG2 director)
Span 4-5:  former => former
Span 6-7:  inspector => inspect-01
Span 11-17:  Institute for Science and International Security => (organization :name (name :op "Security" :op "for" :op "and" :op "International" :op "Science" :op "Institute"))
Span 21-22:  Washington, => (city :name (name :op "Washington"))

Langrangian relaxation converged after 56 iterations. Delta = 0.0
Oracle Span 7-8:  and => and
Oracle Span 5-6:  arms => arm
Oracle Span 19-20:  based => base-01
Oracle Span 0-2:  David Albright => (person :name (name :op "Albright" :op "David"))
Oracle Span 8-9:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 4-5:  former => former
Oracle Span 6-7:  inspector => inspect-01
Oracle Span 11-17:  Institute for Science and International Security => (organization :name (name :op "Security" :op "International" :op "and" :op "Science" :op "for" :op "Institute"))
Oracle Span 21-24:  Washington , D.C. => (city :name (name :op "D.C." :op "Washington"))

Dependencies:
1	David	_	NNP	NNP	_	2	nn	_	_
2	Albright	_	NNP	NNP	_	7	nsubj	_	_
3	is	_	VBZ	VBZ	_	7	cop	_	_
4	a	_	DT	DT	_	7	det	_	_
5	former	_	JJ	JJ	_	7	amod	_	_
6	arms	_	NNS	NNS	_	7	nn	_	_
7	inspector	_	NN	NN	_	0	root	_	_
8	and	_	CC	CC	_	7	cc	_	_
9	Director	_	NNP	NNP	_	7	conj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	Institute	_	NNP	NNP	_	10	pobj	_	_
13	for	_	IN	IN	_	12	prep	_	_
14	Science	_	NNP	NNP	_	17	nn	_	_
15	and	_	CC	CC	_	14	cc	_	_
16	International	_	NNP	NNP	_	14	conj	_	_
17	Security	_	NNP	NNP	_	13	pobj	_	_
18	that	_	WDT	WDT	_	20	nsubjpass	_	_
19	is	_	VBZ	VBZ	_	20	auxpass	_	_
20	based	_	VBN	VBN	_	9	rcmod	_	_
21	in	_	IN	IN	_	20	prep	_	_
22	Washington	_	NNP	NNP	_	24	nn	_	_
23	,	_	,	,	_	24	punct	_	_
24	D.C.	_	NNP	NNP	_	21	pobj	_	_
25	.	_	.	.	_	7	punct	_	_

Oracle:
(a2 / and, op, h / have-org-role-91)
(b / base-01, ARG1, o / organization)
(b / base-01, location, c / city)
(c / city, name, n3 / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, d / director)
(i / inspect-01, ARG0, p / person)
(i / inspect-01, ARG1, a / arm)
(i / inspect-01, mod, f / former)
(n / name, op, "Albright")
(n / name, op, "David")
(n2 / name, op, "Institute")
(n2 / name, op, "International")
(n2 / name, op, "Science")
(n2 / name, op, "Security")
(n2 / name, op, "and")
(n2 / name, op, "for")
(n3 / name, op, "D.C.")
(n3 / name, op, "Washington")
(o / organization, name, n2 / name)
(p / person, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(1, 0),Director,(have-org-role-91 :ARG2 director),false), Span(11,17,List(9, 8, 7, 6, 5, 4, 3, 2),Institute for Science and International Security,(organization :name (name :op "Security" :op "for" :op "and" :op "International" :op "Science" :op "Institute")),false), Span(21,22,List(12, 11, 10),Washington,,(city :name (name :op "Washington")),false), Span(4,5,List(13),former,former,false), Span(0,2,List(17, 16, 15, 14),David Albright,(person :name (name :op "David" :op "Albright")),false), Span(7,8,List(18),and,and,false), Span(5,6,List(19),arms,arm,false), Span(6,7,List(20),inspector,inspect-01,false), Span(19,20,List(21),based,base-01,false)),Map(2 -> organization, 5 -> "for", 12 -> "Washington", 15 -> name, 8 -> "Science", 21 -> base-01, 18 -> and, 7 -> "International", 17 -> "Albright", 1 -> director, 4 -> "Security", 11 -> name, 14 -> person, 20 -> inspect-01, 6 -> "and", 0 -> have-org-role-91, 9 -> "Institute", 16 -> "David", 19 -> arm, 3 -> name, 10 -> city, 13 -> former),Map(n -> name, h -> have-org-role-91, b -> base-01, d -> director, p -> person, n3 -> name, a -> and, a2 -> arm, i -> inspect-01, c -> city, f -> former, o -> organization, n2 -> name))),[Ljava.lang.String;@2d1004d2,Annotation([Ljava.lang.String;@4417a275,[Ljava.lang.String;@d1935ea,[Ljava.lang.String;@1e5fdc5b),Annotation([Ljava.lang.String;@33c46dd6,[Ljava.lang.String;@4ab965d1,[Ledu.cmu.lti.nlp.amr.Dependency;@e4bbf09),Annotation([Ljava.lang.String;@6e96079f,[Ljava.lang.String;@7e2c7d46,[Ljava.lang.String;@7f3a08bf),Annotation([Ljava.lang.String;@2cda53a6,[Ljava.lang.String;@72ae135d,[Ledu.cmu.lti.nlp.amr.Entity;@6f759603))
AMR:
(a / and, op, p / person)
(a2 / arm, mod, f / former)
(b / base-01, ARG0, a / and)
(b / base-01, location, c / city)
(c / city, name, n2 / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, d / director)
(i / inspect-01, ARG1, a2 / arm)
(i / inspect-01, domain, p / person)
(n / name, op, "Institute")
(n / name, op, "International")
(n / name, op, "Science")
(n / name, op, "Security")
(n / name, op, "and")
(n / name, op, "for")
(n2 / name, op, "Washington")
(n3 / name, op, "Albright")
(n3 / name, op, "David")
(o / organization, name, n / name)
(p / person, name, n3 / name)

Decoded in 1,502,285 microseconds
Sentence: Iran stated that Iran is pursuing nuclear technology to produce energy and conduct research.

Oracle Span 1:  and => and
Oracle Span 2:  conduct => conduct-01
Oracle Span 3:  energy => energy
Oracle Span 4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5:  nuclear => nucleus
Oracle Span 6:  produce => produce-01
Oracle Span 7:  pursuing => pursue-01
Oracle Span 8:  research => research-01
Oracle Span 9:  stated => state-01
Oracle Span 10:  technology => technology
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 11-12:  and => and
Span 12-13:  conduct => conduct-01
Span 10-11:  energy => energy
Span 3-4:  Iran => (country :name (name :op "Iran"))
Span 0-1:  Iran => (country :name (name :op "Iran"))
Span 6-7:  nuclear => nucleus
Span 9-10:  produce => produce-01
Span 5-6:  pursuing => pursue-01
Span 13-14:  research. => research-01
Span 1-2:  stated => state-01
Span 7-8:  technology => technology

Langrangian relaxation converged after 48 iterations. Delta = 0.0
Oracle Span 11-12:  and => and
Oracle Span 12-13:  conduct => conduct-01
Oracle Span 10-11:  energy => energy
Oracle Span 0-1:  Iran => (country :name (name :op "Iran"))
Oracle Span 6-7:  nuclear => nucleus
Oracle Span 9-10:  produce => produce-01
Oracle Span 5-6:  pursuing => pursue-01
Oracle Span 13-14:  research => research-01
Oracle Span 1-2:  stated => state-01
Oracle Span 7-8:  technology => technology

Dependencies:
1	Iran	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	6	mark	_	_
4	Iran	_	NNP	NNP	_	6	nsubj	_	_
5	is	_	VBZ	VBZ	_	6	aux	_	_
6	pursuing	_	VBG	VBG	_	2	ccomp	_	_
7	nuclear	_	JJ	JJ	_	8	amod	_	_
8	technology	_	NN	NN	_	6	dobj	_	_
9	to	_	TO	TO	_	10	aux	_	_
10	produce	_	VB	VB	_	6	vmod	_	_
11	energy	_	NN	NN	_	14	nn	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	conduct	_	NN	NN	_	11	conj	_	_
14	research	_	NN	NN	_	10	dobj	_	_
15	.	_	.	.	_	2	punct	_	_

Oracle:
(a2 / and, op, c2 / conduct-01)
(a2 / and, op, p2 / produce-01)
(c / country, name, n / name)
(c2 / conduct-01, ARG0, c / country)
(c2 / conduct-01, ARG1, r / research-01)
(n / name, op, "Iran")
(p / pursue-01, ARG0, c / country)
(p / pursue-01, ARG1, t / technology)
(p / pursue-01, purpose, a2 / and)
(p2 / produce-01, ARG0, c / country)
(p2 / produce-01, ARG1, e / energy)
(s / state-01, ARG0, c / country)
(s / state-01, ARG1, p / pursue-01)
(t / technology, mod, n2 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(5,6,List(1),pursuing,pursue-01,false), Span(11,12,List(2),and,and,false), Span(10,11,List(3),energy,energy,false), Span(3,4,List(6, 5, 4),Iran,(country :name (name :op "Iran")),false), Span(12,13,List(7),conduct,conduct-01,false), Span(0,1,List(10, 9, 8),Iran,(country :name (name :op "Iran")),false), Span(13,14,List(11),research.,research-01,false), Span(6,7,List(12),nuclear,nucleus,false), Span(7,8,List(13),technology,technology,false), Span(9,10,List(14),produce,produce-01,false)),Map(2 -> and, 5 -> name, 12 -> nucleus, 8 -> country, 7 -> conduct-01, 1 -> pursue-01, 4 -> country, 11 -> research-01, 14 -> produce-01, 6 -> "Iran", 0 -> state-01, 9 -> name, 3 -> energy, 10 -> "Iran", 13 -> technology),Map(e -> energy, n -> name, t -> technology, p2 -> produce-01, s -> state-01, p -> pursue-01, a -> and, c3 -> country, n3 -> nucleus, r -> research-01, c -> country, c2 -> conduct-01, n2 -> name))),[Ljava.lang.String;@362aec56,Annotation([Ljava.lang.String;@25ddccf2,[Ljava.lang.String;@37b61ff,[Ljava.lang.String;@7dde0075),Annotation([Ljava.lang.String;@1c771bc4,[Ljava.lang.String;@5706eee4,[Ledu.cmu.lti.nlp.amr.Dependency;@f2a0962),Annotation([Ljava.lang.String;@27a7d5a,[Ljava.lang.String;@26f7ffea,[Ljava.lang.String;@46e6541e),Annotation([Ljava.lang.String;@19d834b9,[Ljava.lang.String;@48191a75,[Ledu.cmu.lti.nlp.amr.Entity;@5108a433))
AMR:
(a / and, op, c2 / conduct-01)
(a / and, op, r / research-01)
(c / country, name, n / name)
(c2 / conduct-01, ARG1, e / energy)
(c3 / country, name, n2 / name)
(n / name, op, "Iran")
(n2 / name, op, "Iran")
(p / pursue-01, ARG0, c / country)
(p / pursue-01, ARG1, t / technology)
(p2 / produce-01, ARG0, t / technology)
(p2 / produce-01, ARG1, a / and)
(r / research-01, ARG1, n3 / nucleus)
(s / state-01, ARG0, c3 / country)
(s / state-01, ARG1, p / pursue-01)

Decoded in 945,731 microseconds
Sentence: The United States and its western allies suspect that Iran's efforts to produce is a precursor to creating a nuclear-weapons infrastructure.

Oracle Span 1:  allies => ally-01
Oracle Span 2:  and => and
Oracle Span 3:  creating => create-01
Oracle Span 4:  efforts => effort
Oracle Span 5:  infrastructure => infrastructure
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  nuclear => nucleus
Oracle Span 8:  precursor => precede-01
Oracle Span 9:  produce => produce-01
Oracle Span 10:  suspect => suspect-01
Oracle Span 11:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 12:  weapons => weapon
Oracle Span 13:  western => (world-region :name (name :op "West"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 21-22:   => infrastructure
Span 18-19:  a => create-01
Span 6-7:  allies => ally
Span 3-4:  and => and
Span 13-14:  is => produce-01
Span 7-8:  suspect => suspect-01
Span 16-17:  to => precursor
Span 11-12:  to => effort
Span 1-3:  United States => (country :name (name :op "United" :op "States"))
Span 5-6:  western => west

Langrangian relaxation converged after 49 iterations. Delta = 0.0
Oracle Span 6-7:  allies => ally-01
Oracle Span 3-4:  and => and
Oracle Span 18-19:  creating => create-01
Oracle Span 11-12:  efforts => effort
Oracle Span 23-24:  infrastructure => infrastructure
Oracle Span 9-10:  Iran => (country :name (name :op "Iran"))
Oracle Span 20-21:  nuclear => nucleus
Oracle Span 16-17:  precursor => precede-01
Oracle Span 13-14:  produce => produce-01
Oracle Span 7-8:  suspect => suspect-01
Oracle Span 1-3:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 22-23:  weapons => weapon
Oracle Span 5-6:  western => (world-region :name (name :op "West"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	United	_	NNP	NNP	_	3	nn	_	_
3	States	_	NNPS	NNPS	_	8	nsubj	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	its	_	PRP$	PRP$	_	7	poss	_	_
6	western	_	JJ	JJ	_	7	amod	_	_
7	allies	_	NNS	NNS	_	3	conj	_	_
8	suspect	_	VBP	VBP	_	0	root	_	_
9	that	_	IN	IN	_	17	mark	_	_
10	Iran	_	NNP	NNP	_	12	poss	_	_
11	's	_	POS	POS	_	10	possessive	_	_
12	efforts	_	NNS	NNS	_	17	nsubj	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	produce	_	VB	VB	_	12	vmod	_	_
15	is	_	VBZ	VBZ	_	17	cop	_	_
16	a	_	DT	DT	_	17	det	_	_
17	precursor	_	NN	NN	_	8	ccomp	_	_
18	to	_	TO	TO	_	17	prep	_	_
19	creating	_	VBG	VBG	_	18	pcomp	_	_
20	a	_	DT	DT	_	22	det	_	_
21	nuclear-weapons	_	JJ	JJ	_	22	amod	_	_
22	infrastructure	_	NN	NN	_	19	dobj	_	_
23	.	_	.	.	_	8	punct	_	_

Oracle:
(a / and, op, c / country)
(a2 / ally-01, ARG2, c / country)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(c3 / create-01, ARG0, c2 / country)
(c3 / create-01, ARG1, i / infrastructure)
(e / effort, poss, c2 / country)
(e / effort, purpose, p / produce-01)
(i / infrastructure, mod, w2 / weapon)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "West")
(n3 / name, op, "Iran")
(p / produce-01, ARG0, c2 / country)
(p3 / precede-01, ARG0, e / effort)
(p3 / precede-01, ARG1, c3 / create-01)
(s / suspect-01, ARG0, a / and)
(s / suspect-01, ARG1, p3 / precede-01)
(w / world-region, name, n2 / name)
(w2 / weapon, mod, n4 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(1,3,List(3, 2, 1, 0),United States,(country :name (name :op "United" :op "States")),false), Span(3,4,List(4),and,and,false), Span(7,8,List(5),suspect,suspect-01,false), Span(18,19,List(6),a,create-01,false), Span(13,14,List(7),is,produce-01,false), Span(6,7,List(8),allies,ally,false), Span(16,17,List(9),to,precursor,false), Span(21,22,List(10),,infrastructure,false), Span(5,6,List(11),western,west,false), Span(11,12,List(12),to,effort,false)),Map(2 -> "United", 5 -> suspect-01, 12 -> effort, 8 -> ally, 7 -> produce-01, 1 -> name, 4 -> and, 11 -> west, 6 -> create-01, 0 -> country, 9 -> precursor, 3 -> "States", 10 -> infrastructure),Map(e -> effort, w -> west, n -> name, p2 -> precursor, s -> suspect-01, p -> produce-01, a -> and, i -> infrastructure, a2 -> ally, c -> country, c2 -> create-01))),[Ljava.lang.String;@22a04c1d,Annotation([Ljava.lang.String;@6175c80,[Ljava.lang.String;@18bd013e,[Ljava.lang.String;@5e325eb6),Annotation([Ljava.lang.String;@7e5221c9,[Ljava.lang.String;@421d81df,[Ledu.cmu.lti.nlp.amr.Dependency;@32d9dc53),Annotation([Ljava.lang.String;@7e52e350,[Ljava.lang.String;@11e1c93a,[Ljava.lang.String;@3fdca1a0),Annotation([Ljava.lang.String;@439bd94c,[Ljava.lang.String;@2abafa0c,[Ledu.cmu.lti.nlp.amr.Entity;@350d4e78))
AMR:
(a / and, op, a2 / ally)
(a / and, op, c / country)
(c / country, name, n / name)
(c2 / create-01, ARG1, w / west)
(e / effort, purpose, p / produce-01)
(i / infrastructure, mod, a / and)
(n / name, op, "States")
(n / name, op, "United")
(p / produce-01, ARG1, p2 / precursor)
(p2 / precursor, prep-to, c2 / create-01)
(s / suspect-01, ARG0, c / country)
(s / suspect-01, ARG1, p2 / precursor)

Decoded in 878,026 microseconds
Sentence: Low-grade uranium production is legal under international arms-control regulations.

Oracle Span 1:  arms => arm
Oracle Span 2:  control => control-01
Oracle Span 3:  grade => grade
Oracle Span 4:  international => international
Oracle Span 5:  Low => low
Oracle Span 6:  production => produce-01
Oracle Span 7:  regulations => regulate-01
Oracle Span 8:  uranium => uranium
Spans:
Span 6-7:  international => international
Span 4-5:  legal => legal
Span 0-1:  Low-grade => low
Span 2-3:  production => produce-01
Span 8-9:  regulations. => regulate-01
Span 1-2:  uranium => uranium

Langrangian relaxation converged after 32 iterations. Delta = 0.0
Oracle Span 9-10:  arms => arm
Oracle Span 11-12:  control => control-01
Oracle Span 2-3:  grade => grade
Oracle Span 8-9:  international => international
Oracle Span 0-1:  Low => low
Oracle Span 4-5:  production => produce-01
Oracle Span 12-13:  regulations => regulate-01
Oracle Span 3-4:  uranium => uranium

Dependencies:
1	Low-grade	_	JJ	JJ	_	3	amod	_	_
2	uranium	_	NN	NN	_	3	nn	_	_
3	production	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	cop	_	_
5	legal	_	JJ	JJ	_	0	root	_	_
6	under	_	IN	IN	_	5	prep	_	_
7	international	_	JJ	JJ	_	9	amod	_	_
8	arms-control	_	NN	NN	_	9	nn	_	_
9	regulations	_	NNS	NNS	_	6	pobj	_	_
10	.	_	.	.	_	5	punct	_	_

Oracle:
(c / control-01, ARG1, a / arm)
(g / grade, mod, l / low)
(p / produce-01, ARG1, u / uranium)
(r / regulate-01, ARG1, c / control-01)
(r / regulate-01, mod, i / international)
(u / uranium, mod, g / grade)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Low-grade,low,false), Span(1,2,List(1),uranium,uranium,false), Span(2,3,List(2),production,produce-01,false), Span(8,9,List(3),regulations.,regulate-01,false), Span(4,5,List(4),legal,legal,false), Span(6,7,List(5),international,international,false)),Map(2 -> produce-01, 5 -> international, 1 -> uranium, 4 -> legal, 0 -> low, 3 -> regulate-01),Map(p -> produce-01, i -> international, l2 -> legal, r -> regulate-01, u -> uranium, l -> low))),[Ljava.lang.String;@28844ed8,Annotation([Ljava.lang.String;@427377db,[Ljava.lang.String;@3d1ce434,[Ljava.lang.String;@6f6b4330),Annotation([Ljava.lang.String;@6593228b,[Ljava.lang.String;@3c875c4d,[Ledu.cmu.lti.nlp.amr.Dependency;@666022ad),Annotation([Ljava.lang.String;@53a78f92,[Ljava.lang.String;@2f5c7817,[Ljava.lang.String;@293f2c85),Annotation([Ljava.lang.String;@4ead1645,[Ljava.lang.String;@2119cb1d,[Ledu.cmu.lti.nlp.amr.Entity;@6d4983e9))
AMR:
(i / international, domain, l2 / legal)
(p / produce-01, ARG0, l2 / legal)
(p / produce-01, ARG1, u / uranium)
(r / regulate-01, ARG1, i / international)
(u / uranium, mod, l / low)

Decoded in 239,864 microseconds
Sentence: The latest developments in Iran's nuclear technology development show the complex diplomatic and technical challenges facing the incoming foreign policy team of United States President-elect Barack Obama when it takes on the task of stopping Iran from mastering technology that could be used to manufacture and deliver nuclear weapons.

Oracle Span 1:  and => and
Oracle Span 2:  Barack Obama => (person :name (name :op "Obama" :op "Barack"))
Oracle Span 3:  challenges => challenge-01
Oracle Span 4:  complex => complex
Oracle Span 5:  could => possible
Oracle Span 6:  deliver => deliver-01
Oracle Span 7:  developments => develop-02
Oracle Span 8:  diplomatic => diplomacy
Oracle Span 9:  elect => elect-01
Oracle Span 10:  facing => face-01
Oracle Span 11:  foreign => foreign
Oracle Span 12:  incoming => incoming
Oracle Span 13:  Iran => (country :name (name :op "Iran"))
Oracle Span 14:  latest => (late :degree most)
Oracle Span 15:  manufacture => manufacture-01
Oracle Span 16:  mastering => master-01
Oracle Span 17:  nuclear => nucleus
Oracle Span 18:  nuclear => nucleus
Oracle Span 19:  policy => policy
Oracle Span 20:  President => (have-org-role-91 :ARG2 president)
Oracle Span 21:  show => show-01
Oracle Span 22:  stopping => stop-01
Oracle Span 23:  takes => take-09
Oracle Span 24:  task => task-01
Oracle Span 25:  team => team
Oracle Span 26:  technical => technical
Oracle Span 27:  technology => technology
Oracle Span 28:  technology => technology
Oracle Span 29:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 30:  used => use-01
Oracle Span 31:  weapons => weapon
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "United" :op "States"))
Spans:
Span 49-50:   => weapon
Span 45-46:  and => manufacture-01
Span 12-13:  and => diplomacy
Span 41-42:  be => possible
Span 14-15:  challenges => technical
Span 46-47:  deliver => and
Span 7-8:  development => technology
Span 2-3:  developments => develop-01
Span 11-12:  diplomatic => complex
Span 15-16:  facing => (thing :ARG2-of challenge-01)
Span 18-19:  foreign => incoming
Span 35-36:  Iran => stop-01
Span 4-5:  Iran's => (country :name (name :op "Iran"))
Span 1-2:  latest => (late :degree most)
Span 47-48:  nuclear => deliver-01
Span 26-28:  Obama when => (person :name (name :op "Barack" :op "Obama"))
Span 21-22:  of => team
Span 33-34:  of => task
Span 30-31:  on => take-21
Span 19-20:  policy => foreign
Span 8-9:  show => develop-01
Span 20-21:  team => policy
Span 13-14:  technical => and
Span 38-39:  technology => (team :name (name :op "Masters"))
Span 6-7:  technology => nucleus
Span 39-40:  that => technology
Span 16-17:  the => face-01
Span 0-1:  The => (country :name (name :op "North"))
Span 9-10:  the => show-01
Span 43-44:  to => use-01
Span 48-49:  weapons. => nucleus

Langrangian relaxation converged after 47 iterations. Delta = 0.0
Oracle Span 13-14:  and => and
Oracle Span 28-30:  Barack Obama => (person :name (name :op "Obama" :op "Barack"))
Oracle Span 15-16:  challenges => challenge-01
Oracle Span 11-12:  complex => complex
Oracle Span 43-44:  could => possible
Oracle Span 49-50:  deliver => deliver-01
Oracle Span 2-3:  developments => develop-02
Oracle Span 12-13:  diplomatic => diplomacy
Oracle Span 27-28:  elect => elect-01
Oracle Span 16-17:  facing => face-01
Oracle Span 19-20:  foreign => foreign
Oracle Span 18-19:  incoming => incoming
Oracle Span 4-5:  Iran => (country :name (name :op "Iran"))
Oracle Span 1-2:  latest => (late :degree most)
Oracle Span 47-48:  manufacture => manufacture-01
Oracle Span 40-41:  mastering => master-01
Oracle Span 6-7:  nuclear => nucleus
Oracle Span 50-51:  nuclear => nucleus
Oracle Span 20-21:  policy => policy
Oracle Span 25-26:  President => (have-org-role-91 :ARG2 president)
Oracle Span 9-10:  show => show-01
Oracle Span 37-38:  stopping => stop-01
Oracle Span 32-33:  takes => take-09
Oracle Span 35-36:  task => task-01
Oracle Span 21-22:  team => team
Oracle Span 14-15:  technical => technical
Oracle Span 7-8:  technology => technology
Oracle Span 41-42:  technology => technology
Oracle Span 23-25:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 45-46:  used => use-01
Oracle Span 51-52:  weapons => weapon

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	latest	_	JJS	JJS	_	3	amod	_	_
3	developments	_	NNS	NNS	_	10	nsubj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	Iran	_	NNP	NNP	_	9	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	nuclear	_	JJ	JJ	_	9	amod	_	_
8	technology	_	NN	NN	_	9	nn	_	_
9	development	_	NN	NN	_	4	pobj	_	_
10	show	_	VBP	VBP	_	0	root	_	_
11	the	_	DT	DT	_	13	det	_	_
12	complex	_	JJ	JJ	_	13	amod	_	_
13	diplomatic	_	JJ	JJ	_	17	nsubj	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	technical	_	JJ	JJ	_	16	amod	_	_
16	challenges	_	NNS	NNS	_	13	conj	_	_
17	facing	_	VBG	VBG	_	10	dep	_	_
18	the	_	DT	DT	_	22	det	_	_
19	incoming	_	JJ	JJ	_	22	amod	_	_
20	foreign	_	JJ	JJ	_	22	amod	_	_
21	policy	_	NN	NN	_	22	nn	_	_
22	team	_	NN	NN	_	17	dobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	United	_	NNP	NNP	_	28	nn	_	_
25	States	_	NNPS	NNPS	_	28	nn	_	_
26	President-elect	_	NNP	NNP	_	28	nn	_	_
27	Barack	_	NNP	NNP	_	28	nn	_	_
28	Obama	_	NNP	NNP	_	23	pobj	_	_
29	when	_	WRB	WRB	_	31	advmod	_	_
30	it	_	PRP	PRP	_	31	nsubj	_	_
31	takes	_	VBZ	VBZ	_	28	rcmod	_	_
32	on	_	IN	IN	_	31	prep	_	_
33	the	_	DT	DT	_	34	det	_	_
34	task	_	NN	NN	_	32	pobj	_	_
35	of	_	IN	IN	_	34	prep	_	_
36	stopping	_	VBG	VBG	_	35	pcomp	_	_
37	Iran	_	NNP	NNP	_	36	dobj	_	_
38	from	_	IN	IN	_	36	prep	_	_
39	mastering	_	VBG	VBG	_	40	amod	_	_
40	technology	_	NN	NN	_	38	pobj	_	_
41	that	_	WDT	WDT	_	44	nsubjpass	_	_
42	could	_	MD	MD	_	44	aux	_	_
43	be	_	VB	VB	_	44	auxpass	_	_
44	used	_	VBN	VBN	_	40	ccomp	_	_
45	to	_	TO	TO	_	46	aux	_	_
46	manufacture	_	VB	VB	_	44	xcomp	_	_
47	and	_	CC	CC	_	46	cc	_	_
48	deliver	_	VB	VB	_	46	conj	_	_
49	nuclear	_	JJ	JJ	_	50	amod	_	_
50	weapons	_	NNS	NNS	_	46	dobj	_	_
51	.	_	.	.	_	10	punct	_	_

Oracle:
(a2 / and, op, d3 / deliver-01)
(a2 / and, op, m3 / manufacture-01)
(c / country, name, n / name)
(c2 / challenge-01, ARG1, t3 / team)
(c2 / challenge-01, ARG2, t6 / take-09)
(c2 / challenge-01, mod, c3 / complex)
(c2 / challenge-01, mod, d2 / diplomacy)
(c2 / challenge-01, mod, t2 / technical)
(c4 / country, name, n3 / name)
(d / develop-02, ARG0, c / country)
(d / develop-02, ARG1, t / technology)
(d / develop-02, time, l / late)
(d3 / deliver-01, ARG1, w / weapon)
(e / elect-01, ARG1, p3 / person)
(e / elect-01, ARG2, p2 / president)
(f / face-01, ARG0, c2 / challenge-01)
(f / face-01, ARG1, t3 / team)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, c4 / country)
(h / have-org-role-91, ARG2, p2 / president)
(l / late, degree, m / most)
(m2 / master-01, ARG0, c / country)
(m2 / master-01, ARG1, t5 / technology)
(m3 / manufacture-01, ARG1, w / weapon)
(n / name, op, "Iran")
(n3 / name, op, "States")
(n3 / name, op, "United")
(n4 / name, op, "Barack")
(n4 / name, op, "Obama")
(p / policy, mod, f2 / foreign)
(p3 / person, name, n4 / name)
(s / show-01, ARG0, d / develop-02)
(s / show-01, ARG1, c2 / challenge-01)
(s2 / stop-01, ARG1, m2 / master-01)
(t / technology, mod, n2 / nucleus)
(t3 / team, mod, i / incoming)
(t3 / team, mod, p / policy)
(t3 / team, poss, p3 / person)
(t4 / task-01, ARG1, s2 / stop-01)
(t6 / take-09, ARG0, t3 / team)
(t6 / take-09, ARG1, t4 / task-01)
(u / use-01, ARG1, t5 / technology)
(u / use-01, ARG2, a2 / and)
(u / use-01, mod, p4 / possible)
(w / weapon, mod, n5 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(2, 1, 0),Iran's,(country :name (name :op "Iran")),false), Span(16,17,List(3),the,face-01,false), Span(30,31,List(4),on,take-21,false), Span(38,39,List(7, 6, 5),technology,(team :name (name :op "Masters")),false), Span(1,2,List(9, 8),latest,(late :degree most),false), Span(8,9,List(10),show,develop-01,false), Span(14,15,List(11),challenges,technical,false), Span(15,16,List(13, 12),facing,(thing :ARG2-of challenge-01),false), Span(21,22,List(14),of,team,false), Span(45,46,List(15),and,manufacture-01,false), Span(13,14,List(16),technical,and,false), Span(0,1,List(19, 18, 17),The,(country :name (name :op "North")),false), Span(20,21,List(20),team,policy,false), Span(7,8,List(21),development,technology,false), Span(39,40,List(22),that,technology,false), Span(47,48,List(23),nuclear,deliver-01,false), Span(11,12,List(24),diplomatic,complex,false), Span(18,19,List(25),foreign,incoming,false), Span(43,44,List(26),to,use-01,false), Span(41,42,List(27),be,possible,false), Span(19,20,List(28),policy,foreign,false), Span(46,47,List(29),deliver,and,false), Span(49,50,List(30),,weapon,false), Span(12,13,List(31),and,diplomacy,false), Span(9,10,List(32),the,show-01,false), Span(33,34,List(33),of,task,false), Span(2,3,List(34),developments,develop-01,false), Span(26,28,List(38, 37, 36, 35),Obama when,(person :name (name :op "Barack" :op "Obama")),false), Span(48,49,List(39),weapons.,nucleus,false), Span(6,7,List(40),technology,nucleus,false), Span(35,36,List(41),Iran,stop-01,false)),Map(39 -> nucleus, 30 -> weapon, 2 -> "Iran", 5 -> team, 33 -> task, 27 -> possible, 12 -> thing, 8 -> late, 15 -> manufacture-01, 36 -> name, 21 -> technology, 18 -> name, 24 -> complex, 41 -> stop-01, 35 -> person, 7 -> "Masters", 1 -> name, 17 -> country, 23 -> deliver-01, 38 -> "Obama", 26 -> use-01, 4 -> take-21, 11 -> technical, 32 -> show-01, 14 -> team, 29 -> and, 20 -> policy, 34 -> develop-01, 28 -> foreign, 6 -> name, 40 -> nucleus, 9 -> most, 0 -> country, 22 -> technology, 16 -> and, 37 -> "Barack", 19 -> "North", 10 -> develop-01, 3 -> face-01, 31 -> diplomacy, 25 -> incoming, 13 -> challenge-01),Map(w -> weapon, n -> name, t4 -> thing, s2 -> stop-01, t -> take-21, m2 -> manufacture-01, d3 -> diplomacy, p2 -> possible, n4 -> name, c4 -> complex, t6 -> technology, s -> show-01, d -> develop-01, m -> most, t3 -> technical, p -> policy, a -> and, c3 -> country, n3 -> name, n6 -> nucleus, d2 -> deliver-01, t2 -> team, t5 -> team, a2 -> and, i -> incoming, c -> country, t8 -> task, f2 -> foreign, l -> late, u -> use-01, d4 -> develop-01, f -> face-01, p3 -> person, c2 -> challenge-01, n2 -> name, t7 -> technology, n5 -> nucleus))),[Ljava.lang.String;@70d7c4d3,Annotation([Ljava.lang.String;@3019cf03,[Ljava.lang.String;@14d47e3a,[Ljava.lang.String;@6f0a703a),Annotation([Ljava.lang.String;@21b5c054,[Ljava.lang.String;@5faa62b6,[Ledu.cmu.lti.nlp.amr.Dependency;@6838f2d7),Annotation([Ljava.lang.String;@540fd44a,[Ljava.lang.String;@5bb719ff,[Ljava.lang.String;@57846fed),Annotation([Ljava.lang.String;@78858180,[Ljava.lang.String;@5282b75e,[Ledu.cmu.lti.nlp.amr.Entity;@31992410))
AMR:
(a / and, mod, c4 / complex)
(a / and, op, d3 / diplomacy)
(a / and, op, p2 / possible)
(c / country, name, n / name)
(c2 / challenge-01, ARG1, a / and)
(c2 / challenge-01, ARG2, t4 / thing)
(c3 / country, name, n3 / name)
(d / develop-01, ARG0, c / country)
(d / develop-01, ARG1, t6 / technology)
(d2 / deliver-01, ARG1, a2 / and)
(d4 / develop-01, ARG1, d / develop-01)
(d4 / develop-01, ARG6, c3 / country)
(d4 / develop-01, time, l / late)
(f / face-01, ARG0, t4 / thing)
(f / face-01, ARG1, t5 / team)
(l / late, degree, m / most)
(m2 / manufacture-01, ARG1, n5 / nucleus)
(n / name, op, "Iran")
(n2 / name, op, "Masters")
(n3 / name, op, "North")
(n4 / name, op, "Barack")
(n4 / name, op, "Obama")
(n5 / nucleus, op, d2 / deliver-01)
(n5 / nucleus, op, w / weapon)
(p2 / possible, domain, m2 / manufacture-01)
(p3 / person, name, n4 / name)
(s / show-01, ARG0, d4 / develop-01)
(s / show-01, ARG1, f / face-01)
(s2 / stop-01, ARG0, p3 / person)
(s2 / stop-01, ARG1, p2 / possible)
(t / take-21, ARG1, t8 / task)
(t2 / team, location, t7 / technology)
(t2 / team, name, n2 / name)
(t4 / thing, mod, t3 / technical)
(t5 / team, mod, f2 / foreign)
(t5 / team, mod, i / incoming)
(t5 / team, mod, p / policy)
(t6 / technology, mod, n6 / nucleus)
(t7 / technology, op, p2 / possible)
(t8 / task, op, s2 / stop-01)
(u / use-01, ARG1, m2 / manufacture-01)

Decoded in 5,884,502 microseconds
Sentence: The administration of United States President George W. Bush in its last months in power has managed to synchronize United States policies with the European Union, British, French and German leaders, to press for tougher sanctions and diplomatic action against Iran.

Oracle Span 1:  administration => administrate-01
Oracle Span 2:  and => and
Oracle Span 3:  and => and
Oracle Span 4:  British => "Britain"
Oracle Span 5:  diplomatic => diplomacy
Oracle Span 6:  European Union => (organization :name (name :op "Union" :op "European"))
Oracle Span 7:  French => (country :name (name :op "France"))
Oracle Span 8:  George W. Bush => (person :name (name :op "Bush" :op "W." :op "George"))
Oracle Span 9:  German => (country :name (name :op "Germany"))
Oracle Span 10:  has => have-org-role-91
Oracle Span 11:  Iran => (country :name (name :op "Iran"))
Oracle Span 12:  last => last
Oracle Span 13:  leaders => (person :ARG0-of lead-02)
Oracle Span 14:  managed => manage-02
Oracle Span 15:  months => month
Oracle Span 16:  policies => policy
Oracle Span 17:  President => president
Oracle Span 18:  press => press-01
Oracle Span 19:  sanctions => sanction-02
Oracle Span 20:  synchronize => synchronize-01
Oracle Span 21:  tougher => tough
Oracle Span 22:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (person :name (name :op "George" :op "W." :op "Bush"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (organization :name (name :op "European" :op "Union"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "German"))
NER Entity: (thing :name (name :op "French"))
NER Entity: (thing :name (name :op "British"))
Spans:
Span 43-44:   => (country :name (name :op "Iran"))
Span 38-39:  action => sanction-01
Span 1-2:  administration => (government-organization :ARG0-of administrate-01)
Span 39-40:  against => and
Span 28-29:  and => and
Span 37-38:  diplomatic => (tough :degree more)
Span 27-28:  French => (country :name (name :op "Britain"))
Span 6-9:  George W. Bush => (person :name (name :op "George" :op "W." :op "Bush"))
Span 29-30:  German => (country :name (name :op "France"))
Span 40-41:  Iran. => diplomacy
Span 30-31:  leaders, => and
Span 16-17:  managed => manage-02
Span 21-22:  policies => policy
Span 14-15:  power => power
Span 5-6:  President => (have-org-role-91 :ARG2 president)
Span 32-33:  press => (person :ARG0-of lead-02)
Span 35-36:  sanctions => press-01
Span 4-5:  States => state
Span 18-19:  synchronize => synchronize-01
Span 0-12:  The administration of United States President George W. Bush in its last => (date-entity :time last :time month)
Span 31-32:  to => (country :name (name :op "Germany"))
Span 25-26:  Union, => "Union"
Span 3-4:  United => (company :name (name :op "Services" :op "United" :op "Energy"))
Span 19-21:  United States => (country :name (name :op "United" :op "States"))

Langrangian relaxation converged after 63 iterations. Delta = 0.0
Oracle Span 1-2:  administration => administrate-01
Oracle Span 30-31:  and => and
Oracle Span 39-40:  and => and
Oracle Span 27-28:  British => "Britain"
Oracle Span 40-41:  diplomatic => diplomacy
Oracle Span 24-26:  European Union => (organization :name (name :op "Union" :op "European"))
Oracle Span 29-30:  French => (country :name (name :op "France"))
Oracle Span 6-9:  George W. Bush => (person :name (name :op "Bush" :op "W." :op "George"))
Oracle Span 31-32:  German => (country :name (name :op "Germany"))
Oracle Span 15-16:  has => have-org-role-91
Oracle Span 43-44:  Iran => (country :name (name :op "Iran"))
Oracle Span 11-12:  last => last
Oracle Span 32-33:  leaders => (person :ARG0-of lead-02)
Oracle Span 16-17:  managed => manage-02
Oracle Span 12-13:  months => month
Oracle Span 21-22:  policies => policy
Oracle Span 5-6:  President => president
Oracle Span 35-36:  press => press-01
Oracle Span 38-39:  sanctions => sanction-02
Oracle Span 18-19:  synchronize => synchronize-01
Oracle Span 37-38:  tougher => tough
Oracle Span 3-5:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	administration	_	NN	NN	_	17	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	United	_	NNP	NNP	_	9	nn	_	_
5	States	_	NNPS	NNPS	_	9	nn	_	_
6	President	_	NNP	NNP	_	9	nn	_	_
7	George	_	NNP	NNP	_	9	nn	_	_
8	W.	_	NNP	NNP	_	9	nn	_	_
9	Bush	_	NNP	NNP	_	3	pobj	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	its	_	PRP$	PRP$	_	13	poss	_	_
12	last	_	JJ	JJ	_	13	amod	_	_
13	months	_	NNS	NNS	_	10	pobj	_	_
14	in	_	IN	IN	_	13	prep	_	_
15	power	_	NN	NN	_	14	pobj	_	_
16	has	_	VBZ	VBZ	_	17	aux	_	_
17	managed	_	VBN	VBN	_	0	root	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	synchronize	_	VB	VB	_	17	xcomp	_	_
20	United	_	NNP	NNP	_	22	nn	_	_
21	States	_	NNPS	NNPS	_	22	nn	_	_
22	policies	_	NNS	NNS	_	19	dobj	_	_
23	with	_	IN	IN	_	19	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	European	_	JJ	JJ	_	36	dep	_	_
26	Union	_	NNP	NNP	_	25	dep	_	_
27	,	_	,	,	_	26	punct	_	_
28	British	_	NNP	NNP	_	26	dep	_	_
29	,	_	,	,	_	26	punct	_	_
30	French	_	NNP	NNP	_	33	amod	_	_
31	and	_	CC	CC	_	30	cc	_	_
32	German	_	NNP	NNP	_	30	conj	_	_
33	leaders	_	NNS	NNS	_	36	dep	_	_
34	,	_	,	,	_	36	punct	_	_
35	to	_	TO	TO	_	36	aux	_	_
36	press	_	VB	VB	_	23	pobj	_	_
37	for	_	IN	IN	_	36	prep	_	_
38	tougher	_	JJR	JJR	_	39	amod	_	_
39	sanctions	_	NNS	NNS	_	37	pobj	_	_
40	and	_	CC	CC	_	36	cc	_	_
41	diplomatic	_	JJ	JJ	_	42	amod	_	_
42	action	_	NN	NN	_	36	conj	_	_
43	against	_	IN	IN	_	42	prep	_	_
44	Iran	_	NNP	NNP	_	43	pobj	_	_
45	.	_	.	.	_	17	punct	_	_

Oracle:
(a2 / and, op, p7 / person)
(a3 / and, op, s2 / sanction-02)
(c2 / country, name, n6 / name)
(c4 / country, name, n4 / name)
(c5 / country, name, n5 / name)
(c6 / country, name, n7 / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c6 / country)
(h / have-org-role-91, ARG2, p9 / president)
(l5 / lead-02, ARG0, p7 / person)
(l5 / lead-02, ARG1, c5 / country)
(m / manage-02, ARG1, s / synchronize-01)
(m / manage-02, time, m2 / month)
(m2 / month, mod, l / last)
(n / name, op, "Bush")
(n / name, op, "George")
(n / name, op, "W.")
(n2 / name, op, "European")
(n2 / name, op, "Union")
(n4 / name, op, "France")
(n5 / name, op, "Germany")
(n6 / name, op, "Iran")
(n7 / name, op, "States")
(n7 / name, op, "United")
(o / organization, name, n2 / name)
(p / person, name, n / name)
(p3 / policy, mod, c6 / country)
(p8 / press-01, ARG2, a3 / and)
(s / synchronize-01, ARG1, p3 / policy)
(s / synchronize-01, ARG2, a2 / and)
(s / synchronize-01, purpose, p8 / press-01)
(s2 / sanction-02, ARG1, c2 / country)
(s2 / sanction-02, mod, t / tough)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(1, 0),administration,(government-organization :ARG0-of administrate-01),false), Span(4,5,List(2),States,state,false), Span(3,4,List(7, 6, 5, 4, 3),United,(company :name (name :op "Services" :op "United" :op "Energy")),false), Span(37,38,List(9, 8),diplomatic,(tough :degree more),false), Span(29,30,List(12, 11, 10),German,(country :name (name :op "France")),false), Span(40,41,List(13),Iran.,diplomacy,false), Span(43,44,List(16, 15, 14),,(country :name (name :op "Iran")),false), Span(35,36,List(17),sanctions,press-01,false), Span(38,39,List(18),action,sanction-01,false), Span(19,21,List(22, 21, 20, 19),United States,(country :name (name :op "United" :op "States")),false), Span(31,32,List(25, 24, 23),to,(country :name (name :op "Germany")),false), Span(16,17,List(26),managed,manage-02,false), Span(6,9,List(31, 30, 29, 28, 27),George W. Bush,(person :name (name :op "George" :op "W." :op "Bush")),false), Span(0,12,List(34, 33, 32),The administration of United States President George W. Bush in its last,(date-entity :time last :time month),false), Span(30,31,List(35),leaders,,and,false), Span(25,26,List(36),Union,,"Union",false), Span(5,6,List(38, 37),President,(have-org-role-91 :ARG2 president),false), Span(32,33,List(40, 39),press,(person :ARG0-of lead-02),false), Span(21,22,List(41),policies,policy,false), Span(39,40,List(42),against,and,false), Span(28,29,List(43),and,and,false), Span(14,15,List(44),power,power,false), Span(18,19,List(45),synchronize,synchronize-01,false), Span(27,28,List(48, 47, 46),French,(country :name (name :op "Britain")),false)),Map(30 -> "W.", 39 -> person, 45 -> synchronize-01, 2 -> state, 5 -> "Services", 48 -> "Britain", 33 -> last, 27 -> person, 12 -> "France", 8 -> tough, 15 -> name, 42 -> and, 36 -> "Union", 21 -> "United", 18 -> sanction-01, 24 -> name, 35 -> and, 41 -> policy, 7 -> "Energy", 17 -> press-01, 1 -> administrate-01, 44 -> power, 23 -> country, 38 -> president, 47 -> name, 4 -> name, 26 -> manage-02, 11 -> name, 32 -> date-entity, 14 -> country, 20 -> name, 29 -> "George", 46 -> country, 34 -> month, 6 -> "United", 28 -> name, 40 -> lead-02, 0 -> government-organization, 9 -> more, 43 -> and, 22 -> "States", 16 -> "Iran", 37 -> have-org-role-91, 19 -> country, 3 -> company, 10 -> country, 25 -> "Germany", 31 -> "Bush", 13 -> diplomacy),Map(m3 -> month, n -> name, h -> have-org-role-91, p5 -> policy, s2 -> sanction-01, t -> tough, m2 -> manage-02, n7 -> name, p2 -> person, a3 -> and, c4 -> country, n4 -> name, s -> state, d -> diplomacy, m -> more, U -> "Union", p -> press-01, g -> government-organization, n3 -> name, c3 -> country, a -> administrate-01, p4 -> person, n6 -> name, d2 -> date-entity, c6 -> country, l2 -> lead-02, a2 -> and, c -> company, s3 -> synchronize-01, p6 -> power, l -> last, p3 -> president, n2 -> name, c2 -> country, a4 -> and, c5 -> country, n5 -> name))),[Ljava.lang.String;@655c7112,Annotation([Ljava.lang.String;@1a7a46e0,[Ljava.lang.String;@3dd5598b,[Ljava.lang.String;@53f74355),Annotation([Ljava.lang.String;@55a56cd8,[Ljava.lang.String;@1da06dca,[Ledu.cmu.lti.nlp.amr.Dependency;@aae76f4),Annotation([Ljava.lang.String;@632a711f,[Ljava.lang.String;@1d97120e,[Ljava.lang.String;@347e24b),Annotation([Ljava.lang.String;@7a272d01,[Ljava.lang.String;@4ab509d3,[Ledu.cmu.lti.nlp.amr.Entity;@6f1765e9))
AMR:
(a / administrate-01, ARG0, g / government-organization)
(a / administrate-01, ARG1, p2 / person)
(a2 / and, op, U / "Union")
(a2 / and, op, c2 / country)
(a2 / and, op, c5 / country)
(a3 / and, op, d / diplomacy)
(a3 / and, op, p / press-01)
(a3 / and, time, p4 / person)
(a4 / and, op, a2 / and)
(a4 / and, op, c6 / country)
(c / company, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, example, a3 / and)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / country, name, n5 / name)
(c6 / country, name, n7 / name)
(d2 / date-entity, time, l / last)
(d2 / date-entity, time, m3 / month)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c / company)
(h / have-org-role-91, ARG2, p3 / president)
(l2 / lead-02, ARG0, p4 / person)
(l2 / lead-02, ARG1, c5 / country)
(m2 / manage-02, ARG0, g / government-organization)
(m2 / manage-02, ARG1, s3 / synchronize-01)
(n / name, op, "Energy")
(n / name, op, "Services")
(n / name, op, "United")
(n2 / name, op, "France")
(n3 / name, op, "Iran")
(n4 / name, op, "States")
(n4 / name, op, "United")
(n5 / name, op, "Germany")
(n6 / name, op, "Bush")
(n6 / name, op, "George")
(n6 / name, op, "W.")
(n7 / name, op, "Britain")
(p / press-01, ARG1, s2 / sanction-01)
(p2 / person, name, n6 / name)
(s / state, poss, c / company)
(s2 / sanction-01, ARG1, p6 / power)
(s2 / sanction-01, mod, t / tough)
(s3 / synchronize-01, ARG0, d2 / date-entity)
(s3 / synchronize-01, ARG1, p5 / policy)
(s3 / synchronize-01, ARG2, c4 / country)
(s3 / synchronize-01, ARG6, p / press-01)
(t / tough, degree, m / more)

Decoded in 7,570,004 microseconds
Sentence: The International Atomic Energy Agency is expected to release a report critical of Iran next week.

Oracle Span 1:  critical => criticize-01
Oracle Span 2:  expected => expect-01
Oracle Span 3:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5:  next => next
Oracle Span 6:  release => release-01
Oracle Span 7:  report => (thing :ARG1-of report-01)
Oracle Span 8:  week => week
NER Entity: (organization :name (name :op "International" :op "Atomic" :op "Energy" :op "Agency"))
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 11-12:  critical => critical
Span 6-7:  expected => expect-01
Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency"))
Span 13-14:  Iran => (country :name (name :op "Iran"))
Span 8-9:  release => release-01
Span 10-11:  report => report
Span 0-15:  The International Atomic Energy Agency is expected to release a report critical of Iran next => (date-entity :time next :time week)

Langrangian relaxation converged after 26 iterations. Delta = 0.0
Oracle Span 11-12:  critical => criticize-01
Oracle Span 6-7:  expected => expect-01
Oracle Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 13-14:  Iran => (country :name (name :op "Iran"))
Oracle Span 14-15:  next => next
Oracle Span 8-9:  release => release-01
Oracle Span 10-11:  report => (thing :ARG1-of report-01)
Oracle Span 15-16:  week => week

Dependencies:
1	The	_	DT	DT	_	5	det	_	_
2	International	_	NNP	NNP	_	5	nn	_	_
3	Atomic	_	NNP	NNP	_	5	nn	_	_
4	Energy	_	NNP	NNP	_	5	nn	_	_
5	Agency	_	NNP	NNP	_	7	nsubjpass	_	_
6	is	_	VBZ	VBZ	_	7	auxpass	_	_
7	expected	_	VBN	VBN	_	0	root	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	release	_	VB	VB	_	7	xcomp	_	_
10	a	_	DT	DT	_	11	det	_	_
11	report	_	NN	NN	_	9	dobj	_	_
12	critical	_	JJ	JJ	_	11	amod	_	_
13	of	_	IN	IN	_	11	prep	_	_
14	Iran	_	NNP	NNP	_	13	pobj	_	_
15	next	_	JJ	JJ	_	16	amod	_	_
16	week	_	NN	NN	_	9	tmod	_	_
17	.	_	.	.	_	7	punct	_	_

Oracle:
(c / criticize-01, ARG0, t / thing)
(c / criticize-01, ARG1, c2 / country)
(c2 / country, name, n2 / name)
(e / expect-01, ARG1, r / release-01)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n2 / name, op, "Iran")
(o / organization, name, n / name)
(r / release-01, ARG0, o / organization)
(r / release-01, ARG1, t / thing)
(r / release-01, time, w / week)
(r2 / report-01, ARG1, t / thing)
(w / week, mod, n3 / next)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),expected,expect-01,false), Span(11,12,List(1),critical,critical,false), Span(1,5,List(7, 6, 5, 4, 3, 2),International Atomic Energy Agency,(organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency")),false), Span(10,11,List(8),report,report,false), Span(0,15,List(11, 10, 9),The International Atomic Energy Agency is expected to release a report critical of Iran next,(date-entity :time next :time week),false), Span(8,9,List(12),release,release-01,false), Span(13,14,List(15, 14, 13),Iran,(country :name (name :op "Iran")),false)),Map(2 -> organization, 5 -> "International", 12 -> release-01, 15 -> "Iran", 8 -> report, 7 -> "Agency", 1 -> critical, 4 -> "Atomic", 11 -> week, 14 -> name, 6 -> "Energy", 0 -> expect-01, 9 -> date-entity, 3 -> name, 10 -> next, 13 -> country),Map(w -> week, n -> name, e -> expect-01, d -> date-entity, r2 -> release-01, n3 -> name, r -> report, c -> critical, o -> organization, c2 -> country, n2 -> next))),[Ljava.lang.String;@173d1ec3,Annotation([Ljava.lang.String;@75a2b2a2,[Ljava.lang.String;@58e37e6f,[Ljava.lang.String;@10a27c2b),Annotation([Ljava.lang.String;@6f96b3fa,[Ljava.lang.String;@fc13b08,[Ledu.cmu.lti.nlp.amr.Dependency;@4c923c99),Annotation([Ljava.lang.String;@4fd24204,[Ljava.lang.String;@15813167,[Ljava.lang.String;@131e41a4),Annotation([Ljava.lang.String;@4e35c1aa,[Ljava.lang.String;@13aa680a,[Ledu.cmu.lti.nlp.amr.Entity;@f3c6911))
AMR:
(c2 / country, name, n3 / name)
(d / date-entity, time, n2 / next)
(d / date-entity, time, w / week)
(e / expect-01, ARG1, r2 / release-01)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n3 / name, op, "Iran")
(o / organization, name, n / name)
(r / report, example, c2 / country)
(r / report, mod, c / critical)
(r2 / release-01, ARG0, o / organization)
(r2 / release-01, ARG1, r / report)
(r2 / release-01, time, d / date-entity)

Decoded in 610,201 microseconds
Sentence: The International Atomic Energy Agency is the United Nations's nuclear watchdog agency.

Oracle Span 1:  agency => agency
Oracle Span 2:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 3:  nuclear => nucleus
Oracle Span 4:  United Nations => (organization :name (name :op "Nations" :op "United"))
Oracle Span 5:  watchdog => watchdog
NER Entity: (organization :name (name :op "United" :op "Nations"))
NER Entity: (organization :name (name :op "International" :op "Atomic" :op "Energy" :op "Agency"))
Spans:
Span 12-13:   => agency
Span 11-12:  agency. => watchdog
Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency"))
Span 7-9:  United Nations's => (organization :name (name :op "United" :op "Nations"))
Span 10-11:  watchdog => nucleus

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 12-13:  agency => agency
Oracle Span 1-5:  International Atomic Energy Agency => (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International"))
Oracle Span 10-11:  nuclear => nucleus
Oracle Span 7-9:  United Nations => (organization :name (name :op "Nations" :op "United"))
Oracle Span 11-12:  watchdog => watchdog

Dependencies:
1	The	_	DT	DT	_	5	det	_	_
2	International	_	NNP	NNP	_	5	nn	_	_
3	Atomic	_	NNP	NNP	_	5	nn	_	_
4	Energy	_	NNP	NNP	_	5	nn	_	_
5	Agency	_	NNP	NNP	_	13	nsubj	_	_
6	is	_	VBZ	VBZ	_	13	cop	_	_
7	the	_	DT	DT	_	9	det	_	_
8	United	_	NNP	NNP	_	9	nn	_	_
9	Nations	_	NNPS	NNPS	_	13	poss	_	_
10	's	_	POS	POS	_	9	possessive	_	_
11	nuclear	_	JJ	JJ	_	13	amod	_	_
12	watchdog	_	NN	NN	_	13	nn	_	_
13	agency	_	NN	NN	_	0	root	_	_
14	.	_	.	.	_	13	punct	_	_

Oracle:
(a / agency, domain, o / organization)
(a / agency, mod, o2 / organization)
(a / agency, mod, w / watchdog)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n3 / name, op, "Nations")
(n3 / name, op, "United")
(o / organization, name, n / name)
(o2 / organization, name, n3 / name)
(w / watchdog, mod, n2 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),agency.,watchdog,false), Span(1,5,List(6, 5, 4, 3, 2, 1),International Atomic Energy Agency,(organization :name (name :op "Atomic" :op "International" :op "Energy" :op "Agency")),false), Span(10,11,List(7),watchdog,nucleus,false), Span(12,13,List(8),,agency,false), Span(7,9,List(12, 11, 10, 9),United Nations's,(organization :name (name :op "United" :op "Nations")),false)),Map(2 -> name, 5 -> "Energy", 12 -> "Nations", 8 -> agency, 7 -> nucleus, 1 -> organization, 4 -> "International", 11 -> "United", 6 -> "Agency", 0 -> watchdog, 9 -> organization, 3 -> "Atomic", 10 -> name),Map(n -> name, w -> watchdog, n3 -> name, a -> agency, o2 -> organization, o -> organization, n2 -> nucleus))),[Ljava.lang.String;@64c3c119,Annotation([Ljava.lang.String;@27555009,[Ljava.lang.String;@f5a6ddc,[Ljava.lang.String;@8cab640),Annotation([Ljava.lang.String;@72fb6549,[Ljava.lang.String;@7fa3a607,[Ledu.cmu.lti.nlp.amr.Dependency;@234b00a2),Annotation([Ljava.lang.String;@7eeeca3d,[Ljava.lang.String;@57962984,[Ljava.lang.String;@35e72eef),Annotation([Ljava.lang.String;@4ed266e1,[Ljava.lang.String;@46e5e224,[Ledu.cmu.lti.nlp.amr.Entity;@20d93975))
AMR:
(a / agency, domain, o / organization)
(a / agency, mod, n2 / nucleus)
(a / agency, mod, w / watchdog)
(a / agency, poss, o2 / organization)
(n / name, op, "Agency")
(n / name, op, "Atomic")
(n / name, op, "Energy")
(n / name, op, "International")
(n3 / name, op, "Nations")
(n3 / name, op, "United")
(o / organization, name, n / name)
(o2 / organization, name, n3 / name)

Decoded in 182,424 microseconds
Sentence: Due to the Act that no new initiatives regarding Iran's nuclear program emerged from the 081113 Paris talks the hopes of imposing another set of United Nations Security Council sanctions before the end of President Bush's term were decreasing.

Oracle Span 1:  081113 => (date-entity :year 2008 :month 11 :day 13)
Oracle Span 2:  another => another
Oracle Span 3:  before => before
Oracle Span 4:  Bush => (person :name (name :op "Bush"))
Oracle Span 5:  decreasing => decrease-01
Oracle Span 6:  emerged => emerge-01
Oracle Span 7:  end => end-01
Oracle Span 8:  hopes => hope-01
Oracle Span 9:  imposing => impose-01
Oracle Span 10:  initiatives => initiative
Oracle Span 11:  Iran => (country :name (name :op "Iran"))
Oracle Span 12:  new => new
Oracle Span 13:  no => -
Oracle Span 14:  nuclear => nucleus
Oracle Span 15:  Paris => (city :name (name :op "Paris"))
Oracle Span 16:  President => (have-org-role-91 :ARG2 president)
Oracle Span 17:  program => program
Oracle Span 18:  sanctions => sanction-02
Oracle Span 19:  set => set
Oracle Span 20:  talks => talk-01
Oracle Span 21:  term => term
Oracle Span 22:  United Nations Security Council => (organization :name (name :op "Council" :op "Security" :op "Nations" :op "United"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (country :name (name :op "Paris"))
NER Entity: (organization :name (name :op "United" :op "Nations" :op "Security" :op "Council"))
NER Entity: (person :name (name :op "Bush"))
mkDayMonthYear(081113,13,11,2008)
mkDayMonthYear(081113,13,11,08)
Spans:
Span 40-41:   => decrease-01
Span 3-4:  Act => act-01
Span 22-23:  another => impose-01
Span 30-31:  before => sanction-01
Span 38-39:  decreasing. => term
Span 0-1:  Due => duel-01
Span 0-1:  Due => 1
Span 12-13:  emerged => program
Span 13-14:  from => emerge-01
Span 7-8:  initiatives => initiative
Span 26-30:  Nations Security Council sanctions => (organization :name (name :op "Security" :op "Council" :op "United" :op "Nations"))
Span 6-7:  new => new
Span 33-34:  of => end-01
Span 24-25:  of => set
Span 20-21:  of => hope-01
Span 11-12:  program => nucleus
Span 23-24:  set => another
Span 36-37:  term => (person :name (name :op "Bush"))
Span 31-32:  the => before
Span 18-19:  the => talk-01

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 16-17:  081113 => (date-entity :year 2008 :month 11 :day 13)
Oracle Span 23-24:  another => another
Oracle Span 31-32:  before => before
Oracle Span 36-37:  Bush => (person :name (name :op "Bush"))
Oracle Span 40-41:  decreasing => decrease-01
Oracle Span 13-14:  emerged => emerge-01
Oracle Span 33-34:  end => end-01
Oracle Span 20-21:  hopes => hope-01
Oracle Span 22-23:  imposing => impose-01
Oracle Span 7-8:  initiatives => initiative
Oracle Span 9-10:  Iran => (country :name (name :op "Iran"))
Oracle Span 6-7:  new => new
Oracle Span 5-6:  no => -
Oracle Span 11-12:  nuclear => nucleus
Oracle Span 17-18:  Paris => (city :name (name :op "Paris"))
Oracle Span 35-36:  President => (have-org-role-91 :ARG2 president)
Oracle Span 12-13:  program => program
Oracle Span 30-31:  sanctions => sanction-02
Oracle Span 24-25:  set => set
Oracle Span 18-19:  talks => talk-01
Oracle Span 38-39:  term => term
Oracle Span 26-30:  United Nations Security Council => (organization :name (name :op "Council" :op "Security" :op "Nations" :op "United"))

Dependencies:
1	Due	_	JJ	JJ	_	2	mwe	_	_
2	to	_	TO	TO	_	31	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	Act	_	NNP	NNP	_	2	pobj	_	_
5	that	_	IN	IN	_	14	mark	_	_
6	no	_	DT	DT	_	8	neg	_	_
7	new	_	JJ	JJ	_	8	amod	_	_
8	initiatives	_	NNS	NNS	_	14	nsubj	_	_
9	regarding	_	VBG	VBG	_	8	prep	_	_
10	Iran	_	NNP	NNP	_	13	poss	_	_
11	's	_	POS	POS	_	10	possessive	_	_
12	nuclear	_	JJ	JJ	_	13	amod	_	_
13	program	_	NN	NN	_	9	pobj	_	_
14	emerged	_	VBD	VBD	_	4	dep	_	_
15	from	_	IN	IN	_	14	prep	_	_
16	the	_	DT	DT	_	19	det	_	_
17	081113	_	CD	CD	_	19	num	_	_
18	Paris	_	NNP	NNP	_	19	nn	_	_
19	talks	_	NNS	NNS	_	15	pobj	_	_
20	the	_	DT	DT	_	21	det	_	_
21	hopes	_	NNS	NNS	_	31	nsubj	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	imposing	_	VBG	VBG	_	22	pcomp	_	_
24	another	_	DT	DT	_	25	det	_	_
25	set	_	NN	NN	_	23	dobj	_	_
26	of	_	IN	IN	_	25	prep	_	_
27	United	_	NNP	NNP	_	30	nn	_	_
28	Nations	_	NNPS	NNPS	_	30	nn	_	_
29	Security	_	NNP	NNP	_	30	nn	_	_
30	Council	_	NNP	NNP	_	26	pobj	_	_
31	sanctions	_	VBZ	VBZ	_	0	root	_	_
32	before	_	IN	IN	_	41	mark	_	_
33	the	_	DT	DT	_	34	det	_	_
34	end	_	NN	NN	_	41	nsubj	_	_
35	of	_	IN	IN	_	34	prep	_	_
36	President	_	NNP	NNP	_	37	nn	_	_
37	Bush	_	NNP	NNP	_	39	poss	_	_
38	's	_	POS	POS	_	37	possessive	_	_
39	term	_	NN	NN	_	35	pobj	_	_
40	were	_	VBD	VBD	_	41	aux	_	_
41	decreasing	_	VBG	VBG	_	31	advcl	_	_
42	.	_	.	.	_	31	punct	_	_

Oracle:
(b / before, op, e / end-01)
(c / city, name, n2 / name)
(c3 / country, name, n6 / name)
(d / date-entity, day, 13)
(d / date-entity, month, 11)
(d / date-entity, year, 2008)
(d2 / decrease-01, ARG1, h / hope-01)
(e / end-01, ARG1, t2 / term)
(e2 / emerge-01, ARG0, i2 / initiative)
(e2 / emerge-01, ARG1, t / talk-01)
(e2 / emerge-01, polarity, - / -)
(h / hope-01, ARG1, i / impose-01)
(h2 / have-org-role-91, ARG0, p3 / person)
(h2 / have-org-role-91, ARG2, p / president)
(i / impose-01, ARG1, s2 / set)
(i / impose-01, time, b / before)
(i2 / initiative, mod, n4 / new)
(i2 / initiative, topic, p2 / program)
(n / name, op, "Bush")
(n2 / name, op, "Paris")
(n3 / name, op, "Council")
(n3 / name, op, "Nations")
(n3 / name, op, "Security")
(n3 / name, op, "United")
(n6 / name, op, "Iran")
(o / organization, name, n3 / name)
(p2 / program, mod, c3 / country)
(p2 / program, mod, n5 / nucleus)
(p3 / person, name, n / name)
(s / sanction-02, ARG0, o / organization)
(s / sanction-02, consist, s2 / set)
(s2 / set, mod, a / another)
(t / talk-01, location, c / city)
(t / talk-01, time, d / date-entity)
(t2 / term, poss, p3 / person)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Due,duel-01,false), Span(38,39,List(1),decreasing.,term,false), Span(33,34,List(2),of,end-01,false), Span(23,24,List(3),set,another,false), Span(31,32,List(4),the,before,false), Span(26,30,List(10, 9, 8, 7, 6, 5),Nations Security Council sanctions,(organization :name (name :op "Security" :op "Council" :op "United" :op "Nations")),false), Span(13,14,List(11),from,emerge-01,false), Span(12,13,List(12),emerged,program,false), Span(0,1,List(13),Due,1,false), Span(24,25,List(14),of,set,false), Span(7,8,List(15),initiatives,initiative,false), Span(22,23,List(16),another,impose-01,false), Span(36,37,List(19, 18, 17),term,(person :name (name :op "Bush")),false), Span(20,21,List(20),of,hope-01,false), Span(3,4,List(21),Act,act-01,false), Span(18,19,List(22),the,talk-01,false), Span(11,12,List(23),program,nucleus,false), Span(30,31,List(24),before,sanction-01,false), Span(6,7,List(25),new,new,false), Span(40,41,List(26),,decrease-01,false)),Map(2 -> end-01, 5 -> organization, 12 -> program, 8 -> "Council", 15 -> initiative, 21 -> act-01, 18 -> name, 24 -> sanction-01, 7 -> "Security", 1 -> term, 17 -> person, 23 -> nucleus, 26 -> decrease-01, 4 -> before, 11 -> emerge-01, 14 -> set, 20 -> hope-01, 6 -> name, 9 -> "United", 0 -> duel-01, 22 -> talk-01, 16 -> impose-01, 19 -> "Bush", 10 -> "Nations", 3 -> another, 25 -> new, 13 -> 1),Map(e -> end-01, n -> name, h -> hope-01, s2 -> sanction-01, t -> term, b -> before, p2 -> person, e2 -> emerge-01, n4 -> new, s -> set, d -> duel-01, 1 -> 1, p -> program, n3 -> nucleus, a -> another, d2 -> decrease-01, t2 -> talk-01, i2 -> impose-01, a2 -> act-01, i -> initiative, o -> organization, n2 -> name))),[Ljava.lang.String;@4e877fe5,Annotation([Ljava.lang.String;@70cd766a,[Ljava.lang.String;@3d4ee6a8,[Ljava.lang.String;@60c49f75),Annotation([Ljava.lang.String;@1549bcdf,[Ljava.lang.String;@e2cf63a,[Ledu.cmu.lti.nlp.amr.Dependency;@449d3af1),Annotation([Ljava.lang.String;@e63a20,[Ljava.lang.String;@5891d1a7,[Ljava.lang.String;@31e571a9),Annotation([Ljava.lang.String;@1c028fd6,[Ljava.lang.String;@2d04914c,[Ledu.cmu.lti.nlp.amr.Entity;@7b4e71a2))
AMR:
(a2 / act-01, ARG1, i / initiative)
(a2 / act-01, ARG6, d / duel-01)
(b / before, op, d2 / decrease-01)
(d / duel-01, ARG1, 1 / 1)
(d2 / decrease-01, ARG1, e / end-01)
(e / end-01, ARG1, p2 / person)
(e2 / emerge-01, ARG0, i / initiative)
(e2 / emerge-01, ARG1, p / program)
(h / hope-01, ARG1, i2 / impose-01)
(i / initiative, mod, n4 / new)
(i2 / impose-01, ARG1, s / set)
(i2 / impose-01, ARG2, o / organization)
(n / name, op, "Council")
(n / name, op, "Nations")
(n / name, op, "Security")
(n / name, op, "United")
(n2 / name, op, "Bush")
(o / organization, name, n / name)
(p / program, mod, n3 / nucleus)
(p2 / person, name, n2 / name)
(s / set, mod, a / another)
(s2 / sanction-01, ARG1, h / hope-01)
(s2 / sanction-01, time, b / before)
(t / term, poss, p2 / person)
(t2 / talk-01, ARG0, i / initiative)
(t2 / talk-01, ARG1, d2 / decrease-01)

Decoded in 2,353,479 microseconds
Sentence: While diplomatic maneuvering is taking place Iran continues to work towards mastering nuclear and missile technology.

Oracle Span 1:  and => and
Oracle Span 2:  continues => continue-01
Oracle Span 3:  diplomatic => diplomacy
Oracle Span 4:  Iran => (country :name (name :op "Iran"))
Oracle Span 5:  maneuvering => maneuver-01
Oracle Span 6:  mastering => master-01
Oracle Span 7:  missile => missile
Oracle Span 8:  nuclear => nucleus
Oracle Span 9:  taking => take-14
Oracle Span 10:  technology => technology
Oracle Span 11:  work => work-06
NER Entity: (country :name (name :op "Iran"))
Spans:
Span 13-14:  and => and
Span 7-8:  continues => continue-01
Span 1-2:  diplomatic => diplomacy
Span 6-7:  Iran => (country :name (name :op "Iran"))
Span 2-3:  maneuvering => maneuver-01
Span 11-12:  mastering => master-01
Span 14-15:  missile => missile
Span 15-16:  technology. => technology
Span 0-1:  While => will-01
Span 9-10:  work => work-01

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 13-14:  and => and
Oracle Span 7-8:  continues => continue-01
Oracle Span 1-2:  diplomatic => diplomacy
Oracle Span 6-7:  Iran => (country :name (name :op "Iran"))
Oracle Span 2-3:  maneuvering => maneuver-01
Oracle Span 11-12:  mastering => master-01
Oracle Span 14-15:  missile => missile
Oracle Span 12-13:  nuclear => nucleus
Oracle Span 4-5:  taking => take-14
Oracle Span 15-16:  technology => technology
Oracle Span 9-10:  work => work-06

Dependencies:
1	While	_	IN	IN	_	5	mark	_	_
2	diplomatic	_	JJ	JJ	_	3	amod	_	_
3	maneuvering	_	NN	NN	_	5	nsubj	_	_
4	is	_	VBZ	VBZ	_	5	aux	_	_
5	taking	_	VBG	VBG	_	8	advcl	_	_
6	place	_	NN	NN	_	5	dobj	_	_
7	Iran	_	NNP	NNP	_	8	nsubj	_	_
8	continues	_	VBZ	VBZ	_	0	root	_	_
9	to	_	TO	TO	_	10	aux	_	_
10	work	_	VB	VB	_	8	xcomp	_	_
11	towards	_	IN	IN	_	10	prep	_	_
12	mastering	_	VBG	VBG	_	11	pcomp	_	_
13	nuclear	_	JJ	JJ	_	16	amod	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	missile	_	NN	NN	_	13	conj	_	_
16	technology	_	NN	NN	_	12	dobj	_	_
17	.	_	.	.	_	8	punct	_	_

Oracle:
(a / and, op, t2 / technology)
(c / continue-01, ARG0, c2 / country)
(c / continue-01, ARG1, w / work-06)
(c / continue-01, time, t3 / take-14)
(c2 / country, name, n / name)
(m / master-01, ARG0, c2 / country)
(m / master-01, ARG1, a / and)
(m3 / maneuver-01, mod, d / diplomacy)
(n / name, op, "Iran")
(t2 / technology, mod, m2 / missile)
(t3 / take-14, ARG1, m3 / maneuver-01)
(w / work-06, ARG0, c2 / country)
(w / work-06, ARG4, m / master-01)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),diplomatic,diplomacy,false), Span(11,12,List(1),mastering,master-01,false), Span(6,7,List(4, 3, 2),Iran,(country :name (name :op "Iran")),false), Span(0,1,List(5),While,will-01,false), Span(13,14,List(6),and,and,false), Span(7,8,List(7),continues,continue-01,false), Span(9,10,List(8),work,work-01,false), Span(14,15,List(9),missile,missile,false), Span(15,16,List(10),technology.,technology,false), Span(2,3,List(11),maneuvering,maneuver-01,false)),Map(2 -> country, 5 -> will-01, 8 -> work-01, 7 -> continue-01, 1 -> master-01, 11 -> maneuver-01, 4 -> "Iran", 6 -> and, 9 -> missile, 0 -> diplomacy, 10 -> technology, 3 -> name),Map(m3 -> maneuver-01, w -> will-01, n -> name, t -> technology, m2 -> missile, m -> master-01, d -> diplomacy, a -> and, w2 -> work-01, c -> country, c2 -> continue-01))),[Ljava.lang.String;@617ec9c1,Annotation([Ljava.lang.String;@6d6d2ff4,[Ljava.lang.String;@7fec00f2,[Ljava.lang.String;@24983503),Annotation([Ljava.lang.String;@333fc090,[Ljava.lang.String;@37a94b8c,[Ledu.cmu.lti.nlp.amr.Dependency;@285d361b),Annotation([Ljava.lang.String;@4d882e3e,[Ljava.lang.String;@fe4c5f,[Ljava.lang.String;@7d7682e7),Annotation([Ljava.lang.String;@3c5a9ebc,[Ljava.lang.String;@302fbed7,[Ledu.cmu.lti.nlp.amr.Entity;@42c18039))
AMR:
(a / and, op, t / technology)
(c / country, name, n / name)
(c2 / continue-01, ARG1, w2 / work-01)
(m / master-01, ARG1, t / technology)
(m3 / maneuver-01, ARG0, c / country)
(m3 / maneuver-01, ARG1, d / diplomacy)
(n / name, op, "Iran")
(t / technology, mod, m2 / missile)
(w / will-01, ARG1, c2 / continue-01)
(w2 / work-01, ARG0, c / country)
(w2 / work-01, ARG1, m / master-01)

Decoded in 598,880 microseconds
Sentence: Some Israeli officials have stated their alarm about Iran's test-firing this week of a solid-fuel, two-stage rocket with a range of 1200 miles.

Oracle Span 1:  1200 => 1200
Oracle Span 2:  alarm => alarm-01
Oracle Span 3:  firing => fire-01
Oracle Span 4:  fuel => fuel
Oracle Span 5:  have => (person :ARG0-of have-org-role-91)
Oracle Span 6:  Iran => (country :name (name :op "Iran"))
Oracle Span 7:  Israeli => (country :name (name :op "Israel"))
Oracle Span 8:  miles => (distance-quantity :unit mile)
Oracle Span 9:  officials => official
Oracle Span 10:  range => range-01
Oracle Span 11:  rocket => rocket
Oracle Span 12:  solid => solid
Oracle Span 13:  Some => some
Oracle Span 14:  stage => stage
Oracle Span 15:  stated => state-01
Oracle Span 16:  test => test-01
Oracle Span 17:  this => this
Oracle Span 18:  two => 2
Oracle Span 19:  week => week
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "Israeli"))
Spans:
Span 24-25:   => mile
Span 21-22:  1200 => range
Span 18-19:  a => rocket
Span 6-7:  alarm => alarm-01
Span 1-2:  Israeli => (country :name (name :op "Israel"))
Span 2-3:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 0-1:  Some => 1
Span 0-1:  Some => some
Span 0-12:  Some Israeli officials have stated their alarm about Iran's test-firing this week => (date-entity :time this :time week)
Span 4-5:  stated => state-01
Span 10-11:  this => teeter-01

Langrangian relaxation converged after 45 iterations. Delta = 0.0
Oracle Span 29-30:  1200 => 1200
Oracle Span 6-7:  alarm => alarm-01
Oracle Span 12-13:  firing => fire-01
Oracle Span 19-20:  fuel => fuel
Oracle Span 3-4:  have => (person :ARG0-of have-org-role-91)
Oracle Span 8-9:  Iran => (country :name (name :op "Iran"))
Oracle Span 1-2:  Israeli => (country :name (name :op "Israel"))
Oracle Span 30-31:  miles => (distance-quantity :unit mile)
Oracle Span 2-3:  officials => official
Oracle Span 27-28:  range => range-01
Oracle Span 24-25:  rocket => rocket
Oracle Span 17-18:  solid => solid
Oracle Span 0-1:  Some => some
Oracle Span 23-24:  stage => stage
Oracle Span 4-5:  stated => state-01
Oracle Span 10-11:  test => test-01
Oracle Span 13-14:  this => this
Oracle Span 21-22:  two => 2
Oracle Span 14-15:  week => week

Dependencies:
1	Some	_	DT	DT	_	3	det	_	_
2	Israeli	_	JJ	JJ	_	3	amod	_	_
3	officials	_	NNS	NNS	_	5	nsubj	_	_
4	have	_	VBP	VBP	_	5	aux	_	_
5	stated	_	VBN	VBN	_	0	root	_	_
6	their	_	PRP$	PRP$	_	7	poss	_	_
7	alarm	_	NN	NN	_	5	dobj	_	_
8	about	_	IN	IN	_	5	prep	_	_
9	Iran	_	NNP	NNP	_	11	poss	_	_
10	's	_	POS	POS	_	9	possessive	_	_
11	test-firing	_	NN	NN	_	8	pobj	_	_
12	this	_	DT	DT	_	13	det	_	_
13	week	_	NN	NN	_	11	tmod	_	_
14	of	_	IN	IN	_	11	prep	_	_
15	a	_	DT	DT	_	19	det	_	_
16	solid-fuel	_	JJ	JJ	_	19	amod	_	_
17	,	_	,	,	_	19	punct	_	_
18	two-stage	_	JJ	JJ	_	19	amod	_	_
19	rocket	_	NN	NN	_	14	pobj	_	_
20	with	_	IN	IN	_	19	prep	_	_
21	a	_	DT	DT	_	22	det	_	_
22	range	_	NN	NN	_	20	pobj	_	_
23	of	_	IN	IN	_	22	prep	_	_
24	1200	_	CD	CD	_	25	num	_	_
25	miles	_	NNS	NNS	_	23	pobj	_	_
26	.	_	.	.	_	5	punct	_	_

Oracle:
(a / alarm-01, ARG0, t / test-01)
(a / alarm-01, ARG1, p / person)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(d / distance-quantity, quant, 1 / 1200)
(d / distance-quantity, unit, m / mile)
(f / fire-01, ARG1, r / rocket)
(f2 / fuel, mod, s4 / solid)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Israel")
(n2 / name, op, "Iran")
(p / person, quant, s2 / some)
(r / rocket, mod, f2 / fuel)
(r / rocket, mod, s3 / stage)
(r2 / range-01, ARG1, r / rocket)
(r2 / range-01, ARG2, d / distance-quantity)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / alarm-01)
(s3 / stage, quant, 2 / 2)
(t / test-01, ARG0, c2 / country)
(t / test-01, ARG1, f / fire-01)
(t / test-01, time, w / week)
(w / week, mod, t2 / this)

Input(Some(Graph(null,ArrayBuffer(Span(0,12,List(2, 1, 0),Some Israeli officials have stated their alarm about Iran's test-firing this week,(date-entity :time this :time week),false), Span(0,1,List(3),Some,1,false), Span(21,22,List(4),1200,range,false), Span(4,5,List(5),stated,state-01,false), Span(2,3,List(8, 7, 6),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(18,19,List(9),a,rocket,false), Span(0,1,List(10),Some,some,false), Span(6,7,List(11),alarm,alarm-01,false), Span(10,11,List(12),this,teeter-01,false), Span(24,25,List(13),,mile,false), Span(1,2,List(16, 15, 14),Israeli,(country :name (name :op "Israel")),false)),Map(2 -> week, 5 -> state-01, 12 -> teeter-01, 15 -> name, 8 -> official, 7 -> have-org-role-91, 1 -> this, 4 -> range, 11 -> alarm-01, 14 -> country, 6 -> person, 0 -> date-entity, 9 -> rocket, 16 -> "Israel", 3 -> 1, 10 -> some, 13 -> mile),Map(n -> name, w -> week, h -> have-org-role-91, s2 -> some, t -> this, s -> state-01, m -> mile, d -> date-entity, 1 -> 1, p -> person, r2 -> rocket, a -> alarm-01, t2 -> teeter-01, r -> range, c -> country, o -> official))),[Ljava.lang.String;@60049762,Annotation([Ljava.lang.String;@97b49f6,[Ljava.lang.String;@640931aa,[Ljava.lang.String;@60418bdf),Annotation([Ljava.lang.String;@243abf32,[Ljava.lang.String;@775d66ba,[Ledu.cmu.lti.nlp.amr.Dependency;@5a749d9a),Annotation([Ljava.lang.String;@3607fa78,[Ljava.lang.String;@47b510a5,[Ljava.lang.String;@5bc1c65f),Annotation([Ljava.lang.String;@25a718f0,[Ljava.lang.String;@2c7ae206,[Ledu.cmu.lti.nlp.amr.Entity;@43a5ff14))
AMR:
(a / alarm-01, ARG1, t2 / teeter-01)
(c / country, name, n / name)
(d / date-entity, mod, 1 / 1)
(d / date-entity, mod, s2 / some)
(d / date-entity, time, t / this)
(d / date-entity, time, w / week)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(m / mile, mod, r / range)
(m / mile, mod, r2 / rocket)
(n / name, op, "Israel")
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / alarm-01)
(s / state-01, location, m / mile)
(t2 / teeter-01, ARG1, d / date-entity)

Decoded in 1,665,031 microseconds
Sentence: The city of Tel Aviv is fewer than 650 miles from Iranian territory.

Oracle Span 1:  650 => 650
Oracle Span 2:  city => city
Oracle Span 3:  fewer => fewer-than
Oracle Span 4:  Iranian => (country :name (name :op "Iran"))
Oracle Span 5:  miles => mile
Oracle Span 6:  territory => territory
NER Entity: (thing :name (name :op "Iranian"))
Spans:
Span 6-7:  fewer => few
Span 9-10:  miles => mile
Span 3-5:  Tel Aviv => (city :name (name :op "Tel" :op "Aviv"))
Span 12-13:  territory. => territory
Span 0-1:  The => 1

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  650 => 650
Oracle Span 1-2:  city => city
Oracle Span 6-7:  fewer => fewer-than
Oracle Span 11-12:  Iranian => (country :name (name :op "Iran"))
Oracle Span 9-10:  miles => mile
Oracle Span 12-13:  territory => territory

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	city	_	NN	NN	_	6	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	Tel	_	NNP	NNP	_	5	nn	_	_
5	Aviv	_	NNP	NNP	_	3	pobj	_	_
6	is	_	VBZ	VBZ	_	0	root	_	_
7	fewer	_	JJR	JJR	_	8	mwe	_	_
8	than	_	IN	IN	_	9	quantmod	_	_
9	650	_	CD	CD	_	10	num	_	_
10	miles	_	NNS	NNS	_	11	npadvmod	_	_
11	from	_	IN	IN	_	6	prep	_	_
12	Iranian	_	JJ	JJ	_	13	amod	_	_
13	territory	_	NN	NN	_	11	pobj	_	_
14	.	_	.	.	_	6	punct	_	_

Oracle:
(c2 / country, name, n2 / name)
(f / fewer-than, quant, 6 / 650)
(f / fewer-than, unit, m / mile)
(n2 / name, op, "Iran")
(t / territory, mod, c2 / country)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),The,1,false), Span(9,10,List(1),miles,mile,false), Span(3,5,List(5, 4, 3, 2),Tel Aviv,(city :name (name :op "Tel" :op "Aviv")),false), Span(6,7,List(6),fewer,few,false), Span(12,13,List(7),territory.,territory,false)),Map(2 -> city, 5 -> "Aviv", 7 -> territory, 1 -> mile, 4 -> "Tel", 6 -> few, 0 -> 1, 3 -> name),Map(n -> name, t -> territory, m -> mile, 1 -> 1, c -> city, f -> few))),[Ljava.lang.String;@dbb8564,Annotation([Ljava.lang.String;@77338179,[Ljava.lang.String;@1982e382,[Ljava.lang.String;@43fc01af),Annotation([Ljava.lang.String;@12bd3c11,[Ljava.lang.String;@796e5f76,[Ledu.cmu.lti.nlp.amr.Dependency;@777e3d2a),Annotation([Ljava.lang.String;@542cab13,[Ljava.lang.String;@2f0a4833,[Ljava.lang.String;@2494374b),Annotation([Ljava.lang.String;@2205c99e,[Ljava.lang.String;@13408afe,[Ledu.cmu.lti.nlp.amr.Entity;@6e761375))
AMR:
(c / city, name, n / name)
(f / few, op, m / mile)
(m / mile, mod, c / city)
(n / name, op, "Aviv")
(n / name, op, "Tel")
(t / territory, mod, 1 / 1)
(t / territory, quant, f / few)

Decoded in 278,314 microseconds
Sentence: 2002-04-06

Oracle Span 1:  2002-04-06 => (date-entity :day 6 :month 4 :year 2002)
mkDayMonthYear(2002-04-06,06,04,2002)
Spans:
Span 0-1:  2002-04-06 => (date-entity :year 2002 :month 4 :day 6)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2002-04-06 => (date-entity :day 6 :month 4 :year 2002)

Dependencies:
1	2002-04-06	_	NNP	NNP	_	0	root	_	_

Oracle:
(d / date-entity, day, 6)
(d / date-entity, month, 4)
(d / date-entity, year, 2002)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2002-04-06,(date-entity :year 2002 :month 4 :day 6),false)),Map(2 -> 4, 1 -> 2002, 0 -> date-entity, 3 -> 6),Map(2 -> 2002, d -> date-entity, 4 -> 4, 6 -> 6))),[Ljava.lang.String;@488143d5,Annotation([Ljava.lang.String;@4175ef52,[Ljava.lang.String;@38044715,[Ljava.lang.String;@70ebdc10),Annotation([Ljava.lang.String;@32b6a633,[Ljava.lang.String;@5c57c048,[Ledu.cmu.lti.nlp.amr.Dependency;@46711838),Annotation([Ljava.lang.String;@685447ba,[Ljava.lang.String;@6fd4f3bd,[Ljava.lang.String;@d632b8f),Annotation([Ljava.lang.String;@431d52c3,[Ljava.lang.String;@9bea48d,[Ledu.cmu.lti.nlp.amr.Entity;@413fe71c))
AMR:
(d / date-entity, day, 6 / 6)
(d / date-entity, month, 4 / 4)
(d / date-entity, year, 2 / 2002)

Decoded in 28,204 microseconds
Sentence: Russian Federation (RU)

Oracle Span 1:  Russian Federation => (country :name (name :op "Federation" :op "Russian"))
NER Entity: (country :name (name :op "Russian" :op "Federation"))
Spans:
Span 0-2:  Russian Federation => (country :name (name :op "Federation" :op "Russian"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-2:  Russian Federation => (country :name (name :op "Federation" :op "Russian"))

Dependencies:
1	Russian	_	NNP	NNP	_	2	nn	_	_
2	Federation	_	NNP	NNP	_	0	root	_	_
3	(	_	(	(	_	4	punct	_	_
4	RU	_	NNP	NNP	_	2	appos	_	_
5	)	_	)	)	_	4	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Federation")
(n / name, op, "Russian")

Input(Some(Graph(null,ArrayBuffer(Span(0,2,List(3, 2, 1, 0),Russian Federation,(country :name (name :op "Federation" :op "Russian")),false)),Map(2 -> "Federation", 1 -> name, 0 -> country, 3 -> "Russian"),Map(n -> name, c -> country))),[Ljava.lang.String;@3681d09f,Annotation([Ljava.lang.String;@74f2b377,[Ljava.lang.String;@54b448da,[Ljava.lang.String;@4c873c44),Annotation([Ljava.lang.String;@743a0863,[Ljava.lang.String;@15326498,[Ledu.cmu.lti.nlp.amr.Dependency;@63360c7c),Annotation([Ljava.lang.String;@16a66942,[Ljava.lang.String;@327b02e5,[Ljava.lang.String;@34eba696),Annotation([Ljava.lang.String;@67ed199b,[Ljava.lang.String;@4224805d,[Ledu.cmu.lti.nlp.amr.Entity;@2822ced6))
AMR:
(c / country, name, n / name)
(n / name, op, "Federation")
(n / name, op, "Russian")

Decoded in 63,093 microseconds
Sentence: International; science; energy; weapons

Oracle Span 1:  ; => and
Oracle Span 2:  energy => energy
Oracle Span 3:  International => international
Oracle Span 4:  science => science
Oracle Span 5:  weapons => weapon
Spans:
Span 6-7:   => weapon
Span 4-5:   => energy
Span 2-3:  energy; => science
Span 0-1:  International; => international
Span 1-2:  science; => and

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 4-5:  energy => energy
Oracle Span 0-1:  International => international
Oracle Span 2-3:  science => science
Oracle Span 6-7:  weapons => weapon

Dependencies:
1	International	_	NNP	NNP	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	science	_	NN	NN	_	1	dep	_	_
4	;	_	:	:	_	3	punct	_	_
5	energy	_	NN	NN	_	3	dep	_	_
6	;	_	:	:	_	5	punct	_	_
7	weapons	_	NNS	NNS	_	5	dep	_	_

Oracle:
(a / and, op, e / energy)
(a / and, op, i / international)
(a / and, op, s / science)
(a / and, op, w / weapon)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),,weapon,false), Span(2,3,List(1),energy;,science,false), Span(0,1,List(2),International;,international,false), Span(4,5,List(3),,energy,false), Span(1,2,List(4),science;,and,false)),Map(2 -> international, 1 -> science, 4 -> and, 0 -> weapon, 3 -> energy),Map(e -> energy, w -> weapon, s -> science, a -> and, i -> international))),[Ljava.lang.String;@52406e75,Annotation([Ljava.lang.String;@5dab47b0,[Ljava.lang.String;@3e760e39,[Ljava.lang.String;@2a0f27bb),Annotation([Ljava.lang.String;@7bedd749,[Ljava.lang.String;@7cfc9943,[Ledu.cmu.lti.nlp.amr.Dependency;@72f55723),Annotation([Ljava.lang.String;@21949439,[Ljava.lang.String;@345658dd,[Ljava.lang.String;@2cf8f995),Annotation([Ljava.lang.String;@746cff66,[Ljava.lang.String;@71dc888e,[Ledu.cmu.lti.nlp.amr.Entity;@774aa6d8))
AMR:
(a / and, op, e / energy)
(a / and, op, i / international)
(a / and, op, s / science)
(a / and, op, w / weapon)

Decoded in 102,624 microseconds
Sentence: A high-security Russian laboratory complex storing anthrax, plague and other deadly bacteria faces loosing electricity for lack of payment to the mosenergo electric utility.

Oracle Span 1:  and => and
Oracle Span 2:  anthrax => anthrax
Oracle Span 3:  bacteria => bacterium
Oracle Span 4:  complex => complex
Oracle Span 5:  electricity => electricity
Oracle Span 6:  faces => face-01
Oracle Span 7:  high => high
Oracle Span 8:  laboratory => laboratory
Oracle Span 9:  lack => lack-01
Oracle Span 10:  mosenergo => (name :op "Mosenergo")
Oracle Span 11:  other => other
Oracle Span 12:  plague => plague
Oracle Span 13:  Russian => (country :name (name :op "Russia"))
Oracle Span 14:  security => security
Oracle Span 15:  storing => store-01
Oracle Span 16:  utility => utility
Spans:
Span 24-25:   => utility
Span 8-9:  and => plague-01
Span 4-5:  complex => complex
Span 10-11:  deadly => other
Span 12-13:  faces => bacterium
Span 15-16:  for => electricity
Span 3-4:  laboratory => laboratory
Span 13-14:  loosing => face-01
Span 17-18:  of => lack-01
Span 9-10:  other => and
Span 7-8:  plague => and
Span 2-3:  Russian => (country :name (name :op "Russia"))
Span 5-6:  storing => store-01
Span 19-20:  to => patent-01
Span 23-24:  utility. => electric

Langrangian relaxation converged after 28 iterations. Delta = 0.0
Oracle Span 11-12:  and => and
Oracle Span 8-9:  anthrax => anthrax
Oracle Span 14-15:  bacteria => bacterium
Oracle Span 6-7:  complex => complex
Oracle Span 17-18:  electricity => electricity
Oracle Span 15-16:  faces => face-01
Oracle Span 1-2:  high => high
Oracle Span 5-6:  laboratory => laboratory
Oracle Span 19-20:  lack => lack-01
Oracle Span 24-25:  mosenergo => (name :op "Mosenergo")
Oracle Span 12-13:  other => other
Oracle Span 10-11:  plague => plague
Oracle Span 4-5:  Russian => (country :name (name :op "Russia"))
Oracle Span 3-4:  security => security
Oracle Span 7-8:  storing => store-01
Oracle Span 26-27:  utility => utility

Dependencies:
1	A	_	DT	DT	_	5	det	_	_
2	high-security	_	JJ	JJ	_	5	amod	_	_
3	Russian	_	JJ	JJ	_	5	amod	_	_
4	laboratory	_	NN	NN	_	5	nn	_	_
5	complex	_	NN	NN	_	14	nsubj	_	_
6	storing	_	VBG	VBG	_	5	vmod	_	_
7	anthrax	_	NN	NN	_	6	dobj	_	_
8	,	_	,	,	_	7	punct	_	_
9	plague	_	NNP	NNP	_	7	conj	_	_
10	and	_	CC	CC	_	7	cc	_	_
11	other	_	JJ	JJ	_	13	amod	_	_
12	deadly	_	JJ	JJ	_	13	amod	_	_
13	bacteria	_	NNS	NNS	_	7	conj	_	_
14	faces	_	VBZ	VBZ	_	0	root	_	_
15	loosing	_	VBG	VBG	_	14	xcomp	_	_
16	electricity	_	NN	NN	_	15	dobj	_	_
17	for	_	IN	IN	_	15	prep	_	_
18	lack	_	NN	NN	_	17	pobj	_	_
19	of	_	IN	IN	_	18	prep	_	_
20	payment	_	NN	NN	_	19	pobj	_	_
21	to	_	TO	TO	_	15	prep	_	_
22	the	_	DT	DT	_	25	det	_	_
23	mosenergo	_	JJ	JJ	_	25	amod	_	_
24	electric	_	JJ	JJ	_	25	amod	_	_
25	utility	_	NN	NN	_	21	pobj	_	_
26	.	_	.	.	_	14	punct	_	_

Oracle:
(a / and, op, a2 / anthrax)
(a / and, op, b / bacterium)
(a / and, op, p / plague)
(b / bacterium, mod, o / other)
(c / complex, mod, c2 / country)
(c / complex, mod, l / laboratory)
(c / complex, mod, s / security)
(c2 / country, name, n / name)
(f / face-01, ARG0, c / complex)
(l3 / lack-01, ARG0, c / complex)
(n / name, op, "Russia")
(n3 / name, op, "Mosenergo")
(s / security, degree, h / high)
(s2 / store-01, ARG0, c / complex)
(s2 / store-01, ARG1, a / and)
(u2 / utility, mod, e2 / electricity)
(u2 / utility, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),deadly,other,false), Span(19,20,List(1),to,patent-01,false), Span(8,9,List(2),and,plague-01,false), Span(3,4,List(3),laboratory,laboratory,false), Span(17,18,List(4),of,lack-01,false), Span(24,25,List(5),,utility,false), Span(12,13,List(6),faces,bacterium,false), Span(9,10,List(7),other,and,false), Span(13,14,List(8),loosing,face-01,false), Span(2,3,List(11, 10, 9),Russian,(country :name (name :op "Russia")),false), Span(4,5,List(12),complex,complex,false), Span(23,24,List(13),utility.,electric,false), Span(15,16,List(14),for,electricity,false), Span(7,8,List(15),plague,and,false), Span(5,6,List(16),storing,store-01,false)),Map(2 -> plague-01, 5 -> utility, 12 -> complex, 15 -> and, 8 -> face-01, 7 -> and, 1 -> patent-01, 4 -> lack-01, 11 -> "Russia", 14 -> electricity, 6 -> bacterium, 0 -> other, 9 -> country, 16 -> store-01, 3 -> laboratory, 10 -> name, 13 -> electric),Map(e -> electric, n -> name, b -> bacterium, e2 -> electricity, p2 -> plague-01, s -> store-01, p -> patent-01, a -> and, l2 -> lack-01, a2 -> and, c -> country, l -> laboratory, u -> utility, f -> face-01, o -> other, c2 -> complex))),[Ljava.lang.String;@45058a24,Annotation([Ljava.lang.String;@25fd046c,[Ljava.lang.String;@47e577e5,[Ljava.lang.String;@4258f7e8),Annotation([Ljava.lang.String;@2be5012d,[Ljava.lang.String;@6676ae59,[Ledu.cmu.lti.nlp.amr.Dependency;@ac0b72d),Annotation([Ljava.lang.String;@fa2e62a,[Ljava.lang.String;@ccd729a,[Ljava.lang.String;@5f9a113c),Annotation([Ljava.lang.String;@50ecbc3d,[Ljava.lang.String;@48e793bc,[Ledu.cmu.lti.nlp.amr.Entity;@2fd97198))
AMR:
(a / and, op, l2 / lack-01)
(a / and, op, p2 / plague-01)
(a2 / and, op, a / and)
(c / country, name, n / name)
(f / face-01, ARG0, c / country)
(f / face-01, ARG1, a / and)
(l / laboratory, location, c / country)
(l2 / lack-01, ARG0, c2 / complex)
(l2 / lack-01, ARG1, p / patent-01)
(l2 / lack-01, ARG6, e2 / electricity)
(n / name, op, "Russia")
(o / other, calendar, a / and)
(p / patent-01, ARG1, e / electric)
(p2 / plague-01, ARG1, u / utility)
(s / store-01, ARG0, c / country)
(s / store-01, ARG2, b / bacterium)

Decoded in 1,259,709 microseconds
Sentence: A large repository of anthrax, plague and other deadly bacteria stored in a high-security Russian laboratory complex 100 miles south of Moscow is facing the threat of loosing electricity.

Oracle Span 1:  100 => 100
Oracle Span 2:  and => and
Oracle Span 3:  anthrax => anthrax
Oracle Span 4:  bacteria => bacterium
Oracle Span 5:  complex => complex
Oracle Span 6:  electricity => electricity
Oracle Span 7:  high => high
Oracle Span 8:  laboratory => laboratory
Oracle Span 9:  large => large
Oracle Span 10:  miles => (distance-quantity :unit mile)
Oracle Span 11:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 12:  other => other
Oracle Span 13:  plague => plague
Oracle Span 14:  repository => repository
Oracle Span 15:  Russian => (country :name (name :op "Russia"))
Oracle Span 16:  security => security
Oracle Span 17:  south => south
Oracle Span 18:  stored => store-01
Oracle Span 19:  threat => threaten-01
NER Entity: (country :name (name :op "Moscow"))
Spans:
Span 29-30:   => electricity
Span 0-1:  A => 1
Span 6-7:  and => plague-01
Span 16-17:  complex => laboratory
Span 8-9:  deadly => other
Span 11-12:  in => store-01
Span 22-23:  is => (city :name (name :op "Moscow"))
Span 15-16:  laboratory => (country :name (name :op "Russia"))
Span 1-2:  large => large
Span 20-21:  of => south
Span 26-27:  of => treat-01
Span 7-8:  other => and
Span 5-6:  plague => and
Span 2-3:  repository => repossess-01
Span 19-20:  south => mile
Span 10-11:  stored => bacterium
Span 24-25:  the => face-01

Langrangian relaxation converged after 42 iterations. Delta = 0.0
Oracle Span 20-21:  100 => 100
Oracle Span 7-8:  and => and
Oracle Span 4-5:  anthrax => anthrax
Oracle Span 10-11:  bacteria => bacterium
Oracle Span 19-20:  complex => complex
Oracle Span 31-32:  electricity => electricity
Oracle Span 14-15:  high => high
Oracle Span 18-19:  laboratory => laboratory
Oracle Span 1-2:  large => large
Oracle Span 21-22:  miles => (distance-quantity :unit mile)
Oracle Span 24-25:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 8-9:  other => other
Oracle Span 6-7:  plague => plague
Oracle Span 2-3:  repository => repository
Oracle Span 17-18:  Russian => (country :name (name :op "Russia"))
Oracle Span 16-17:  security => security
Oracle Span 22-23:  south => south
Oracle Span 11-12:  stored => store-01
Oracle Span 28-29:  threat => threaten-01

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	large	_	JJ	JJ	_	3	amod	_	_
3	repository	_	NN	NN	_	25	nsubj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	anthrax	_	NN	NN	_	7	nn	_	_
6	,	_	,	,	_	7	punct	_	_
7	plague	_	NN	NN	_	11	nn	_	_
8	and	_	CC	CC	_	7	cc	_	_
9	other	_	JJ	JJ	_	7	conj	_	_
10	deadly	_	JJ	JJ	_	11	amod	_	_
11	bacteria	_	NNS	NNS	_	4	pobj	_	_
12	stored	_	VBN	VBN	_	3	vmod	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	a	_	DT	DT	_	18	det	_	_
15	high-security	_	JJ	JJ	_	18	amod	_	_
16	Russian	_	JJ	JJ	_	18	amod	_	_
17	laboratory	_	NN	NN	_	18	nn	_	_
18	complex	_	NN	NN	_	13	pobj	_	_
19	100	_	CD	CD	_	20	num	_	_
20	miles	_	NNS	NNS	_	21	npadvmod	_	_
21	south	_	RB	RB	_	22	advmod	_	_
22	of	_	IN	IN	_	18	prep	_	_
23	Moscow	_	NNP	NNP	_	22	pobj	_	_
24	is	_	VBZ	VBZ	_	25	aux	_	_
25	facing	_	VBG	VBG	_	0	root	_	_
26	the	_	DT	DT	_	27	det	_	_
27	threat	_	NN	NN	_	25	dobj	_	_
28	of	_	IN	IN	_	27	prep	_	_
29	loosing	_	VBG	VBG	_	30	amod	_	_
30	electricity	_	NN	NN	_	28	pobj	_	_
31	.	_	.	.	_	25	punct	_	_

Oracle:
(a / and, consist, r / repository)
(a / and, op, a2 / anthrax)
(a / and, op, b / bacterium)
(a / and, op, p / plague)
(b / bacterium, mod, o / other)
(c / complex, mod, c2 / country)
(c / complex, mod, l3 / laboratory)
(c / complex, mod, s2 / security)
(c2 / country, name, n / name)
(c3 / city, name, n2 / name)
(d / distance-quantity, quant, 1 / 100)
(d / distance-quantity, unit, m / mile)
(n / name, op, "Russia")
(n2 / name, op, "Moscow")
(r / repository, mod, l / large)
(s / store-01, ARG1, r / repository)
(s / store-01, location, c / complex)
(s2 / security, degree, h / high)
(t2 / threaten-01, ARG0, r / repository)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(2, 1, 0),laboratory,(country :name (name :op "Russia")),false), Span(5,6,List(3),plague,and,false), Span(22,23,List(6, 5, 4),is,(city :name (name :op "Moscow")),false), Span(20,21,List(7),of,south,false), Span(26,27,List(8),of,treat-01,false), Span(8,9,List(9),deadly,other,false), Span(19,20,List(10),south,mile,false), Span(10,11,List(11),stored,bacterium,false), Span(0,1,List(12),A,1,false), Span(11,12,List(13),in,store-01,false), Span(24,25,List(14),the,face-01,false), Span(16,17,List(15),complex,laboratory,false), Span(2,3,List(16),repository,repossess-01,false), Span(1,2,List(17),large,large,false), Span(29,30,List(18),,electricity,false), Span(7,8,List(19),other,and,false), Span(6,7,List(20),and,plague-01,false)),Map(2 -> "Russia", 5 -> name, 12 -> 1, 15 -> laboratory, 8 -> treat-01, 18 -> electricity, 7 -> south, 17 -> large, 1 -> name, 4 -> city, 11 -> bacterium, 14 -> face-01, 20 -> plague-01, 6 -> "Moscow", 0 -> country, 9 -> other, 16 -> repossess-01, 19 -> and, 3 -> and, 10 -> mile, 13 -> store-01),Map(e -> electricity, n -> name, s2 -> store-01, t -> treat-01, b -> bacterium, s -> south, m -> mile, 1 -> 1, p -> plague-01, a -> and, l2 -> large, a2 -> and, r -> repossess-01, c -> country, l -> laboratory, f -> face-01, o -> other, c2 -> city, n2 -> name))),[Ljava.lang.String;@4b3a3311,Annotation([Ljava.lang.String;@22009a61,[Ljava.lang.String;@89a50d2,[Ljava.lang.String;@3afef3f2),Annotation([Ljava.lang.String;@20c6ed07,[Ljava.lang.String;@633b8ec,[Ledu.cmu.lti.nlp.amr.Dependency;@5cf57438),Annotation([Ljava.lang.String;@11597d37,[Ljava.lang.String;@66014ce,[Ljava.lang.String;@1d8f3836),Annotation([Ljava.lang.String;@6a2cdb0b,[Ljava.lang.String;@30c6b3bc,[Ledu.cmu.lti.nlp.amr.Entity;@3606070e))
AMR:
(a / and, op, a2 / and)
(a2 / and, op, b / bacterium)
(a2 / and, op, p / plague-01)
(b / bacterium, mod, o / other)
(c / country, name, n / name)
(c2 / city, name, n2 / name)
(f / face-01, ARG1, c2 / city)
(l / laboratory, location, c / country)
(m / mile, mod, c / country)
(n / name, op, "Russia")
(n2 / name, op, "Moscow")
(p / plague-01, ARG1, s / south)
(r / repossess-01, ARG1, a2 / and)
(r / repossess-01, ARG6, 1 / 1)
(r / repossess-01, mod, l2 / large)
(s2 / store-01, ARG1, r / repossess-01)
(s2 / store-01, location, m / mile)
(t / treat-01, ARG0, r / repossess-01)
(t / treat-01, ARG1, f / face-01)
(t / treat-01, ARG6, e / electricity)

Decoded in 1,871,782 microseconds
Sentence: An official from the Moscow region's mosenergo electric utility arrived recently at the Russian laboratory complex and threatened to turn off the electricity for lack of payment.

Oracle Span 1:  and => and
Oracle Span 2:  arrived => arrive-01
Oracle Span 3:  complex => complex
Oracle Span 4:  electricity => electricity
Oracle Span 5:  laboratory => laboratory
Oracle Span 6:  lack => lack-01
Oracle Span 7:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 8:  mosenergo => (name :op "Mosenergo")
Oracle Span 9:  official => (have-org-role-91 :ARG2 official)
Oracle Span 10:  recently => recent
Oracle Span 11:  region => region
Oracle Span 12:  Russian => (country :name (name :op "Russia"))
Oracle Span 13:  threatened => threaten-01
Oracle Span 14:  turn => turn-07
Oracle Span 15:  utility => utility
NER Entity: (country :name (name :op "Moscow"))
NER Entity: (thing :name (name :op "Russian"))
Spans:
Span 27-28:   => patent-01
Span 0-12:  An official from the Moscow region's mosenergo electric utility arrived recently at => (date-entity :time recently)
Span 16-17:  and => complex
Span 9-10:  arrived => utility
Span 15-16:  complex => laboratory
Span 23-24:  for => electricity
Span 14-15:  laboratory => (country :name (name :op "Russia"))
Span 4-5:  Moscow => (city :name (name :op "Moscow"))
Span 25-26:  of => lack-01
Span 20-21:  off => turn-02
Span 1-2:  official => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 10-11:  recently => arrive-01
Span 17-18:  threatened => and
Span 18-19:  to => threaten-01
Span 8-9:  utility => electric

Langrangian relaxation converged after 67 iterations. Delta = 0.0
Oracle Span 17-18:  and => and
Oracle Span 10-11:  arrived => arrive-01
Oracle Span 16-17:  complex => complex
Oracle Span 23-24:  electricity => electricity
Oracle Span 15-16:  laboratory => laboratory
Oracle Span 25-26:  lack => lack-01
Oracle Span 4-5:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 7-8:  mosenergo => (name :op "Mosenergo")
Oracle Span 1-2:  official => (have-org-role-91 :ARG2 official)
Oracle Span 11-12:  recently => recent
Oracle Span 5-6:  region => region
Oracle Span 14-15:  Russian => (country :name (name :op "Russia"))
Oracle Span 18-19:  threatened => threaten-01
Oracle Span 20-21:  turn => turn-07
Oracle Span 9-10:  utility => utility

Dependencies:
1	An	_	DT	DT	_	2	det	_	_
2	official	_	NN	NN	_	11	nsubj	_	_
3	from	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	6	det	_	_
5	Moscow	_	NNP	NNP	_	6	nn	_	_
6	region	_	NN	NN	_	10	poss	_	_
7	's	_	POS	POS	_	6	possessive	_	_
8	mosenergo	_	JJ	JJ	_	10	amod	_	_
9	electric	_	JJ	JJ	_	10	amod	_	_
10	utility	_	NN	NN	_	3	pobj	_	_
11	arrived	_	VBD	VBD	_	0	root	_	_
12	recently	_	RB	RB	_	11	advmod	_	_
13	at	_	IN	IN	_	11	prep	_	_
14	the	_	DT	DT	_	17	det	_	_
15	Russian	_	JJ	JJ	_	17	amod	_	_
16	laboratory	_	NN	NN	_	17	nn	_	_
17	complex	_	NN	NN	_	13	pobj	_	_
18	and	_	CC	CC	_	11	cc	_	_
19	threatened	_	VBD	VBD	_	11	conj	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	turn	_	VB	VB	_	19	xcomp	_	_
22	off	_	RP	RP	_	21	prt	_	_
23	the	_	DT	DT	_	24	det	_	_
24	electricity	_	NN	NN	_	21	dobj	_	_
25	for	_	IN	IN	_	24	prep	_	_
26	lack	_	NN	NN	_	25	pobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	payment	_	NN	NN	_	27	pobj	_	_
29	.	_	.	.	_	11	punct	_	_

Oracle:
(a / arrive-01, ARG4, c3 / complex)
(a / arrive-01, time, r2 / recent)
(a2 / and, op, a / arrive-01)
(a2 / and, op, t / threaten-01)
(c2 / city, name, n2 / name)
(c3 / complex, mod, c4 / country)
(c3 / complex, mod, l / laboratory)
(c4 / country, name, n3 / name)
(h / have-org-role-91, ARG1, u2 / utility)
(h / have-org-role-91, ARG2, o / official)
(n2 / name, op, "Moscow")
(n3 / name, op, "Russia")
(n4 / name, op, "Mosenergo")
(r / region, mod, c2 / city)
(t / threaten-01, ARG1, t2 / turn-07)
(t2 / turn-07, ARG1, e2 / electricity)
(u2 / utility, location, r / region)
(u2 / utility, name, n4 / name)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),arrived,utility,false), Span(1,2,List(3, 2, 1),official,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(0,12,List(5, 4),An official from the Moscow region's mosenergo electric utility arrived recently at,(date-entity :time recently),false), Span(4,5,List(8, 7, 6),Moscow,(city :name (name :op "Moscow")),false), Span(18,19,List(9),to,threaten-01,false), Span(23,24,List(10),for,electricity,false), Span(10,11,List(11),recently,arrive-01,false), Span(20,21,List(12),off,turn-02,false), Span(27,28,List(13),,patent-01,false), Span(25,26,List(14),of,lack-01,false), Span(8,9,List(15),utility,electric,false), Span(15,16,List(16),complex,laboratory,false), Span(14,15,List(19, 18, 17),laboratory,(country :name (name :op "Russia")),false), Span(16,17,List(20),and,complex,false), Span(17,18,List(21),threatened,and,false)),Map(2 -> have-org-role-91, 5 -> recently, 12 -> turn-02, 15 -> electric, 8 -> "Moscow", 21 -> and, 18 -> name, 7 -> name, 17 -> country, 1 -> person, 4 -> date-entity, 11 -> arrive-01, 14 -> lack-01, 20 -> complex, 6 -> city, 0 -> utility, 9 -> threaten-01, 16 -> laboratory, 19 -> "Russia", 3 -> official, 10 -> electricity, 13 -> patent-01),Map(e -> electricity, n -> name, h -> have-org-role-91, t -> threaten-01, e2 -> electric, p2 -> patent-01, d -> date-entity, p -> person, c3 -> complex, a -> arrive-01, t2 -> turn-02, l2 -> laboratory, a2 -> and, r -> recently, c -> city, l -> lack-01, u -> utility, o -> official, n2 -> name, c2 -> country))),[Ljava.lang.String;@5cc7865b,Annotation([Ljava.lang.String;@5082610a,[Ljava.lang.String;@d6cddc9,[Ljava.lang.String;@24aa9ea1),Annotation([Ljava.lang.String;@443f2131,[Ljava.lang.String;@776828d,[Ledu.cmu.lti.nlp.amr.Dependency;@6c9f953f),Annotation([Ljava.lang.String;@1c30519b,[Ljava.lang.String;@213bdd85,[Ljava.lang.String;@12ea41c5),Annotation([Ljava.lang.String;@24c18ca,[Ljava.lang.String;@1cee3d91,[Ledu.cmu.lti.nlp.amr.Entity;@63460c7c))
AMR:
(a / arrive-01, ARG1, p / person)
(a / arrive-01, ARG4, c3 / complex)
(a2 / and, op, a / arrive-01)
(a2 / and, op, d / date-entity)
(a2 / and, op, t / threaten-01)
(c / city, name, n / name)
(c2 / country, name, n2 / name)
(c3 / complex, mod, c2 / country)
(c3 / complex, mod, l2 / laboratory)
(d / date-entity, time, r / recently)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, u / utility)
(h / have-org-role-91, ARG2, o / official)
(l / lack-01, ARG1, p2 / patent-01)
(n / name, op, "Moscow")
(n2 / name, op, "Russia")
(p2 / patent-01, ARG1, e2 / electric)
(t / threaten-01, ARG1, t2 / turn-02)
(t / threaten-01, ARG2, c / city)
(t2 / turn-02, ARG1, e / electricity)
(u / utility, mod, e2 / electric)

Decoded in 2,534,083 microseconds
Sentence: The Russian laboratory complex is a 90-building campus and served as the location for Russia's secret biological weapons program in the Soviet era.

Oracle Span 1:  90 => 90
Oracle Span 2:  and => and
Oracle Span 3:  biological => biology
Oracle Span 4:  building => building
Oracle Span 5:  campus => campus
Oracle Span 6:  complex => complex
Oracle Span 7:  era => era
Oracle Span 8:  laboratory => laboratory
Oracle Span 9:  location => location
Oracle Span 10:  program => program
Oracle Span 11:  Russia => (country :name (name :op "Russia"))
Oracle Span 12:  secret => secret
Oracle Span 13:  served => serve-01
Oracle Span 14:  Soviet => (country :name (name :op "Soviet"))
Oracle Span 15:  weapons => weapon
NER Entity: (country :name (name :op "Russia"))
Spans:
Span 23-24:   => era
Span 8-9:  and => and
Span 16-17:  biological => secret
Span 7-8:  campus => campus
Span 3-4:  complex => complex
Span 19-20:  in => program
Span 2-3:  laboratory => laboratory
Span 12-13:  location => location
Span 18-19:  program => weapon
Span 1-2:  Russian => (country :name (name :op "Russia"))
Span 9-10:  served => serve-01
Span 21-22:  Soviet => (country :name (name :op "North"))
Span 17-18:  weapons => biology

Langrangian relaxation converged after 13 iterations. Delta = 0.0
Oracle Span 6-7:  90 => 90
Oracle Span 10-11:  and => and
Oracle Span 19-20:  biological => biology
Oracle Span 8-9:  building => building
Oracle Span 9-10:  campus => campus
Oracle Span 3-4:  complex => complex
Oracle Span 25-26:  era => era
Oracle Span 2-3:  laboratory => laboratory
Oracle Span 14-15:  location => location
Oracle Span 21-22:  program => program
Oracle Span 16-17:  Russia => (country :name (name :op "Russia"))
Oracle Span 18-19:  secret => secret
Oracle Span 11-12:  served => serve-01
Oracle Span 24-25:  Soviet => (country :name (name :op "Soviet"))
Oracle Span 20-21:  weapons => weapon

Dependencies:
1	The	_	DT	DT	_	4	det	_	_
2	Russian	_	JJ	JJ	_	4	amod	_	_
3	laboratory	_	NN	NN	_	4	nn	_	_
4	complex	_	NN	NN	_	8	nsubj	_	_
5	is	_	VBZ	VBZ	_	8	cop	_	_
6	a	_	DT	DT	_	8	det	_	_
7	90-building	_	JJ	JJ	_	8	amod	_	_
8	campus	_	NN	NN	_	0	root	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	served	_	VBD	VBD	_	8	conj	_	_
11	as	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	13	det	_	_
13	location	_	NN	NN	_	11	pobj	_	_
14	for	_	IN	IN	_	10	prep	_	_
15	Russia	_	NNP	NNP	_	20	poss	_	_
16	's	_	POS	POS	_	15	possessive	_	_
17	secret	_	JJ	JJ	_	20	amod	_	_
18	biological	_	JJ	JJ	_	20	amod	_	_
19	weapons	_	NNS	NNS	_	20	nn	_	_
20	program	_	NN	NN	_	14	pobj	_	_
21	in	_	IN	IN	_	20	prep	_	_
22	the	_	DT	DT	_	24	det	_	_
23	Soviet	_	JJ	JJ	_	24	amod	_	_
24	era	_	NN	NN	_	21	pobj	_	_
25	.	_	.	.	_	8	punct	_	_

Oracle:
(a / and, op, c / campus)
(a / and, op, s / serve-01)
(b / building, consist, c / campus)
(b / building, quant, 9 / 90)
(c / campus, domain, c2 / complex)
(c2 / complex, mod, c3 / country)
(c2 / complex, mod, l / laboratory)
(c3 / country, name, n / name)
(c4 / country, name, n2 / name)
(e / era, mod, c4 / country)
(n / name, op, "Russia")
(n2 / name, op, "Soviet")
(p / program, location, l2 / location)
(p / program, mod, s2 / secret)
(p / program, topic, w / weapon)
(s / serve-01, ARG0, c / campus)
(s / serve-01, ARG1, l2 / location)
(s / serve-01, time, e / era)
(w / weapon, mod, b2 / biology)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),weapons,biology,false), Span(16,17,List(1),biological,secret,false), Span(7,8,List(2),campus,campus,false), Span(9,10,List(3),served,serve-01,false), Span(23,24,List(4),,era,false), Span(19,20,List(5),in,program,false), Span(18,19,List(6),program,weapon,false), Span(2,3,List(7),laboratory,laboratory,false), Span(1,2,List(10, 9, 8),Russian,(country :name (name :op "Russia")),false), Span(3,4,List(11),complex,complex,false), Span(8,9,List(12),and,and,false), Span(12,13,List(13),location,location,false), Span(21,22,List(16, 15, 14),Soviet,(country :name (name :op "North")),false)),Map(2 -> campus, 5 -> program, 12 -> and, 15 -> name, 8 -> country, 7 -> laboratory, 1 -> secret, 4 -> era, 11 -> complex, 14 -> country, 6 -> weapon, 0 -> biology, 9 -> name, 16 -> "North", 3 -> serve-01, 10 -> "Russia", 13 -> location),Map(e -> era, w -> weapon, n -> name, s2 -> serve-01, b -> biology, c4 -> country, s -> secret, p -> program, c3 -> complex, a -> and, l2 -> location, c -> campus, l -> laboratory, n2 -> name, c2 -> country))),[Ljava.lang.String;@48cf31bb,Annotation([Ljava.lang.String;@2e72f478,[Ljava.lang.String;@6067b18d,[Ljava.lang.String;@2fce843a),Annotation([Ljava.lang.String;@1ebd2a91,[Ljava.lang.String;@27d5cc0a,[Ledu.cmu.lti.nlp.amr.Dependency;@7a63eaa4),Annotation([Ljava.lang.String;@21d74e86,[Ljava.lang.String;@56c9118f,[Ljava.lang.String;@5f7532c0),Annotation([Ljava.lang.String;@3aa6c540,[Ljava.lang.String;@211e0fec,[Ledu.cmu.lti.nlp.amr.Entity;@3f453729))
AMR:
(a / and, op, c / campus)
(c2 / country, name, n / name)
(c3 / complex, mod, c2 / country)
(c3 / complex, mod, l / laboratory)
(c3 / complex, mod, s / secret)
(c4 / country, name, n2 / name)
(c4 / country, poss, s / secret)
(l / laboratory, mod, e / era)
(n / name, op, "Russia")
(n2 / name, op, "North")
(p / program, poss, c2 / country)
(s / secret, calendar, b / biology)
(s2 / serve-01, ARG0, c3 / complex)
(s2 / serve-01, ARG1, l2 / location)
(s2 / serve-01, ARG2, a / and)
(w / weapon, mod, b / biology)

Decoded in 708,926 microseconds
Sentence: An incorrect headline in the newspaper Izvestia stated that deadly viruses from a Moscow regional depository threaten Moscow.

Oracle Span 1:  depository => depository
Oracle Span 2:  headline => headline
Oracle Span 3:  incorrect => (correct :polarity -)
Oracle Span 4:  Izvestia => (name :op "Izvestia")
Oracle Span 5:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 6:  newspaper => newspaper
Oracle Span 7:  regional => region
Oracle Span 8:  stated => state-01
Oracle Span 9:  threaten => threaten-01
Oracle Span 10:  viruses => virus
NER Entity: (organization :name (name :op "Izvestia"))
NER Entity: (country :name (name :op "Moscow"))
Spans:
Span 2-3:  headline => headline
Span 1-2:  incorrect => incorporate-01
Span 13-14:  Moscow => (city :name (name :op "Moscow"))
Span 17-18:  Moscow. => (city :name (name :op "Moscow"))
Span 14-15:  regional => region
Span 7-8:  stated => state-01
Span 16-17:  threaten => threaten-01
Span 10-11:  viruses => virus

Langrangian relaxation converged after 59 iterations. Delta = 0.0
Oracle Span 15-16:  depository => depository
Oracle Span 2-3:  headline => headline
Oracle Span 1-2:  incorrect => (correct :polarity -)
Oracle Span 6-7:  Izvestia => (name :op "Izvestia")
Oracle Span 13-14:  Moscow => (city :name (name :op "Moscow"))
Oracle Span 5-6:  newspaper => newspaper
Oracle Span 14-15:  regional => region
Oracle Span 7-8:  stated => state-01
Oracle Span 16-17:  threaten => threaten-01
Oracle Span 10-11:  viruses => virus

Dependencies:
1	An	_	DT	DT	_	3	det	_	_
2	incorrect	_	JJ	JJ	_	3	amod	_	_
3	headline	_	NN	NN	_	8	nsubj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	newspaper	_	NN	NN	_	7	nn	_	_
7	Izvestia	_	NNP	NNP	_	4	pobj	_	_
8	stated	_	VBD	VBD	_	0	root	_	_
9	that	_	IN	IN	_	17	mark	_	_
10	deadly	_	JJ	JJ	_	11	amod	_	_
11	viruses	_	NNS	NNS	_	17	nsubj	_	_
12	from	_	IN	IN	_	11	prep	_	_
13	a	_	DT	DT	_	16	det	_	_
14	Moscow	_	NNP	NNP	_	16	nn	_	_
15	regional	_	JJ	JJ	_	16	amod	_	_
16	depository	_	NN	NN	_	12	pobj	_	_
17	threaten	_	VBP	VBP	_	8	ccomp	_	_
18	Moscow	_	NNP	NNP	_	17	dobj	_	_
19	.	_	.	.	_	8	punct	_	_

Oracle:
(c / correct, polarity, -)
(c2 / city, name, n3 / name)
(d2 / depository, mod, c2 / city)
(d2 / depository, mod, r / region)
(h / headline, medium, n / newspaper)
(h / headline, mod, c / correct)
(n / newspaper, name, n2 / name)
(n2 / name, op, "Izvestia")
(n3 / name, op, "Moscow")
(s / state-01, ARG0, h / headline)
(s / state-01, ARG1, t / threaten-01)
(t / threaten-01, ARG0, v / virus)
(t / threaten-01, ARG2, c2 / city)
(v / virus, source, d2 / depository)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),viruses,virus,false), Span(17,18,List(3, 2, 1),Moscow.,(city :name (name :op "Moscow")),false), Span(16,17,List(4),threaten,threaten-01,false), Span(14,15,List(5),regional,region,false), Span(2,3,List(6),headline,headline,false), Span(13,14,List(9, 8, 7),Moscow,(city :name (name :op "Moscow")),false), Span(7,8,List(10),stated,state-01,false), Span(1,2,List(11),incorrect,incorporate-01,false)),Map(2 -> name, 5 -> region, 8 -> name, 7 -> city, 1 -> city, 11 -> incorporate-01, 4 -> threaten-01, 6 -> headline, 9 -> "Moscow", 0 -> virus, 10 -> state-01, 3 -> "Moscow"),Map(n -> name, h -> headline, t -> threaten-01, s -> state-01, v -> virus, i -> incorporate-01, r -> region, c -> city, n2 -> name, c2 -> city))),[Ljava.lang.String;@7f1322e2,Annotation([Ljava.lang.String;@3e179afa,[Ljava.lang.String;@4487901f,[Ljava.lang.String;@5fc2ad1),Annotation([Ljava.lang.String;@639e1cbe,[Ljava.lang.String;@61dc9a7d,[Ledu.cmu.lti.nlp.amr.Dependency;@1923e931),Annotation([Ljava.lang.String;@7d6de266,[Ljava.lang.String;@6e856a99,[Ljava.lang.String;@6b8f1a46),Annotation([Ljava.lang.String;@6de31c67,[Ljava.lang.String;@7f0fbd6f,[Ledu.cmu.lti.nlp.amr.Entity;@3a9bd1b5))
AMR:
(c / city, name, n / name)
(c2 / city, name, n2 / name)
(i / incorporate-01, ARG0, r / region)
(i / incorporate-01, ARG1, h / headline)
(n / name, op, "Moscow")
(n2 / name, op, "Moscow")
(s / state-01, ARG0, h / headline)
(s / state-01, ARG1, t / threaten-01)
(t / threaten-01, ARG0, v / virus)
(t / threaten-01, ARG1, c / city)
(t / threaten-01, ARG2, c2 / city)

Decoded in 1,087,878 microseconds
Sentence: There are no viruses at the State Scientific Center of applied Microbiology in obolensk.

Oracle Span 1:  no => -
Oracle Span 2:  obolensk => (city :name (name :op "Obolensk"))
Oracle Span 3:  State Scientific Center of applied Microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 4:  viruses => virus
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of" :op "applied" :op "Microbiology"))
Spans:
Span 10-11:  applied => apply-01
Span 8-9:  Center => center
Span 7-8:  Scientific => science
Span 6-7:  State => (thing :ARG1-of state-01)
Span 3-4:  viruses => virus

Langrangian relaxation converged after 25 iterations. Delta = 0.0
Oracle Span 2-3:  no => -
Oracle Span 13-14:  obolensk => (city :name (name :op "Obolensk"))
Oracle Span 6-12:  State Scientific Center of applied Microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 3-4:  viruses => virus

Dependencies:
1	There	_	EX	EX	_	2	expl	_	_
2	are	_	VBP	VBP	_	0	root	_	_
3	no	_	DT	DT	_	4	neg	_	_
4	viruses	_	JJ	JJ	_	2	acomp	_	_
5	at	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	9	det	_	_
7	State	_	NNP	NNP	_	9	nn	_	_
8	Scientific	_	NNP	NNP	_	9	nn	_	_
9	Center	_	NNP	NNP	_	5	pobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	applied	_	JJ	JJ	_	12	amod	_	_
12	Microbiology	_	NNP	NNP	_	10	pobj	_	_
13	in	_	IN	IN	_	4	prep	_	_
14	obolensk	_	NN	NN	_	13	pobj	_	_
15	.	_	.	.	_	2	punct	_	_

Oracle:
(c / city, name, n2 / name)
(n / name, op, "Applied")
(n / name, op, "Center")
(n / name, op, "Microbiology")
(n / name, op, "Scientific")
(n / name, op, "State")
(n / name, op, "of")
(n2 / name, op, "Obolensk")
(r / research-institute, location, c / city)
(r / research-institute, name, n / name)
(v / virus, polarity, - / -)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),Scientific,science,false), Span(8,9,List(1),Center,center,false), Span(3,4,List(2),viruses,virus,false), Span(6,7,List(4, 3),State,(thing :ARG1-of state-01),false), Span(10,11,List(5),applied,apply-01,false)),Map(2 -> virus, 5 -> apply-01, 1 -> center, 4 -> state-01, 0 -> science, 3 -> thing),Map(s2 -> state-01, t -> thing, s -> science, v -> virus, a -> apply-01, c -> center))),[Ljava.lang.String;@5ba0fcf6,Annotation([Ljava.lang.String;@6d3b5a79,[Ljava.lang.String;@1bb63e2c,[Ljava.lang.String;@34142bae),Annotation([Ljava.lang.String;@688f2696,[Ljava.lang.String;@5fd0416c,[Ledu.cmu.lti.nlp.amr.Dependency;@753d53e4),Annotation([Ljava.lang.String;@60e15fb6,[Ljava.lang.String;@71cb7eaa,[Ljava.lang.String;@2ccd9ade),Annotation([Ljava.lang.String;@33704ed0,[Ljava.lang.String;@5906bbe7,[Ledu.cmu.lti.nlp.amr.Entity;@7392a043))
AMR:
(a / apply-01, ARG0, v / virus)
(a / apply-01, ARG1, s / science)
(c / center, mod, s / science)
(s2 / state-01, ARG0, s / science)
(s2 / state-01, ARG1, t / thing)

Decoded in 317,147 microseconds
Sentence: At the State Scientific Center of applied microbiology there is every kind of deadly bacteria that was studied for use in the secret biological weapons program of the Soviet Union.

Oracle Span 1:  bacteria => bacterium
Oracle Span 2:  biological => biology
Oracle Span 3:  every => every
Oracle Span 4:  kind => kind
Oracle Span 5:  program => program
Oracle Span 6:  secret => secret
Oracle Span 7:  Soviet Union => (country :name (name :op "Union" :op "Soviet"))
Oracle Span 8:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 9:  studied => study-01
Oracle Span 10:  use => use-01
Oracle Span 11:  weapons => weapon
NER Entity: (country :name (name :op "Soviet" :op "Union"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 6-7:  applied => apply-01
Span 14-15:  bacteria => bacterium
Span 23-24:  biological => biology
Span 4-5:  Center => center
Span 13-14:  deadly => (cause-01 :ARG1 die-01)
Span 10-11:  every => every
Span 11-12:  kind => kind
Span 25-26:  program => program
Span 3-4:  Scientific => science
Span 22-23:  secret => secret
Span 28-30:  Soviet Union. => (country :name (name :op "Soviet" :op "Union"))
Span 2-3:  State => (thing :ARG1-of state-01)
Span 17-18:  studied => study-01
Span 1-2:  the => (country :name (name :op "North"))
Span 19-20:  use => use-01
Span 24-25:  weapons => weapon

Langrangian relaxation converged after 18 iterations. Delta = 0.0
Oracle Span 14-15:  bacteria => bacterium
Oracle Span 23-24:  biological => biology
Oracle Span 10-11:  every => every
Oracle Span 11-12:  kind => kind
Oracle Span 25-26:  program => program
Oracle Span 22-23:  secret => secret
Oracle Span 28-30:  Soviet Union => (country :name (name :op "Union" :op "Soviet"))
Oracle Span 2-8:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 17-18:  studied => study-01
Oracle Span 19-20:  use => use-01
Oracle Span 24-25:  weapons => weapon

Dependencies:
1	At	_	IN	IN	_	10	prep	_	_
2	the	_	DT	DT	_	5	det	_	_
3	State	_	NNP	NNP	_	5	nn	_	_
4	Scientific	_	NNP	NNP	_	5	nn	_	_
5	Center	_	NNP	NNP	_	1	pobj	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	applied	_	JJ	JJ	_	8	amod	_	_
8	microbiology	_	NN	NN	_	6	pobj	_	_
9	there	_	EX	EX	_	10	expl	_	_
10	is	_	VBZ	VBZ	_	0	root	_	_
11	every	_	DT	DT	_	12	det	_	_
12	kind	_	NN	NN	_	10	nsubj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	deadly	_	JJ	JJ	_	15	amod	_	_
15	bacteria	_	NNS	NNS	_	13	pobj	_	_
16	that	_	WDT	WDT	_	18	nsubjpass	_	_
17	was	_	VBD	VBD	_	18	auxpass	_	_
18	studied	_	VBN	VBN	_	12	rcmod	_	_
19	for	_	IN	IN	_	18	prep	_	_
20	use	_	NN	NN	_	19	pobj	_	_
21	in	_	IN	IN	_	18	prep	_	_
22	the	_	DT	DT	_	26	det	_	_
23	secret	_	JJ	JJ	_	26	amod	_	_
24	biological	_	JJ	JJ	_	26	amod	_	_
25	weapons	_	NNS	NNS	_	26	nn	_	_
26	program	_	NN	NN	_	21	pobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	the	_	DT	DT	_	30	det	_	_
29	Soviet	_	NNP	NNP	_	30	nn	_	_
30	Union	_	NNP	NNP	_	27	pobj	_	_
31	.	_	.	.	_	10	punct	_	_

Oracle:
(b4 / bacterium, mod, k / kind)
(c / country, name, n2 / name)
(k / kind, mod, e / every)
(n / name, op, "Applied")
(n / name, op, "Center")
(n / name, op, "Microbiology")
(n / name, op, "Scientific")
(n / name, op, "State")
(n / name, op, "of")
(n2 / name, op, "Soviet")
(n2 / name, op, "Union")
(p / program, mod, s2 / secret)
(p / program, poss, c / country)
(p / program, topic, w / weapon)
(r / research-institute, name, n / name)
(s / study-01, ARG1, b4 / bacterium)
(s / study-01, purpose, u / use-01)
(u / use-01, ARG1, b4 / bacterium)
(u / use-01, ARG2, p / program)
(w / weapon, mod, b2 / biology)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),studied,study-01,false), Span(25,26,List(1),program,program,false), Span(13,14,List(3, 2),deadly,(cause-01 :ARG1 die-01),false), Span(24,25,List(4),weapons,weapon,false), Span(1,2,List(7, 6, 5),the,(country :name (name :op "North")),false), Span(23,24,List(8),biological,biology,false), Span(22,23,List(9),secret,secret,false), Span(11,12,List(10),kind,kind,false), Span(4,5,List(11),Center,center,false), Span(28,30,List(15, 14, 13, 12),Soviet Union.,(country :name (name :op "Soviet" :op "Union")),false), Span(2,3,List(17, 16),State,(thing :ARG1-of state-01),false), Span(6,7,List(18),applied,apply-01,false), Span(10,11,List(19),every,every,false), Span(19,20,List(20),use,use-01,false), Span(14,15,List(21),bacteria,bacterium,false), Span(3,4,List(22),Scientific,science,false)),Map(2 -> cause-01, 5 -> country, 12 -> country, 15 -> "Union", 8 -> biology, 21 -> bacterium, 18 -> apply-01, 7 -> "North", 17 -> state-01, 1 -> program, 4 -> weapon, 11 -> center, 14 -> "Soviet", 20 -> use-01, 6 -> name, 22 -> science, 0 -> study-01, 9 -> secret, 16 -> thing, 19 -> every, 3 -> die-01, 10 -> kind, 13 -> name),Map(e -> every, w -> weapon, n -> name, s2 -> secret, t -> thing, b -> biology, k -> kind, b2 -> bacterium, c4 -> country, s -> study-01, s4 -> science, d -> die-01, p -> program, a -> apply-01, c3 -> center, s3 -> state-01, c -> cause-01, u -> use-01, c2 -> country, n2 -> name))),[Ljava.lang.String;@1daddff3,Annotation([Ljava.lang.String;@2334bab8,[Ljava.lang.String;@6a07c321,[Ljava.lang.String;@270fb6ee),Annotation([Ljava.lang.String;@54aeb7bb,[Ljava.lang.String;@52c926ec,[Ledu.cmu.lti.nlp.amr.Dependency;@683e95f),Annotation([Ljava.lang.String;@5ce187a7,[Ljava.lang.String;@7dd3f0ef,[Ljava.lang.String;@66b647ff),Annotation([Ljava.lang.String;@7fe68367,[Ljava.lang.String;@2f6aef83,[Ledu.cmu.lti.nlp.amr.Entity;@4ddc3609))
AMR:
(a / apply-01, ARG1, c4 / country)
(b2 / bacterium, mod, k / kind)
(c / cause-01, ARG0, t / thing)
(c / cause-01, ARG1, d / die-01)
(c2 / country, name, n / name)
(c3 / center, mod, s4 / science)
(c4 / country, name, n2 / name)
(d / die-01, ARG1, b2 / bacterium)
(k / kind, mod, e / every)
(n / name, op, "North")
(n2 / name, op, "Soviet")
(n2 / name, op, "Union")
(p / program, mod, s2 / secret)
(p / program, poss, c2 / country)
(p / program, poss, c4 / country)
(p / program, topic, w / weapon)
(s / study-01, ARG1, b2 / bacterium)
(s3 / state-01, ARG0, s4 / science)
(s3 / state-01, ARG1, t / thing)
(u / use-01, ARG1, b2 / bacterium)
(u / use-01, ARG2, p / program)
(w / weapon, mod, b / biology)

Decoded in 1,398,778 microseconds
Sentence: A large virus repository is located in Siberia.

Oracle Span 1:  large => large
Oracle Span 2:  repository => repository
Oracle Span 3:  Siberia => (country-region :name (name :op "Siberia"))
Oracle Span 4:  virus => virus
NER Entity: (country :name (name :op "Siberia"))
Spans:
Span 1-2:  large => large
Span 5-6:  located => locate-01
Span 3-4:  repository => repossess-01
Span 7-8:  Siberia. => (country-region :name (name :op "Siberia"))
Span 2-3:  virus => virus

Langrangian relaxation converged after 22 iterations. Delta = 0.0
Oracle Span 1-2:  large => large
Oracle Span 3-4:  repository => repository
Oracle Span 7-8:  Siberia => (country-region :name (name :op "Siberia"))
Oracle Span 2-3:  virus => virus

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	large	_	JJ	JJ	_	3	amod	_	_
3	virus	_	NN	NN	_	6	nsubjpass	_	_
4	repository	_	RB	RB	_	6	advmod	_	_
5	is	_	VBZ	VBZ	_	6	auxpass	_	_
6	located	_	VBN	VBN	_	0	root	_	_
7	in	_	IN	IN	_	6	prep	_	_
8	Siberia	_	NNP	NNP	_	7	pobj	_	_
9	.	_	.	.	_	6	punct	_	_

Oracle:
(c / country-region, name, n / name)
(n / name, op, "Siberia")
(r / repository, mod, l / large)
(r / repository, mod, v / virus)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),virus,virus,false), Span(5,6,List(1),located,locate-01,false), Span(7,8,List(4, 3, 2),Siberia.,(country-region :name (name :op "Siberia")),false), Span(1,2,List(5),large,large,false), Span(3,4,List(6),repository,repossess-01,false)),Map(2 -> country-region, 5 -> large, 1 -> locate-01, 4 -> "Siberia", 6 -> repossess-01, 0 -> virus, 3 -> name),Map(n -> name, v -> virus, r -> repossess-01, l2 -> large, c -> country-region, l -> locate-01))),[Ljava.lang.String;@1a7793f2,Annotation([Ljava.lang.String;@398efc4c,[Ljava.lang.String;@1a106a9,[Ljava.lang.String;@669ec7c7),Annotation([Ljava.lang.String;@40d030e5,[Ljava.lang.String;@ef2c82f,[Ledu.cmu.lti.nlp.amr.Dependency;@7ef1316),Annotation([Ljava.lang.String;@175f5cd3,[Ljava.lang.String;@56c901c5,[Ljava.lang.String;@4ee20883),Annotation([Ljava.lang.String;@316ac5ea,[Ljava.lang.String;@5cbebed0,[Ledu.cmu.lti.nlp.amr.Entity;@42675bab))
AMR:
(c / country-region, name, n / name)
(l / locate-01, ARG1, v / virus)
(l / locate-01, location, c / country-region)
(n / name, op, "Siberia")
(r / repossess-01, ARG1, v / virus)
(r / repossess-01, mod, l2 / large)

Decoded in 333,300 microseconds
Sentence: Both Russian and Western officials have stated that it is unlikely that any public health threat would result from a power cutoff at the State Scientific Center of applied microbiology.

Oracle Span 1:  and => and
Oracle Span 2:  any => any
Oracle Span 3:  have => (person :ARG0-of have-org-role-91)
Oracle Span 4:  health => health
Oracle Span 5:  officials => official
Oracle Span 6:  power => power
Oracle Span 7:  public => public
Oracle Span 8:  result => result-01
Oracle Span 9:  Russian => (have-org-role-91 :ARG1 (country :name (name :op "Russia")))
Oracle Span 10:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 11:  stated => state-01
Oracle Span 12:  threat => threaten-01
Oracle Span 13:  unlikely => (likely :polarity -)
Oracle Span 14:  Western => (world-region :name (name :op "West"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
NER Entity: (thing :name (name :op "Russian"))
NER Entity: (thing :name (name :op "Western"))
Spans:
Span 2-3:  and => and
Span 12-13:  any => any
Span 28-29:  applied => apply-01
Span 0-1:  Both => both
Span 26-27:  Center => center
Span 14-15:  health => health
Span 4-5:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 20-21:  power => power
Span 13-14:  public => public
Span 17-18:  result => result-01
Span 1-2:  Russian => (country :name (name :op "Russia"))
Span 25-26:  Scientific => science
Span 24-25:  State => (thing :ARG1-of state-01)
Span 6-7:  stated => state-01
Span 15-16:  threat => treat-01
Span 10-11:  unlikely => unlikely
Span 3-4:  Western => west

Langrangian relaxation converged after 76 iterations. Delta = 0.0
Oracle Span 2-3:  and => and
Oracle Span 12-13:  any => any
Oracle Span 5-6:  have => (person :ARG0-of have-org-role-91)
Oracle Span 14-15:  health => health
Oracle Span 4-5:  officials => official
Oracle Span 20-21:  power => power
Oracle Span 13-14:  public => public
Oracle Span 17-18:  result => result-01
Oracle Span 1-2:  Russian => (have-org-role-91 :ARG1 (country :name (name :op "Russia")))
Oracle Span 24-30:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 6-7:  stated => state-01
Oracle Span 15-16:  threat => threaten-01
Oracle Span 10-11:  unlikely => (likely :polarity -)
Oracle Span 3-4:  Western => (world-region :name (name :op "West"))

Dependencies:
1	Both	_	DT	DT	_	5	det	_	_
2	Russian	_	JJ	JJ	_	5	amod	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	Western	_	JJ	JJ	_	2	conj	_	_
5	officials	_	NNS	NNS	_	7	nsubj	_	_
6	have	_	VBP	VBP	_	7	aux	_	_
7	stated	_	VBN	VBN	_	0	root	_	_
8	that	_	IN	IN	_	11	mark	_	_
9	it	_	PRP	PRP	_	11	nsubj	_	_
10	is	_	VBZ	VBZ	_	11	cop	_	_
11	unlikely	_	JJ	JJ	_	7	ccomp	_	_
12	that	_	IN	IN	_	18	mark	_	_
13	any	_	DT	DT	_	16	det	_	_
14	public	_	JJ	JJ	_	16	amod	_	_
15	health	_	NN	NN	_	16	nn	_	_
16	threat	_	NN	NN	_	18	nsubj	_	_
17	would	_	MD	MD	_	18	aux	_	_
18	result	_	VB	VB	_	11	ccomp	_	_
19	from	_	IN	IN	_	18	prep	_	_
20	a	_	DT	DT	_	22	det	_	_
21	power	_	NN	NN	_	22	nn	_	_
22	cutoff	_	NN	NN	_	19	pobj	_	_
23	at	_	IN	IN	_	18	prep	_	_
24	the	_	DT	DT	_	27	det	_	_
25	State	_	NNP	NNP	_	27	nn	_	_
26	Scientific	_	NNP	NNP	_	27	nn	_	_
27	Center	_	NNP	NNP	_	23	pobj	_	_
28	of	_	IN	IN	_	27	prep	_	_
29	applied	_	JJ	JJ	_	30	amod	_	_
30	microbiology	_	NN	NN	_	28	pobj	_	_
31	.	_	.	.	_	7	punct	_	_

Oracle:
(a / and, op, p4 / person)
(c / country, name, n / name)
(h / health, mod, p / public)
(h2 / have-org-role-91, ARG1, c / country)
(h3 / have-org-role-91, ARG0, p4 / person)
(h3 / have-org-role-91, ARG1, w / world-region)
(h3 / have-org-role-91, ARG2, o4 / official)
(l / likely, domain, r / result-01)
(l / likely, polarity, -)
(n / name, op, "Russia")
(n2 / name, op, "West")
(n3 / name, op, "Applied")
(n3 / name, op, "Center")
(n3 / name, op, "Microbiology")
(n3 / name, op, "Scientific")
(n3 / name, op, "State")
(n3 / name, op, "of")
(r / result-01, ARG2, t / threaten-01)
(r2 / research-institute, name, n3 / name)
(s / state-01, ARG0, a / and)
(s / state-01, ARG1, l / likely)
(t / threaten-01, ARG1, h / health)
(t / threaten-01, mod, a2 / any)
(w / world-region, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),Western,west,false), Span(26,27,List(1),Center,center,false), Span(25,26,List(2),Scientific,science,false), Span(13,14,List(3),public,public,false), Span(14,15,List(4),health,health,false), Span(15,16,List(5),threat,treat-01,false), Span(1,2,List(8, 7, 6),Russian,(country :name (name :op "Russia")),false), Span(4,5,List(11, 10, 9),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(12,13,List(12),any,any,false), Span(6,7,List(13),stated,state-01,false), Span(10,11,List(14),unlikely,unlikely,false), Span(24,25,List(16, 15),State,(thing :ARG1-of state-01),false), Span(2,3,List(17),and,and,false), Span(20,21,List(18),power,power,false), Span(0,1,List(19),Both,both,false), Span(28,29,List(20),applied,apply-01,false), Span(17,18,List(21),result,result-01,false)),Map(2 -> science, 5 -> treat-01, 12 -> any, 15 -> thing, 8 -> "Russia", 21 -> result-01, 18 -> power, 7 -> name, 17 -> and, 1 -> center, 4 -> health, 11 -> official, 14 -> unlikely, 20 -> apply-01, 6 -> country, 0 -> west, 9 -> person, 16 -> state-01, 19 -> both, 3 -> public, 10 -> have-org-role-91, 13 -> state-01),Map(w -> west, n -> name, h -> health, h2 -> have-org-role-91, s2 -> state-01, b -> both, t -> treat-01, p2 -> person, a3 -> apply-01, s -> science, p -> public, a -> any, t2 -> thing, r -> result-01, a2 -> and, s3 -> state-01, c -> center, u -> unlikely, o -> official, p3 -> power, c2 -> country))),[Ljava.lang.String;@2935c009,Annotation([Ljava.lang.String;@29532845,[Ljava.lang.String;@23c69f35,[Ljava.lang.String;@5ccbfdcb),Annotation([Ljava.lang.String;@5bf95bd3,[Ljava.lang.String;@6b5851e9,[Ledu.cmu.lti.nlp.amr.Dependency;@7cf05480),Annotation([Ljava.lang.String;@7f56cb70,[Ljava.lang.String;@6e60208a,[Ljava.lang.String;@471ee3b6),Annotation([Ljava.lang.String;@3934fb81,[Ljava.lang.String;@70f0aa9c,[Ledu.cmu.lti.nlp.amr.Entity;@1ffbb078))
AMR:
(a2 / and, op, w / west)
(a3 / apply-01, ARG0, a2 / and)
(c / center, mod, s / science)
(c / center, mod, t2 / thing)
(c2 / country, name, n / name)
(h / health, mod, p / public)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG1, p3 / power)
(h2 / have-org-role-91, ARG2, o / official)
(n / name, op, "Russia")
(o / official, mod, b / both)
(r / result-01, ARG1, t / treat-01)
(s2 / state-01, ARG0, p2 / person)
(s2 / state-01, ARG1, a2 / and)
(s2 / state-01, ARG6, u / unlikely)
(s3 / state-01, ARG0, p2 / person)
(s3 / state-01, ARG1, t2 / thing)
(t / treat-01, ARG0, c2 / country)
(t / treat-01, ARG1, h / health)
(t / treat-01, mod, a / any)
(u / unlikely, topic, r / result-01)

Decoded in 3,472,365 microseconds
Sentence: Russian and Western officials have stated that there is enough uncertainty that they could not be positive a loss of power at the State Scientific Center of applied microbiology would not cause a public health threat.

Oracle Span 1:  and => and
Oracle Span 2:  cause => cause-01
Oracle Span 3:  could => possible
Oracle Span 4:  enough => enough
Oracle Span 5:  have => (person :ARG0-of have-org-role-91)
Oracle Span 6:  health => health
Oracle Span 7:  officials => official
Oracle Span 8:  power => power
Oracle Span 9:  public => public
Oracle Span 10:  Russian => (have-org-role-91 :ARG1 (country :name (name :op "Russia")))
Oracle Span 11:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 12:  stated => state-01
Oracle Span 13:  threat => threat
Oracle Span 14:  uncertainty => certainty
Oracle Span 15:  Western => (world-region :name (name :op "West"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
NER Entity: (thing :name (name :op "Russian"))
NER Entity: (thing :name (name :op "Western"))
Spans:
Span 1-2:  and => and
Span 27-28:  applied => apply-01
Span 31-32:  cause => cause-01
Span 25-26:  Center => center
Span 13-14:  could => possible
Span 9-10:  enough => enough
Span 34-35:  health => health
Span 18-19:  loss => lose-01
Span 3-4:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 16-17:  positive => positive
Span 20-21:  power => power
Span 33-34:  public => public
Span 0-1:  Russian => (country :name (name :op "Russia"))
Span 24-25:  Scientific => science
Span 23-24:  State => (thing :ARG1-of state-01)
Span 5-6:  stated => state-01
Span 35-36:  threat. => treat-01
Span 10-11:  uncertainty => certainty
Span 2-3:  Western => west

Langrangian relaxation converged after 120 iterations. Delta = 0.0
Oracle Span 1-2:  and => and
Oracle Span 31-32:  cause => cause-01
Oracle Span 13-14:  could => possible
Oracle Span 9-10:  enough => enough
Oracle Span 4-5:  have => (person :ARG0-of have-org-role-91)
Oracle Span 34-35:  health => health
Oracle Span 3-4:  officials => official
Oracle Span 20-21:  power => power
Oracle Span 33-34:  public => public
Oracle Span 0-1:  Russian => (have-org-role-91 :ARG1 (country :name (name :op "Russia")))
Oracle Span 23-29:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 5-6:  stated => state-01
Oracle Span 35-36:  threat => threat
Oracle Span 10-11:  uncertainty => certainty
Oracle Span 2-3:  Western => (world-region :name (name :op "West"))

Dependencies:
1	Russian	_	JJ	JJ	_	4	amod	_	_
2	and	_	CC	CC	_	1	cc	_	_
3	Western	_	JJ	JJ	_	1	conj	_	_
4	officials	_	NNS	NNS	_	6	nsubj	_	_
5	have	_	VBP	VBP	_	6	aux	_	_
6	stated	_	VBN	VBN	_	0	root	_	_
7	that	_	IN	IN	_	9	mark	_	_
8	there	_	EX	EX	_	9	expl	_	_
9	is	_	VBZ	VBZ	_	6	ccomp	_	_
10	enough	_	JJ	JJ	_	11	amod	_	_
11	uncertainty	_	NN	NN	_	9	nsubj	_	_
12	that	_	IN	IN	_	17	mark	_	_
13	they	_	PRP	PRP	_	17	nsubj	_	_
14	could	_	MD	MD	_	17	aux	_	_
15	not	_	RB	RB	_	17	neg	_	_
16	be	_	VB	VB	_	17	cop	_	_
17	positive	_	JJ	JJ	_	9	ccomp	_	_
18	a	_	DT	DT	_	19	det	_	_
19	loss	_	NN	NN	_	32	nsubj	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	power	_	NN	NN	_	20	pobj	_	_
22	at	_	IN	IN	_	21	prep	_	_
23	the	_	DT	DT	_	26	det	_	_
24	State	_	NNP	NNP	_	26	nn	_	_
25	Scientific	_	NNP	NNP	_	26	nn	_	_
26	Center	_	NNP	NNP	_	22	pobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	applied	_	JJ	JJ	_	29	amod	_	_
29	microbiology	_	NN	NN	_	27	pobj	_	_
30	would	_	MD	MD	_	32	aux	_	_
31	not	_	RB	RB	_	32	neg	_	_
32	cause	_	VB	VB	_	17	ccomp	_	_
33	a	_	DT	DT	_	36	det	_	_
34	public	_	JJ	JJ	_	36	amod	_	_
35	health	_	NN	NN	_	36	nn	_	_
36	threat	_	NN	NN	_	32	dobj	_	_
37	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, p5 / person)
(c / country, name, n / name)
(c2 / certainty, mod, e / enough)
(c3 / cause-01, ARG0, c2 / certainty)
(c3 / cause-01, ARG1, p / possible)
(h / health, mod, p4 / public)
(h2 / have-org-role-91, ARG1, c / country)
(h3 / have-org-role-91, ARG0, p5 / person)
(h3 / have-org-role-91, ARG1, w / world-region)
(h3 / have-org-role-91, ARG2, o2 / official)
(n / name, op, "Russia")
(n2 / name, op, "West")
(n3 / name, op, "Applied")
(n3 / name, op, "Center")
(n3 / name, op, "Microbiology")
(n3 / name, op, "Scientific")
(n3 / name, op, "State")
(n3 / name, op, "of")
(r / research-institute, name, n3 / name)
(s / state-01, ARG0, a / and)
(s / state-01, ARG1, c2 / certainty)
(t / threat, mod, h / health)
(w / world-region, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(35,36,List(0),threat.,treat-01,false), Span(9,10,List(1),enough,enough,false), Span(0,1,List(4, 3, 2),Russian,(country :name (name :op "Russia")),false), Span(25,26,List(5),Center,center,false), Span(2,3,List(6),Western,west,false), Span(33,34,List(7),public,public,false), Span(13,14,List(8),could,possible,false), Span(27,28,List(9),applied,apply-01,false), Span(34,35,List(10),health,health,false), Span(3,4,List(13, 12, 11),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(23,24,List(15, 14),State,(thing :ARG1-of state-01),false), Span(18,19,List(16),loss,lose-01,false), Span(10,11,List(17),uncertainty,certainty,false), Span(5,6,List(18),stated,state-01,false), Span(20,21,List(19),power,power,false), Span(24,25,List(20),Scientific,science,false), Span(16,17,List(21),positive,positive,false), Span(31,32,List(22),cause,cause-01,false), Span(1,2,List(23),and,and,false)),Map(2 -> country, 5 -> center, 12 -> have-org-role-91, 15 -> state-01, 8 -> possible, 21 -> positive, 18 -> state-01, 7 -> public, 17 -> certainty, 1 -> enough, 23 -> and, 4 -> "Russia", 11 -> person, 14 -> thing, 20 -> science, 6 -> west, 22 -> cause-01, 0 -> treat-01, 9 -> apply-01, 16 -> lose-01, 19 -> power, 3 -> name, 10 -> health, 13 -> official),Map(e -> enough, n -> name, w -> west, h -> health, p5 -> positive, s2 -> state-01, h2 -> have-org-role-91, t -> treat-01, p2 -> possible, c4 -> cause-01, s -> state-01, p -> public, c3 -> certainty, a -> apply-01, p4 -> power, t2 -> thing, a2 -> and, s3 -> science, c -> country, l -> lose-01, o -> official, p3 -> person, c2 -> center))),[Ljava.lang.String;@77023211,Annotation([Ljava.lang.String;@223f1b95,[Ljava.lang.String;@12d8950c,[Ljava.lang.String;@69345d19),Annotation([Ljava.lang.String;@fc06894,[Ljava.lang.String;@5579294a,[Ledu.cmu.lti.nlp.amr.Dependency;@35fb61c),Annotation([Ljava.lang.String;@48c8effb,[Ljava.lang.String;@44c0babe,[Ljava.lang.String;@58eff815),Annotation([Ljava.lang.String;@267e4a42,[Ljava.lang.String;@2946ce41,[Ledu.cmu.lti.nlp.amr.Entity;@6812849d))
AMR:
(a / apply-01, ARG0, a2 / and)
(a / apply-01, ARG1, c / country)
(a2 / and, op, p3 / person)
(c / country, name, n / name)
(c2 / center, mod, s3 / science)
(c2 / center, mod, t2 / thing)
(c3 / certainty, mod, e / enough)
(c4 / cause-01, ARG0, c3 / certainty)
(c4 / cause-01, ARG1, p2 / possible)
(c4 / cause-01, ARG6, t / treat-01)
(h / health, mod, p / public)
(h2 / have-org-role-91, ARG0, p3 / person)
(h2 / have-org-role-91, ARG1, w / west)
(h2 / have-org-role-91, ARG2, o / official)
(l / lose-01, ARG1, p4 / power)
(l / lose-01, ARG2, s3 / science)
(n / name, op, "Russia")
(p2 / possible, domain, p5 / positive)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, t2 / thing)
(s2 / state-01, ARG0, p3 / person)
(s2 / state-01, ARG1, c3 / certainty)
(t / treat-01, ARG1, h / health)

Decoded in 6,214,409 microseconds
Sentence: General Nikolai N. Urakov stated by telephone that the State Scientific Center of applied microbiology has quite reliable systems of protection in case of emergency.

Oracle Span 1:  emergency => emergency
Oracle Span 2:  General => (have-org-role-91 :ARG2 general)
Oracle Span 3:  has => have-03
Oracle Span 4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 5:  protection => protect-01
Oracle Span 6:  quite => quite
Oracle Span 7:  reliable => reliable
Oracle Span 8:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 9:  stated => state-01
Oracle Span 10:  systems => system
Oracle Span 11:  telephone => telephone
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 13-14:  applied => apply-01
Span 22-23:  case => case
Span 11-12:  Center => center
Span 24-25:  emergency. => emergency
Span 0-1:  General => general
Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 20-21:  protection => protect-01
Span 16-17:  quite => quite
Span 17-18:  reliable => relieve-01
Span 10-11:  Scientific => science
Span 9-10:  State => (thing :ARG1-of state-01)
Span 4-5:  stated => state-01
Span 18-19:  systems => system
Span 6-7:  telephone => telephone-01

Langrangian relaxation converged after 14 iterations. Delta = 0.0
Oracle Span 24-25:  emergency => emergency
Oracle Span 0-1:  General => (have-org-role-91 :ARG2 general)
Oracle Span 15-16:  has => have-03
Oracle Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 20-21:  protection => protect-01
Oracle Span 16-17:  quite => quite
Oracle Span 17-18:  reliable => reliable
Oracle Span 9-15:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 4-5:  stated => state-01
Oracle Span 18-19:  systems => system
Oracle Span 6-7:  telephone => telephone

Dependencies:
1	General	_	NNP	NNP	_	4	nn	_	_
2	Nikolai	_	NNP	NNP	_	4	nn	_	_
3	N.	_	NNP	NNP	_	4	nn	_	_
4	Urakov	_	NNP	NNP	_	5	nsubj	_	_
5	stated	_	VBD	VBD	_	0	root	_	_
6	by	_	IN	IN	_	5	prep	_	_
7	telephone	_	NN	NN	_	6	pobj	_	_
8	that	_	IN	IN	_	16	mark	_	_
9	the	_	DT	DT	_	12	det	_	_
10	State	_	NNP	NNP	_	12	nn	_	_
11	Scientific	_	NNP	NNP	_	12	nn	_	_
12	Center	_	NNP	NNP	_	16	nsubj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	applied	_	JJ	JJ	_	15	amod	_	_
15	microbiology	_	NN	NN	_	13	pobj	_	_
16	has	_	VBZ	VBZ	_	5	ccomp	_	_
17	quite	_	RB	RB	_	18	advmod	_	_
18	reliable	_	JJ	JJ	_	19	amod	_	_
19	systems	_	NNS	NNS	_	16	dobj	_	_
20	of	_	IN	IN	_	19	prep	_	_
21	protection	_	NN	NN	_	20	pobj	_	_
22	in	_	IN	IN	_	21	prep	_	_
23	case	_	NN	NN	_	22	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	emergency	_	NN	NN	_	24	pobj	_	_
26	.	_	.	.	_	5	punct	_	_

Oracle:
(h / have-03, ARG0, r2 / research-institute)
(h / have-03, ARG1, s2 / system)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG2, g / general)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(p / protect-01, ARG0, s2 / system)
(p / protect-01, condition, e / emergency)
(p2 / person, name, n / name)
(r / reliable, degree, q / quite)
(r2 / research-institute, name, n2 / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, h / have-03)
(s / state-01, medium, t / telephone)
(s2 / system, mod, r / reliable)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),protection,protect-01,false), Span(10,11,List(1),Scientific,science,false), Span(24,25,List(2),emergency.,emergency,false), Span(9,10,List(4, 3),State,(thing :ARG1-of state-01),false), Span(4,5,List(5),stated,state-01,false), Span(17,18,List(6),reliable,relieve-01,false), Span(0,1,List(7),General,general,false), Span(22,23,List(8),case,case,false), Span(16,17,List(9),quite,quite,false), Span(18,19,List(10),systems,system,false), Span(1,4,List(15, 14, 13, 12, 11),Nikolai N. Urakov,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(11,12,List(16),Center,center,false), Span(6,7,List(17),telephone,telephone-01,false), Span(13,14,List(18),applied,apply-01,false)),Map(2 -> emergency, 5 -> state-01, 12 -> name, 15 -> "Urakov", 8 -> case, 18 -> apply-01, 7 -> general, 17 -> telephone-01, 1 -> science, 4 -> state-01, 11 -> person, 14 -> "N.", 6 -> relieve-01, 0 -> protect-01, 9 -> quite, 16 -> center, 3 -> thing, 10 -> system, 13 -> "Nikolai"),Map(e -> emergency, n -> name, q -> quite, s2 -> state-01, t -> thing, p2 -> person, s -> science, s4 -> system, p -> protect-01, g -> general, a -> apply-01, t2 -> telephone-01, r -> relieve-01, s3 -> state-01, c -> case, c2 -> center))),[Ljava.lang.String;@50d77603,Annotation([Ljava.lang.String;@2fa44dde,[Ljava.lang.String;@29a6acde,[Ljava.lang.String;@3b9fea6e),Annotation([Ljava.lang.String;@5013f470,[Ljava.lang.String;@5dd48911,[Ledu.cmu.lti.nlp.amr.Dependency;@41081e29),Annotation([Ljava.lang.String;@58040fc,[Ljava.lang.String;@4aff8448,[Ljava.lang.String;@339a0007),Annotation([Ljava.lang.String;@3262a90b,[Ljava.lang.String;@35e2881b,[Ledu.cmu.lti.nlp.amr.Entity;@309972b))
AMR:
(a / apply-01, ARG1, s / science)
(c2 / center, mod, s / science)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(p / protect-01, ARG0, s4 / system)
(p / protect-01, ARG1, c / case)
(p / protect-01, condition, e / emergency)
(p2 / person, name, n / name)
(r / relieve-01, ARG0, s4 / system)
(r / relieve-01, ARG1, g / general)
(r / relieve-01, degree, q / quite)
(s2 / state-01, ARG0, s / science)
(s2 / state-01, ARG1, t / thing)
(s3 / state-01, ARG0, p2 / person)
(s3 / state-01, ARG1, s4 / system)
(s3 / state-01, medium, t2 / telephone-01)
(t2 / telephone-01, ARG1, s / science)

Decoded in 1,220,859 microseconds
Sentence: General Nikolai N. Urakov is the longtime director of the the State Scientific Center of applied microbiology.

Oracle Span 1:  director => (have-org-role-91 :ARG2 director)
Oracle Span 2:  General => (have-org-role-91 :ARG2 general)
Oracle Span 3:  longtime => longtime
Oracle Span 4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 5:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 15-16:  applied => apply-01
Span 13-14:  Center => center
Span 7-8:  director => (have-org-role-91 :ARG2 director)
Span 0-1:  General => general
Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 12-13:  Scientific => science
Span 11-12:  State => (thing :ARG1-of state-01)

Langrangian relaxation converged after 31 iterations. Delta = 0.0
Oracle Span 7-8:  director => (have-org-role-91 :ARG2 director)
Oracle Span 0-1:  General => (have-org-role-91 :ARG2 general)
Oracle Span 6-7:  longtime => longtime
Oracle Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 11-17:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))

Dependencies:
1	General	_	NNP	NNP	_	4	nn	_	_
2	Nikolai	_	NNP	NNP	_	4	nn	_	_
3	N.	_	NNP	NNP	_	4	nn	_	_
4	Urakov	_	NNP	NNP	_	8	nsubj	_	_
5	is	_	VBZ	VBZ	_	8	cop	_	_
6	the	_	DT	DT	_	8	det	_	_
7	longtime	_	JJ	JJ	_	8	amod	_	_
8	director	_	NN	NN	_	0	root	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	14	predet	_	_
11	the	_	DT	DT	_	14	det	_	_
12	State	_	NNP	NNP	_	14	nn	_	_
13	Scientific	_	NNP	NNP	_	14	nn	_	_
14	Center	_	NNP	NNP	_	9	pobj	_	_
15	of	_	IN	IN	_	8	prep	_	_
16	applied	_	JJ	JJ	_	17	amod	_	_
17	microbiology	_	NN	NN	_	15	pobj	_	_
18	.	_	.	.	_	8	punct	_	_

Oracle:
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, r / research-institute)
(h / have-org-role-91, ARG2, d2 / director)
(h / have-org-role-91, duration, l / longtime)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG2, g / general)
(n / name, op, "Applied")
(n / name, op, "Center")
(n / name, op, "Microbiology")
(n / name, op, "Scientific")
(n / name, op, "State")
(n / name, op, "of")
(n2 / name, op, "N.")
(n2 / name, op, "Nikolai")
(n2 / name, op, "Urakov")
(p / person, name, n2 / name)
(r / research-institute, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),Center,center,false), Span(7,8,List(2, 1),director,(have-org-role-91 :ARG2 director),false), Span(12,13,List(3),Scientific,science,false), Span(1,4,List(8, 7, 6, 5, 4),Nikolai N. Urakov,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(0,1,List(9),General,general,false), Span(15,16,List(10),applied,apply-01,false), Span(11,12,List(12, 11),State,(thing :ARG1-of state-01),false)),Map(2 -> director, 5 -> name, 12 -> state-01, 8 -> "Urakov", 7 -> "N.", 1 -> have-org-role-91, 4 -> person, 11 -> thing, 6 -> "Nikolai", 0 -> center, 9 -> general, 3 -> science, 10 -> apply-01),Map(n -> name, h -> have-org-role-91, s2 -> state-01, t -> thing, s -> science, d -> director, g -> general, p -> person, a -> apply-01, c -> center))),[Ljava.lang.String;@3ec3b809,Annotation([Ljava.lang.String;@5f7cbe25,[Ljava.lang.String;@508a0cd8,[Ljava.lang.String;@67c80574),Annotation([Ljava.lang.String;@4468fa74,[Ljava.lang.String;@7edff94a,[Ledu.cmu.lti.nlp.amr.Dependency;@7eb3c685),Annotation([Ljava.lang.String;@59778f82,[Ljava.lang.String;@5a4f6582,[Ljava.lang.String;@5b5bc228),Annotation([Ljava.lang.String;@3b3cb028,[Ljava.lang.String;@5ed22352,[Ledu.cmu.lti.nlp.amr.Entity;@7f102e7f))
AMR:
(a / apply-01, ARG1, s / science)
(c / center, mod, s / science)
(g / general, op, a / apply-01)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / center)
(h / have-org-role-91, ARG2, d / director)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(p / person, name, n / name)
(s2 / state-01, ARG0, p / person)
(s2 / state-01, ARG1, t / thing)

Decoded in 765,971 microseconds
Sentence: The State scientific center of applied microbiology has been working with Western scientists to convert the complex into a biomedical manufacturing site.

Oracle Span 1:  biomedical => biomedicine
Oracle Span 2:  complex => complex
Oracle Span 3:  convert => convert-01
Oracle Span 4:  manufacturing => manufacture-01
Oracle Span 5:  scientists => scientist
Oracle Span 6:  site => site
Oracle Span 7:  State scientific center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 8:  Western => (world-region :name (name :op "West"))
Oracle Span 9:  working => work-01
NER Entity: (organization :name (name :op "State" :op "scientific"))
NER Entity: (thing :name (name :op "Western"))
Spans:
Span 5-6:  applied => apply-02
Span 3-4:  center => center
Span 16-17:  complex => complex
Span 14-15:  convert => convert-01
Span 20-21:  manufacturing => manufacture-01
Span 2-3:  scientific => science
Span 12-13:  scientists => scientist
Span 21-22:  site. => site
Span 1-2:  State => (thing :ARG1-of state-01)
Span 11-12:  Western => west
Span 9-10:  working => work-01

Langrangian relaxation converged after 38 iterations. Delta = 0.0
Oracle Span 19-20:  biomedical => biomedicine
Oracle Span 16-17:  complex => complex
Oracle Span 14-15:  convert => convert-01
Oracle Span 20-21:  manufacturing => manufacture-01
Oracle Span 12-13:  scientists => scientist
Oracle Span 21-22:  site => site
Oracle Span 1-7:  State scientific center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 11-12:  Western => (world-region :name (name :op "West"))
Oracle Span 9-10:  working => work-01

Dependencies:
1	The	_	DT	DT	_	4	det	_	_
2	State	_	NNP	NNP	_	4	nn	_	_
3	scientific	_	JJ	JJ	_	4	amod	_	_
4	center	_	NN	NN	_	10	nsubj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	applied	_	JJ	JJ	_	7	amod	_	_
7	microbiology	_	NN	NN	_	5	pobj	_	_
8	has	_	VBZ	VBZ	_	10	aux	_	_
9	been	_	VBN	VBN	_	10	aux	_	_
10	working	_	VBG	VBG	_	0	root	_	_
11	with	_	IN	IN	_	10	prep	_	_
12	Western	_	JJ	JJ	_	13	amod	_	_
13	scientists	_	NNS	NNS	_	11	pobj	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	convert	_	VB	VB	_	10	xcomp	_	_
16	the	_	DT	DT	_	17	det	_	_
17	complex	_	NN	NN	_	15	dobj	_	_
18	into	_	IN	IN	_	15	prep	_	_
19	a	_	DT	DT	_	22	det	_	_
20	biomedical	_	JJ	JJ	_	22	amod	_	_
21	manufacturing	_	NN	NN	_	22	nn	_	_
22	site	_	NN	NN	_	18	pobj	_	_
23	.	_	.	.	_	10	punct	_	_

Oracle:
(c / convert-01, ARG1, c2 / complex)
(c / convert-01, ARG2, s2 / site)
(m2 / manufacture-01, location, s2 / site)
(m2 / manufacture-01, mod, b / biomedicine)
(n / name, op, "Applied")
(n / name, op, "Center")
(n / name, op, "Microbiology")
(n / name, op, "Scientific")
(n / name, op, "State")
(n / name, op, "of")
(n2 / name, op, "West")
(r / research-institute, name, n / name)
(s / scientist, mod, w2 / world-region)
(w / work-01, ARG0, r / research-institute)
(w / work-01, ARG1, c / convert-01)
(w / work-01, ARG3, s / scientist)
(w2 / world-region, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),manufacturing,manufacture-01,false), Span(2,3,List(1),scientific,science,false), Span(11,12,List(2),Western,west,false), Span(1,2,List(4, 3),State,(thing :ARG1-of state-01),false), Span(12,13,List(5),scientists,scientist,false), Span(21,22,List(6),site.,site,false), Span(9,10,List(7),working,work-01,false), Span(3,4,List(8),center,center,false), Span(14,15,List(9),convert,convert-01,false), Span(16,17,List(10),complex,complex,false), Span(5,6,List(11),applied,apply-02,false)),Map(2 -> west, 5 -> scientist, 8 -> center, 7 -> work-01, 1 -> science, 11 -> apply-02, 4 -> state-01, 6 -> site, 9 -> convert-01, 0 -> manufacture-01, 10 -> complex, 3 -> thing),Map(w -> west, s2 -> state-01, t -> thing, s -> science, s4 -> site, m -> manufacture-01, a -> apply-02, c3 -> complex, w2 -> work-01, c -> center, s3 -> scientist, c2 -> convert-01))),[Ljava.lang.String;@26e87232,Annotation([Ljava.lang.String;@38f51a93,[Ljava.lang.String;@28873b58,[Ljava.lang.String;@78267e1b),Annotation([Ljava.lang.String;@1dbaeacf,[Ljava.lang.String;@d8b5a69,[Ledu.cmu.lti.nlp.amr.Dependency;@1c47ed7b),Annotation([Ljava.lang.String;@57da9e4e,[Ljava.lang.String;@1d7ceae8,[Ljava.lang.String;@4af3a33c),Annotation([Ljava.lang.String;@69fca32c,[Ljava.lang.String;@6a5778b3,[Ledu.cmu.lti.nlp.amr.Entity;@1086f4bb))
AMR:
(a / apply-02, ARG1, w2 / work-01)
(c / center, mod, s / science)
(c / center, mod, t / thing)
(c2 / convert-01, ARG1, c3 / complex)
(c2 / convert-01, ARG2, s4 / site)
(m / manufacture-01, location, s4 / site)
(s2 / state-01, ARG1, t / thing)
(s3 / scientist, mod, w / west)
(w2 / work-01, ARG0, c / center)
(w2 / work-01, ARG1, c2 / convert-01)
(w2 / work-01, ARG3, s3 / scientist)

Decoded in 824,636 microseconds
Sentence: General Nikolai N. Urakov stated by telephone that the people at the State Scientific Center of applied microbiology are scared by this threat of a sudden shutdown of electricity because it is a kind of psychological pressure on the people at the State Scientific Center of applied microbiology.

Oracle Span 1:  because => cause-01
Oracle Span 2:  electricity => electricity
Oracle Span 3:  General => (have-org-role-91 :ARG2 general)
Oracle Span 4:  kind => kind
Oracle Span 5:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 6:  pressure => pressure-01
Oracle Span 7:  psychological => psychology
Oracle Span 8:  scared => scare-01
Oracle Span 9:  shutdown => shut-05
Oracle Span 10:  State Scientific Center of applied microbiology => (have-org-role-91 :ARG1 (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State")))
Oracle Span 11:  stated => state-01
Oracle Span 12:  sudden => sudden
Oracle Span 13:  telephone => telephone
Oracle Span 14:  this => this
Oracle Span 15:  threat => threaten-01
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 46-47:  applied => apply-01
Span 16-17:  applied => apply-01
Span 14-15:  Center => center
Span 44-45:  Center => center
Span 28-29:  electricity => electricity
Span 0-1:  General => general
Span 33-34:  kind => kind
Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 9-10:  people => people
Span 36-37:  pressure => pressure-01
Span 35-36:  psychological => psychological
Span 19-20:  scared => scare-01
Span 43-44:  Scientific => science
Span 13-14:  Scientific => science
Span 26-27:  shutdown => shut-05
Span 42-43:  State => (thing :ARG1-of state-01)
Span 12-13:  State => (thing :ARG1-of state-01)
Span 4-5:  stated => state-01
Span 25-26:  sudden => sudden
Span 6-7:  telephone => telephone-01
Span 21-22:  this => this
Span 22-23:  threat => treat-01

Langrangian relaxation converged after 57 iterations. Delta = 0.0
Oracle Span 29-30:  because => cause-01
Oracle Span 28-29:  electricity => electricity
Oracle Span 0-1:  General => (have-org-role-91 :ARG2 general)
Oracle Span 33-34:  kind => kind
Oracle Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 36-37:  pressure => pressure-01
Oracle Span 35-36:  psychological => psychology
Oracle Span 19-20:  scared => scare-01
Oracle Span 26-27:  shutdown => shut-05
Oracle Span 12-18:  State Scientific Center of applied microbiology => (have-org-role-91 :ARG1 (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State")))
Oracle Span 4-5:  stated => state-01
Oracle Span 25-26:  sudden => sudden
Oracle Span 6-7:  telephone => telephone
Oracle Span 21-22:  this => this
Oracle Span 22-23:  threat => threaten-01

Dependencies:
1	General	_	NNP	NNP	_	4	nn	_	_
2	Nikolai	_	NNP	NNP	_	4	nn	_	_
3	N.	_	NNP	NNP	_	4	nn	_	_
4	Urakov	_	NNP	NNP	_	5	nsubj	_	_
5	stated	_	VBD	VBD	_	0	root	_	_
6	by	_	IN	IN	_	5	prep	_	_
7	telephone	_	NN	NN	_	6	pobj	_	_
8	that	_	IN	IN	_	20	mark	_	_
9	the	_	DT	DT	_	10	det	_	_
10	people	_	NNS	NNS	_	20	nsubjpass	_	_
11	at	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	15	det	_	_
13	State	_	NNP	NNP	_	15	nn	_	_
14	Scientific	_	NNP	NNP	_	15	nn	_	_
15	Center	_	NNP	NNP	_	11	pobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	applied	_	JJ	JJ	_	18	amod	_	_
18	microbiology	_	NN	NN	_	16	pobj	_	_
19	are	_	VBP	VBP	_	20	auxpass	_	_
20	scared	_	VBN	VBN	_	5	ccomp	_	_
21	by	_	IN	IN	_	20	prep	_	_
22	this	_	DT	DT	_	23	det	_	_
23	threat	_	NN	NN	_	21	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	a	_	DT	DT	_	27	det	_	_
26	sudden	_	JJ	JJ	_	27	amod	_	_
27	shutdown	_	NN	NN	_	24	pobj	_	_
28	of	_	IN	IN	_	27	prep	_	_
29	electricity	_	NN	NN	_	28	pobj	_	_
30	because	_	IN	IN	_	34	mark	_	_
31	it	_	PRP	PRP	_	34	nsubj	_	_
32	is	_	VBZ	VBZ	_	34	cop	_	_
33	a	_	DT	DT	_	34	det	_	_
34	kind	_	NN	NN	_	20	advcl	_	_
35	of	_	IN	IN	_	34	prep	_	_
36	psychological	_	JJ	JJ	_	37	amod	_	_
37	pressure	_	NN	NN	_	35	pobj	_	_
38	on	_	IN	IN	_	37	prep	_	_
39	the	_	DT	DT	_	40	det	_	_
40	people	_	NNS	NNS	_	38	pobj	_	_
41	at	_	IN	IN	_	40	prep	_	_
42	the	_	DT	DT	_	45	det	_	_
43	State	_	NNP	NNP	_	45	nn	_	_
44	Scientific	_	NNP	NNP	_	45	nn	_	_
45	Center	_	NNP	NNP	_	41	pobj	_	_
46	of	_	IN	IN	_	45	prep	_	_
47	applied	_	JJ	JJ	_	48	amod	_	_
48	microbiology	_	NN	NN	_	46	pobj	_	_
49	.	_	.	.	_	5	punct	_	_

Oracle:
(c / cause-01, ARG0, p2 / pressure-01)
(c / cause-01, ARG1, s4 / scare-01)
(h / have-org-role-91, ARG1, r / research-institute)
(h2 / have-org-role-91, ARG0, p4 / person)
(h2 / have-org-role-91, ARG2, g / general)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(p2 / pressure-01, ARG0, t2 / threaten-01)
(p2 / pressure-01, mod, k / kind)
(p2 / pressure-01, mod, p3 / psychology)
(p4 / person, name, n / name)
(r / research-institute, name, n2 / name)
(s / state-01, ARG0, p4 / person)
(s / state-01, ARG1, s4 / scare-01)
(s / state-01, medium, t / telephone)
(s2 / shut-05, ARG1, e / electricity)
(s2 / shut-05, mod, s3 / sudden)
(s4 / scare-01, ARG2, t2 / threaten-01)
(t2 / threaten-01, ARG1, s2 / shut-05)
(t2 / threaten-01, mod, t3 / this)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),stated,state-01,false), Span(33,34,List(1),kind,kind,false), Span(42,43,List(3, 2),State,(thing :ARG1-of state-01),false), Span(46,47,List(4),applied,apply-01,false), Span(25,26,List(5),sudden,sudden,false), Span(0,1,List(6),General,general,false), Span(43,44,List(7),Scientific,science,false), Span(14,15,List(8),Center,center,false), Span(12,13,List(10, 9),State,(thing :ARG1-of state-01),false), Span(21,22,List(11),this,this,false), Span(35,36,List(12),psychological,psychological,false), Span(16,17,List(13),applied,apply-01,false), Span(28,29,List(14),electricity,electricity,false), Span(19,20,List(15),scared,scare-01,false), Span(22,23,List(16),threat,treat-01,false), Span(36,37,List(17),pressure,pressure-01,false), Span(44,45,List(18),Center,center,false), Span(1,4,List(23, 22, 21, 20, 19),Nikolai N. Urakov,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(26,27,List(24),shutdown,shut-05,false), Span(6,7,List(25),telephone,telephone-01,false), Span(13,14,List(26),Scientific,science,false), Span(9,10,List(27),people,people,false)),Map(2 -> thing, 5 -> sudden, 27 -> people, 12 -> psychological, 8 -> center, 15 -> scare-01, 21 -> "Nikolai", 18 -> center, 24 -> shut-05, 7 -> science, 1 -> kind, 17 -> pressure-01, 23 -> "Urakov", 26 -> science, 4 -> apply-01, 11 -> this, 14 -> electricity, 20 -> name, 6 -> general, 9 -> thing, 0 -> state-01, 22 -> "N.", 16 -> treat-01, 19 -> person, 10 -> state-01, 3 -> state-01, 25 -> telephone-01, 13 -> apply-01),Map(s5 -> state-01, e -> electricity, n -> name, t4 -> treat-01, s8 -> science, s2 -> state-01, t -> thing, k -> kind, p2 -> pressure-01, s -> state-01, s4 -> science, t3 -> this, s7 -> shut-05, p -> psychological, g -> general, a -> apply-01, p4 -> people, t2 -> thing, t5 -> telephone-01, a2 -> apply-01, c -> center, s3 -> sudden, s6 -> scare-01, p3 -> person, c2 -> center))),[Ljava.lang.String;@1681671b,Annotation([Ljava.lang.String;@23389454,[Ljava.lang.String;@6ca605d1,[Ljava.lang.String;@fa5e599),Annotation([Ljava.lang.String;@1201f2c9,[Ljava.lang.String;@757c4ee9,[Ledu.cmu.lti.nlp.amr.Dependency;@29a8451a),Annotation([Ljava.lang.String;@981e49b,[Ljava.lang.String;@148bd8d8,[Ljava.lang.String;@317d7a6),Annotation([Ljava.lang.String;@68fcd24b,[Ljava.lang.String;@6edf56f3,[Ledu.cmu.lti.nlp.amr.Entity;@24d80ee8))
AMR:
(a / apply-01, ARG1, s3 / sudden)
(a2 / apply-01, ARG1, s3 / sudden)
(c / center, mod, s8 / science)
(c2 / center, mod, s4 / science)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(p2 / pressure-01, ARG0, t4 / treat-01)
(p2 / pressure-01, ARG1, p / psychological)
(p2 / pressure-01, mod, k / kind)
(p3 / person, name, n / name)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, s6 / scare-01)
(s / state-01, medium, t5 / telephone-01)
(s2 / state-01, ARG0, s4 / science)
(s2 / state-01, ARG1, t / thing)
(s4 / science, op, t4 / treat-01)
(s5 / state-01, ARG0, s8 / science)
(s5 / state-01, ARG1, t2 / thing)
(s6 / scare-01, ARG0, g / general)
(s6 / scare-01, ARG1, p4 / people)
(s6 / scare-01, ARG2, t4 / treat-01)
(s7 / shut-05, ARG1, e / electricity)
(s7 / shut-05, mod, s3 / sudden)
(t4 / treat-01, ARG1, s7 / shut-05)
(t4 / treat-01, mod, t3 / this)
(t5 / telephone-01, ARG1, c / center)

Decoded in 4,291,223 microseconds
Sentence: General Nikolai N. Urakov stated by telephone that in the event of a power shutdown at the State Scientific Center of applied microbiology scientists must destroy all bacteriological experiments under way.

Oracle Span 1:  all => all
Oracle Span 2:  bacteriological => bacteriology
Oracle Span 3:  destroy => destroy-01
Oracle Span 4:  experiments => experiment-01
Oracle Span 5:  General => (have-org-role-91 :ARG2 general)
Oracle Span 6:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 7:  power => power
Oracle Span 8:  scientists => scientist
Oracle Span 9:  shutdown => shut-05
Oracle Span 10:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 11:  stated => state-01
Oracle Span 12:  telephone => telephone
Oracle Span 13:  way => way
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 26-27:  all => all
Span 21-22:  applied => apply-01
Span 19-20:  Center => center
Span 25-26:  destroy => destroy-01
Span 28-29:  experiments => experiment
Span 0-1:  General => general
Span 24-25:  must => muster-01
Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 13-14:  power => power
Span 18-19:  Scientific => science
Span 23-24:  scientists => scientist
Span 14-15:  shutdown => shut-05
Span 17-18:  State => (thing :ARG1-of state-01)
Span 4-5:  stated => state-01
Span 6-7:  telephone => telephone-01
Span 30-31:  way. => way

Langrangian relaxation converged after 25 iterations. Delta = 0.0
Oracle Span 26-27:  all => all
Oracle Span 27-28:  bacteriological => bacteriology
Oracle Span 25-26:  destroy => destroy-01
Oracle Span 28-29:  experiments => experiment-01
Oracle Span 0-1:  General => (have-org-role-91 :ARG2 general)
Oracle Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 13-14:  power => power
Oracle Span 23-24:  scientists => scientist
Oracle Span 14-15:  shutdown => shut-05
Oracle Span 17-23:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 4-5:  stated => state-01
Oracle Span 6-7:  telephone => telephone
Oracle Span 30-31:  way => way

Dependencies:
1	General	_	NNP	NNP	_	4	nn	_	_
2	Nikolai	_	NNP	NNP	_	4	nn	_	_
3	N.	_	NNP	NNP	_	4	nn	_	_
4	Urakov	_	NNP	NNP	_	5	nsubj	_	_
5	stated	_	VBD	VBD	_	0	root	_	_
6	by	_	IN	IN	_	5	prep	_	_
7	telephone	_	NN	NN	_	6	pobj	_	_
8	that	_	IN	IN	_	26	mark	_	_
9	in	_	IN	IN	_	26	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	event	_	NN	NN	_	9	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	a	_	DT	DT	_	15	det	_	_
14	power	_	NN	NN	_	15	nn	_	_
15	shutdown	_	NN	NN	_	12	pobj	_	_
16	at	_	IN	IN	_	15	prep	_	_
17	the	_	DT	DT	_	20	det	_	_
18	State	_	NNP	NNP	_	20	nn	_	_
19	Scientific	_	NNP	NNP	_	20	nn	_	_
20	Center	_	NNP	NNP	_	16	pobj	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	applied	_	JJ	JJ	_	23	amod	_	_
23	microbiology	_	NN	NN	_	21	pobj	_	_
24	scientists	_	NNS	NNS	_	26	nsubj	_	_
25	must	_	MD	MD	_	26	aux	_	_
26	destroy	_	VB	VB	_	5	ccomp	_	_
27	all	_	DT	DT	_	29	det	_	_
28	bacteriological	_	JJ	JJ	_	29	amod	_	_
29	experiments	_	NNS	NNS	_	26	dobj	_	_
30	under	_	IN	IN	_	26	prep	_	_
31	way	_	NN	NN	_	30	pobj	_	_
32	.	_	.	.	_	5	punct	_	_

Oracle:
(d / destroy-01, ARG0, s2 / scientist)
(d / destroy-01, ARG1, e / experiment-01)
(e / experiment-01, ARG1, b / bacteriology)
(e / experiment-01, mod, a / all)
(e / experiment-01, prep-under, w / way)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG2, g / general)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(p2 / person, name, n / name)
(r / research-institute, name, n2 / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, medium, t / telephone)
(s3 / shut-05, ARG1, p / power)
(s3 / shut-05, location, r / research-institute)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),stated,state-01,false), Span(30,31,List(1),way.,way,false), Span(13,14,List(2),power,power,false), Span(0,1,List(3),General,general,false), Span(28,29,List(4),experiments,experiment,false), Span(24,25,List(5),must,muster-01,false), Span(23,24,List(6),scientists,scientist,false), Span(21,22,List(7),applied,apply-01,false), Span(19,20,List(8),Center,center,false), Span(18,19,List(9),Scientific,science,false), Span(14,15,List(10),shutdown,shut-05,false), Span(17,18,List(12, 11),State,(thing :ARG1-of state-01),false), Span(26,27,List(13),all,all,false), Span(25,26,List(14),destroy,destroy-01,false), Span(1,4,List(19, 18, 17, 16, 15),Nikolai N. Urakov,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(6,7,List(20),telephone,telephone-01,false)),Map(2 -> power, 5 -> muster-01, 12 -> state-01, 15 -> person, 8 -> center, 18 -> "N.", 7 -> apply-01, 17 -> "Nikolai", 1 -> way, 4 -> experiment, 11 -> thing, 14 -> destroy-01, 20 -> telephone-01, 6 -> scientist, 0 -> state-01, 9 -> science, 16 -> name, 19 -> "Urakov", 3 -> general, 10 -> shut-05, 13 -> all),Map(e -> experiment, s5 -> state-01, n -> name, w -> way, s2 -> scientist, t -> thing, p2 -> person, s -> state-01, s4 -> shut-05, d -> destroy-01, m -> muster-01, p -> power, g -> general, a -> apply-01, t2 -> telephone-01, a2 -> all, c -> center, s3 -> science))),[Ljava.lang.String;@100732a2,Annotation([Ljava.lang.String;@758247de,[Ljava.lang.String;@42f35517,[Ljava.lang.String;@3976383d),Annotation([Ljava.lang.String;@10cd8f93,[Ljava.lang.String;@779686e3,[Ledu.cmu.lti.nlp.amr.Dependency;@2f152eeb),Annotation([Ljava.lang.String;@272a4ce4,[Ljava.lang.String;@5be7fe85,[Ljava.lang.String;@1805da84),Annotation([Ljava.lang.String;@1ee1dd19,[Ljava.lang.String;@6b59ff4d,[Ledu.cmu.lti.nlp.amr.Entity;@fae2775))
AMR:
(a / apply-01, ARG1, s3 / science)
(c / center, mod, s3 / science)
(d / destroy-01, ARG0, s2 / scientist)
(d / destroy-01, ARG1, e / experiment)
(d / destroy-01, ARG2, g / general)
(e / experiment, mod, a2 / all)
(e / experiment, prep-under, w / way)
(m / muster-01, ARG1, d / destroy-01)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(p2 / person, name, n / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, m / muster-01)
(s / state-01, medium, t2 / telephone-01)
(s4 / shut-05, ARG1, p / power)
(s4 / shut-05, location, c / center)
(s5 / state-01, ARG0, s3 / science)
(s5 / state-01, ARG1, t / thing)
(t2 / telephone-01, ARG1, s4 / shut-05)

Decoded in 1,723,811 microseconds
Sentence: General Nikolai N. Urakov would like the United States and Western countries that have contributed about 6 million United States dollars to the transformation of the former bioweapons complex to contribute another 500000 United States dollars per year to pay the State Scientific Center of applied microbiology's electric bills and arrears.

Oracle Span 1:  500000 => 500000
Oracle Span 2:  about => about
Oracle Span 3:  and => and
Oracle Span 4:  and => and
Oracle Span 5:  another => another
Oracle Span 6:  arrears => arrear
Oracle Span 7:  bills => bill
Oracle Span 8:  bioweapons => bioweapon
Oracle Span 9:  complex => complex
Oracle Span 10:  contribute => contribute-01
Oracle Span 11:  contributed => contribute-01
Oracle Span 12:  countries => country
Oracle Span 13:  dollars => (monetary-quantity :unit dollar)
Oracle Span 14:  electric => electric
Oracle Span 15:  former => former
Oracle Span 16:  General => general
Oracle Span 17:  have => have-org-role-91
Oracle Span 18:  like => like-02
Oracle Span 19:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 20:  pay => pay-01
Oracle Span 21:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 22:  transformation => transform-01
Oracle Span 23:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 24:  Western => (world-region :name (name :op "West"))
Oracle Span 25:  year => (temporal-quantity :unit year)
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
NER Entity: (thing :name (name :op "Western"))
mkDayMonthYear(500000,00,00,50)
Spans:
Span 9-10:  and => and
Span 49-50:  and => bill
Span 31-32:  another => another
Span 45-46:  applied => apply-01
Span 50-51:  arrears. => and
Span 48-49:  bills => electric
Span 27-28:  bioweapons => bioweapon
Span 43-44:  Center => center
Span 28-29:  complex => complex
Span 30-31:  contribute => contribute-01
Span 14-15:  contributed => contribute-01
Span 11-12:  countries => country
Span 20-21:  dollars => (monetary-quantity :unit dollar)
Span 26-27:  former => former
Span 0-1:  General => general
Span 0-1:  General => 1
Span 5-6:  like => like-02
Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 39-40:  pay => pay-01
Span 42-43:  Scientific => science
Span 41-42:  State => (thing :ARG1-of state-01)
Span 19-20:  States => state
Span 23-24:  transformation => transform-01
Span 18-19:  United => (company :name (name :op "Services" :op "United" :op "Energy"))
Span 7-9:  United States => (country :name (name :op "United" :op "States"))
Span 10-11:  Western => west
Span 37-38:  year => year

Langrangian relaxation converged after 41 iterations. Delta = 0.0
Oracle Span 32-33:  500000 => 500000
Oracle Span 15-16:  about => about
Oracle Span 9-10:  and => and
Oracle Span 50-51:  and => and
Oracle Span 31-32:  another => another
Oracle Span 51-52:  arrears => arrear
Oracle Span 49-50:  bills => bill
Oracle Span 27-28:  bioweapons => bioweapon
Oracle Span 28-29:  complex => complex
Oracle Span 30-31:  contribute => contribute-01
Oracle Span 14-15:  contributed => contribute-01
Oracle Span 11-12:  countries => country
Oracle Span 20-21:  dollars => (monetary-quantity :unit dollar)
Oracle Span 48-49:  electric => electric
Oracle Span 26-27:  former => former
Oracle Span 0-1:  General => general
Oracle Span 13-14:  have => have-org-role-91
Oracle Span 5-6:  like => like-02
Oracle Span 1-4:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 39-40:  pay => pay-01
Oracle Span 41-47:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 23-24:  transformation => transform-01
Oracle Span 7-9:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 10-11:  Western => (world-region :name (name :op "West"))
Oracle Span 37-38:  year => (temporal-quantity :unit year)

Dependencies:
1	General	_	NNP	NNP	_	4	nn	_	_
2	Nikolai	_	NNP	NNP	_	4	nn	_	_
3	N.	_	NNP	NNP	_	4	nn	_	_
4	Urakov	_	NNP	NNP	_	6	nsubj	_	_
5	would	_	MD	MD	_	6	aux	_	_
6	like	_	VB	VB	_	0	root	_	_
7	the	_	DT	DT	_	9	det	_	_
8	United	_	NNP	NNP	_	9	nn	_	_
9	States	_	NNPS	NNPS	_	29	nsubj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	Western	_	NNP	NNP	_	12	nn	_	_
12	countries	_	NNS	NNS	_	9	conj	_	_
13	that	_	WDT	WDT	_	15	nsubj	_	_
14	have	_	VBP	VBP	_	15	aux	_	_
15	contributed	_	VBN	VBN	_	9	rcmod	_	_
16	about	_	RB	RB	_	18	quantmod	_	_
17	6	_	CD	CD	_	18	number	_	_
18	million	_	CD	CD	_	21	num	_	_
19	United	_	NNP	NNP	_	21	nn	_	_
20	States	_	NNPS	NNPS	_	21	nn	_	_
21	dollars	_	NNS	NNS	_	15	dobj	_	_
22	to	_	TO	TO	_	15	prep	_	_
23	the	_	DT	DT	_	24	det	_	_
24	transformation	_	NN	NN	_	22	pobj	_	_
25	of	_	IN	IN	_	24	prep	_	_
26	the	_	DT	DT	_	28	det	_	_
27	former	_	JJ	JJ	_	28	amod	_	_
28	bioweapons	_	NNS	NNS	_	25	pobj	_	_
29	complex	_	JJ	JJ	_	6	xcomp	_	_
30	to	_	TO	TO	_	31	aux	_	_
31	contribute	_	VB	VB	_	29	xcomp	_	_
32	another	_	DT	DT	_	33	quantmod	_	_
33	500000	_	CD	CD	_	36	num	_	_
34	United	_	NNP	NNP	_	36	nn	_	_
35	States	_	NNP	NNP	_	36	nn	_	_
36	dollars	_	NNS	NNS	_	31	dobj	_	_
37	per	_	IN	IN	_	36	prep	_	_
38	year	_	NN	NN	_	37	pobj	_	_
39	to	_	TO	TO	_	40	aux	_	_
40	pay	_	VB	VB	_	31	vmod	_	_
41	the	_	DT	DT	_	44	det	_	_
42	State	_	NNP	NNP	_	44	nn	_	_
43	Scientific	_	NNP	NNP	_	44	nn	_	_
44	Center	_	NNP	NNP	_	40	dobj	_	_
45	of	_	IN	IN	_	44	prep	_	_
46	applied	_	JJ	JJ	_	47	amod	_	_
47	microbiology	_	NN	NN	_	50	poss	_	_
48	's	_	POS	POS	_	47	possessive	_	_
49	electric	_	JJ	JJ	_	50	amod	_	_
50	bills	_	NNS	NNS	_	45	pobj	_	_
51	and	_	CC	CC	_	50	cc	_	_
52	arrears	_	NNS	NNS	_	50	conj	_	_
53	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, c2 / country)
(a / and, op, c3 / country)
(a4 / and, op, a5 / arrear)
(a4 / and, op, b2 / bill)
(a4 / and, poss, r / research-institute)
(a7 / about, op, m / monetary-quantity)
(b2 / bill, mod, e / electric)
(c / contribute-01, ARG0, a / and)
(c / contribute-01, purpose, p / pay-01)
(c2 / country, name, n2 / name)
(c3 / country, location, w / world-region)
(c4 / contribute-01, ARG0, a / and)
(c4 / contribute-01, ARG1, a7 / about)
(c4 / contribute-01, ARG2, t / transform-01)
(c5 / complex, mod, b3 / bioweapon)
(c5 / complex, mod, f / former)
(d / dollar, mod, c2 / country)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG2, g / general)
(l / like-02, ARG0, p2 / person)
(l / like-02, ARG1, c / contribute-01)
(m / monetary-quantity, unit, d / dollar)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(n2 / name, op, "States")
(n2 / name, op, "United")
(n3 / name, op, "West")
(n4 / name, op, "Applied")
(n4 / name, op, "Center")
(n4 / name, op, "Microbiology")
(n4 / name, op, "Scientific")
(n4 / name, op, "State")
(n4 / name, op, "of")
(p / pay-01, ARG0, a / and)
(p / pay-01, ARG3, a4 / and)
(p2 / person, name, n / name)
(r / research-institute, name, n4 / name)
(t / transform-01, ARG1, c5 / complex)
(t2 / temporal-quantity, unit, y / year)
(w / world-region, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(42,43,List(0),Scientific,science,false), Span(26,27,List(1),former,former,false), Span(18,19,List(6, 5, 4, 3, 2),United,(company :name (name :op "Services" :op "United" :op "Energy")),false), Span(9,10,List(7),and,and,false), Span(11,12,List(8),countries,country,false), Span(23,24,List(9),transformation,transform-01,false), Span(39,40,List(10),pay,pay-01,false), Span(1,4,List(15, 14, 13, 12, 11),Nikolai N. Urakov,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(50,51,List(16),arrears.,and,false), Span(14,15,List(17),contributed,contribute-01,false), Span(31,32,List(18),another,another,false), Span(45,46,List(19),applied,apply-01,false), Span(10,11,List(20),Western,west,false), Span(20,21,List(22, 21),dollars,(monetary-quantity :unit dollar),false), Span(41,42,List(24, 23),State,(thing :ARG1-of state-01),false), Span(7,9,List(28, 27, 26, 25),United States,(country :name (name :op "United" :op "States")),false), Span(19,20,List(29),States,state,false), Span(28,29,List(30),complex,complex,false), Span(0,1,List(31),General,general,false), Span(48,49,List(32),bills,electric,false), Span(5,6,List(33),like,like-02,false), Span(0,1,List(34),General,1,false), Span(49,50,List(35),and,bill,false), Span(37,38,List(36),year,year,false), Span(30,31,List(37),contribute,contribute-01,false), Span(43,44,List(38),Center,center,false), Span(27,28,List(39),bioweapons,bioweapon,false)),Map(39 -> bioweapon, 30 -> complex, 2 -> company, 5 -> "United", 33 -> like-02, 27 -> "United", 12 -> name, 8 -> country, 15 -> "Urakov", 36 -> year, 21 -> monetary-quantity, 18 -> another, 24 -> state-01, 35 -> bill, 7 -> and, 1 -> former, 17 -> contribute-01, 23 -> thing, 38 -> center, 26 -> name, 4 -> "Services", 11 -> person, 32 -> electric, 14 -> "N.", 29 -> state, 20 -> west, 34 -> 1, 28 -> "States", 6 -> "Energy", 9 -> transform-01, 0 -> science, 22 -> dollar, 16 -> and, 37 -> contribute-01, 19 -> apply-01, 10 -> pay-01, 3 -> name, 31 -> general, 25 -> country, 13 -> "Nikolai"),Map(e -> electric, n -> name, w -> west, s2 -> state-01, t -> transform-01, b -> bill, b2 -> bioweapon, c7 -> center, p2 -> person, a3 -> another, c4 -> country, s -> science, m -> monetary-quantity, d -> dollar, 1 -> 1, y -> year, p -> pay-01, g -> general, c3 -> contribute-01, a -> and, n3 -> name, c6 -> contribute-01, t2 -> thing, a2 -> and, c -> company, s3 -> state, l -> like-02, f -> former, n2 -> name, c2 -> country, a4 -> apply-01, c5 -> complex))),[Ljava.lang.String;@7b3e62e3,Annotation([Ljava.lang.String;@51d260f7,[Ljava.lang.String;@62963da2,[Ljava.lang.String;@476aa346),Annotation([Ljava.lang.String;@4f4be832,[Ljava.lang.String;@d5cfcf4,[Ledu.cmu.lti.nlp.amr.Dependency;@5ef4abd0),Annotation([Ljava.lang.String;@4c1653db,[Ljava.lang.String;@5c8c2813,[Ljava.lang.String;@36ddd42a),Annotation([Ljava.lang.String;@4d0c530a,[Ljava.lang.String;@337a59fb,[Ledu.cmu.lti.nlp.amr.Entity;@e0b3337))
AMR:
(1 / 1, mod, g / general)
(a / and, op, b / bill)
(a / and, op, w / west)
(a2 / and, op, c2 / country)
(a2 / and, op, c4 / country)
(a4 / apply-01, ARG1, b / bill)
(b / bill, mod, e / electric)
(c / company, name, n / name)
(c3 / contribute-01, ARG0, a2 / and)
(c3 / contribute-01, ARG1, a / and)
(c4 / country, name, n3 / name)
(c5 / complex, mod, b2 / bioweapon)
(c5 / complex, mod, f / former)
(c6 / contribute-01, ARG0, a2 / and)
(c6 / contribute-01, ARG1, 1 / 1)
(c6 / contribute-01, ARG2, t / transform-01)
(c6 / contribute-01, ARG6, a3 / another)
(c7 / center, mod, s / science)
(d / dollar, mod, c4 / country)
(d / dollar, mod, s3 / state)
(l / like-02, ARG0, p2 / person)
(l / like-02, ARG1, c3 / contribute-01)
(m / monetary-quantity, unit, d / dollar)
(n / name, op, "Energy")
(n / name, op, "Services")
(n / name, op, "United")
(n2 / name, op, "N.")
(n2 / name, op, "Nikolai")
(n2 / name, op, "Urakov")
(n3 / name, op, "States")
(n3 / name, op, "United")
(p / pay-01, ARG0, a2 / and)
(p / pay-01, ARG1, c7 / center)
(p / pay-01, ARG6, y / year)
(p2 / person, name, n2 / name)
(s2 / state-01, ARG0, s / science)
(s2 / state-01, ARG1, t2 / thing)
(s3 / state, poss, c / company)
(t / transform-01, ARG1, c5 / complex)

Decoded in 6,117,652 microseconds
Sentence: An American scientist who works closely with the State Scientific Center of applied microbiology stated that the Russian government was responsible for paying for the State Scientific Center of applied microbiology's electric bills.

Oracle Span 1:  American => (country :name (name :op "America"))
Oracle Span 2:  bills => bill
Oracle Span 3:  closely => close
Oracle Span 4:  electric => electric
Oracle Span 5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6:  paying => pay-01
Oracle Span 7:  responsible => responsible-41
Oracle Span 8:  Russian => (country :name (name :op "Russia"))
Oracle Span 9:  scientist => scientist
Oracle Span 10:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 11:  stated => state-01
Oracle Span 12:  works => work-01
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
NER Entity: (thing :name (name :op "American"))
NER Entity: (thing :name (name :op "Russian"))
Spans:
Span 33-34:   => bill
Span 1-2:  American => "States"
Span 0-1:  An => (person :ARG0-of have-org-role-91)
Span 12-13:  applied => apply-02
Span 29-30:  applied => apply-01
Span 32-33:  bills. => electric
Span 10-11:  Center => center
Span 27-28:  Center => center
Span 5-6:  closely => close
Span 18-19:  government => (government-organization :ARG0-of govern-01)
Span 22-23:  paying => pay-01
Span 20-21:  responsible => respire-01
Span 26-27:  Scientific => science
Span 9-10:  Scientific => science
Span 2-3:  scientist => "Scientist"
Span 25-26:  State => (thing :ARG1-of state-01)
Span 8-9:  State => (thing :ARG1-of state-01)
Span 14-15:  stated => state-01
Span 4-5:  works => work-01

Langrangian relaxation converged after 52 iterations. Delta = 0.0
Oracle Span 1-2:  American => (country :name (name :op "America"))
Oracle Span 33-34:  bills => bill
Oracle Span 5-6:  closely => close
Oracle Span 32-33:  electric => electric
Oracle Span 18-19:  government => (government-organization :ARG0-of govern-01)
Oracle Span 22-23:  paying => pay-01
Oracle Span 20-21:  responsible => responsible-41
Oracle Span 17-18:  Russian => (country :name (name :op "Russia"))
Oracle Span 2-3:  scientist => scientist
Oracle Span 8-14:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 14-15:  stated => state-01
Oracle Span 4-5:  works => work-01

Dependencies:
1	An	_	DT	DT	_	3	det	_	_
2	American	_	JJ	JJ	_	3	amod	_	_
3	scientist	_	NN	NN	_	15	nsubj	_	_
4	who	_	WP	WP	_	5	nsubj	_	_
5	works	_	VBZ	VBZ	_	3	rcmod	_	_
6	closely	_	RB	RB	_	5	advmod	_	_
7	with	_	IN	IN	_	5	prep	_	_
8	the	_	DT	DT	_	11	det	_	_
9	State	_	NNP	NNP	_	11	nn	_	_
10	Scientific	_	NNP	NNP	_	11	nn	_	_
11	Center	_	NNP	NNP	_	7	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	applied	_	JJ	JJ	_	14	amod	_	_
14	microbiology	_	NN	NN	_	12	pobj	_	_
15	stated	_	VBD	VBD	_	0	root	_	_
16	that	_	IN	IN	_	21	mark	_	_
17	the	_	DT	DT	_	19	det	_	_
18	Russian	_	JJ	JJ	_	19	amod	_	_
19	government	_	NN	NN	_	21	nsubj	_	_
20	was	_	VBD	VBD	_	21	cop	_	_
21	responsible	_	JJ	JJ	_	15	ccomp	_	_
22	for	_	IN	IN	_	21	prep	_	_
23	paying	_	VBG	VBG	_	22	pcomp	_	_
24	for	_	IN	IN	_	23	prep	_	_
25	the	_	DT	DT	_	28	det	_	_
26	State	_	NNP	NNP	_	28	nn	_	_
27	Scientific	_	NNP	NNP	_	28	nn	_	_
28	Center	_	NNP	NNP	_	24	pobj	_	_
29	of	_	IN	IN	_	28	prep	_	_
30	applied	_	JJ	JJ	_	31	amod	_	_
31	microbiology	_	NN	NN	_	34	poss	_	_
32	's	_	POS	POS	_	31	possessive	_	_
33	electric	_	JJ	JJ	_	34	amod	_	_
34	bills	_	NNS	NNS	_	29	pobj	_	_
35	.	_	.	.	_	15	punct	_	_

Oracle:
(b / bill, mod, e / electric)
(b / bill, poss, r2 / research-institute)
(c / country, name, n / name)
(c3 / country, name, n3 / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c3 / country)
(n / name, op, "America")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(n3 / name, op, "Russia")
(p / pay-01, ARG0, g / government-organization)
(p / pay-01, ARG3, b / bill)
(r / responsible-41, ARG1, g / government-organization)
(r / responsible-41, ARG2, p / pay-01)
(r2 / research-institute, name, n2 / name)
(s / state-01, ARG0, s2 / scientist)
(s / state-01, ARG1, r / responsible-41)
(s2 / scientist, mod, c / country)
(w / work-01, ARG0, s2 / scientist)
(w / work-01, ARG3, r2 / research-institute)
(w / work-01, degree, c2 / close)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),closely,close,false), Span(26,27,List(1),Scientific,science,false), Span(25,26,List(3, 2),State,(thing :ARG1-of state-01),false), Span(0,1,List(5, 4),An,(person :ARG0-of have-org-role-91),false), Span(18,19,List(7, 6),government,(government-organization :ARG0-of govern-01),false), Span(14,15,List(8),stated,state-01,false), Span(9,10,List(9),Scientific,science,false), Span(10,11,List(10),Center,center,false), Span(1,2,List(11),American,"States",false), Span(4,5,List(12),works,work-01,false), Span(22,23,List(13),paying,pay-01,false), Span(32,33,List(14),bills.,electric,false), Span(20,21,List(15),responsible,respire-01,false), Span(2,3,List(16),scientist,"Scientist",false), Span(8,9,List(18, 17),State,(thing :ARG1-of state-01),false), Span(33,34,List(19),,bill,false), Span(12,13,List(20),applied,apply-02,false), Span(29,30,List(21),applied,apply-01,false), Span(27,28,List(22),Center,center,false)),Map(2 -> thing, 5 -> have-org-role-91, 12 -> work-01, 15 -> respire-01, 8 -> state-01, 21 -> apply-01, 18 -> state-01, 7 -> govern-01, 17 -> thing, 1 -> science, 4 -> person, 11 -> "States", 14 -> electric, 20 -> apply-02, 6 -> government-organization, 22 -> center, 0 -> close, 9 -> science, 16 -> "Scientist", 19 -> bill, 3 -> state-01, 10 -> center, 13 -> pay-01),Map(S -> "States", s5 -> state-01, e -> electric, w -> work-01, h -> have-org-role-91, s2 -> state-01, b -> bill, t -> thing, p2 -> pay-01, s -> science, s4 -> science, g2 -> govern-01, p -> person, g -> government-organization, c3 -> center, a -> apply-02, t2 -> thing, a2 -> apply-01, r -> respire-01, c -> close, s3 -> state-01, S2 -> "Scientist", c2 -> center))),[Ljava.lang.String;@7f076d2a,Annotation([Ljava.lang.String;@2a93950,[Ljava.lang.String;@c47e3d7,[Ljava.lang.String;@1b5f3601),Annotation([Ljava.lang.String;@5ff5767d,[Ljava.lang.String;@145da76a,[Ledu.cmu.lti.nlp.amr.Dependency;@2737b76d),Annotation([Ljava.lang.String;@45ba72b4,[Ljava.lang.String;@3108b2e0,[Ljava.lang.String;@4817255c),Annotation([Ljava.lang.String;@52817fec,[Ljava.lang.String;@44b888da,[Ledu.cmu.lti.nlp.amr.Entity;@3053ad1f))
AMR:
(a / apply-02, ARG1, b / bill)
(a2 / apply-01, ARG1, b / bill)
(b / bill, mod, e / electric)
(c2 / center, mod, s4 / science)
(c3 / center, mod, s / science)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, S / "States")
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, w / work-01)
(p2 / pay-01, ARG0, g / government-organization)
(p2 / pay-01, ARG1, c3 / center)
(p2 / pay-01, ARG3, b / bill)
(r / respire-01, ARG1, g / government-organization)
(s2 / state-01, ARG0, s / science)
(s2 / state-01, ARG1, t / thing)
(s3 / state-01, ARG0, S2 / "Scientist")
(s3 / state-01, ARG1, r / respire-01)
(s5 / state-01, ARG0, s4 / science)
(s5 / state-01, ARG1, t2 / thing)
(w / work-01, ARG0, S2 / "Scientist")
(w / work-01, ARG1, c2 / center)
(w / work-01, degree, c / close)

Decoded in 3,188,330 microseconds
Sentence: Western aid for conversion of General Nikolai N. Urakov's one time bioweapons laboratory peaked in 970000 because it was learned that Iran had made offers to the State Scientific Center of applied microbiology to purchase its expertise.

Oracle Span 1:  970000 => (date-entity :year 1997)
Oracle Span 2:  aid => aid-01
Oracle Span 3:  because => cause-01
Oracle Span 4:  bioweapons => bioweapon
Oracle Span 5:  conversion => convert-01
Oracle Span 6:  expertise => expert-41
Oracle Span 7:  General => general
Oracle Span 8:  had => have-org-role-91
Oracle Span 9:  Iran => (country :name (name :op "Iran"))
Oracle Span 10:  laboratory => laboratory
Oracle Span 11:  learned => learn-01
Oracle Span 12:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 13:  offers => offer-01
Oracle Span 14:  peaked => peak-01
Oracle Span 15:  purchase => purchase-01
Oracle Span 16:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 17:  Western => (world-region :name (name :op "West"))
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
NER Entity: (thing :name (name :op "Western"))
mkDayMonthYear(970000,00,00,97)
Spans:
Span 37-38:   => expertise
Span 1-2:  aid => aid-01
Span 11-12:  bioweapons => time
Span 29-30:  Center => science
Span 3-4:  conversion => converse-01
Span 5-6:  General => (person :ARG0-of (have-org-role-91 :ARG2 general))
Span 22-23:  had => (country :name (name :op "Iran"))
Span 14-15:  in => peak-01
Span 35-36:  its => purchase-01
Span 32-33:  microbiology => apply-02
Span 6-9:  Nikolai N. Urakov's => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 30-31:  of => center
Span 13-14:  peaked => laboratory
Span 28-29:  Scientific => (thing :ARG1-of state-01)
Span 20-21:  that => learn-01
Span 25-26:  to => offer-01
Span 0-1:  Western => 1
Span 0-1:  Western => west

Langrangian relaxation converged after 61 iterations. Delta = 0.0
Oracle Span 16-17:  970000 => (date-entity :year 1997)
Oracle Span 1-2:  aid => aid-01
Oracle Span 17-18:  because => cause-01
Oracle Span 12-13:  bioweapons => bioweapon
Oracle Span 3-4:  conversion => convert-01
Oracle Span 37-38:  expertise => expert-41
Oracle Span 5-6:  General => general
Oracle Span 23-24:  had => have-org-role-91
Oracle Span 22-23:  Iran => (country :name (name :op "Iran"))
Oracle Span 13-14:  laboratory => laboratory
Oracle Span 20-21:  learned => learn-01
Oracle Span 6-9:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 25-26:  offers => offer-01
Oracle Span 14-15:  peaked => peak-01
Oracle Span 35-36:  purchase => purchase-01
Oracle Span 28-34:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 0-1:  Western => (world-region :name (name :op "West"))

Dependencies:
1	Western	_	JJ	JJ	_	2	amod	_	_
2	aid	_	NN	NN	_	15	nsubj	_	_
3	for	_	IN	IN	_	2	prep	_	_
4	conversion	_	NN	NN	_	3	pobj	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	General	_	NNP	NNP	_	9	nn	_	_
7	Nikolai	_	NNP	NNP	_	9	nn	_	_
8	N.	_	NNP	NNP	_	9	nn	_	_
9	Urakov	_	NNP	NNP	_	14	poss	_	_
10	's	_	POS	POS	_	9	possessive	_	_
11	one	_	CD	CD	_	14	num	_	_
12	time	_	NN	NN	_	14	nn	_	_
13	bioweapons	_	NNS	NNS	_	14	nn	_	_
14	laboratory	_	NN	NN	_	5	pobj	_	_
15	peaked	_	VBD	VBD	_	0	root	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	970000	_	CD	CD	_	16	pobj	_	_
18	because	_	IN	IN	_	21	mark	_	_
19	it	_	PRP	PRP	_	21	nsubjpass	_	_
20	was	_	VBD	VBD	_	21	auxpass	_	_
21	learned	_	VBN	VBN	_	15	advcl	_	_
22	that	_	IN	IN	_	25	mark	_	_
23	Iran	_	NNP	NNP	_	25	nsubj	_	_
24	had	_	VBD	VBD	_	25	aux	_	_
25	made	_	VBN	VBN	_	21	ccomp	_	_
26	offers	_	NNS	NNS	_	25	dobj	_	_
27	to	_	TO	TO	_	25	prep	_	_
28	the	_	DT	DT	_	31	det	_	_
29	State	_	NNP	NNP	_	31	nn	_	_
30	Scientific	_	NNP	NNP	_	31	nn	_	_
31	Center	_	NNP	NNP	_	27	pobj	_	_
32	of	_	IN	IN	_	31	prep	_	_
33	applied	_	JJ	JJ	_	34	amod	_	_
34	microbiology	_	NN	NN	_	32	pobj	_	_
35	to	_	TO	TO	_	36	aux	_	_
36	purchase	_	VB	VB	_	25	vmod	_	_
37	its	_	PRP$	PRP$	_	38	poss	_	_
38	expertise	_	NN	NN	_	36	dobj	_	_
39	.	_	.	.	_	15	punct	_	_

Oracle:
(a / aid-01, ARG0, w / world-region)
(a / aid-01, ARG1, c / convert-01)
(c / convert-01, ARG1, l / laboratory)
(c2 / cause-01, ARG0, l2 / learn-01)
(c2 / cause-01, ARG1, p / peak-01)
(c3 / country, name, n3 / name)
(d / date-entity, year, 1997)
(e / expert-41, ARG1, r / research-institute)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG2, g / general)
(l / laboratory, mod, b2 / bioweapon)
(l / laboratory, poss, p3 / person)
(l2 / learn-01, ARG1, o2 / offer-01)
(n / name, op, "West")
(n2 / name, op, "N.")
(n2 / name, op, "Nikolai")
(n2 / name, op, "Urakov")
(n3 / name, op, "Iran")
(n4 / name, op, "Applied")
(n4 / name, op, "Center")
(n4 / name, op, "Microbiology")
(n4 / name, op, "Scientific")
(n4 / name, op, "State")
(n4 / name, op, "of")
(o2 / offer-01, ARG0, c3 / country)
(o2 / offer-01, ARG1, p2 / purchase-01)
(o2 / offer-01, ARG3, r / research-institute)
(p / peak-01, ARG1, a / aid-01)
(p / peak-01, time, d / date-entity)
(p2 / purchase-01, ARG0, c3 / country)
(p2 / purchase-01, ARG1, e / expert-41)
(p3 / person, name, n2 / name)
(r / research-institute, name, n4 / name)
(w / world-region, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),that,learn-01,false), Span(6,9,List(5, 4, 3, 2, 1),Nikolai N. Urakov's,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(5,6,List(8, 7, 6),General,(person :ARG0-of (have-org-role-91 :ARG2 general)),false), Span(1,2,List(9),aid,aid-01,false), Span(13,14,List(10),peaked,laboratory,false), Span(37,38,List(11),,expertise,false), Span(30,31,List(12),of,center,false), Span(11,12,List(13),bioweapons,time,false), Span(25,26,List(14),to,offer-01,false), Span(28,29,List(16, 15),Scientific,(thing :ARG1-of state-01),false), Span(0,1,List(17),Western,1,false), Span(32,33,List(18),microbiology,apply-02,false), Span(0,1,List(19),Western,west,false), Span(35,36,List(20),its,purchase-01,false), Span(22,23,List(23, 22, 21),had,(country :name (name :op "Iran")),false), Span(3,4,List(24),conversion,converse-01,false), Span(14,15,List(25),in,peak-01,false), Span(29,30,List(26),Center,science,false)),Map(2 -> name, 5 -> "Urakov", 12 -> center, 8 -> general, 15 -> thing, 21 -> country, 18 -> apply-02, 24 -> converse-01, 7 -> have-org-role-91, 1 -> person, 17 -> 1, 23 -> "Iran", 26 -> science, 4 -> "N.", 11 -> expertise, 14 -> offer-01, 20 -> purchase-01, 6 -> person, 9 -> aid-01, 0 -> learn-01, 22 -> name, 16 -> state-01, 19 -> west, 10 -> laboratory, 3 -> "Nikolai", 25 -> peak-01, 13 -> time),Map(e -> expertise, w -> west, n -> name, h -> have-org-role-91, s2 -> science, t -> time, p2 -> person, s -> state-01, 1 -> 1, p -> person, g -> general, c3 -> converse-01, a -> aid-01, p4 -> peak-01, t2 -> thing, l2 -> laboratory, a2 -> apply-02, c -> center, l -> learn-01, o -> offer-01, p3 -> purchase-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@30b9c8b4,Annotation([Ljava.lang.String;@42c92800,[Ljava.lang.String;@370fd946,[Ljava.lang.String;@1fa0559e),Annotation([Ljava.lang.String;@61a2c2b6,[Ljava.lang.String;@6aa07faa,[Ledu.cmu.lti.nlp.amr.Dependency;@23ac5e51),Annotation([Ljava.lang.String;@3ebde31f,[Ljava.lang.String;@49fd310c,[Ljava.lang.String;@20c94ab6),Annotation([Ljava.lang.String;@6156c628,[Ljava.lang.String;@30a26406,[Ledu.cmu.lti.nlp.amr.Entity;@1077564f))
AMR:
(1 / 1, mod, w / west)
(a / aid-01, ARG1, c3 / converse-01)
(a / aid-01, mod, 1 / 1)
(a2 / apply-02, ARG1, t / time)
(c / center, mod, s2 / science)
(c2 / country, name, n2 / name)
(c3 / converse-01, ARG1, l2 / laboratory)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, g / general)
(l / learn-01, ARG0, p / person)
(l / learn-01, ARG1, o / offer-01)
(l2 / laboratory, poss, p / person)
(n / name, op, "N.")
(n / name, op, "Nikolai")
(n / name, op, "Urakov")
(n2 / name, op, "Iran")
(o / offer-01, ARG0, c2 / country)
(o / offer-01, ARG1, c / center)
(p / person, name, n / name)
(p3 / purchase-01, ARG0, c2 / country)
(p3 / purchase-01, ARG1, e / expertise)
(p4 / peak-01, ARG0, t / time)
(p4 / peak-01, ARG1, a / aid-01)
(s / state-01, ARG0, s2 / science)
(s / state-01, ARG1, t2 / thing)

Decoded in 5,079,880 microseconds
Sentence: Russian scientists and military leaders who now depend on Western financing to destroy nuclear, chemical and biological weapons have been known to orchestrate a sense of crisis to increase financing.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  biological => biology
Oracle Span 4:  chemical => chemical
Oracle Span 5:  crisis => crisis
Oracle Span 6:  depend => depend-01
Oracle Span 7:  destroy => destroy-01
Oracle Span 8:  financing => finance-01
Oracle Span 9:  financing => finance-01
Oracle Span 10:  increase => increase-01
Oracle Span 11:  known => know-01
Oracle Span 12:  leaders => (person :ARG0-of lead-02)
Oracle Span 13:  military => military
Oracle Span 14:  now => now
Oracle Span 15:  nuclear => nucleus
Oracle Span 16:  orchestrate => orchestrate-01
Oracle Span 17:  Russian => (country :name (name :op "Russia"))
Oracle Span 18:  scientists => scientist
Oracle Span 19:  sense => sense-01
Oracle Span 20:  weapons => weapon
Oracle Span 21:  Western => (world-region :name (name :op "West"))
NER Entity: (thing :name (name :op "Russian"))
NER Entity: (thing :name (name :op "Western"))
Spans:
Span 30-31:   => finance-01
Span 23-24:  a => orchestrate-01
Span 15-16:  and => chemical
Span 2-3:  and => and
Span 16-17:  biological => and
Span 7-8:  depend => depend-01
Span 12-13:  destroy => destroy-01
Span 10-11:  financing => finance-01
Span 29-30:  financing. => increase-01
Span 18-19:  have => weapon
Span 4-5:  leaders => (person :ARG0-of lead-02)
Span 3-4:  military => military
Span 13-14:  nuclear, => and
Span 25-26:  of => sense
Span 0-1:  Russian => (country :name (name :op "Russia"))
Span 0-7:  Russian scientists and military leaders who now => (date-entity :time now)
Span 1-2:  scientists => scientist
Span 21-22:  to => know-01
Span 27-28:  to => crisis
Span 17-18:  weapons => biology
Span 9-10:  Western => west

Langrangian relaxation converged after 72 iterations. Delta = 0.0
Oracle Span 2-3:  and => and
Oracle Span 16-17:  and => and
Oracle Span 17-18:  biological => biology
Oracle Span 15-16:  chemical => chemical
Oracle Span 27-28:  crisis => crisis
Oracle Span 7-8:  depend => depend-01
Oracle Span 12-13:  destroy => destroy-01
Oracle Span 10-11:  financing => finance-01
Oracle Span 30-31:  financing => finance-01
Oracle Span 29-30:  increase => increase-01
Oracle Span 21-22:  known => know-01
Oracle Span 4-5:  leaders => (person :ARG0-of lead-02)
Oracle Span 3-4:  military => military
Oracle Span 6-7:  now => now
Oracle Span 13-14:  nuclear => nucleus
Oracle Span 23-24:  orchestrate => orchestrate-01
Oracle Span 0-1:  Russian => (country :name (name :op "Russia"))
Oracle Span 1-2:  scientists => scientist
Oracle Span 25-26:  sense => sense-01
Oracle Span 18-19:  weapons => weapon
Oracle Span 9-10:  Western => (world-region :name (name :op "West"))

Dependencies:
1	Russian	_	JJ	JJ	_	2	amod	_	_
2	scientists	_	NNS	NNS	_	22	nsubjpass	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	military	_	JJ	JJ	_	5	amod	_	_
5	leaders	_	NNS	NNS	_	2	conj	_	_
6	who	_	WP	WP	_	8	nsubj	_	_
7	now	_	RB	RB	_	8	advmod	_	_
8	depend	_	VBP	VBP	_	5	rcmod	_	_
9	on	_	IN	IN	_	8	prep	_	_
10	Western	_	JJ	JJ	_	11	amod	_	_
11	financing	_	NN	NN	_	9	pobj	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	destroy	_	VB	VB	_	8	xcomp	_	_
14	nuclear	_	JJ	JJ	_	19	amod	_	_
15	,	_	,	,	_	14	punct	_	_
16	chemical	_	JJ	JJ	_	14	conj	_	_
17	and	_	CC	CC	_	14	cc	_	_
18	biological	_	JJ	JJ	_	14	conj	_	_
19	weapons	_	NNS	NNS	_	13	dobj	_	_
20	have	_	VBP	VBP	_	22	aux	_	_
21	been	_	VBN	VBN	_	22	auxpass	_	_
22	known	_	VBN	VBN	_	0	root	_	_
23	to	_	TO	TO	_	24	aux	_	_
24	orchestrate	_	VB	VB	_	22	xcomp	_	_
25	a	_	DT	DT	_	26	det	_	_
26	sense	_	NN	NN	_	24	dobj	_	_
27	of	_	IN	IN	_	26	prep	_	_
28	crisis	_	NN	NN	_	27	pobj	_	_
29	to	_	TO	TO	_	30	aux	_	_
30	increase	_	VB	VB	_	24	vmod	_	_
31	financing	_	NN	NN	_	30	dobj	_	_
32	.	_	.	.	_	22	punct	_	_

Oracle:
(a2 / and, op, p / person)
(a2 / and, op, s / scientist)
(a3 / and, op, w5 / weapon)
(c / country, name, n / name)
(d / depend-01, ARG0, a2 / and)
(d / depend-01, ARG1, f / finance-01)
(d / depend-01, purpose, d2 / destroy-01)
(d / depend-01, time, n2 / now)
(d2 / destroy-01, ARG1, a3 / and)
(f / finance-01, ARG0, w / world-region)
(i / increase-01, ARG1, f2 / finance-01)
(k / know-01, ARG1, a2 / and)
(k / know-01, ARG2, o / orchestrate-01)
(l / lead-02, ARG0, p / person)
(l / lead-02, ARG1, m / military)
(n / name, op, "Russia")
(n3 / name, op, "West")
(o / orchestrate-01, ARG0, a2 / and)
(o / orchestrate-01, ARG1, s2 / sense-01)
(o / orchestrate-01, purpose, i / increase-01)
(s / scientist, mod, c / country)
(s2 / sense-01, ARG1, c3 / crisis)
(w / world-region, name, n3 / name)
(w5 / weapon, mod, b / biology)

Input(Some(Graph(null,ArrayBuffer(Span(29,30,List(0),financing.,increase-01,false), Span(17,18,List(1),weapons,biology,false), Span(21,22,List(2),to,know-01,false), Span(9,10,List(3),Western,west,false), Span(16,17,List(4),biological,and,false), Span(12,13,List(5),destroy,destroy-01,false), Span(18,19,List(6),have,weapon,false), Span(0,1,List(9, 8, 7),Russian,(country :name (name :op "Russia")),false), Span(0,7,List(11, 10),Russian scientists and military leaders who now,(date-entity :time now),false), Span(3,4,List(12),military,military,false), Span(1,2,List(13),scientists,scientist,false), Span(25,26,List(14),of,sense,false), Span(7,8,List(15),depend,depend-01,false), Span(10,11,List(16),financing,finance-01,false), Span(15,16,List(17),and,chemical,false), Span(27,28,List(18),to,crisis,false), Span(13,14,List(19),nuclear,,and,false), Span(2,3,List(20),and,and,false), Span(23,24,List(21),a,orchestrate-01,false), Span(30,31,List(22),,finance-01,false), Span(4,5,List(24, 23),leaders,(person :ARG0-of lead-02),false)),Map(2 -> know-01, 5 -> destroy-01, 12 -> military, 8 -> name, 15 -> depend-01, 21 -> orchestrate-01, 18 -> crisis, 24 -> lead-02, 7 -> country, 1 -> biology, 17 -> chemical, 23 -> person, 4 -> and, 11 -> now, 14 -> sense, 20 -> and, 6 -> weapon, 9 -> "Russia", 0 -> increase-01, 22 -> finance-01, 16 -> finance-01, 19 -> and, 10 -> date-entity, 3 -> west, 13 -> scientist),Map(w -> west, n -> name, s2 -> sense, b -> biology, k -> know-01, d3 -> depend-01, a3 -> and, s -> scientist, d -> destroy-01, m -> military, p -> person, c3 -> crisis, a -> and, d2 -> date-entity, w2 -> weapon, a2 -> and, i -> increase-01, c -> country, l -> lead-02, f2 -> finance-01, f -> finance-01, o -> orchestrate-01, c2 -> chemical, n2 -> now))),[Ljava.lang.String;@667382da,Annotation([Ljava.lang.String;@6ace0686,[Ljava.lang.String;@6ee4e6e0,[Ljava.lang.String;@5ce2e114),Annotation([Ljava.lang.String;@267dcd00,[Ljava.lang.String;@3c9d057f,[Ledu.cmu.lti.nlp.amr.Dependency;@750737ea),Annotation([Ljava.lang.String;@3e26921f,[Ljava.lang.String;@76fb5d16,[Ljava.lang.String;@2299184b),Annotation([Ljava.lang.String;@6e6dd395,[Ljava.lang.String;@6451122d,[Ledu.cmu.lti.nlp.amr.Entity;@48eee05c))
AMR:
(a / and, op, w2 / weapon)
(a3 / and, op, a2 / and)
(a3 / and, op, p / person)
(a3 / and, op, s / scientist)
(c / country, name, n / name)
(d / destroy-01, ARG1, a / and)
(d2 / date-entity, time, n2 / now)
(d3 / depend-01, ARG0, a3 / and)
(d3 / depend-01, ARG1, f2 / finance-01)
(d3 / depend-01, ARG6, d2 / date-entity)
(d3 / depend-01, purpose, d / destroy-01)
(f / finance-01, ARG1, d / destroy-01)
(f2 / finance-01, ARG0, w / west)
(f2 / finance-01, ARG1, c2 / chemical)
(i / increase-01, ARG0, c3 / crisis)
(i / increase-01, ARG1, f / finance-01)
(k / know-01, ARG1, a3 / and)
(k / know-01, ARG2, o / orchestrate-01)
(l / lead-02, ARG0, p / person)
(l / lead-02, ARG1, m / military)
(n / name, op, "Russia")
(o / orchestrate-01, ARG0, a3 / and)
(o / orchestrate-01, ARG1, s2 / sense)
(s / scientist, mod, c / country)
(w2 / weapon, mod, b / biology)

Decoded in 4,775,909 microseconds
Sentence: American scientist Randall Lee Beatty is working on the conversion of the State Scientific Center of applied Microbiology in obolensk.

Oracle Span 1:  American => (country :name (name :op "America"))
Oracle Span 2:  conversion => convert-01
Oracle Span 3:  obolensk => (city :name (name :op "Obolensk"))
Oracle Span 4:  Randall Lee Beatty => (name :op "Beatty" :op "Lee" :op "Randall")
Oracle Span 5:  scientist => scientist
Oracle Span 6:  State Scientific Center of applied Microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 7:  working => work-01
NER Entity: (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of" :op "applied" :op "Microbiology"))
NER Entity: (thing :name (name :op "American"))
Spans:
Span 16-17:  applied => apply-01
Span 14-15:  Center => center
Span 9-10:  conversion => converse-01
Span 2-5:  Randall Lee Beatty => (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
Span 13-14:  Scientific => science
Span 12-13:  State => (thing :ARG1-of state-01)
Span 6-7:  working => work-01

Langrangian relaxation converged after 10 iterations. Delta = 0.0
Oracle Span 0-1:  American => (country :name (name :op "America"))
Oracle Span 9-10:  conversion => convert-01
Oracle Span 19-20:  obolensk => (city :name (name :op "Obolensk"))
Oracle Span 2-5:  Randall Lee Beatty => (name :op "Beatty" :op "Lee" :op "Randall")
Oracle Span 1-2:  scientist => scientist
Oracle Span 12-18:  State Scientific Center of applied Microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 6-7:  working => work-01

Dependencies:
1	American	_	JJ	JJ	_	5	amod	_	_
2	scientist	_	NN	NN	_	5	nn	_	_
3	Randall	_	NNP	NNP	_	5	nn	_	_
4	Lee	_	NNP	NNP	_	5	nn	_	_
5	Beatty	_	NNP	NNP	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	aux	_	_
7	working	_	VBG	VBG	_	0	root	_	_
8	on	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	conversion	_	NN	NN	_	8	pobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	15	det	_	_
13	State	_	NNP	NNP	_	15	nn	_	_
14	Scientific	_	NNP	NNP	_	15	nn	_	_
15	Center	_	NNP	NNP	_	11	pobj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	applied	_	JJ	JJ	_	18	amod	_	_
18	Microbiology	_	NNP	NNP	_	16	pobj	_	_
19	in	_	IN	IN	_	7	prep	_	_
20	obolensk	_	NN	NN	_	19	pobj	_	_
21	.	_	.	.	_	7	punct	_	_

Oracle:
(c / country, name, n2 / name)
(c2 / convert-01, ARG0, s / scientist)
(c2 / convert-01, ARG1, r / research-institute)
(c3 / city, name, n4 / name)
(n / name, op, "Beatty")
(n / name, op, "Lee")
(n / name, op, "Randall")
(n2 / name, op, "America")
(n3 / name, op, "Applied")
(n3 / name, op, "Center")
(n3 / name, op, "Microbiology")
(n3 / name, op, "Scientific")
(n3 / name, op, "State")
(n3 / name, op, "of")
(n4 / name, op, "Obolensk")
(r / research-institute, location, c3 / city)
(r / research-institute, name, n3 / name)
(s / scientist, mod, c / country)
(s / scientist, name, n / name)
(w / work-01, ARG0, s / scientist)
(w / work-01, ARG1, c2 / convert-01)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(1, 0),State,(thing :ARG1-of state-01),false), Span(16,17,List(2),applied,apply-01,false), Span(9,10,List(3),conversion,converse-01,false), Span(2,5,List(8, 7, 6, 5, 4),Randall Lee Beatty,(person :name (name :op "Randall" :op "Lee" :op "Beatty")),false), Span(14,15,List(9),Center,center,false), Span(13,14,List(10),Scientific,science,false), Span(6,7,List(11),working,work-01,false)),Map(2 -> apply-01, 5 -> name, 8 -> "Beatty", 7 -> "Lee", 1 -> state-01, 11 -> work-01, 4 -> person, 6 -> "Randall", 9 -> center, 0 -> thing, 10 -> science, 3 -> converse-01),Map(w -> work-01, n -> name, s2 -> science, t -> thing, s -> state-01, p -> person, a -> apply-01, c -> converse-01, c2 -> center))),[Ljava.lang.String;@4113b7b4,Annotation([Ljava.lang.String;@4787c2b3,[Ljava.lang.String;@497697e,[Ljava.lang.String;@6c7ca412),Annotation([Ljava.lang.String;@308e103e,[Ljava.lang.String;@4965dec6,[Ledu.cmu.lti.nlp.amr.Dependency;@7606920d),Annotation([Ljava.lang.String;@7fd3e4eb,[Ljava.lang.String;@3f9c04cf,[Ljava.lang.String;@58687e14),Annotation([Ljava.lang.String;@1a3c19ee,[Ljava.lang.String;@7a2842fe,[Ledu.cmu.lti.nlp.amr.Entity;@254d8b08))
AMR:
(a / apply-01, ARG1, s2 / science)
(c / converse-01, ARG1, c2 / center)
(c2 / center, mod, s2 / science)
(n / name, op, "Beatty")
(n / name, op, "Lee")
(n / name, op, "Randall")
(p / person, name, n / name)
(s / state-01, ARG0, s2 / science)
(s / state-01, ARG1, t / thing)
(w / work-01, ARG0, p / person)
(w / work-01, ARG1, c / converse-01)

Decoded in 565,026 microseconds
Sentence: Beatty stated that this threat to cut electricity to the State Scientific Center of applied microbiology is a crisis.

Oracle Span 1:  Beatty => (person :name (name :op "Beatty"))
Oracle Span 2:  crisis => crisis
Oracle Span 3:  cut => cut-02
Oracle Span 4:  electricity => electricity
Oracle Span 5:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 6:  stated => state-01
Oracle Span 7:  this => this
Oracle Span 8:  threat => threaten-01
NER Entity: (person :name (name :op "Beatty"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 14-15:  applied => apply-01
Span 0-1:  Beatty => (person :name (name :op "Beatty"))
Span 12-13:  Center => center
Span 18-19:  crisis. => crisis
Span 6-7:  cut => cut-01
Span 7-8:  electricity => electricity
Span 11-12:  Scientific => science
Span 10-11:  State => (thing :ARG1-of state-01)
Span 1-2:  stated => state-01
Span 2-3:  that => thatch-01
Span 3-4:  this => this
Span 4-5:  threat => treat-01

Langrangian relaxation converged after 55 iterations. Delta = 0.0
Oracle Span 0-1:  Beatty => (person :name (name :op "Beatty"))
Oracle Span 18-19:  crisis => crisis
Oracle Span 6-7:  cut => cut-02
Oracle Span 7-8:  electricity => electricity
Oracle Span 10-16:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 1-2:  stated => state-01
Oracle Span 3-4:  this => this
Oracle Span 4-5:  threat => threaten-01

Dependencies:
1	Beatty	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	19	mark	_	_
4	this	_	DT	DT	_	5	det	_	_
5	threat	_	NN	NN	_	19	nsubj	_	_
6	to	_	TO	TO	_	7	aux	_	_
7	cut	_	VB	VB	_	5	vmod	_	_
8	electricity	_	NN	NN	_	7	dobj	_	_
9	to	_	TO	TO	_	7	prep	_	_
10	the	_	DT	DT	_	13	det	_	_
11	State	_	NNP	NNP	_	13	nn	_	_
12	Scientific	_	NNP	NNP	_	13	nn	_	_
13	Center	_	NNP	NNP	_	9	pobj	_	_
14	of	_	IN	IN	_	13	prep	_	_
15	applied	_	JJ	JJ	_	16	amod	_	_
16	microbiology	_	NN	NN	_	14	pobj	_	_
17	is	_	VBZ	VBZ	_	19	cop	_	_
18	a	_	DT	DT	_	19	det	_	_
19	crisis	_	NN	NN	_	2	ccomp	_	_
20	.	_	.	.	_	2	punct	_	_

Oracle:
(c / cut-02, ARG1, e / electricity)
(c / cut-02, location, r / research-institute)
(c2 / crisis, domain, t / threaten-01)
(n / name, op, "Beatty")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(p / person, name, n / name)
(r / research-institute, name, n2 / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c2 / crisis)
(t / threaten-01, ARG1, c / cut-02)
(t / threaten-01, mod, t2 / this)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(10,11,List(2, 1),State,(thing :ARG1-of state-01),false), Span(6,7,List(3),cut,cut-01,false), Span(14,15,List(4),applied,apply-01,false), Span(4,5,List(5),threat,treat-01,false), Span(7,8,List(6),electricity,electricity,false), Span(18,19,List(7),crisis.,crisis,false), Span(11,12,List(8),Scientific,science,false), Span(12,13,List(9),Center,center,false), Span(2,3,List(10),that,thatch-01,false), Span(3,4,List(11),this,this,false), Span(0,1,List(14, 13, 12),Beatty,(person :name (name :op "Beatty")),false)),Map(2 -> state-01, 5 -> treat-01, 12 -> person, 8 -> science, 7 -> crisis, 1 -> thing, 4 -> apply-01, 11 -> this, 14 -> "Beatty", 6 -> electricity, 0 -> state-01, 9 -> center, 3 -> cut-01, 10 -> thatch-01, 13 -> name),Map(e -> electricity, n -> name, t4 -> this, s2 -> state-01, t -> thing, s -> state-01, t3 -> thatch-01, p -> person, a -> apply-01, c3 -> center, t2 -> treat-01, c -> cut-01, s3 -> science, c2 -> crisis))),[Ljava.lang.String;@2d2def02,Annotation([Ljava.lang.String;@68556eb4,[Ljava.lang.String;@3c19ded,[Ljava.lang.String;@19486c9b),Annotation([Ljava.lang.String;@5bdfd54f,[Ljava.lang.String;@18bc304e,[Ledu.cmu.lti.nlp.amr.Dependency;@179de841),Annotation([Ljava.lang.String;@4d6b729d,[Ljava.lang.String;@68bbb3d2,[Ljava.lang.String;@117cc0cb),Annotation([Ljava.lang.String;@695bed45,[Ljava.lang.String;@7f328569,[Ledu.cmu.lti.nlp.amr.Entity;@4aa29c7e))
AMR:
(a / apply-01, ARG1, s3 / science)
(c / cut-01, ARG1, e / electricity)
(c2 / crisis, domain, t2 / treat-01)
(c3 / center, mod, s3 / science)
(c3 / center, mod, t / thing)
(n / name, op, "Beatty")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, c2 / crisis)
(s2 / state-01, ARG0, p / person)
(s2 / state-01, ARG1, t / thing)
(t2 / treat-01, ARG1, c / cut-01)
(t2 / treat-01, mod, t4 / this)
(t3 / thatch-01, ARG1, t2 / treat-01)

Decoded in 1,491,206 microseconds
Sentence: Randall Lee Beatty is a Director of the International Science and Technology Center.

Oracle Span 1:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 2:  International Science and Technology Center => (research-institute :name (name :op "Center" :op "Technology" :op "and" :op "Science" :op "International"))
Oracle Span 3:  Randall Lee Beatty => (person :name (name :op "Beatty" :op "Lee" :op "Randall"))
NER Entity: (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
NER Entity: (organization :name (name :op "International" :op "Science"))
Spans:
Span 10-11:  and => (and :op (person :ARG0-of have-org-role-91))
Span 12-13:  Center. => center
Span 5-6:  Director => (have-org-role-91 :ARG2 director)
Span 8-9:  International => (event :name (name :op "International"))
Span 0-3:  Randall Lee Beatty => (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
Span 9-10:  Science => r2

Langrangian relaxation converged after 9 iterations. Delta = 0.0
Oracle Span 5-6:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 8-13:  International Science and Technology Center => (research-institute :name (name :op "Center" :op "Technology" :op "and" :op "Science" :op "International"))
Oracle Span 0-3:  Randall Lee Beatty => (person :name (name :op "Beatty" :op "Lee" :op "Randall"))

Dependencies:
1	Randall	_	NNP	NNP	_	3	nn	_	_
2	Lee	_	NNP	NNP	_	3	nn	_	_
3	Beatty	_	NNP	NNP	_	6	nsubj	_	_
4	is	_	VBZ	VBZ	_	6	cop	_	_
5	a	_	DT	DT	_	6	det	_	_
6	Director	_	NNP	NNP	_	0	root	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	the	_	DT	DT	_	10	det	_	_
9	International	_	NNP	NNP	_	10	nn	_	_
10	Science	_	NNP	NNP	_	7	pobj	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	Technology	_	NNP	NNP	_	13	nn	_	_
13	Center	_	NNP	NNP	_	10	conj	_	_
14	.	_	.	.	_	6	punct	_	_

Oracle:
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, r / research-institute)
(h / have-org-role-91, ARG2, d2 / director)
(n / name, op, "Center")
(n / name, op, "International")
(n / name, op, "Science")
(n / name, op, "Technology")
(n / name, op, "and")
(n2 / name, op, "Beatty")
(n2 / name, op, "Lee")
(n2 / name, op, "Randall")
(p / person, name, n2 / name)
(r / research-institute, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(2, 1, 0),International,(event :name (name :op "International")),false), Span(9,10,List(3),Science,r2,false), Span(5,6,List(5, 4),Director,(have-org-role-91 :ARG2 director),false), Span(12,13,List(6),Center.,center,false), Span(0,3,List(11, 10, 9, 8, 7),Randall Lee Beatty,(person :name (name :op "Randall" :op "Lee" :op "Beatty")),false), Span(10,11,List(14, 13, 12),and,(and :op (person :ARG0-of have-org-role-91)),false)),Map(2 -> "International", 5 -> director, 12 -> and, 8 -> name, 7 -> person, 1 -> name, 4 -> have-org-role-91, 11 -> "Beatty", 14 -> have-org-role-91, 6 -> center, 0 -> event, 9 -> "Randall", 3 -> r2, 10 -> "Lee", 13 -> person),Map(n -> name, e -> event, h -> have-org-role-91, h2 -> have-org-role-91, p2 -> person, d -> director, p -> person, a -> and, r -> r2, c -> center, n2 -> name))),[Ljava.lang.String;@562c6c2c,Annotation([Ljava.lang.String;@43c212bb,[Ljava.lang.String;@268e103e,[Ljava.lang.String;@690377e7),Annotation([Ljava.lang.String;@5cfb2be7,[Ljava.lang.String;@f7fbd09,[Ledu.cmu.lti.nlp.amr.Dependency;@59a64338),Annotation([Ljava.lang.String;@2be8bba4,[Ljava.lang.String;@2ec9192d,[Ljava.lang.String;@5c2c7e08),Annotation([Ljava.lang.String;@37f84936,[Ljava.lang.String;@5923e1f6,[Ledu.cmu.lti.nlp.amr.Entity;@3f458b8e))
AMR:
(a / and, op, c / center)
(a / and, op, p2 / person)
(a / and, op, r / r2)
(e / event, name, n / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, r / r2)
(h / have-org-role-91, ARG2, d / director)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG1, e / event)
(n / name, op, "International")
(n2 / name, op, "Beatty")
(n2 / name, op, "Lee")
(n2 / name, op, "Randall")
(p / person, name, n2 / name)

Decoded in 372,334 microseconds
Sentence: The International Science and Technology Center finances approximately half of General Nikolai N. Urakov's budget to support about 350 Russian biowarfare scientists and technicians.

Oracle Span 1:  350 => 350
Oracle Span 2:  about => about
Oracle Span 3:  and => and
Oracle Span 4:  approximately => approximately
Oracle Span 5:  biowarfare => biowarfare
Oracle Span 6:  budget => budget-01
Oracle Span 7:  finances => finance-01
Oracle Span 8:  General => (have-org-role-91 :ARG2 general)
Oracle Span 9:  International Science and Technology Center => (research-institute :name (name :op "Center" :op "Technology" :op "and" :op "Science" :op "International"))
Oracle Span 10:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 11:  of => include-91
Oracle Span 12:  Russian => (country :name (name :op "Russia"))
Oracle Span 13:  scientists => scientist
Oracle Span 14:  support => support-01
Oracle Span 15:  technicians => technician
NER Entity: (organization :name (name :op "International" :op "Science"))
NER Entity: (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
NER Entity: (thing :name (name :op "Russian"))
Spans:
Span 24-25:   => technician
Span 17-18:  about => support-01
Span 3-4:  and => (and :op (person :ARG0-of have-org-role-91))
Span 22-23:  and => scientist
Span 7-8:  approximately => approximately
Span 20-21:  biowarfare => (country :name (name :op "Russia"))
Span 5-6:  Center => center
Span 6-7:  finances => finance
Span 10-11:  General => (person :ARG0-of (have-org-role-91 :ARG2 general))
Span 1-2:  International => (event :name (name :op "International"))
Span 11-14:  Nikolai N. Urakov's => (person :name (name :op "Nikolai" :op "N." :op "Urakov"))
Span 2-3:  Science => r2
Span 23-24:  technicians. => and
Span 0-1:  The => 1
Span 15-16:  to => budget

Langrangian relaxation converged after 47 iterations. Delta = 0.0
Oracle Span 19-20:  350 => 350
Oracle Span 18-19:  about => about
Oracle Span 23-24:  and => and
Oracle Span 7-8:  approximately => approximately
Oracle Span 21-22:  biowarfare => biowarfare
Oracle Span 15-16:  budget => budget-01
Oracle Span 6-7:  finances => finance-01
Oracle Span 10-11:  General => (have-org-role-91 :ARG2 general)
Oracle Span 1-6:  International Science and Technology Center => (research-institute :name (name :op "Center" :op "Technology" :op "and" :op "Science" :op "International"))
Oracle Span 11-14:  Nikolai N. Urakov => (person :name (name :op "Urakov" :op "N." :op "Nikolai"))
Oracle Span 9-10:  of => include-91
Oracle Span 20-21:  Russian => (country :name (name :op "Russia"))
Oracle Span 22-23:  scientists => scientist
Oracle Span 17-18:  support => support-01
Oracle Span 24-25:  technicians => technician

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	International	_	NNP	NNP	_	3	nn	_	_
3	Science	_	NNP	NNP	_	7	nsubj	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	Technology	_	NNP	NNP	_	6	nn	_	_
6	Center	_	NNP	NNP	_	3	conj	_	_
7	finances	_	VBZ	VBZ	_	0	root	_	_
8	approximately	_	RB	RB	_	9	quantmod	_	_
9	half	_	PDT	PDT	_	7	dobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	General	_	NNP	NNP	_	14	nn	_	_
12	Nikolai	_	NNP	NNP	_	14	nn	_	_
13	N.	_	NNP	NNP	_	14	nn	_	_
14	Urakov	_	NNP	NNP	_	16	poss	_	_
15	's	_	POS	POS	_	14	possessive	_	_
16	budget	_	NN	NN	_	10	pobj	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	support	_	VB	VB	_	16	vmod	_	_
19	about	_	RB	RB	_	20	quantmod	_	_
20	350	_	CD	CD	_	23	num	_	_
21	Russian	_	JJ	JJ	_	23	amod	_	_
22	biowarfare	_	NN	NN	_	23	nn	_	_
23	scientists	_	NNS	NNS	_	18	dobj	_	_
24	and	_	CC	CC	_	23	cc	_	_
25	technicians	_	NNS	NNS	_	23	conj	_	_
26	.	_	.	.	_	7	punct	_	_

Oracle:
(a2 / about, op, a3 / and)
(a3 / and, mod, b2 / biowarfare)
(a3 / and, mod, c / country)
(a3 / and, op, s2 / scientist)
(a3 / and, op, t / technician)
(a3 / and, quant, 3 / 350)
(b / budget-01, ARG2, s / support-01)
(c / country, name, n3 / name)
(f / finance-01, ARG0, r / research-institute)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG2, g / general)
(i2 / include-91, ARG3, a / approximately)
(n / name, op, "Center")
(n / name, op, "International")
(n / name, op, "Science")
(n / name, op, "Technology")
(n / name, op, "and")
(n2 / name, op, "N.")
(n2 / name, op, "Nikolai")
(n2 / name, op, "Urakov")
(n3 / name, op, "Russia")
(p / person, name, n2 / name)
(r / research-institute, name, n / name)
(s / support-01, ARG0, r / research-institute)
(s / support-01, ARG1, a2 / about)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(2, 1, 0),and,(and :op (person :ARG0-of have-org-role-91)),false), Span(6,7,List(3),finances,finance,false), Span(7,8,List(4),approximately,approximately,false), Span(5,6,List(5),Center,center,false), Span(20,21,List(8, 7, 6),biowarfare,(country :name (name :op "Russia")),false), Span(10,11,List(11, 10, 9),General,(person :ARG0-of (have-org-role-91 :ARG2 general)),false), Span(11,14,List(16, 15, 14, 13, 12),Nikolai N. Urakov's,(person :name (name :op "Nikolai" :op "N." :op "Urakov")),false), Span(17,18,List(17),about,support-01,false), Span(15,16,List(18),to,budget,false), Span(2,3,List(19),Science,r2,false), Span(24,25,List(20),,technician,false), Span(0,1,List(21),The,1,false), Span(22,23,List(22),and,scientist,false), Span(1,2,List(25, 24, 23),International,(event :name (name :op "International")),false), Span(23,24,List(26),technicians.,and,false)),Map(2 -> have-org-role-91, 5 -> center, 12 -> person, 8 -> "Russia", 15 -> "N.", 21 -> 1, 18 -> budget, 24 -> name, 7 -> name, 1 -> person, 17 -> support-01, 23 -> event, 26 -> and, 4 -> approximately, 11 -> general, 14 -> "Nikolai", 20 -> technician, 6 -> country, 9 -> person, 0 -> and, 22 -> scientist, 16 -> "Urakov", 19 -> r2, 10 -> have-org-role-91, 3 -> finance, 25 -> "International", 13 -> name),Map(e -> event, n -> name, h -> have-org-role-91, s2 -> scientist, h2 -> have-org-role-91, t -> technician, b -> budget, p2 -> person, a3 -> and, s -> support-01, 1 -> 1, p -> person, g -> general, n3 -> name, a -> and, r -> r2, a2 -> approximately, c -> center, f -> finance, p3 -> person, c2 -> country, n2 -> name))),[Ljava.lang.String;@53e55ea5,Annotation([Ljava.lang.String;@2f37da79,[Ljava.lang.String;@f3a64f2,[Ljava.lang.String;@6696b445),Annotation([Ljava.lang.String;@1f7fde44,[Ljava.lang.String;@e8a3bc0,[Ledu.cmu.lti.nlp.amr.Dependency;@524bc317),Annotation([Ljava.lang.String;@1ac6187,[Ljava.lang.String;@60400208,[Ljava.lang.String;@3fcb71fb),Annotation([Ljava.lang.String;@33945e6e,[Ljava.lang.String;@51d6a1c2,[Ledu.cmu.lti.nlp.amr.Entity;@3166a9b2))
AMR:
(a / and, op, c / center)
(a / and, op, f / finance)
(a / and, op, p / person)
(a / and, op, r / r2)
(a3 / and, op, s2 / scientist)
(a3 / and, op, t / technician)
(b / budget, poss, p3 / person)
(c2 / country, name, n / name)
(e / event, name, n3 / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c2 / country)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG1, a2 / approximately)
(h2 / have-org-role-91, ARG2, g / general)
(n / name, op, "Russia")
(n2 / name, op, "N.")
(n2 / name, op, "Nikolai")
(n2 / name, op, "Urakov")
(n3 / name, op, "International")
(p3 / person, name, n2 / name)
(r / r2, mod, 1 / 1)
(r / r2, mod, e / event)
(s / support-01, ARG0, p2 / person)
(s / support-01, ARG1, b / budget)
(s / support-01, ARG6, t / technician)
(s2 / scientist, mod, c2 / country)

Decoded in 2,574,998 microseconds
Sentence: Randall Lee Beatty stated that it is known that the State Scientific Center of applied microbiology has not paid its electricity bill for 14 months.

Oracle Span 1:  14 => 14
Oracle Span 2:  bill => bill
Oracle Span 3:  electricity => electricity
Oracle Span 4:  known => know-01
Oracle Span 5:  months => (temporal-quantity :unit month)
Oracle Span 6:  paid => pay-01
Oracle Span 7:  Randall Lee Beatty => (person :name (name :op "Beatty" :op "Lee" :op "Randall"))
Oracle Span 8:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 9:  stated => state-01
NER Entity: (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 23-24:  14 => 14
Span 14-15:  applied => apply-01
Span 21-22:  bill => bill
Span 12-13:  Center => center
Span 20-21:  electricity => electricity
Span 7-8:  known => know-01
Span 24-25:  months. => month
Span 18-19:  paid => pay-01
Span 0-3:  Randall Lee Beatty => (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
Span 11-12:  Scientific => science
Span 10-11:  State => (thing :ARG1-of state-01)
Span 3-4:  stated => state-01

Langrangian relaxation converged after 19 iterations. Delta = 0.0
Oracle Span 23-24:  14 => 14
Oracle Span 21-22:  bill => bill
Oracle Span 20-21:  electricity => electricity
Oracle Span 7-8:  known => know-01
Oracle Span 24-25:  months => (temporal-quantity :unit month)
Oracle Span 18-19:  paid => pay-01
Oracle Span 0-3:  Randall Lee Beatty => (person :name (name :op "Beatty" :op "Lee" :op "Randall"))
Oracle Span 10-16:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 3-4:  stated => state-01

Dependencies:
1	Randall	_	NNP	NNP	_	3	nn	_	_
2	Lee	_	NNP	NNP	_	3	nn	_	_
3	Beatty	_	NNP	NNP	_	4	nsubj	_	_
4	stated	_	VBD	VBD	_	0	root	_	_
5	that	_	IN	IN	_	8	mark	_	_
6	it	_	PRP	PRP	_	8	nsubjpass	_	_
7	is	_	VBZ	VBZ	_	8	auxpass	_	_
8	known	_	VBN	VBN	_	4	ccomp	_	_
9	that	_	IN	IN	_	19	mark	_	_
10	the	_	DT	DT	_	13	det	_	_
11	State	_	NNP	NNP	_	13	nn	_	_
12	Scientific	_	NNP	NNP	_	13	nn	_	_
13	Center	_	NNP	NNP	_	19	nsubj	_	_
14	of	_	IN	IN	_	13	prep	_	_
15	applied	_	JJ	JJ	_	16	amod	_	_
16	microbiology	_	NN	NN	_	14	pobj	_	_
17	has	_	VBZ	VBZ	_	19	aux	_	_
18	not	_	RB	RB	_	19	neg	_	_
19	paid	_	VBN	VBN	_	8	ccomp	_	_
20	its	_	PRP$	PRP$	_	22	poss	_	_
21	electricity	_	NN	NN	_	22	nn	_	_
22	bill	_	NN	NN	_	19	dobj	_	_
23	for	_	IN	IN	_	19	prep	_	_
24	14	_	CD	CD	_	25	num	_	_
25	months	_	NNS	NNS	_	23	pobj	_	_
26	.	_	.	.	_	4	punct	_	_

Oracle:
(b / bill, mod, e / electricity)
(b / bill, poss, r / research-institute)
(k / know-01, ARG1, p2 / pay-01)
(n / name, op, "Beatty")
(n / name, op, "Lee")
(n / name, op, "Randall")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(p / person, name, n / name)
(p2 / pay-01, ARG0, r / research-institute)
(p2 / pay-01, ARG1, b / bill)
(p2 / pay-01, duration, t / temporal-quantity)
(r / research-institute, name, n2 / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, k / know-01)
(t / temporal-quantity, quant, 1 / 14)
(t / temporal-quantity, unit, m / month)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),bill,bill,false), Span(10,11,List(2, 1),State,(thing :ARG1-of state-01),false), Span(3,4,List(3),stated,state-01,false), Span(18,19,List(4),paid,pay-01,false), Span(14,15,List(5),applied,apply-01,false), Span(23,24,List(6),14,14,false), Span(11,12,List(7),Scientific,science,false), Span(12,13,List(8),Center,center,false), Span(20,21,List(9),electricity,electricity,false), Span(24,25,List(10),months.,month,false), Span(0,3,List(15, 14, 13, 12, 11),Randall Lee Beatty,(person :name (name :op "Randall" :op "Lee" :op "Beatty")),false), Span(7,8,List(16),known,know-01,false)),Map(2 -> state-01, 5 -> apply-01, 12 -> name, 15 -> "Beatty", 8 -> center, 7 -> science, 1 -> thing, 4 -> pay-01, 11 -> person, 14 -> "Lee", 6 -> 14, 0 -> bill, 9 -> electricity, 16 -> know-01, 3 -> state-01, 10 -> month, 13 -> "Randall"),Map(e -> electricity, n -> name, s2 -> state-01, k -> know-01, b -> bill, t -> thing, p2 -> person, s -> state-01, m -> month, 1 -> 14, p -> pay-01, a -> apply-01, s3 -> science, c -> center))),[Ljava.lang.String;@406a9c5b,Annotation([Ljava.lang.String;@501bd846,[Ljava.lang.String;@760537d,[Ljava.lang.String;@21878c45),Annotation([Ljava.lang.String;@351b446a,[Ljava.lang.String;@3b4c7367,[Ledu.cmu.lti.nlp.amr.Dependency;@3eb224c8),Annotation([Ljava.lang.String;@234a72ff,[Ljava.lang.String;@4c9d4ae8,[Ljava.lang.String;@1492df57),Annotation([Ljava.lang.String;@3b293d69,[Ljava.lang.String;@4b047d79,[Ledu.cmu.lti.nlp.amr.Entity;@6d68b4fb))
AMR:
(a / apply-01, ARG1, p / pay-01)
(b / bill, mod, e / electricity)
(c / center, mod, s3 / science)
(k / know-01, ARG1, p / pay-01)
(m / month, quant, 1 / 14)
(n / name, op, "Beatty")
(n / name, op, "Lee")
(n / name, op, "Randall")
(p / pay-01, ARG0, c / center)
(p / pay-01, ARG1, b / bill)
(p / pay-01, duration, m / month)
(p2 / person, name, n / name)
(s / state-01, ARG0, s3 / science)
(s / state-01, ARG1, t / thing)
(s2 / state-01, ARG0, p2 / person)
(s2 / state-01, ARG1, k / know-01)

Decoded in 693,230 microseconds
Sentence: Randall Lee Beatty stated that the State Scientific Center of applied microbiology is one of the important archives for dangerous pathogens in the world and it would be a shame if those archives were destroyed for not paying the electricity utility.

Oracle Span 1:  and => and
Oracle Span 2:  archives => archive-01
Oracle Span 3:  dangerous => danger
Oracle Span 4:  destroyed => destroy-01
Oracle Span 5:  electricity => electricity
Oracle Span 6:  if => cause-01
Oracle Span 7:  important => importance
Oracle Span 8:  of => include-91
Oracle Span 9:  pathogens => pathogen
Oracle Span 10:  paying => pay-01
Oracle Span 11:  Randall Lee Beatty => (person :name (name :op "Beatty" :op "Lee" :op "Randall"))
Oracle Span 12:  shame => shame-01
Oracle Span 13:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 14:  stated => state-01
Oracle Span 15:  utility => utility
Oracle Span 16:  world => world
NER Entity: (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 10-11:  applied => apply-01
Span 8-9:  Center => center
Span 19-20:  dangerous => dangerous
Span 34-35:  destroyed => destroy-01
Span 39-40:  electricity => electricity
Span 16-17:  important => important
Span 25-26:  it => country
Span 20-21:  pathogens => pathogen
Span 37-38:  paying => pay-01
Span 0-1:  Randall => 1
Span 0-3:  Randall Lee Beatty => (person :name (name :op "Randall" :op "Lee" :op "Beatty"))
Span 7-8:  Scientific => science
Span 29-30:  shame => shame-01
Span 6-7:  State => (thing :ARG1-of state-01)
Span 3-4:  stated => state-01
Span 40-41:  utility. => utility
Span 23-24:  world => world

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 24-25:  and => and
Oracle Span 17-18:  archives => archive-01
Oracle Span 19-20:  dangerous => danger
Oracle Span 34-35:  destroyed => destroy-01
Oracle Span 39-40:  electricity => electricity
Oracle Span 30-31:  if => cause-01
Oracle Span 16-17:  important => importance
Oracle Span 14-15:  of => include-91
Oracle Span 20-21:  pathogens => pathogen
Oracle Span 37-38:  paying => pay-01
Oracle Span 0-3:  Randall Lee Beatty => (person :name (name :op "Beatty" :op "Lee" :op "Randall"))
Oracle Span 29-30:  shame => shame-01
Oracle Span 6-12:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 3-4:  stated => state-01
Oracle Span 40-41:  utility => utility
Oracle Span 23-24:  world => world

Dependencies:
1	Randall	_	NNP	NNP	_	3	nn	_	_
2	Lee	_	NNP	NNP	_	3	nn	_	_
3	Beatty	_	NNP	NNP	_	4	nsubj	_	_
4	stated	_	VBD	VBD	_	0	root	_	_
5	that	_	IN	IN	_	14	mark	_	_
6	the	_	DT	DT	_	9	det	_	_
7	State	_	NNP	NNP	_	9	nn	_	_
8	Scientific	_	NNP	NNP	_	9	nn	_	_
9	Center	_	NNP	NNP	_	14	nsubj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	applied	_	JJ	JJ	_	12	amod	_	_
12	microbiology	_	NN	NN	_	10	pobj	_	_
13	is	_	VBZ	VBZ	_	14	cop	_	_
14	one	_	CD	CD	_	4	ccomp	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	the	_	DT	DT	_	18	det	_	_
17	important	_	JJ	JJ	_	18	amod	_	_
18	archives	_	NNS	NNS	_	15	pobj	_	_
19	for	_	IN	IN	_	18	prep	_	_
20	dangerous	_	JJ	JJ	_	21	amod	_	_
21	pathogens	_	NNS	NNS	_	19	pobj	_	_
22	in	_	IN	IN	_	21	prep	_	_
23	the	_	DT	DT	_	24	det	_	_
24	world	_	NN	NN	_	22	pobj	_	_
25	and	_	CC	CC	_	14	cc	_	_
26	it	_	PRP	PRP	_	30	nsubj	_	_
27	would	_	MD	MD	_	30	aux	_	_
28	be	_	VB	VB	_	30	cop	_	_
29	a	_	DT	DT	_	30	det	_	_
30	shame	_	NN	NN	_	14	conj	_	_
31	if	_	IN	IN	_	35	mark	_	_
32	those	_	DT	DT	_	33	det	_	_
33	archives	_	NNS	NNS	_	35	nsubjpass	_	_
34	were	_	VBD	VBD	_	35	auxpass	_	_
35	destroyed	_	VBN	VBN	_	30	advcl	_	_
36	for	_	IN	IN	_	35	prep	_	_
37	not	_	RB	RB	_	38	neg	_	_
38	paying	_	VBG	VBG	_	36	pcomp	_	_
39	the	_	DT	DT	_	41	det	_	_
40	electricity	_	NN	NN	_	41	nn	_	_
41	utility	_	NN	NN	_	38	dobj	_	_
42	.	_	.	.	_	4	punct	_	_

Oracle:
(a / archive-01, ARG1, p2 / pathogen)
(a / archive-01, location, w / world)
(a / archive-01, mod, i2 / importance)
(a2 / and, op, i / include-91)
(a2 / and, op, s2 / shame-01)
(c / cause-01, ARG0, p3 / pay-01)
(c / cause-01, ARG1, d2 / destroy-01)
(i / include-91, ARG1, r / research-institute)
(n / name, op, "Beatty")
(n / name, op, "Lee")
(n / name, op, "Randall")
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(p / person, name, n / name)
(p2 / pathogen, mod, d / danger)
(p3 / pay-01, ARG3, u / utility)
(r / research-institute, name, n2 / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a2 / and)
(s2 / shame-01, ARG0, d2 / destroy-01)
(u / utility, mod, e / electricity)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),it,country,false), Span(3,4,List(1),stated,state-01,false), Span(20,21,List(2),pathogens,pathogen,false), Span(40,41,List(3),utility.,utility,false), Span(37,38,List(4),paying,pay-01,false), Span(0,3,List(9, 8, 7, 6, 5),Randall Lee Beatty,(person :name (name :op "Randall" :op "Lee" :op "Beatty")),false), Span(6,7,List(11, 10),State,(thing :ARG1-of state-01),false), Span(34,35,List(12),destroyed,destroy-01,false), Span(23,24,List(13),world,world,false), Span(10,11,List(14),applied,apply-01,false), Span(16,17,List(15),important,important,false), Span(0,1,List(16),Randall,1,false), Span(7,8,List(17),Scientific,science,false), Span(8,9,List(18),Center,center,false), Span(19,20,List(19),dangerous,dangerous,false), Span(39,40,List(20),electricity,electricity,false), Span(29,30,List(21),shame,shame-01,false)),Map(2 -> pathogen, 5 -> person, 12 -> destroy-01, 15 -> important, 8 -> "Lee", 21 -> shame-01, 18 -> center, 7 -> "Randall", 17 -> science, 1 -> state-01, 4 -> pay-01, 11 -> state-01, 14 -> apply-01, 20 -> electricity, 6 -> name, 0 -> country, 9 -> "Beatty", 16 -> 1, 19 -> dangerous, 3 -> utility, 10 -> thing, 13 -> world),Map(e -> electricity, n -> name, w -> world, s2 -> state-01, t -> thing, p2 -> pay-01, s -> state-01, s4 -> shame-01, d -> destroy-01, 1 -> 1, p -> pathogen, a -> apply-01, d2 -> dangerous, i -> important, s3 -> science, c -> country, u -> utility, p3 -> person, c2 -> center))),[Ljava.lang.String;@4ba853e2,Annotation([Ljava.lang.String;@2c3dfd97,[Ljava.lang.String;@177414f5,[Ljava.lang.String;@647b41d2),Annotation([Ljava.lang.String;@6d4539fc,[Ljava.lang.String;@2e57a086,[Ledu.cmu.lti.nlp.amr.Dependency;@1933da05),Annotation([Ljava.lang.String;@27f87d20,[Ljava.lang.String;@63363afa,[Ljava.lang.String;@7076e58a),Annotation([Ljava.lang.String;@7712ea73,[Ljava.lang.String;@136788cc,[Ledu.cmu.lti.nlp.amr.Entity;@41d481b0))
AMR:
(a / apply-01, ARG1, s3 / science)
(c2 / center, mod, s3 / science)
(c2 / center, mod, t / thing)
(d / destroy-01, ARG1, p2 / pay-01)
(d / destroy-01, ARG6, c / country)
(n / name, op, "Beatty")
(n / name, op, "Lee")
(n / name, op, "Randall")
(p / pathogen, mod, d2 / dangerous)
(p2 / pay-01, ARG0, p / pathogen)
(p2 / pay-01, ARG1, w / world)
(p2 / pay-01, ARG3, u / utility)
(p3 / person, name, n / name)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, i / important)
(s / state-01, ARG6, 1 / 1)
(s2 / state-01, ARG0, p3 / person)
(s2 / state-01, ARG1, t / thing)
(s4 / shame-01, ARG0, d / destroy-01)
(s4 / shame-01, ARG1, s3 / science)
(u / utility, mod, e / electricity)

Decoded in 1,940,962 microseconds
Sentence: Approximately 3000 strains of bacteria are stored at the State Scientific Center of applied microbiology and many of the bacteria are stored in cryogenic casks cooled with liquid nitrogen and isolated from the environment by layered enclosures and oversize air-handling systems that all depend on electricity to function.

Oracle Span 1:  3000 => 3000
Oracle Span 2:  air => air
Oracle Span 3:  all => all
Oracle Span 4:  and => and
Oracle Span 5:  and => and
Oracle Span 6:  Approximately => approximately
Oracle Span 7:  bacteria => bacterium
Oracle Span 8:  bacteria => bacterium
Oracle Span 9:  casks => cask
Oracle Span 10:  cooled => cool-01
Oracle Span 11:  cryogenic => cryogen
Oracle Span 12:  depend => depend-01
Oracle Span 13:  electricity => electricity
Oracle Span 14:  enclosures => enclosure
Oracle Span 15:  environment => environment
Oracle Span 16:  function => function-01
Oracle Span 17:  handling => handle-01
Oracle Span 18:  isolated => isolate-01
Oracle Span 19:  layered => layer-00
Oracle Span 20:  liquid => liquid
Oracle Span 21:  many => many
Oracle Span 22:  nitrogen => nitrogen
Oracle Span 23:  of => include-91
Oracle Span 24:  oversize => oversize
Oracle Span 25:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 26:  stored => store-01
Oracle Span 27:  stored => store-01
Oracle Span 28:  strains => strain
Oracle Span 29:  systems => system
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 39-40:  air-handling => air-handling
Span 42-43:  all => all
Span 37-38:  and => and
Span 15-16:  and => and
Span 29-30:  and => and
Span 13-14:  applied => apply-01
Span 0-1:  Approximately => approximately
Span 0-1:  Approximately => 1
Span 19-20:  bacteria => bacterium
Span 4-5:  bacteria => bacterium
Span 24-25:  casks => cask
Span 11-12:  Center => center
Span 25-26:  cooled => cool-01
Span 43-44:  depend => depend-01
Span 45-46:  electricity => electricity
Span 33-34:  environment => environment
Span 47-48:  function. => function-01
Span 30-31:  isolated => isolate-01
Span 27-28:  liquid => liquid
Span 16-17:  many => many
Span 10-11:  Scientific => science
Span 9-10:  State => (thing :ARG1-of state-01)
Span 6-7:  stored => store-01
Span 21-22:  stored => store-01
Span 2-3:  strains => strain
Span 40-41:  systems => system

Langrangian relaxation converged after 48 iterations. Delta = 0.0
Oracle Span 1-2:  3000 => 3000
Oracle Span 39-40:  air => air
Oracle Span 44-45:  all => all
Oracle Span 15-16:  and => and
Oracle Span 29-30:  and => and
Oracle Span 0-1:  Approximately => approximately
Oracle Span 4-5:  bacteria => bacterium
Oracle Span 19-20:  bacteria => bacterium
Oracle Span 24-25:  casks => cask
Oracle Span 25-26:  cooled => cool-01
Oracle Span 23-24:  cryogenic => cryogen
Oracle Span 45-46:  depend => depend-01
Oracle Span 47-48:  electricity => electricity
Oracle Span 36-37:  enclosures => enclosure
Oracle Span 33-34:  environment => environment
Oracle Span 49-50:  function => function-01
Oracle Span 41-42:  handling => handle-01
Oracle Span 30-31:  isolated => isolate-01
Oracle Span 35-36:  layered => layer-00
Oracle Span 27-28:  liquid => liquid
Oracle Span 16-17:  many => many
Oracle Span 28-29:  nitrogen => nitrogen
Oracle Span 3-4:  of => include-91
Oracle Span 38-39:  oversize => oversize
Oracle Span 9-15:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 6-7:  stored => store-01
Oracle Span 21-22:  stored => store-01
Oracle Span 2-3:  strains => strain
Oracle Span 42-43:  systems => system

Dependencies:
1	Approximately	_	RB	RB	_	2	quantmod	_	_
2	3000	_	CD	CD	_	3	num	_	_
3	strains	_	NNS	NNS	_	7	nsubjpass	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	bacteria	_	NNS	NNS	_	4	pobj	_	_
6	are	_	VBP	VBP	_	7	auxpass	_	_
7	stored	_	VBN	VBN	_	0	root	_	_
8	at	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	12	det	_	_
10	State	_	NNP	NNP	_	12	nn	_	_
11	Scientific	_	NNP	NNP	_	12	nn	_	_
12	Center	_	NNP	NNP	_	8	pobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	applied	_	JJ	JJ	_	15	amod	_	_
15	microbiology	_	NN	NN	_	13	pobj	_	_
16	and	_	CC	CC	_	7	cc	_	_
17	many	_	JJ	JJ	_	22	nsubjpass	_	_
18	of	_	IN	IN	_	17	prep	_	_
19	the	_	DT	DT	_	20	det	_	_
20	bacteria	_	NNS	NNS	_	18	pobj	_	_
21	are	_	VBP	VBP	_	22	auxpass	_	_
22	stored	_	VBN	VBN	_	7	conj	_	_
23	in	_	IN	IN	_	22	prep	_	_
24	cryogenic	_	JJ	JJ	_	25	amod	_	_
25	casks	_	NNS	NNS	_	23	pobj	_	_
26	cooled	_	VBN	VBN	_	25	dep	_	_
27	with	_	IN	IN	_	26	prep	_	_
28	liquid	_	JJ	JJ	_	29	amod	_	_
29	nitrogen	_	NN	NN	_	27	pobj	_	_
30	and	_	CC	CC	_	26	cc	_	_
31	isolated	_	VBN	VBN	_	26	conj	_	_
32	from	_	IN	IN	_	31	prep	_	_
33	the	_	DT	DT	_	34	det	_	_
34	environment	_	NN	NN	_	32	pobj	_	_
35	by	_	IN	IN	_	31	prep	_	_
36	layered	_	JJ	JJ	_	37	amod	_	_
37	enclosures	_	NNS	NNS	_	35	pobj	_	_
38	and	_	CC	CC	_	37	cc	_	_
39	oversize	_	JJ	JJ	_	41	amod	_	_
40	air-handling	_	JJ	JJ	_	41	amod	_	_
41	systems	_	NNS	NNS	_	37	conj	_	_
42	that	_	IN	IN	_	44	mark	_	_
43	all	_	DT	DT	_	44	nsubj	_	_
44	depend	_	VBP	VBP	_	31	ccomp	_	_
45	on	_	IN	IN	_	44	prep	_	_
46	electricity	_	NN	NN	_	45	pobj	_	_
47	to	_	TO	TO	_	44	prep	_	_
48	function	_	NN	NN	_	47	pobj	_	_
49	.	_	.	.	_	7	punct	_	_

Oracle:
(a / approximately, op, 3 / 3000)
(a2 / and, op, s / store-01)
(a2 / and, op, s3 / store-01)
(a3 / and, op, e4 / enclosure)
(a3 / and, op, s4 / system)
(a3 / and, quant, a5 / all)
(b2 / bacterium, quant, m / many)
(b3 / bacterium, mod, s2 / strain)
(c / cask, mod, c2 / cryogen)
(c3 / cool-01, ARG1, c / cask)
(c3 / cool-01, instrument, n2 / nitrogen)
(d / depend-01, ARG0, a3 / and)
(d / depend-01, ARG1, e3 / electricity)
(d / depend-01, purpose, f / function-01)
(h / handle-01, ARG0, s4 / system)
(h / handle-01, ARG1, a4 / air)
(i / isolate-01, ARG1, c / cask)
(i / isolate-01, ARG2, e / environment)
(i / isolate-01, instrument, a3 / and)
(i2 / include-91, ARG1, b2 / bacterium)
(i2 / include-91, ARG2, b3 / bacterium)
(l2 / layer-00, ARG1, e4 / enclosure)
(n / name, op, "Applied")
(n / name, op, "Center")
(n / name, op, "Microbiology")
(n / name, op, "Scientific")
(n / name, op, "State")
(n / name, op, "of")
(n2 / nitrogen, mod, l / liquid)
(r / research-institute, name, n / name)
(s / store-01, ARG1, b3 / bacterium)
(s / store-01, location, r / research-institute)
(s2 / strain, quant, a / approximately)
(s3 / store-01, ARG1, b2 / bacterium)
(s3 / store-01, location, c / cask)
(s4 / system, mod, o2 / oversize)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),Scientific,science,false), Span(30,31,List(1),isolated,isolate-01,false), Span(47,48,List(2),function.,function-01,false), Span(40,41,List(3),systems,system,false), Span(33,34,List(4),environment,environment,false), Span(6,7,List(5),stored,store-01,false), Span(42,43,List(6),all,all,false), Span(45,46,List(7),electricity,electricity,false), Span(13,14,List(8),applied,apply-01,false), Span(21,22,List(9),stored,store-01,false), Span(9,10,List(11, 10),State,(thing :ARG1-of state-01),false), Span(19,20,List(12),bacteria,bacterium,false), Span(37,38,List(13),and,and,false), Span(0,1,List(14),Approximately,approximately,false), Span(43,44,List(15),depend,depend-01,false), Span(15,16,List(16),and,and,false), Span(16,17,List(17),many,many,false), Span(39,40,List(18),air-handling,air-handling,false), Span(2,3,List(19),strains,strain,false), Span(0,1,List(20),Approximately,1,false), Span(25,26,List(21),cooled,cool-01,false), Span(29,30,List(22),and,and,false), Span(24,25,List(23),casks,cask,false), Span(4,5,List(24),bacteria,bacterium,false), Span(27,28,List(25),liquid,liquid,false), Span(11,12,List(26),Center,center,false)),Map(2 -> function-01, 5 -> store-01, 12 -> bacterium, 8 -> apply-01, 15 -> depend-01, 21 -> cool-01, 18 -> air-handling, 24 -> bacterium, 7 -> electricity, 1 -> isolate-01, 17 -> many, 23 -> cask, 26 -> center, 4 -> environment, 11 -> state-01, 14 -> approximately, 20 -> 1, 6 -> all, 9 -> store-01, 0 -> science, 22 -> and, 16 -> and, 19 -> strain, 10 -> thing, 3 -> system, 25 -> liquid, 13 -> and),Map(s5 -> state-01, e -> environment, a7 -> and, s2 -> system, t -> thing, b -> bacterium, b2 -> bacterium, e2 -> electricity, a3 -> and, s -> science, s4 -> store-01, a6 -> air-handling, d -> depend-01, m -> many, 1 -> 1, c3 -> center, a -> all, a5 -> and, a2 -> apply-01, i -> isolate-01, c -> cool-01, s3 -> store-01, l -> liquid, f -> function-01, s6 -> strain, c2 -> cask, a4 -> approximately))),[Ljava.lang.String;@2dd00938,Annotation([Ljava.lang.String;@10d0e37e,[Ljava.lang.String;@5624edda,[Ljava.lang.String;@76405359),Annotation([Ljava.lang.String;@5b740d60,[Ljava.lang.String;@4ca8ce63,[Ledu.cmu.lti.nlp.amr.Dependency;@3d93a011),Annotation([Ljava.lang.String;@493df661,[Ljava.lang.String;@3259fd2b,[Ljava.lang.String;@3808e6d5),Annotation([Ljava.lang.String;@18bb5aed,[Ljava.lang.String;@3e132965,[Ledu.cmu.lti.nlp.amr.Entity;@43de3b29))
AMR:
(a / all, mod, s2 / system)
(a2 / apply-01, ARG1, a5 / and)
(a5 / and, op, s3 / store-01)
(a5 / and, op, s4 / store-01)
(a7 / and, op, a / all)
(b / bacterium, mod, s6 / strain)
(b2 / bacterium, quant, m / many)
(c / cool-01, ARG1, c2 / cask)
(c3 / center, mod, s / science)
(d / depend-01, ARG1, e2 / electricity)
(e2 / electricity, op, a7 / and)
(e2 / electricity, purpose, f / function-01)
(f / function-01, ARG1, l / liquid)
(i / isolate-01, ARG0, a3 / and)
(i / isolate-01, ARG1, c2 / cask)
(i / isolate-01, ARG2, e / environment)
(i / isolate-01, instrument, a7 / and)
(s2 / system, mod, a6 / air-handling)
(s3 / store-01, ARG1, b2 / bacterium)
(s3 / store-01, location, c2 / cask)
(s4 / store-01, ARG0, c3 / center)
(s4 / store-01, ARG1, b / bacterium)
(s5 / state-01, ARG0, s / science)
(s5 / state-01, ARG1, t / thing)
(s6 / strain, quant, 1 / 1)
(s6 / strain, quant, a4 / approximately)

Decoded in 5,042,771 microseconds
Sentence: The greatest danger from a shutdown of electric power at the State Scientific Center of applied microbiology would be the defrosting of live germs that are currently preserved in a frozen state.

Oracle Span 1:  currently => current
Oracle Span 2:  danger => danger
Oracle Span 3:  defrosting => defrost-01
Oracle Span 4:  electric => electric
Oracle Span 5:  frozen => freeze-01
Oracle Span 6:  germs => germ
Oracle Span 7:  greatest => (great :degree most)
Oracle Span 8:  live => live-01
Oracle Span 9:  power => power
Oracle Span 10:  preserved => preserve-01
Oracle Span 11:  shutdown => shut-05
Oracle Span 12:  state => state
Oracle Span 13:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 15-16:  applied => apply-01
Span 13-14:  Center => center
Span 2-3:  danger => danger
Span 20-21:  defrosting => defrost-01
Span 7-8:  electric => electric
Span 30-31:  frozen => frozen
Span 23-24:  germs => germ
Span 22-23:  live => live-01
Span 8-9:  power => power
Span 12-13:  Scientific => science
Span 5-6:  shutdown => shut-05
Span 11-12:  State => (thing :ARG1-of state-01)
Span 31-32:  state. => state
Span 0-1:  The => (publication :name (name :op "A2K"))
Span 0-27:  The greatest danger from a shutdown of electric power at the State Scientific Center of applied microbiology would be the defrosting of live germs that are currently => (date-entity :time currently)

Langrangian relaxation converged after 40 iterations. Delta = 0.0
Oracle Span 26-27:  currently => current
Oracle Span 2-3:  danger => danger
Oracle Span 20-21:  defrosting => defrost-01
Oracle Span 7-8:  electric => electric
Oracle Span 30-31:  frozen => freeze-01
Oracle Span 23-24:  germs => germ
Oracle Span 1-2:  greatest => (great :degree most)
Oracle Span 22-23:  live => live-01
Oracle Span 8-9:  power => power
Oracle Span 27-28:  preserved => preserve-01
Oracle Span 5-6:  shutdown => shut-05
Oracle Span 31-32:  state => state
Oracle Span 11-17:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	greatest	_	JJS	JJS	_	3	amod	_	_
3	danger	_	NN	NN	_	21	nsubj	_	_
4	from	_	IN	IN	_	3	prep	_	_
5	a	_	DT	DT	_	6	det	_	_
6	shutdown	_	NN	NN	_	4	pobj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	electric	_	JJ	JJ	_	9	amod	_	_
9	power	_	NN	NN	_	7	pobj	_	_
10	at	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	14	det	_	_
12	State	_	NNP	NNP	_	14	nn	_	_
13	Scientific	_	NNP	NNP	_	14	nn	_	_
14	Center	_	NNP	NNP	_	10	pobj	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	applied	_	JJ	JJ	_	17	amod	_	_
17	microbiology	_	NN	NN	_	15	pobj	_	_
18	would	_	MD	MD	_	21	aux	_	_
19	be	_	VB	VB	_	21	cop	_	_
20	the	_	DT	DT	_	21	det	_	_
21	defrosting	_	NN	NN	_	0	root	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	live	_	JJ	JJ	_	24	amod	_	_
24	germs	_	NNS	NNS	_	22	pobj	_	_
25	that	_	WDT	WDT	_	28	nsubjpass	_	_
26	are	_	VBP	VBP	_	28	auxpass	_	_
27	currently	_	RB	RB	_	28	advmod	_	_
28	preserved	_	VBN	VBN	_	21	rcmod	_	_
29	in	_	IN	IN	_	28	prep	_	_
30	a	_	DT	DT	_	32	det	_	_
31	frozen	_	JJ	JJ	_	32	amod	_	_
32	state	_	NN	NN	_	29	pobj	_	_
33	.	_	.	.	_	21	punct	_	_

Oracle:
(d / danger, domain, d2 / defrost-01)
(d / danger, mod, g / great)
(d / danger, source, s / shut-05)
(d2 / defrost-01, ARG1, g2 / germ)
(g / great, degree, m / most)
(l / live-01, ARG0, g2 / germ)
(n / name, op, "Applied")
(n / name, op, "Center")
(n / name, op, "Microbiology")
(n / name, op, "Scientific")
(n / name, op, "State")
(n / name, op, "of")
(p / power, mod, e / electric)
(p2 / preserve-01, ARG1, g2 / germ)
(p2 / preserve-01, mod, s2 / state)
(p2 / preserve-01, time, c / current)
(r / research-institute, name, n / name)
(s / shut-05, ARG1, p / power)
(s / shut-05, location, r / research-institute)
(s2 / state, mod, f / freeze-01)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),live,live-01,false), Span(8,9,List(1),power,power,false), Span(0,1,List(4, 3, 2),The,(publication :name (name :op "A2K")),false), Span(15,16,List(5),applied,apply-01,false), Span(23,24,List(6),germs,germ,false), Span(31,32,List(7),state.,state,false), Span(11,12,List(9, 8),State,(thing :ARG1-of state-01),false), Span(13,14,List(10),Center,center,false), Span(2,3,List(11),danger,danger,false), Span(30,31,List(12),frozen,frozen,false), Span(12,13,List(13),Scientific,science,false), Span(7,8,List(14),electric,electric,false), Span(0,27,List(16, 15),The greatest danger from a shutdown of electric power at the State Scientific Center of applied microbiology would be the defrosting of live germs that are currently,(date-entity :time currently),false), Span(5,6,List(17),shutdown,shut-05,false), Span(20,21,List(18),defrosting,defrost-01,false)),Map(2 -> publication, 5 -> apply-01, 12 -> frozen, 15 -> date-entity, 8 -> thing, 18 -> defrost-01, 7 -> state, 17 -> shut-05, 1 -> power, 4 -> "A2K", 11 -> danger, 14 -> electric, 6 -> germ, 0 -> live-01, 9 -> state-01, 16 -> currently, 3 -> name, 10 -> center, 13 -> science),Map(e -> electric, n -> name, s2 -> state-01, t -> thing, d3 -> defrost-01, p2 -> publication, s -> state, s4 -> shut-05, d -> danger, p -> power, g -> germ, a -> apply-01, d2 -> date-entity, c -> center, s3 -> science, l -> live-01, f -> frozen, c2 -> currently))),[Ljava.lang.String;@5e6709fa,Annotation([Ljava.lang.String;@5fa15942,[Ljava.lang.String;@71406307,[Ljava.lang.String;@63996e4f),Annotation([Ljava.lang.String;@5d7831f,[Ljava.lang.String;@5069b1ae,[Ledu.cmu.lti.nlp.amr.Dependency;@22c3b8ff),Annotation([Ljava.lang.String;@a0051fe,[Ljava.lang.String;@33f6f4da,[Ljava.lang.String;@2e0fc7cb),Annotation([Ljava.lang.String;@11b496b5,[Ljava.lang.String;@19b3badc,[Ledu.cmu.lti.nlp.amr.Entity;@1de7dd14))
AMR:
(a / apply-01, ARG1, s3 / science)
(c / center, mod, s3 / science)
(d / danger, mod, d3 / defrost-01)
(d / danger, mod, p2 / publication)
(d / danger, prep-from, s4 / shut-05)
(d2 / date-entity, time, c2 / currently)
(d3 / defrost-01, ARG0, s / state)
(d3 / defrost-01, ARG1, g / germ)
(l / live-01, ARG0, g / germ)
(l / live-01, ARG1, d2 / date-entity)
(n / name, op, "A2K")
(p / power, mod, e / electric)
(p2 / publication, name, n / name)
(s / state, mod, f / frozen)
(s2 / state-01, ARG0, s3 / science)
(s2 / state-01, ARG1, t / thing)
(s4 / shut-05, ARG1, p / power)
(s4 / shut-05, location, c / center)

Decoded in 2,354,198 microseconds
Sentence: A biological warfare expert at the Monterey Institute of International Studies named Raymond zilinskas stated that the main threat from cutting power to the State Scientific Center of applied microbiology would be to the organisms themselves rather than that they might escape.

Oracle Span 1:  biological => biology
Oracle Span 2:  cutting => cut-02
Oracle Span 3:  escape => escape-01
Oracle Span 4:  expert => expert-41
Oracle Span 5:  main => main
Oracle Span 6:  Monterey Institute of International Studies => (have-org-role-91 :ARG1 (research-institute :name (name :op "Studies" :op "International" :op "of" :op "Institute" :op "Monterey")))
Oracle Span 7:  organisms => organism
Oracle Span 8:  power => power
Oracle Span 9:  Raymond zilinskas => (person :name (name :op "Zilinskas" :op "Raymond"))
Oracle Span 10:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 11:  stated => state-01
Oracle Span 12:  threat => threaten-01
Oracle Span 13:  warfare => warfare
NER Entity: (person :name (name :op "Raymond" :op "zilinskas"))
NER Entity: (organization :name (name :op "Monterey" :op "Institute" :op "of" :op "International" :op "Studies"))
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of"))
Spans:
Span 28-29:  applied => apply-01
Span 1-2:  biological => biology
Span 26-27:  Center => center
Span 20-21:  cutting => cut-01
Span 41-42:  escape. => escape-01
Span 7-8:  Institute => institute
Span 9-10:  International => (event :name (name :op "International"))
Span 17-18:  main => main
Span 11-12:  named => name-01
Span 8-9:  of => of-course
Span 21-22:  power => power
Span 12-14:  Raymond zilinskas => (person :name (name :op "Raymond" :op "zilinskas"))
Span 25-26:  Scientific => science
Span 24-25:  State => (thing :ARG1-of state-01)
Span 14-15:  stated => state-01
Span 10-11:  Studies => "Studies"
Span 18-19:  threat => treat-01
Span 2-3:  warfare => warfare

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 1-2:  biological => biology
Oracle Span 20-21:  cutting => cut-02
Oracle Span 41-42:  escape => escape-01
Oracle Span 3-4:  expert => expert-41
Oracle Span 17-18:  main => main
Oracle Span 6-11:  Monterey Institute of International Studies => (have-org-role-91 :ARG1 (research-institute :name (name :op "Studies" :op "International" :op "of" :op "Institute" :op "Monterey")))
Oracle Span 34-35:  organisms => organism
Oracle Span 21-22:  power => power
Oracle Span 12-14:  Raymond zilinskas => (person :name (name :op "Zilinskas" :op "Raymond"))
Oracle Span 24-30:  State Scientific Center of applied microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 14-15:  stated => state-01
Oracle Span 18-19:  threat => threaten-01
Oracle Span 2-3:  warfare => warfare

Dependencies:
1	A	_	DT	DT	_	4	det	_	_
2	biological	_	JJ	JJ	_	4	amod	_	_
3	warfare	_	NN	NN	_	4	nn	_	_
4	expert	_	NN	NN	_	12	nsubj	_	_
5	at	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	8	det	_	_
7	Monterey	_	NNP	NNP	_	8	nn	_	_
8	Institute	_	NNP	NNP	_	5	pobj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	International	_	NNP	NNP	_	11	nn	_	_
11	Studies	_	NNPS	NNPS	_	9	pobj	_	_
12	named	_	VBD	VBD	_	0	root	_	_
13	Raymond	_	NNP	NNP	_	14	nn	_	_
14	zilinskas	_	NNS	NNS	_	15	nsubj	_	_
15	stated	_	VBD	VBD	_	12	ccomp	_	_
16	that	_	IN	IN	_	32	mark	_	_
17	the	_	DT	DT	_	19	det	_	_
18	main	_	JJ	JJ	_	19	amod	_	_
19	threat	_	NN	NN	_	32	nsubj	_	_
20	from	_	IN	IN	_	19	prep	_	_
21	cutting	_	VBG	VBG	_	20	pcomp	_	_
22	power	_	NN	NN	_	21	dobj	_	_
23	to	_	TO	TO	_	21	prep	_	_
24	the	_	DT	DT	_	27	det	_	_
25	State	_	NNP	NNP	_	27	nn	_	_
26	Scientific	_	NNP	NNP	_	27	nn	_	_
27	Center	_	NNP	NNP	_	23	pobj	_	_
28	of	_	IN	IN	_	27	prep	_	_
29	applied	_	JJ	JJ	_	30	amod	_	_
30	microbiology	_	NN	NN	_	28	pobj	_	_
31	would	_	MD	MD	_	32	aux	_	_
32	be	_	VB	VB	_	15	dobj	_	_
33	to	_	TO	TO	_	32	prep	_	_
34	the	_	DT	DT	_	35	det	_	_
35	organisms	_	NNS	NNS	_	33	pobj	_	_
36	themselves	_	PRP	PRP	_	35	advmod	_	_
37	rather	_	RB	RB	_	32	cc	_	_
38	than	_	IN	IN	_	37	mwe	_	_
39	that	_	IN	IN	_	42	mark	_	_
40	they	_	PRP	PRP	_	42	nsubj	_	_
41	might	_	MD	MD	_	42	aux	_	_
42	escape	_	VB	VB	_	32	conj	_	_
43	.	_	.	.	_	12	punct	_	_

Oracle:
(c / cut-02, ARG1, p2 / power)
(e / expert-41, ARG1, p4 / person)
(e / expert-41, ARG2, w / warfare)
(e2 / escape-01, ARG0, o2 / organism)
(h / have-org-role-91, ARG0, p4 / person)
(h / have-org-role-91, ARG1, r / research-institute)
(h / have-org-role-91, ARG3, e / expert-41)
(n / name, op, "Institute")
(n / name, op, "International")
(n / name, op, "Monterey")
(n / name, op, "Studies")
(n / name, op, "of")
(n3 / name, op, "Raymond")
(n3 / name, op, "Zilinskas")
(n4 / name, op, "Applied")
(n4 / name, op, "Center")
(n4 / name, op, "Microbiology")
(n4 / name, op, "Scientific")
(n4 / name, op, "State")
(n4 / name, op, "of")
(p2 / power, beneficiary, r2 / research-institute)
(p4 / person, name, n3 / name)
(r / research-institute, name, n / name)
(r2 / research-institute, name, n4 / name)
(s / state-01, ARG0, p4 / person)
(t / threaten-01, ARG2, o2 / organism)
(t / threaten-01, mod, m / main)
(w / warfare, mod, b / biology)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),cutting,cut-01,false), Span(1,2,List(1),biological,biology,false), Span(12,14,List(5, 4, 3, 2),Raymond zilinskas,(person :name (name :op "Raymond" :op "zilinskas")),false), Span(8,9,List(6),of,of-course,false), Span(11,12,List(7),named,name-01,false), Span(26,27,List(8),Center,center,false), Span(14,15,List(9),stated,state-01,false), Span(25,26,List(10),Scientific,science,false), Span(2,3,List(11),warfare,warfare,false), Span(9,10,List(14, 13, 12),International,(event :name (name :op "International")),false), Span(41,42,List(15),escape.,escape-01,false), Span(7,8,List(16),Institute,institute,false), Span(21,22,List(17),power,power,false), Span(24,25,List(19, 18),State,(thing :ARG1-of state-01),false), Span(17,18,List(20),main,main,false), Span(28,29,List(21),applied,apply-01,false), Span(10,11,List(22),Studies,"Studies",false), Span(18,19,List(23),threat,treat-01,false)),Map(2 -> person, 5 -> "zilinskas", 12 -> event, 15 -> escape-01, 8 -> center, 21 -> apply-01, 18 -> thing, 7 -> name-01, 17 -> power, 1 -> biology, 23 -> treat-01, 4 -> "Raymond", 11 -> warfare, 14 -> "International", 20 -> main, 6 -> of-course, 22 -> "Studies", 0 -> cut-01, 9 -> state-01, 16 -> institute, 19 -> state-01, 3 -> name, 10 -> science, 13 -> name),Map(S -> "Studies", e -> event, n -> name, w -> warfare, s2 -> science, t -> thing, b -> biology, p2 -> power, e2 -> escape-01, s -> state-01, m -> main, p -> person, a -> apply-01, n3 -> name, t2 -> treat-01, i -> institute, s3 -> state-01, c -> cut-01, o -> of-course, n2 -> name-01, c2 -> center))),[Ljava.lang.String;@5e663231,Annotation([Ljava.lang.String;@3413cc10,[Ljava.lang.String;@2a03fbf4,[Ljava.lang.String;@277eb80d),Annotation([Ljava.lang.String;@4866e169,[Ljava.lang.String;@623fd739,[Ledu.cmu.lti.nlp.amr.Dependency;@57565cd1),Annotation([Ljava.lang.String;@5ba28e6,[Ljava.lang.String;@7aa8fc91,[Ljava.lang.String;@66b27ae2),Annotation([Ljava.lang.String;@3671231,[Ljava.lang.String;@57cef7a3,[Ledu.cmu.lti.nlp.amr.Entity;@6a3fc5bf))
AMR:
(S / "Studies", mod, e / event)
(a / apply-01, ARG1, i / institute)
(c / cut-01, ARG0, b / biology)
(c / cut-01, ARG1, p2 / power)
(c / cut-01, ARG6, c2 / center)
(c2 / center, mod, s2 / science)
(c2 / center, mod, t / thing)
(e / event, name, n3 / name)
(e2 / escape-01, ARG1, t2 / treat-01)
(n / name, op, "Raymond")
(n / name, op, "zilinskas")
(n2 / name-01, ARG0, S / "Studies")
(n2 / name-01, ARG1, s / state-01)
(n2 / name-01, ARG6, o / of-course)
(n3 / name, op, "International")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, i / institute)
(s3 / state-01, ARG0, p / person)
(s3 / state-01, ARG1, t / thing)
(t2 / treat-01, ARG2, c / cut-01)
(t2 / treat-01, mod, m / main)
(w / warfare, mod, b / biology)

Decoded in 2,650,544 microseconds
Sentence: Raymond zilinskas stated that in the worst case the bacteria would be defrosted from minus 70 degrees and it would be a real mess to clean up afterward because it would not be known for certain whether all the bacteria was dead.

Oracle Span 1:  afterward => afterward
Oracle Span 2:  all => all
Oracle Span 3:  and => and
Oracle Span 4:  bacteria => bacterium
Oracle Span 5:  bacteria => bacterium
Oracle Span 6:  because => cause-01
Oracle Span 7:  case => case
Oracle Span 8:  certain => certain
Oracle Span 9:  clean => clean-02
Oracle Span 10:  defrosted => defrost-01
Oracle Span 11:  known => know-01
Oracle Span 12:  mess => mess
Oracle Span 13:  Raymond zilinskas => (person :name (name :op "Zilinskas" :op "Raymond"))
Oracle Span 14:  real => real
Oracle Span 15:  stated => state-01
Oracle Span 16:  worst => bad
NER Entity: (person :name (name :op "Raymond" :op "zilinskas"))
Spans:
Span 37-38:  all => all
Span 39-40:  bacteria => bacterium
Span 9-10:  bacteria => bacterium
Span 7-8:  case => case
Span 35-36:  certain => certain
Span 25-26:  clean => clean-02
Span 12-13:  defrosted => defrost-01
Span 16-17:  degrees => degree
Span 18-19:  it => country
Span 33-34:  known => know-01
Span 23-24:  mess => mess
Span 0-1:  Raymond => 1
Span 0-2:  Raymond zilinskas => (person :name (name :op "Raymond" :op "zilinskas"))
Span 22-23:  real => real
Span 2-3:  stated => state-01
Span 5-6:  the => (country :name (name :op "North"))
Span 6-7:  worst => (bad :degree most)

Langrangian relaxation converged after 81 iterations. Delta = 0.0
Oracle Span 27-28:  afterward => afterward
Oracle Span 37-38:  all => all
Oracle Span 17-18:  and => and
Oracle Span 9-10:  bacteria => bacterium
Oracle Span 39-40:  bacteria => bacterium
Oracle Span 28-29:  because => cause-01
Oracle Span 7-8:  case => case
Oracle Span 35-36:  certain => certain
Oracle Span 25-26:  clean => clean-02
Oracle Span 12-13:  defrosted => defrost-01
Oracle Span 33-34:  known => know-01
Oracle Span 23-24:  mess => mess
Oracle Span 0-2:  Raymond zilinskas => (person :name (name :op "Zilinskas" :op "Raymond"))
Oracle Span 22-23:  real => real
Oracle Span 2-3:  stated => state-01
Oracle Span 6-7:  worst => bad

Dependencies:
1	Raymond	_	NNP	NNP	_	2	nn	_	_
2	zilinskas	_	NNS	NNS	_	3	nsubj	_	_
3	stated	_	VBD	VBD	_	0	root	_	_
4	that	_	IN	IN	_	13	mark	_	_
5	in	_	IN	IN	_	13	prep	_	_
6	the	_	DT	DT	_	8	det	_	_
7	worst	_	JJS	JJS	_	8	amod	_	_
8	case	_	NN	NN	_	5	pobj	_	_
9	the	_	DT	DT	_	10	det	_	_
10	bacteria	_	NNS	NNS	_	13	nsubjpass	_	_
11	would	_	MD	MD	_	13	aux	_	_
12	be	_	VB	VB	_	13	auxpass	_	_
13	defrosted	_	VBN	VBN	_	3	ccomp	_	_
14	from	_	IN	IN	_	13	prep	_	_
15	minus	_	CC	CC	_	16	cc	_	_
16	70	_	CD	CD	_	17	num	_	_
17	degrees	_	NNS	NNS	_	14	pobj	_	_
18	and	_	CC	CC	_	13	cc	_	_
19	it	_	PRP	PRP	_	24	nsubj	_	_
20	would	_	MD	MD	_	24	aux	_	_
21	be	_	VB	VB	_	24	cop	_	_
22	a	_	DT	DT	_	24	det	_	_
23	real	_	JJ	JJ	_	24	amod	_	_
24	mess	_	NN	NN	_	13	conj	_	_
25	to	_	TO	TO	_	26	aux	_	_
26	clean	_	VB	VB	_	24	vmod	_	_
27	up	_	RB	RB	_	28	advmod	_	_
28	afterward	_	RB	RB	_	26	advmod	_	_
29	because	_	IN	IN	_	34	mark	_	_
30	it	_	PRP	PRP	_	34	nsubjpass	_	_
31	would	_	MD	MD	_	34	aux	_	_
32	not	_	RB	RB	_	34	neg	_	_
33	be	_	VB	VB	_	34	auxpass	_	_
34	known	_	VBN	VBN	_	28	advcl	_	_
35	for	_	IN	IN	_	34	prep	_	_
36	certain	_	JJ	JJ	_	35	pobj	_	_
37	whether	_	IN	IN	_	42	mark	_	_
38	all	_	PDT	PDT	_	40	predet	_	_
39	the	_	DT	DT	_	40	det	_	_
40	bacteria	_	NNS	NNS	_	42	nsubj	_	_
41	was	_	VBD	VBD	_	42	cop	_	_
42	dead	_	JJ	JJ	_	24	ccomp	_	_
43	.	_	.	.	_	3	punct	_	_

Oracle:
(a / and, op, d4 / defrost-01)
(a / and, op, m2 / mess)
(b3 / bacterium, mod, a3 / all)
(c / case, mod, b / bad)
(c2 / clean-02, time, a2 / afterward)
(c3 / cause-01, ARG0, k / know-01)
(c3 / cause-01, ARG1, m2 / mess)
(d4 / defrost-01, ARG1, b2 / bacterium)
(d4 / defrost-01, condition, c / case)
(k / know-01, mod, c4 / certain)
(m2 / mess, domain, c2 / clean-02)
(m2 / mess, mod, r / real)
(n / name, op, "Raymond")
(n / name, op, "Zilinskas")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / and)

Input(Some(Graph(null,ArrayBuffer(Span(35,36,List(0),certain,certain,false), Span(25,26,List(1),clean,clean-02,false), Span(22,23,List(2),real,real,false), Span(6,7,List(4, 3),worst,(bad :degree most),false), Span(18,19,List(5),it,country,false), Span(33,34,List(6),known,know-01,false), Span(0,2,List(10, 9, 8, 7),Raymond zilinskas,(person :name (name :op "Raymond" :op "zilinskas")),false), Span(16,17,List(11),degrees,degree,false), Span(2,3,List(12),stated,state-01,false), Span(39,40,List(13),bacteria,bacterium,false), Span(12,13,List(14),defrosted,defrost-01,false), Span(0,1,List(15),Raymond,1,false), Span(37,38,List(16),all,all,false), Span(7,8,List(17),case,case,false), Span(9,10,List(18),bacteria,bacterium,false), Span(23,24,List(19),mess,mess,false), Span(5,6,List(22, 21, 20),the,(country :name (name :op "North")),false)),Map(2 -> real, 5 -> country, 12 -> state-01, 15 -> 1, 8 -> name, 21 -> name, 18 -> bacterium, 7 -> person, 17 -> case, 1 -> clean-02, 4 -> most, 11 -> degree, 14 -> defrost-01, 20 -> country, 6 -> know-01, 22 -> "North", 0 -> certain, 9 -> "Raymond", 16 -> all, 19 -> mess, 3 -> bad, 10 -> "zilinskas", 13 -> bacterium),Map(b3 -> bacterium, n -> name, b -> bad, k -> know-01, m2 -> mess, b2 -> bacterium, c4 -> case, s -> state-01, m -> most, d -> degree, 1 -> 1, p -> person, a -> all, c3 -> country, d2 -> defrost-01, r -> real, c -> certain, n2 -> name, c2 -> clean-02, c5 -> country))),[Ljava.lang.String;@67f9abeb,Annotation([Ljava.lang.String;@4545b660,[Ljava.lang.String;@232753da,[Ljava.lang.String;@7acadb8c),Annotation([Ljava.lang.String;@50c691cd,[Ljava.lang.String;@3858db03,[Ledu.cmu.lti.nlp.amr.Dependency;@21f8e651),Annotation([Ljava.lang.String;@d424f59,[Ljava.lang.String;@696eefc5,[Ljava.lang.String;@1710b128),Annotation([Ljava.lang.String;@713c17f5,[Ljava.lang.String;@6e9bb60c,[Ledu.cmu.lti.nlp.amr.Entity;@70156cdd))
AMR:
(1 / 1, mod, p / person)
(b / bad, degree, m / most)
(b3 / bacterium, mod, a / all)
(c2 / clean-02, ARG1, m2 / mess)
(c2 / clean-02, ARG6, c3 / country)
(c4 / case, mod, b / bad)
(c4 / case, mod, c5 / country)
(c5 / country, name, n2 / name)
(d2 / defrost-01, ARG0, m2 / mess)
(d2 / defrost-01, ARG1, b2 / bacterium)
(d2 / defrost-01, ARG2, d / degree)
(d2 / defrost-01, ARG6, b3 / bacterium)
(d2 / defrost-01, condition, c4 / case)
(k / know-01, ARG1, c2 / clean-02)
(k / know-01, mod, c / certain)
(m2 / mess, mod, r / real)
(n / name, op, "Raymond")
(n / name, op, "zilinskas")
(n2 / name, op, "North")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, d2 / defrost-01)

Decoded in 5,279,360 microseconds
Sentence: The confrontation between the mosenergo electric utility and the State Scientific Center of applied Microbiology in obolensk is another example of how the basic capitalist imperative for enterprises to be self-sustaining can clash in a dangerous way with the old remnants of Soviet weapons science.

Oracle Span 1:  another => another
Oracle Span 2:  basic => basic
Oracle Span 3:  can => possible
Oracle Span 4:  capitalist => capitalism
Oracle Span 5:  clash => clash-01
Oracle Span 6:  confrontation => confront-01
Oracle Span 7:  dangerous => dangerous
Oracle Span 8:  electric => electricity
Oracle Span 9:  enterprises => enterprise
Oracle Span 10:  imperative => imperative
Oracle Span 11:  mosenergo => (name :op "Mosenergo")
Oracle Span 12:  obolensk => (city :name (name :op "Obolensk"))
Oracle Span 13:  old => old
Oracle Span 14:  science => science
Oracle Span 15:  Soviet => "Soviet"
Oracle Span 16:  State Scientific Center of applied Microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 17:  sustaining => sustain-01
Oracle Span 18:  utility => utility
Oracle Span 19:  weapons => weapon
NER Entity: (organization :name (name :op "State" :op "Scientific" :op "Center" :op "of" :op "applied" :op "Microbiology"))
Spans:
Span 7-8:  and => and
Span 18-19:  another => another
Span 13-14:  applied => apply-01
Span 23-24:  basic => basic
Span 31-32:  can => possible
Span 11-12:  Center => center
Span 32-33:  clash => clash-01
Span 1-2:  confrontation => confront-01
Span 35-36:  dangerous => dangerous
Span 5-6:  electric => electric
Span 27-28:  enterprises => enterprise
Span 19-20:  example => example
Span 25-26:  imperative => imperative
Span 39-40:  old => old
Span 40-41:  remnants => remnant
Span 44-45:  science. => science
Span 10-11:  Scientific => science
Span 9-10:  State => (thing :ARG1-of state-01)
Span 6-7:  utility => utility
Span 43-44:  weapons => weapon

Langrangian relaxation converged after 33 iterations. Delta = 0.0
Oracle Span 18-19:  another => another
Oracle Span 23-24:  basic => basic
Oracle Span 33-34:  can => possible
Oracle Span 24-25:  capitalist => capitalism
Oracle Span 34-35:  clash => clash-01
Oracle Span 1-2:  confrontation => confront-01
Oracle Span 37-38:  dangerous => dangerous
Oracle Span 5-6:  electric => electricity
Oracle Span 27-28:  enterprises => enterprise
Oracle Span 25-26:  imperative => imperative
Oracle Span 4-5:  mosenergo => (name :op "Mosenergo")
Oracle Span 16-17:  obolensk => (city :name (name :op "Obolensk"))
Oracle Span 41-42:  old => old
Oracle Span 46-47:  science => science
Oracle Span 44-45:  Soviet => "Soviet"
Oracle Span 9-15:  State Scientific Center of applied Microbiology => (research-institute :name (name :op "Microbiology" :op "Applied" :op "of" :op "Center" :op "Scientific" :op "State"))
Oracle Span 32-33:  sustaining => sustain-01
Oracle Span 6-7:  utility => utility
Oracle Span 45-46:  weapons => weapon

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	confrontation	_	NN	NN	_	20	nsubj	_	_
3	between	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	7	det	_	_
5	mosenergo	_	JJ	JJ	_	7	amod	_	_
6	electric	_	JJ	JJ	_	7	amod	_	_
7	utility	_	NN	NN	_	3	pobj	_	_
8	and	_	CC	CC	_	7	cc	_	_
9	the	_	DT	DT	_	12	det	_	_
10	State	_	NNP	NNP	_	12	nn	_	_
11	Scientific	_	NNP	NNP	_	12	nn	_	_
12	Center	_	NNP	NNP	_	7	conj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	applied	_	NNP	NNP	_	15	nn	_	_
15	Microbiology	_	NNP	NNP	_	13	pobj	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	obolensk	_	NN	NN	_	16	pobj	_	_
18	is	_	VBZ	VBZ	_	20	cop	_	_
19	another	_	DT	DT	_	20	det	_	_
20	example	_	NN	NN	_	0	root	_	_
21	of	_	IN	IN	_	20	prep	_	_
22	how	_	WRB	WRB	_	33	advmod	_	_
23	the	_	DT	DT	_	26	det	_	_
24	basic	_	JJ	JJ	_	26	amod	_	_
25	capitalist	_	JJ	JJ	_	26	amod	_	_
26	imperative	_	NN	NN	_	33	nsubj	_	_
27	for	_	IN	IN	_	26	prep	_	_
28	enterprises	_	NNS	NNS	_	27	pobj	_	_
29	to	_	TO	TO	_	31	aux	_	_
30	be	_	VB	VB	_	31	cop	_	_
31	self-sustaining	_	JJ	JJ	_	28	vmod	_	_
32	can	_	MD	MD	_	33	aux	_	_
33	clash	_	VB	VB	_	21	pcomp	_	_
34	in	_	IN	IN	_	33	prep	_	_
35	a	_	DT	DT	_	37	det	_	_
36	dangerous	_	JJ	JJ	_	37	amod	_	_
37	way	_	NN	NN	_	34	pobj	_	_
38	with	_	IN	IN	_	33	prep	_	_
39	the	_	DT	DT	_	41	det	_	_
40	old	_	JJ	JJ	_	41	amod	_	_
41	remnants	_	NNS	NNS	_	38	pobj	_	_
42	of	_	IN	IN	_	41	prep	_	_
43	Soviet	_	JJ	JJ	_	45	amod	_	_
44	weapons	_	NNS	NNS	_	45	nn	_	_
45	science	_	NN	NN	_	42	pobj	_	_
46	.	_	.	.	_	20	punct	_	_

Oracle:
(c / confront-01, ARG0, u2 / utility)
(c / confront-01, ARG1, r2 / research-institute)
(c3 / city, name, n3 / name)
(c4 / clash-01, ARG0, i / imperative)
(c4 / clash-01, manner, d / dangerous)
(i / imperative, mod, b / basic)
(i / imperative, mod, c2 / capitalism)
(i / imperative, topic, s3 / sustain-01)
(n2 / name, op, "Applied")
(n2 / name, op, "Center")
(n2 / name, op, "Microbiology")
(n2 / name, op, "Scientific")
(n2 / name, op, "State")
(n2 / name, op, "of")
(n3 / name, op, "Obolensk")
(n5 / name, op, "Mosenergo")
(p / possible, domain, c4 / clash-01)
(r2 / research-institute, location, c3 / city)
(r2 / research-institute, name, n2 / name)
(s2 / science, mod, w2 / weapon)
(s3 / sustain-01, ARG0, e3 / enterprise)
(s3 / sustain-01, ARG1, e3 / enterprise)
(u2 / utility, mod, e2 / electricity)
(u2 / utility, name, n5 / name)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),Scientific,science,false), Span(27,28,List(1),enterprises,enterprise,false), Span(40,41,List(2),remnants,remnant,false), Span(9,10,List(4, 3),State,(thing :ARG1-of state-01),false), Span(5,6,List(5),electric,electric,false), Span(25,26,List(6),imperative,imperative,false), Span(32,33,List(7),clash,clash-01,false), Span(31,32,List(8),can,possible,false), Span(19,20,List(9),example,example,false), Span(43,44,List(10),weapons,weapon,false), Span(18,19,List(11),another,another,false), Span(39,40,List(12),old,old,false), Span(1,2,List(13),confrontation,confront-01,false), Span(23,24,List(14),basic,basic,false), Span(6,7,List(15),utility,utility,false), Span(35,36,List(16),dangerous,dangerous,false), Span(44,45,List(17),science.,science,false), Span(7,8,List(18),and,and,false), Span(11,12,List(19),Center,center,false), Span(13,14,List(20),applied,apply-01,false)),Map(2 -> remnant, 5 -> electric, 12 -> old, 15 -> utility, 8 -> possible, 18 -> and, 7 -> clash-01, 17 -> science, 1 -> enterprise, 4 -> state-01, 11 -> another, 14 -> basic, 20 -> apply-01, 6 -> imperative, 0 -> science, 9 -> example, 16 -> dangerous, 19 -> center, 3 -> thing, 10 -> weapon, 13 -> confront-01),Map(e -> enterprise, w -> weapon, s2 -> state-01, b -> basic, t -> thing, e2 -> electric, a3 -> apply-01, s -> science, d -> dangerous, p -> possible, c3 -> center, a -> another, a2 -> and, r -> remnant, i -> imperative, s3 -> science, c -> clash-01, u -> utility, o -> old, e3 -> example, c2 -> confront-01))),[Ljava.lang.String;@b0f3035,Annotation([Ljava.lang.String;@1fee10a1,[Ljava.lang.String;@785882bc,[Ljava.lang.String;@5e3dd302),Annotation([Ljava.lang.String;@2cc1de68,[Ljava.lang.String;@4345b849,[Ledu.cmu.lti.nlp.amr.Dependency;@7fb49fff),Annotation([Ljava.lang.String;@4f21e6c8,[Ljava.lang.String;@6db153da,[Ljava.lang.String;@35829d5),Annotation([Ljava.lang.String;@58480526,[Ljava.lang.String;@189fbf41,[Ledu.cmu.lti.nlp.amr.Entity;@7f57000b))
AMR:
(a2 / and, op, c3 / center)
(a2 / and, op, p / possible)
(a3 / apply-01, ARG1, d / dangerous)
(c / clash-01, ARG0, o / old)
(c / clash-01, ARG1, e / enterprise)
(c2 / confront-01, ARG1, c3 / center)
(c2 / confront-01, location, u / utility)
(c2 / confront-01, time, a3 / apply-01)
(c3 / center, mod, s / science)
(e3 / example, domain, c2 / confront-01)
(e3 / example, mod, a / another)
(i / imperative, mod, b / basic)
(i / imperative, topic, c / clash-01)
(o / old, calendar, r / remnant)
(p / possible, ARG0, e / enterprise)
(r / remnant, calendar, w / weapon)
(s2 / state-01, ARG0, s / science)
(s2 / state-01, ARG1, t / thing)
(s3 / science, mod, b / basic)
(u / utility, mod, e2 / electric)

Decoded in 3,278,733 microseconds
Sentence: Due to an overdue power bill in 000000 the Russian National Power Company cut off electricity to a strategic base where nuclear missiles stood on high alert.

Oracle Span 1:  000000 => (date-entity :year 2000)
Oracle Span 2:  alert => alert-01
Oracle Span 3:  base => base
Oracle Span 4:  bill => bill
Oracle Span 5:  cut => cut-04
Oracle Span 6:  electricity => electricity
Oracle Span 7:  high => high
Oracle Span 8:  missiles => missile
Oracle Span 9:  National Power Company => (company :name (name :op "Company" :op "Power" :op "National"))
Oracle Span 10:  nuclear => nucleus
Oracle Span 11:  overdue => overdue
Oracle Span 12:  power => power
Oracle Span 13:  Russian => (country :name (name :op "Russia"))
Oracle Span 14:  stood => stand-02
Oracle Span 15:  strategic => strategy
NER Entity: (organization :name (name :op "National"))
NER Entity: (thing :name (name :op "Russian"))
mkDayMonthYear(000000,00,00,00)
Spans:
Span 26-27:  alert. => alert-01
Span 19-20:  base => base
Span 5-6:  bill => bill
Span 12-13:  Company => c
Span 13-14:  cut => cut-04
Span 0-1:  Due => duel-01
Span 0-1:  Due => 1
Span 15-16:  electricity => electricity
Span 25-26:  high => high
Span 22-23:  missiles => missile
Span 10-11:  National => nation
Span 21-22:  nuclear => nucleus
Span 4-5:  power => power
Span 11-12:  Power => (person :ARG0-of have-org-role-91)
Span 9-10:  Russian => (country :name (name :op "Russia"))
Span 23-24:  stood => stand-01
Span 18-19:  strategic => strategic

Langrangian relaxation converged after 40 iterations. Delta = 0.0
Oracle Span 7-8:  000000 => (date-entity :year 2000)
Oracle Span 26-27:  alert => alert-01
Oracle Span 19-20:  base => base
Oracle Span 5-6:  bill => bill
Oracle Span 13-14:  cut => cut-04
Oracle Span 15-16:  electricity => electricity
Oracle Span 25-26:  high => high
Oracle Span 22-23:  missiles => missile
Oracle Span 10-13:  National Power Company => (company :name (name :op "Company" :op "Power" :op "National"))
Oracle Span 21-22:  nuclear => nucleus
Oracle Span 3-4:  overdue => overdue
Oracle Span 4-5:  power => power
Oracle Span 9-10:  Russian => (country :name (name :op "Russia"))
Oracle Span 23-24:  stood => stand-02
Oracle Span 18-19:  strategic => strategy

Dependencies:
1	Due	_	JJ	JJ	_	2	mwe	_	_
2	to	_	TO	TO	_	14	prep	_	_
3	an	_	DT	DT	_	6	det	_	_
4	overdue	_	JJ	JJ	_	6	amod	_	_
5	power	_	NN	NN	_	6	nn	_	_
6	bill	_	NN	NN	_	2	pobj	_	_
7	in	_	IN	IN	_	6	prep	_	_
8	000000	_	CD	CD	_	7	pobj	_	_
9	the	_	DT	DT	_	13	det	_	_
10	Russian	_	NNP	NNP	_	13	nn	_	_
11	National	_	NNP	NNP	_	13	nn	_	_
12	Power	_	NNP	NNP	_	13	nn	_	_
13	Company	_	NNP	NNP	_	14	nsubj	_	_
14	cut	_	VBD	VBD	_	0	root	_	_
15	off	_	RP	RP	_	14	prt	_	_
16	electricity	_	NN	NN	_	14	dobj	_	_
17	to	_	TO	TO	_	14	prep	_	_
18	a	_	DT	DT	_	20	det	_	_
19	strategic	_	JJ	JJ	_	20	amod	_	_
20	base	_	NN	NN	_	17	pobj	_	_
21	where	_	WRB	WRB	_	24	advmod	_	_
22	nuclear	_	JJ	JJ	_	23	amod	_	_
23	missiles	_	NNS	NNS	_	24	nsubj	_	_
24	stood	_	VBD	VBD	_	20	rcmod	_	_
25	on	_	IN	IN	_	24	prep	_	_
26	high	_	JJ	JJ	_	27	amod	_	_
27	alert	_	NN	NN	_	25	pobj	_	_
28	.	_	.	.	_	14	punct	_	_

Oracle:
(a / alert-01, mod, h / high)
(b / base, mod, s / strategy)
(b2 / bill, mod, o / overdue)
(b2 / bill, mod, p / power)
(b2 / bill, time, d / date-entity)
(c / cut-04, ARG0, c2 / company)
(c / cut-04, ARG1, e / electricity)
(c / cut-04, location, b / base)
(c2 / company, mod, c3 / country)
(c2 / company, name, n / name)
(c3 / country, name, n2 / name)
(d / date-entity, year, 2000)
(m / missile, mod, n3 / nucleus)
(n / name, op, "Company")
(n / name, op, "National")
(n / name, op, "Power")
(n2 / name, op, "Russia")
(s2 / stand-02, ARG1, m / missile)
(s2 / stand-02, ARG2, a / alert-01)
(s2 / stand-02, location, b / base)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),National,nation,false), Span(5,6,List(1),bill,bill,false), Span(0,1,List(2),Due,duel-01,false), Span(23,24,List(3),stood,stand-01,false), Span(21,22,List(4),nuclear,nucleus,false), Span(18,19,List(5),strategic,strategic,false), Span(12,13,List(6),Company,c,false), Span(13,14,List(7),cut,cut-04,false), Span(0,1,List(8),Due,1,false), Span(26,27,List(9),alert.,alert-01,false), Span(19,20,List(10),base,base,false), Span(4,5,List(11),power,power,false), Span(15,16,List(12),electricity,electricity,false), Span(25,26,List(13),high,high,false), Span(9,10,List(16, 15, 14),Russian,(country :name (name :op "Russia")),false), Span(11,12,List(18, 17),Power,(person :ARG0-of have-org-role-91),false), Span(22,23,List(19),missiles,missile,false)),Map(2 -> duel-01, 5 -> strategic, 12 -> electricity, 15 -> name, 8 -> 1, 18 -> have-org-role-91, 7 -> cut-04, 17 -> person, 1 -> bill, 4 -> nucleus, 11 -> power, 14 -> country, 6 -> c, 0 -> nation, 9 -> alert-01, 16 -> "Russia", 19 -> missile, 3 -> stand-01, 10 -> base, 13 -> high),Map(e -> electricity, n -> nation, h -> high, h2 -> have-org-role-91, s2 -> strategic, b -> bill, b2 -> base, p2 -> person, s -> stand-01, m -> missile, d -> duel-01, 1 -> 1, p -> power, n3 -> name, c3 -> country, a -> alert-01, c -> c, n2 -> nucleus, c2 -> cut-04))),[Ljava.lang.String;@d38e189,Annotation([Ljava.lang.String;@78a77781,[Ljava.lang.String;@6e2dc8a5,[Ljava.lang.String;@3583373),Annotation([Ljava.lang.String;@4926be38,[Ljava.lang.String;@a7ec3e2,[Ledu.cmu.lti.nlp.amr.Dependency;@a965ae8),Annotation([Ljava.lang.String;@48173362,[Ljava.lang.String;@343c9326,[Ljava.lang.String;@48213790),Annotation([Ljava.lang.String;@70d87566,[Ljava.lang.String;@1a5d43c,[Ledu.cmu.lti.nlp.amr.Entity;@5150c28d))
AMR:
(a / alert-01, ARG1, d / duel-01)
(a / alert-01, mod, h / high)
(b / bill, mod, p / power)
(b2 / base, mod, s2 / strategic)
(c / c, mod, p2 / person)
(c2 / cut-04, ARG0, c / c)
(c2 / cut-04, ARG1, e / electricity)
(c2 / cut-04, location, b2 / base)
(c3 / country, name, n3 / name)
(d / duel-01, ARG1, 1 / 1)
(d / duel-01, ARG6, b / bill)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG1, n / nation)
(m / missile, mod, n2 / nucleus)
(n / nation, mod, c3 / country)
(n3 / name, op, "Russia")
(s / stand-01, ARG1, m / missile)
(s / stand-01, ARG2, a / alert-01)
(s / stand-01, location, b2 / base)

Decoded in 2,040,612 microseconds
Sentence: The nuclear missile silos themselves did not lose power.

Oracle Span 1:  lose => lose-02
Oracle Span 2:  missile => missile
Oracle Span 3:  nuclear => nucleus
Oracle Span 4:  power => power
Oracle Span 5:  silos => silo
Spans:
Span 7-8:  lose => lose-04
Span 2-3:  missile => missile
Span 1-2:  nuclear => nucleus
Span 8-9:  power. => power

Langrangian relaxation converged after 19 iterations. Delta = 0.0
Oracle Span 7-8:  lose => lose-02
Oracle Span 2-3:  missile => missile
Oracle Span 1-2:  nuclear => nucleus
Oracle Span 8-9:  power => power
Oracle Span 3-4:  silos => silo

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	nuclear	_	JJ	JJ	_	3	amod	_	_
3	missile	_	NN	NN	_	4	nsubj	_	_
4	silos	_	VBZ	VBZ	_	0	root	_	_
5	themselves	_	PRP	PRP	_	8	nsubj	_	_
6	did	_	VBD	VBD	_	8	aux	_	_
7	not	_	RB	RB	_	8	neg	_	_
8	lose	_	VB	VB	_	4	ccomp	_	_
9	power	_	NN	NN	_	8	dobj	_	_
10	.	_	.	.	_	4	punct	_	_

Oracle:
(l / lose-02, ARG0, s / silo)
(l / lose-02, ARG1, p / power)
(m / missile, mod, n / nucleus)
(s / silo, mod, m / missile)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),power.,power,false), Span(2,3,List(1),missile,missile,false), Span(7,8,List(2),lose,lose-04,false), Span(1,2,List(3),nuclear,nucleus,false)),Map(2 -> lose-04, 1 -> missile, 0 -> power, 3 -> nucleus),Map(n -> nucleus, m -> missile, p -> power, l -> lose-04))),[Ljava.lang.String;@6d9c28e8,Annotation([Ljava.lang.String;@9e74ab4,[Ljava.lang.String;@6dca5d2e,[Ljava.lang.String;@d289800),Annotation([Ljava.lang.String;@1ff2a25,[Ljava.lang.String;@327e7244,[Ledu.cmu.lti.nlp.amr.Dependency;@de27a08),Annotation([Ljava.lang.String;@44431b2c,[Ljava.lang.String;@3c15af83,[Ljava.lang.String;@7d381617),Annotation([Ljava.lang.String;@63940182,[Ljava.lang.String;@3fd2eca7,[Ledu.cmu.lti.nlp.amr.Entity;@2e2a2569))
AMR:
(l / lose-04, ARG1, p / power)
(m / missile, domain, l / lose-04)
(m / missile, mod, n / nucleus)

Decoded in 195,886 microseconds
Sentence: Armed troops marched to the substations and turned the power back on.

Oracle Span 1:  and => and
Oracle Span 2:  Armed => arm-01
Oracle Span 3:  back => back
Oracle Span 4:  marched => march-01
Oracle Span 5:  power => power
Oracle Span 6:  substations => substation
Oracle Span 7:  troops => troop
Oracle Span 8:  turned => turn-13
Spans:
Span 6-7:  and => and
Span 0-1:  Armed => arm-01
Span 10-11:  back => back
Span 2-3:  marched => march-01
Span 9-10:  power => power
Span 5-6:  substations => substation
Span 7-8:  turned => turn-01

Langrangian relaxation converged after 7 iterations. Delta = 0.0
Oracle Span 6-7:  and => and
Oracle Span 0-1:  Armed => arm-01
Oracle Span 10-11:  back => back
Oracle Span 2-3:  marched => march-01
Oracle Span 9-10:  power => power
Oracle Span 5-6:  substations => substation
Oracle Span 1-2:  troops => troop
Oracle Span 7-8:  turned => turn-13

Dependencies:
1	Armed	_	NNP	NNP	_	2	nn	_	_
2	troops	_	NNS	NNS	_	3	nsubj	_	_
3	marched	_	VBD	VBD	_	0	root	_	_
4	to	_	TO	TO	_	3	prep	_	_
5	the	_	DT	DT	_	6	det	_	_
6	substations	_	NNS	NNS	_	4	pobj	_	_
7	and	_	CC	CC	_	3	cc	_	_
8	turned	_	VBD	VBD	_	3	conj	_	_
9	the	_	DT	DT	_	10	det	_	_
10	power	_	NN	NN	_	8	dobj	_	_
11	back	_	RP	RP	_	8	prt	_	_
12	on	_	IN	IN	_	8	prep	_	_
13	.	_	.	.	_	3	punct	_	_

Oracle:
(a / arm-01, ARG1, t / troop)
(a2 / and, op, m / march-01)
(a2 / and, op, t2 / turn-13)
(m / march-01, ARG0, t / troop)
(m / march-01, destination, s / substation)
(t2 / turn-13, ARG0, t / troop)
(t2 / turn-13, ARG1, p / power)
(t2 / turn-13, mod, b / back)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),and,and,false), Span(7,8,List(1),turned,turn-01,false), Span(10,11,List(2),back,back,false), Span(2,3,List(3),marched,march-01,false), Span(5,6,List(4),substations,substation,false), Span(0,1,List(5),Armed,arm-01,false), Span(9,10,List(6),power,power,false)),Map(2 -> back, 5 -> arm-01, 1 -> turn-01, 4 -> substation, 6 -> power, 0 -> and, 3 -> march-01),Map(b -> back, t -> turn-01, s -> substation, m -> march-01, p -> power, a -> and, a2 -> arm-01))),[Ljava.lang.String;@25eb29ed,Annotation([Ljava.lang.String;@510958de,[Ljava.lang.String;@678b224f,[Ljava.lang.String;@692872a5),Annotation([Ljava.lang.String;@15f09a2c,[Ljava.lang.String;@ea4ffe4,[Ledu.cmu.lti.nlp.amr.Dependency;@30832d25),Annotation([Ljava.lang.String;@1a14ccca,[Ljava.lang.String;@ba4145e,[Ljava.lang.String;@22568111),Annotation([Ljava.lang.String;@b956a7b,[Ljava.lang.String;@375b855f,[Ledu.cmu.lti.nlp.amr.Entity;@1cf6710e))
AMR:
(a / and, op, m / march-01)
(a / and, op, t / turn-01)
(a2 / arm-01, ARG1, a / and)
(m / march-01, destination, s / substation)
(t / turn-01, ARG1, p / power)
(t / turn-01, mod, b / back)

Decoded in 250,018 microseconds
Sentence: In 010100 and 010200 the national utility, United energy systems cut power to a number of military installations around Russia.

Oracle Span 1:  010100 => (date-entity :month 1 :year 2001)
Oracle Span 2:  010200 => (date-entity :month 2 :year 2001)
Oracle Span 3:  around => around
Oracle Span 4:  cut => cut-02
Oracle Span 5:  installations => installation
Oracle Span 6:  military => military
Oracle Span 7:  national => nation
Oracle Span 8:  number => number
Oracle Span 9:  power => power
Oracle Span 10:  Russia => (country :name (name :op "Russia"))
Oracle Span 11:  United energy systems => (company :name (name :op "Systems" :op "Energy" :op "United"))
NER Entity: (thing :name (name :op "United"))
NER Entity: (country :name (name :op "Russia"))
mkDayMonthYear(010100,00,01,01)
mkDayMonthYear(010200,00,02,01)
Spans:
Span 20-21:   => (country :name (name :op "Russia"))
Span 2-3:  and => and
Span 18-19:  around => installation
Span 10-11:  cut => system
Span 8-9:  energy => (company :name (name :op "Services" :op "United" :op "Energy"))
Span 0-1:  In => 1
Span 17-18:  installations => military
Span 5-6:  national => nation
Span 15-16:  of => number
Span 11-12:  power => cut-02
Span 19-20:  Russia. => around
Span 9-10:  systems => energy
Span 12-13:  to => power
Span 6-7:  utility, => utility

Langrangian relaxation converged after 63 iterations. Delta = 0.0
Oracle Span 1-2:  010100 => (date-entity :month 1 :year 2001)
Oracle Span 3-4:  010200 => (date-entity :month 2 :year 2001)
Oracle Span 19-20:  around => around
Oracle Span 11-12:  cut => cut-02
Oracle Span 18-19:  installations => installation
Oracle Span 17-18:  military => military
Oracle Span 5-6:  national => nation
Oracle Span 15-16:  number => number
Oracle Span 12-13:  power => power
Oracle Span 20-21:  Russia => (country :name (name :op "Russia"))
Oracle Span 8-11:  United energy systems => (company :name (name :op "Systems" :op "Energy" :op "United"))

Dependencies:
1	In	_	IN	IN	_	12	prep	_	_
2	010100	_	CD	CD	_	1	pobj	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	010200	_	CD	CD	_	2	conj	_	_
5	the	_	DT	DT	_	7	det	_	_
6	national	_	JJ	JJ	_	7	amod	_	_
7	utility	_	NN	NN	_	2	dep	_	_
8	,	_	,	,	_	12	punct	_	_
9	United	_	NNP	NNP	_	11	nn	_	_
10	energy	_	NN	NN	_	11	nn	_	_
11	systems	_	NNS	NNS	_	12	nsubj	_	_
12	cut	_	VBD	VBD	_	0	root	_	_
13	power	_	NN	NN	_	12	dobj	_	_
14	to	_	TO	TO	_	12	prep	_	_
15	a	_	DT	DT	_	16	det	_	_
16	number	_	NN	NN	_	14	pobj	_	_
17	of	_	IN	IN	_	16	prep	_	_
18	military	_	JJ	JJ	_	19	amod	_	_
19	installations	_	NNS	NNS	_	17	pobj	_	_
20	around	_	IN	IN	_	12	prep	_	_
21	Russia	_	NNP	NNP	_	20	pobj	_	_
22	.	_	.	.	_	12	punct	_	_

Oracle:
(a2 / around, op, c2 / country)
(c / cut-02, ARG0, c3 / company)
(c / cut-02, ARG1, p / power)
(c / cut-02, location, i2 / installation)
(c2 / country, name, n4 / name)
(c3 / company, mod, n / nation)
(c3 / company, name, n2 / name)
(d / date-entity, month, 1)
(d / date-entity, year, 2001)
(d2 / date-entity, month, 2)
(d2 / date-entity, year, 2001)
(i2 / installation, location, a2 / around)
(i2 / installation, mod, m / military)
(i2 / installation, quant, n3 / number)
(n2 / name, op, "Energy")
(n2 / name, op, "Systems")
(n2 / name, op, "United")
(n4 / name, op, "Russia")
(p / power, time, d / date-entity)
(p / power, time, d2 / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(2, 1, 0),,(country :name (name :op "Russia")),false), Span(15,16,List(3),of,number,false), Span(10,11,List(4),cut,system,false), Span(5,6,List(5),national,nation,false), Span(12,13,List(6),to,power,false), Span(8,9,List(11, 10, 9, 8, 7),energy,(company :name (name :op "Services" :op "United" :op "Energy")),false), Span(9,10,List(12),systems,energy,false), Span(0,1,List(13),In,1,false), Span(6,7,List(14),utility,,utility,false), Span(19,20,List(15),Russia.,around,false), Span(11,12,List(16),power,cut-02,false), Span(17,18,List(17),installations,military,false), Span(18,19,List(18),around,installation,false), Span(2,3,List(19),and,and,false)),Map(2 -> "Russia", 5 -> nation, 12 -> energy, 15 -> around, 8 -> name, 18 -> installation, 7 -> company, 17 -> military, 1 -> name, 4 -> system, 11 -> "Energy", 14 -> utility, 6 -> power, 0 -> country, 9 -> "Services", 16 -> cut-02, 19 -> and, 3 -> number, 10 -> "United", 13 -> 1),Map(e -> energy, n -> name, n4 -> name, s -> system, m -> military, 1 -> 1, p -> power, n3 -> nation, a -> around, c3 -> cut-02, a2 -> and, i -> installation, c -> country, u -> utility, n2 -> number, c2 -> company))),[Ljava.lang.String;@dbd4b93,Annotation([Ljava.lang.String;@4f5b2d8,[Ljava.lang.String;@7104c86c,[Ljava.lang.String;@30816d9b),Annotation([Ljava.lang.String;@570759cb,[Ljava.lang.String;@7e4d4281,[Ledu.cmu.lti.nlp.amr.Dependency;@295da28c),Annotation([Ljava.lang.String;@128bff89,[Ljava.lang.String;@7f2f3512,[Ljava.lang.String;@6b62293c),Annotation([Ljava.lang.String;@2fefaf1e,[Ljava.lang.String;@62d57add,[Ledu.cmu.lti.nlp.amr.Entity;@64544430))
AMR:
(a / around, op, c / country)
(c / country, name, n / name)
(c2 / company, mod, e / energy)
(c2 / company, name, n4 / name)
(c3 / cut-02, ARG0, u / utility)
(c3 / cut-02, ARG1, p / power)
(c3 / cut-02, ARG6, s / system)
(c3 / cut-02, location, i / installation)
(c3 / cut-02, time, 1 / 1)
(c3 / cut-02, time, a2 / and)
(i / installation, location, a / around)
(i / installation, mod, m / military)
(i / installation, quant, n2 / number)
(n / name, op, "Russia")
(n4 / name, op, "Energy")
(n4 / name, op, "Services")
(n4 / name, op, "United")
(s / system, poss, c2 / company)
(u / utility, mod, n3 / nation)

Decoded in 2,191,240 microseconds
Sentence: The military installations that lost power included the Russian space forces monitoring center on the Kamchatka Peninsula.

Oracle Span 1:  center => center
Oracle Span 2:  included => include-01
Oracle Span 3:  installations => installation
Oracle Span 4:  Kamchatka => (name :op "Kamchatka")
Oracle Span 5:  lost => lose-02
Oracle Span 6:  military => military
Oracle Span 7:  monitoring => monitor-01
Oracle Span 8:  Peninsula => peninsula
Oracle Span 9:  power => power
Oracle Span 10:  Russian space forces => (military :name (name :op "Forces" :op "Space" :op "Russian"))
NER Entity: (thing :name (name :op "Russian"))
NER Entity: (country :name (name :op "Kamchatka" :op "Peninsula"))
Spans:
Span 12-13:  center => center
Span 6-7:  included => include-01
Span 2-3:  installations => installation
Span 15-17:  Kamchatka Peninsula. => (peninsula :name (name :op "Kamchatka" :op "Peninsula"))
Span 4-5:  lost => lose-02
Span 1-2:  military => military
Span 11-12:  monitoring => monitor-01
Span 5-6:  power => power
Span 9-10:  space => "Space"

Langrangian relaxation converged after 16 iterations. Delta = 0.0
Oracle Span 12-13:  center => center
Oracle Span 6-7:  included => include-01
Oracle Span 2-3:  installations => installation
Oracle Span 15-16:  Kamchatka => (name :op "Kamchatka")
Oracle Span 4-5:  lost => lose-02
Oracle Span 1-2:  military => military
Oracle Span 11-12:  monitoring => monitor-01
Oracle Span 16-17:  Peninsula => peninsula
Oracle Span 5-6:  power => power
Oracle Span 8-11:  Russian space forces => (military :name (name :op "Forces" :op "Space" :op "Russian"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	military	_	JJ	JJ	_	3	amod	_	_
3	installations	_	NNS	NNS	_	7	nsubj	_	_
4	that	_	WDT	WDT	_	5	nsubj	_	_
5	lost	_	VBD	VBD	_	3	rcmod	_	_
6	power	_	NN	NN	_	5	dobj	_	_
7	included	_	VBD	VBD	_	0	root	_	_
8	the	_	DT	DT	_	13	det	_	_
9	Russian	_	JJ	JJ	_	13	amod	_	_
10	space	_	NN	NN	_	13	nn	_	_
11	forces	_	NNS	NNS	_	13	nn	_	_
12	monitoring	_	NN	NN	_	13	nn	_	_
13	center	_	NN	NN	_	7	dobj	_	_
14	on	_	IN	IN	_	13	prep	_	_
15	the	_	DT	DT	_	17	det	_	_
16	Kamchatka	_	NNP	NNP	_	17	nn	_	_
17	Peninsula	_	NNP	NNP	_	14	pobj	_	_
18	.	_	.	.	_	7	punct	_	_

Oracle:
(c / center, location, p2 / peninsula)
(i / installation, mod, m / military)
(i3 / include-01, ARG1, c / center)
(i3 / include-01, ARG2, i / installation)
(l / lose-02, ARG0, i / installation)
(l / lose-02, ARG1, p / power)
(m2 / monitor-01, ARG0, c / center)
(m2 / monitor-01, ARG1, m3 / military)
(m3 / military, name, n3 / name)
(n2 / name, op, "Kamchatka")
(n3 / name, op, "Forces")
(n3 / name, op, "Russian")
(n3 / name, op, "Space")
(p2 / peninsula, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(15,17,List(3, 2, 1, 0),Kamchatka Peninsula.,(peninsula :name (name :op "Kamchatka" :op "Peninsula")),false), Span(5,6,List(4),power,power,false), Span(2,3,List(5),installations,installation,false), Span(9,10,List(6),space,"Space",false), Span(1,2,List(7),military,military,false), Span(4,5,List(8),lost,lose-02,false), Span(12,13,List(9),center,center,false), Span(11,12,List(10),monitoring,monitor-01,false), Span(6,7,List(11),included,include-01,false)),Map(2 -> "Kamchatka", 5 -> installation, 8 -> lose-02, 7 -> military, 1 -> name, 11 -> include-01, 4 -> power, 6 -> "Space", 9 -> center, 0 -> peninsula, 10 -> monitor-01, 3 -> "Peninsula"),Map(S -> "Space", n -> name, m2 -> monitor-01, p2 -> power, m -> military, p -> peninsula, i2 -> include-01, i -> installation, c -> center, l -> lose-02))),[Ljava.lang.String;@3619e71d,Annotation([Ljava.lang.String;@27479292,[Ljava.lang.String;@1a040db4,[Ljava.lang.String;@4d9a7c96),Annotation([Ljava.lang.String;@34424b37,[Ljava.lang.String;@2f0a9c2f,[Ledu.cmu.lti.nlp.amr.Dependency;@15d94dd7),Annotation([Ljava.lang.String;@bb9fd36,[Ljava.lang.String;@2d841485,[Ljava.lang.String;@56941efe),Annotation([Ljava.lang.String;@9fc460e,[Ljava.lang.String;@4d685a4a,[Ledu.cmu.lti.nlp.amr.Entity;@40455f5e))
AMR:
(c / center, location, p / peninsula)
(i / installation, mod, m / military)
(i2 / include-01, ARG1, c / center)
(i2 / include-01, ARG2, i / installation)
(l / lose-02, ARG0, i / installation)
(l / lose-02, ARG1, p2 / power)
(m2 / monitor-01, ARG0, c / center)
(m2 / monitor-01, ARG1, S / "Space")
(n / name, op, "Kamchatka")
(n / name, op, "Peninsula")
(p / peninsula, name, n / name)

Decoded in 524,802 microseconds
Sentence: In most cases of military installations having their electricity cut off the electricity has been quickly restored.

Oracle Span 1:  cases => case
Oracle Span 2:  cut => cut-04
Oracle Span 3:  electricity => electricity
Oracle Span 4:  installations => installation
Oracle Span 5:  military => military
Oracle Span 6:  most => most
Oracle Span 7:  quickly => quick
Oracle Span 8:  restored => restore-01
Spans:
Span 2-3:  cases => case
Span 9-10:  cut => cut-04
Span 8-9:  electricity => electricity
Span 12-13:  electricity => electricity
Span 5-6:  installations => installation
Span 4-5:  military => military
Span 1-2:  most => most
Span 15-16:  quickly => quick
Span 16-17:  restored. => restore-01

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 2-3:  cases => case
Oracle Span 9-10:  cut => cut-04
Oracle Span 8-9:  electricity => electricity
Oracle Span 5-6:  installations => installation
Oracle Span 4-5:  military => military
Oracle Span 1-2:  most => most
Oracle Span 15-16:  quickly => quick
Oracle Span 16-17:  restored => restore-01

Dependencies:
1	In	_	IN	IN	_	17	prep	_	_
2	most	_	JJS	JJS	_	3	amod	_	_
3	cases	_	NNS	NNS	_	7	nsubj	_	_
4	of	_	IN	IN	_	3	prep	_	_
5	military	_	JJ	JJ	_	6	amod	_	_
6	installations	_	NNS	NNS	_	4	pobj	_	_
7	having	_	VBG	VBG	_	1	pcomp	_	_
8	their	_	PRP$	PRP$	_	9	poss	_	_
9	electricity	_	NN	NN	_	10	nsubj	_	_
10	cut	_	VB	VB	_	7	ccomp	_	_
11	off	_	RP	RP	_	10	prt	_	_
12	the	_	DT	DT	_	13	det	_	_
13	electricity	_	NN	NN	_	17	nsubjpass	_	_
14	has	_	VBZ	VBZ	_	17	aux	_	_
15	been	_	VBN	VBN	_	17	auxpass	_	_
16	quickly	_	RB	RB	_	17	advmod	_	_
17	restored	_	VBN	VBN	_	0	root	_	_
18	.	_	.	.	_	17	punct	_	_

Oracle:
(c2 / cut-04, ARG1, e / electricity)
(c2 / cut-04, ARG4, i / installation)
(c3 / case, mod, i / installation)
(c3 / case, quant, m3 / most)
(i / installation, mod, m2 / military)
(r2 / restore-01, ARG1, e / electricity)
(r2 / restore-01, mod, q / quick)
(r2 / restore-01, time, c3 / case)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),electricity,electricity,false), Span(9,10,List(1),cut,cut-04,false), Span(4,5,List(2),military,military,false), Span(1,2,List(3),most,most,false), Span(16,17,List(4),restored.,restore-01,false), Span(15,16,List(5),quickly,quick,false), Span(2,3,List(6),cases,case,false), Span(12,13,List(7),electricity,electricity,false), Span(5,6,List(8),installations,installation,false)),Map(2 -> military, 5 -> quick, 8 -> installation, 7 -> electricity, 1 -> cut-04, 4 -> restore-01, 6 -> case, 0 -> electricity, 3 -> most),Map(e -> electricity, q -> quick, m2 -> most, e2 -> electricity, m -> military, i -> installation, r -> restore-01, c -> cut-04, c2 -> case))),[Ljava.lang.String;@61879fe3,Annotation([Ljava.lang.String;@1eba46ac,[Ljava.lang.String;@65bb253c,[Ljava.lang.String;@69f02183),Annotation([Ljava.lang.String;@3455d3d9,[Ljava.lang.String;@78166cd9,[Ledu.cmu.lti.nlp.amr.Dependency;@44383422),Annotation([Ljava.lang.String;@2c2ce91f,[Ljava.lang.String;@36fd3c58,[Ljava.lang.String;@7d46eefa),Annotation([Ljava.lang.String;@78da4c54,[Ljava.lang.String;@33f52641,[Ledu.cmu.lti.nlp.amr.Entity;@6c35d39b))
AMR:
(c / cut-04, ARG1, e / electricity)
(c / cut-04, ARG4, i / installation)
(c2 / case, mod, i / installation)
(c2 / case, quant, m2 / most)
(i / installation, mod, m / military)
(r / restore-01, ARG1, e2 / electricity)
(r / restore-01, mod, q / quick)
(r / restore-01, time, c2 / case)

Decoded in 613,370 microseconds
Sentence: Often investigations show that the tug of war with the utility forces the military to spend budgeted funds for electrical power instead of diverting money for other uses.

Oracle Span 1:  budgeted => budget-01
Oracle Span 2:  diverting => divert-01
Oracle Span 3:  electrical => electricity
Oracle Span 4:  forces => force-01
Oracle Span 5:  funds => fund-01
Oracle Span 6:  investigations => investigate-01
Oracle Span 7:  military => military
Oracle Span 8:  money => money
Oracle Span 9:  Often => often
Oracle Span 10:  other => other
Oracle Span 11:  power => power
Oracle Span 12:  show => show-01
Oracle Span 13:  spend => spend-01
Oracle Span 14:  tug => tug-02
Oracle Span 15:  uses => (thing :ARG2-of use-01)
Oracle Span 16:  utility => utility
Oracle Span 17:  war => war
Spans:
Span 16-17:  budgeted => budget-01
Span 23-24:  diverting => divert-01
Span 19-20:  electrical => electrical
Span 11-12:  forces => force
Span 17-18:  funds => fund
Span 1-2:  investigations => investigate-01
Span 13-14:  military => military
Span 24-25:  money => money
Span 26-27:  other => other
Span 20-21:  power => power
Span 2-3:  show => show-01
Span 15-16:  spend => spend-01
Span 5-6:  tug => tug-01
Span 27-28:  uses. => use-01
Span 10-11:  utility => utility
Span 7-8:  war => war-01

Langrangian relaxation converged after 74 iterations. Delta = 0.0
Oracle Span 16-17:  budgeted => budget-01
Oracle Span 23-24:  diverting => divert-01
Oracle Span 19-20:  electrical => electricity
Oracle Span 11-12:  forces => force-01
Oracle Span 17-18:  funds => fund-01
Oracle Span 1-2:  investigations => investigate-01
Oracle Span 13-14:  military => military
Oracle Span 24-25:  money => money
Oracle Span 0-1:  Often => often
Oracle Span 26-27:  other => other
Oracle Span 20-21:  power => power
Oracle Span 2-3:  show => show-01
Oracle Span 15-16:  spend => spend-01
Oracle Span 5-6:  tug => tug-02
Oracle Span 27-28:  uses => (thing :ARG2-of use-01)
Oracle Span 10-11:  utility => utility
Oracle Span 7-8:  war => war

Dependencies:
1	Often	_	RB	RB	_	3	advmod	_	_
2	investigations	_	NNS	NNS	_	3	nsubj	_	_
3	show	_	VBP	VBP	_	0	root	_	_
4	that	_	IN	IN	_	12	mark	_	_
5	the	_	DT	DT	_	6	det	_	_
6	tug	_	NN	NN	_	12	nsubj	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	war	_	NN	NN	_	7	pobj	_	_
9	with	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	utility	_	NN	NN	_	9	pobj	_	_
12	forces	_	VBZ	VBZ	_	3	ccomp	_	_
13	the	_	DT	DT	_	14	det	_	_
14	military	_	NN	NN	_	12	dobj	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	spend	_	VB	VB	_	14	vmod	_	_
17	budgeted	_	VBN	VBN	_	18	amod	_	_
18	funds	_	NNS	NNS	_	16	dobj	_	_
19	for	_	IN	IN	_	16	prep	_	_
20	electrical	_	JJ	JJ	_	21	amod	_	_
21	power	_	NN	NN	_	19	pobj	_	_
22	instead	_	RB	RB	_	23	advmod	_	_
23	of	_	IN	IN	_	21	prep	_	_
24	diverting	_	VBG	VBG	_	23	pcomp	_	_
25	money	_	NN	NN	_	24	dobj	_	_
26	for	_	IN	IN	_	24	prep	_	_
27	other	_	JJ	JJ	_	28	amod	_	_
28	uses	_	NNS	NNS	_	26	pobj	_	_
29	.	_	.	.	_	3	punct	_	_

Oracle:
(d / divert-01, ARG0, m / military)
(d / divert-01, ARG1, m2 / money)
(d / divert-01, ARG3, t2 / thing)
(d / divert-01, prep-instead, s2 / spend-01)
(f / force-01, ARG0, t / tug-02)
(f / force-01, ARG2, s2 / spend-01)
(p / power, mod, e / electricity)
(s / show-01, ARG0, i / investigate-01)
(s / show-01, ARG1, t / tug-02)
(s / show-01, frequency, o / often)
(s2 / spend-01, ARG1, p / power)
(t / tug-02, mod, w / war)
(t2 / thing, mod, o2 / other)
(u / use-01, ARG2, t2 / thing)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),funds,fund,false), Span(26,27,List(1),other,other,false), Span(16,17,List(2),budgeted,budget-01,false), Span(27,28,List(3),uses.,use-01,false), Span(15,16,List(4),spend,spend-01,false), Span(1,2,List(5),investigations,investigate-01,false), Span(2,3,List(6),show,show-01,false), Span(10,11,List(7),utility,utility,false), Span(19,20,List(8),electrical,electrical,false), Span(13,14,List(9),military,military,false), Span(23,24,List(10),diverting,divert-01,false), Span(7,8,List(11),war,war-01,false), Span(11,12,List(12),forces,force,false), Span(24,25,List(13),money,money,false), Span(20,21,List(14),power,power,false), Span(5,6,List(15),tug,tug-01,false)),Map(2 -> budget-01, 5 -> investigate-01, 12 -> force, 15 -> tug-01, 8 -> electrical, 7 -> utility, 1 -> other, 4 -> spend-01, 11 -> war-01, 14 -> power, 6 -> show-01, 0 -> fund, 9 -> military, 3 -> use-01, 10 -> divert-01, 13 -> money),Map(e -> electrical, w -> war-01, s2 -> show-01, t -> tug-01, b -> budget-01, m2 -> money, s -> spend-01, u2 -> utility, m -> military, d -> divert-01, p -> power, i -> investigate-01, u -> use-01, f2 -> force, f -> fund, o -> other))),[Ljava.lang.String;@379ef333,Annotation([Ljava.lang.String;@5f58e04,[Ljava.lang.String;@5133c204,[Ljava.lang.String;@1ea2f832),Annotation([Ljava.lang.String;@5e6587be,[Ljava.lang.String;@7749a7d8,[Ledu.cmu.lti.nlp.amr.Dependency;@38a578d7),Annotation([Ljava.lang.String;@314f7499,[Ljava.lang.String;@43654d79,[Ljava.lang.String;@79a845aa),Annotation([Ljava.lang.String;@6ad8e988,[Ljava.lang.String;@20f9b3f6,[Ledu.cmu.lti.nlp.amr.Entity;@491e2c15))
AMR:
(b / budget-01, ARG0, f / fund)
(b / budget-01, ARG1, m / military)
(d / divert-01, ARG0, m / military)
(d / divert-01, ARG1, m2 / money)
(d / divert-01, ARG3, u / use-01)
(d / divert-01, prep-instead, s / spend-01)
(f2 / force, purpose, s / spend-01)
(i / investigate-01, ARG1, f2 / force)
(p / power, mod, e / electrical)
(s / spend-01, ARG1, p / power)
(s2 / show-01, ARG0, i / investigate-01)
(s2 / show-01, ARG1, t / tug-01)
(t / tug-01, ARG1, w / war-01)
(w / war-01, ARG0, u2 / utility)
(w / war-01, ARG1, o / other)

Decoded in 2,593,595 microseconds
Sentence: Some of the budgeted funds cut at times have included the building country residences for generals.

Oracle Span 1:  budgeted => budget-01
Oracle Span 2:  building => build-01
Oracle Span 3:  country => country
Oracle Span 4:  cut => cut-02
Oracle Span 5:  funds => fund-01
Oracle Span 6:  generals => general
Oracle Span 7:  have => (person :ARG0-of have-org-role-91)
Oracle Span 8:  of => include-01
Oracle Span 9:  residences => residence
Oracle Span 10:  Some => some
Spans:
Span 3-4:  budgeted => budget-01
Span 11-12:  building => building
Span 12-13:  country => country
Span 5-6:  cut => cut-01
Span 4-5:  funds => fund
Span 15-16:  generals. => (person :ARG0-of (have-org-role-91 :ARG2 general))
Span 9-10:  included => include-01
Span 13-14:  residences => residence
Span 0-1:  Some => some

Langrangian relaxation converged after 40 iterations. Delta = 0.0
Oracle Span 3-4:  budgeted => budget-01
Oracle Span 11-12:  building => build-01
Oracle Span 12-13:  country => country
Oracle Span 5-6:  cut => cut-02
Oracle Span 4-5:  funds => fund-01
Oracle Span 15-16:  generals => general
Oracle Span 8-9:  have => (person :ARG0-of have-org-role-91)
Oracle Span 1-2:  of => include-01
Oracle Span 13-14:  residences => residence
Oracle Span 0-1:  Some => some

Dependencies:
1	Some	_	DT	DT	_	10	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	5	det	_	_
4	budgeted	_	VBN	VBN	_	5	amod	_	_
5	funds	_	NNS	NNS	_	2	pobj	_	_
6	cut	_	VBN	VBN	_	5	vmod	_	_
7	at	_	IN	IN	_	6	prep	_	_
8	times	_	NNS	NNS	_	7	pobj	_	_
9	have	_	VBP	VBP	_	10	aux	_	_
10	included	_	VBN	VBN	_	0	root	_	_
11	the	_	DT	DT	_	14	det	_	_
12	building	_	VBG	VBG	_	14	amod	_	_
13	country	_	NN	NN	_	14	nn	_	_
14	residences	_	NNS	NNS	_	10	dobj	_	_
15	for	_	IN	IN	_	14	prep	_	_
16	generals	_	NNS	NNS	_	15	pobj	_	_
17	.	_	.	.	_	10	punct	_	_

Oracle:
(b / build-01, ARG1, r / residence)
(b / build-01, beneficiary, p / person)
(b2 / budget-01, ARG1, f / fund-01)
(c2 / cut-02, ARG1, f / fund-01)
(f / fund-01, quant, s2 / some)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG2, g / general)
(i / include-01, ARG1, b / build-01)
(i / include-01, ARG2, f / fund-01)
(r / residence, location, c / country)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),included,include-01,false), Span(15,16,List(3, 2, 1),generals.,(person :ARG0-of (have-org-role-91 :ARG2 general)),false), Span(3,4,List(4),budgeted,budget-01,false), Span(11,12,List(5),building,building,false), Span(0,1,List(6),Some,some,false), Span(13,14,List(7),residences,residence,false), Span(5,6,List(8),cut,cut-01,false), Span(4,5,List(9),funds,fund,false), Span(12,13,List(10),country,country,false)),Map(2 -> have-org-role-91, 5 -> building, 8 -> cut-01, 7 -> residence, 1 -> person, 4 -> budget-01, 6 -> some, 9 -> fund, 0 -> include-01, 10 -> country, 3 -> general),Map(h -> have-org-role-91, b -> budget-01, b2 -> building, s -> some, g -> general, p -> person, r -> residence, i -> include-01, c -> cut-01, f -> fund, c2 -> country))),[Ljava.lang.String;@605e35e7,Annotation([Ljava.lang.String;@3eb62e91,[Ljava.lang.String;@68c9df5,[Ljava.lang.String;@3867fef2),Annotation([Ljava.lang.String;@29871514,[Ljava.lang.String;@26ca6413,[Ledu.cmu.lti.nlp.amr.Dependency;@44cb360a),Annotation([Ljava.lang.String;@43dcc00f,[Ljava.lang.String;@526242d5,[Ljava.lang.String;@27fd5e76),Annotation([Ljava.lang.String;@3a9b47e5,[Ljava.lang.String;@1f622401,[Ledu.cmu.lti.nlp.amr.Entity;@5f56b9d2))
AMR:
(b / budget-01, ARG0, f / fund)
(b / budget-01, ARG1, i / include-01)
(b2 / building, calendar, r / residence)
(c / cut-01, ARG1, f / fund)
(f / fund, quant, s / some)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, g / general)
(i / include-01, ARG1, r / residence)
(r / residence, location, c2 / country)

Decoded in 876,336 microseconds
Sentence: 2004-07-24

Oracle Span 1:  2004-07-24 => (date-entity :day 24 :month 7 :year 2004)
mkDayMonthYear(2004-07-24,24,07,2004)
Spans:
Span 0-1:  2004-07-24 => (date-entity :year 2004 :month 7 :day 24)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2004-07-24 => (date-entity :day 24 :month 7 :year 2004)

Dependencies:
1	2004-07-24	_	NNP	NNP	_	0	root	_	_

Oracle:
(d2 / date-entity, day, 24)
(d2 / date-entity, month, 7)
(d2 / date-entity, year, 2004)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2004-07-24,(date-entity :year 2004 :month 7 :day 24),false)),Map(2 -> 7, 1 -> 2004, 0 -> date-entity, 3 -> 24),Map(2 -> 2004, 7 -> 7, d -> date-entity, 22 -> 24))),[Ljava.lang.String;@75228c99,Annotation([Ljava.lang.String;@5aaddc17,[Ljava.lang.String;@7bd3dfdd,[Ljava.lang.String;@2644b8c9),Annotation([Ljava.lang.String;@4763aedc,[Ljava.lang.String;@739a9f43,[Ledu.cmu.lti.nlp.amr.Dependency;@16528bda),Annotation([Ljava.lang.String;@1553eb29,[Ljava.lang.String;@4f9cb211,[Ljava.lang.String;@685b4c26),Annotation([Ljava.lang.String;@6a5516ac,[Ljava.lang.String;@60d5b26c,[Ledu.cmu.lti.nlp.amr.Entity;@4af3985d))
AMR:
(d / date-entity, day, 22 / 24)
(d / date-entity, month, 7 / 7)
(d / date-entity, year, 2 / 2004)

Decoded in 30,106 microseconds
Sentence: Brazil (BR)

Oracle Span 1:  Brazil => (country :name (name :op "Brazil"))
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 0-1:  Brazil => (country :name (name :op "Brazil"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Brazil => (country :name (name :op "Brazil"))

Dependencies:
1	Brazil	_	NNP	NNP	_	0	root	_	_
2	(	_	(	(	_	3	punct	_	_
3	BR	_	NNP	NNP	_	1	appos	_	_
4	)	_	)	)	_	3	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Brazil")

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Brazil,(country :name (name :op "Brazil")),false)),Map(2 -> "Brazil", 1 -> name, 0 -> country),Map(n -> name, c -> country))),[Ljava.lang.String;@68e006c0,Annotation([Ljava.lang.String;@2b583855,[Ljava.lang.String;@64f38e65,[Ljava.lang.String;@36a09af5),Annotation([Ljava.lang.String;@5e9e5ce7,[Ljava.lang.String;@34ee5df1,[Ledu.cmu.lti.nlp.amr.Dependency;@4c166daf),Annotation([Ljava.lang.String;@7ed331ea,[Ljava.lang.String;@520623b3,[Ljava.lang.String;@14c1edd7),Annotation([Ljava.lang.String;@6bc581f5,[Ljava.lang.String;@c7eb106,[Ledu.cmu.lti.nlp.amr.Entity;@6f860081))
AMR:
(c / country, name, n / name)
(n / name, op, "Brazil")

Decoded in 48,412 microseconds
Sentence: International; crime; Government; narcotics

Oracle Span 1:  ; => and
Oracle Span 2:  crime => crime
Oracle Span 3:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 4:  International => international
Oracle Span 5:  narcotics => narcotic
Spans:
Span 4-5:   => (government-organization :ARG0-of govern-01)
Span 6-7:   => narcotic
Span 1-2:  crime; => and
Span 2-3:  Government; => crime
Span 0-1:  International; => international

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 2-3:  crime => crime
Oracle Span 4-5:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 0-1:  International => international
Oracle Span 6-7:  narcotics => narcotic

Dependencies:
1	International	_	NNP	NNP	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	crime	_	NN	NN	_	1	dep	_	_
4	;	_	:	:	_	3	punct	_	_
5	Government	_	NNP	NNP	_	3	dep	_	_
6	;	_	:	:	_	5	punct	_	_
7	narcotics	_	NNS	NNS	_	5	dep	_	_

Oracle:
(a / and, op, c / crime)
(a / and, op, g / government-organization)
(a / and, op, i / international)
(a / and, op, n / narcotic)
(g2 / govern-01, ARG0, g / government-organization)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(1, 0),,(government-organization :ARG0-of govern-01),false), Span(6,7,List(2),,narcotic,false), Span(0,1,List(3),International;,international,false), Span(1,2,List(4),crime;,and,false), Span(2,3,List(5),Government;,crime,false)),Map(2 -> narcotic, 5 -> crime, 1 -> govern-01, 4 -> and, 0 -> government-organization, 3 -> international),Map(n -> narcotic, g2 -> govern-01, g -> government-organization, a -> and, i -> international, c -> crime))),[Ljava.lang.String;@2f13a13e,Annotation([Ljava.lang.String;@b5fb5cb,[Ljava.lang.String;@77ee4017,[Ljava.lang.String;@48f6347c),Annotation([Ljava.lang.String;@7a5e760d,[Ljava.lang.String;@cd97560,[Ledu.cmu.lti.nlp.amr.Dependency;@9b27214),Annotation([Ljava.lang.String;@701ef28a,[Ljava.lang.String;@79f91c9a,[Ljava.lang.String;@3ecc04b0),Annotation([Ljava.lang.String;@2474e3af,[Ljava.lang.String;@23f9cf09,[Ledu.cmu.lti.nlp.amr.Entity;@12d51a20))
AMR:
(a / and, op, c / crime)
(a / and, op, g / government-organization)
(a / and, op, i / international)
(a / and, op, n / narcotic)
(g2 / govern-01, ARG0, g / government-organization)

Decoded in 115,560 microseconds
Sentence: Brazil to implement law allowing air force to target drug trafficking aircraft in Brazilian airspace.

Oracle Span 1:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 2:  aircraft => aircraft
Oracle Span 3:  airspace => airspace
Oracle Span 4:  allowing => allow-01
Oracle Span 5:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 6:  drug => drug
Oracle Span 7:  implement => implement-01
Oracle Span 8:  law => law
Oracle Span 9:  target => target-01
Oracle Span 10:  trafficking => traffic-00
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 5-6:  air => air
Span 11-12:  aircraft => aircraft
Span 14-15:  airspace. => airspace
Span 4-5:  allowing => allow-01
Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Span 9-10:  drug => drug
Span 6-7:  force => force
Span 2-3:  implement => implement-01
Span 3-4:  law => law
Span 8-9:  target => target-01
Span 10-11:  trafficking => track-01

Langrangian relaxation converged after 38 iterations. Delta = 0.0
Oracle Span 5-7:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 11-12:  aircraft => aircraft
Oracle Span 14-15:  airspace => airspace
Oracle Span 4-5:  allowing => allow-01
Oracle Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 9-10:  drug => drug
Oracle Span 2-3:  implement => implement-01
Oracle Span 3-4:  law => law
Oracle Span 8-9:  target => target-01
Oracle Span 10-11:  trafficking => traffic-00

Dependencies:
1	Brazil	_	NNP	NNP	_	7	nsubj	_	_
2	to	_	TO	TO	_	3	aux	_	_
3	implement	_	VB	VB	_	1	vmod	_	_
4	law	_	NN	NN	_	3	dobj	_	_
5	allowing	_	VBG	VBG	_	3	xcomp	_	_
6	air	_	NN	NN	_	5	dobj	_	_
7	force	_	VBP	VBP	_	0	root	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	target	_	VB	VB	_	7	xcomp	_	_
10	drug	_	NN	NN	_	12	nn	_	_
11	trafficking	_	NN	NN	_	12	nn	_	_
12	aircraft	_	NN	NN	_	9	dobj	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	Brazilian	_	JJ	JJ	_	15	amod	_	_
15	airspace	_	NN	NN	_	13	pobj	_	_
16	.	_	.	.	_	7	punct	_	_

Oracle:
(a / allow-01, ARG0, l / law)
(a / allow-01, ARG1, t / target-01)
(a4 / airspace, mod, c / country)
(c / country, name, n / name)
(i / implement-01, ARG0, c / country)
(i / implement-01, ARG1, l / law)
(m / military, name, n2 / name)
(n / name, op, "Brazil")
(n2 / name, op, "Air")
(n2 / name, op, "Force")
(t / target-01, ARG0, m / military)
(t / target-01, ARG1, a3 / aircraft)
(t / target-01, location, a4 / airspace)
(t2 / traffic-00, ARG0, a3 / aircraft)
(t2 / traffic-00, ARG1, d / drug)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),allowing,allow-01,false), Span(3,4,List(1),law,law,false), Span(2,3,List(2),implement,implement-01,false), Span(14,15,List(3),airspace.,airspace,false), Span(0,1,List(6, 5, 4),Brazil,(country :name (name :op "Brazil")),false), Span(5,6,List(7),air,air,false), Span(8,9,List(8),target,target-01,false), Span(9,10,List(9),drug,drug,false), Span(11,12,List(10),aircraft,aircraft,false), Span(6,7,List(11),force,force,false), Span(10,11,List(12),trafficking,track-01,false)),Map(2 -> implement-01, 5 -> name, 12 -> track-01, 8 -> target-01, 7 -> air, 1 -> law, 4 -> country, 11 -> force, 6 -> "Brazil", 0 -> allow-01, 9 -> drug, 3 -> airspace, 10 -> aircraft),Map(n -> name, t -> target-01, a3 -> air, d -> drug, a -> allow-01, t2 -> track-01, a2 -> airspace, i -> implement-01, c -> country, l -> law, f -> force, a4 -> aircraft))),[Ljava.lang.String;@10283a51,Annotation([Ljava.lang.String;@893b190,[Ljava.lang.String;@4533ec30,[Ljava.lang.String;@afbe137),Annotation([Ljava.lang.String;@5bd0b88b,[Ljava.lang.String;@4eda9d50,[Ledu.cmu.lti.nlp.amr.Dependency;@14d2aad7),Annotation([Ljava.lang.String;@41750323,[Ljava.lang.String;@1fbfff66,[Ljava.lang.String;@515c1dc),Annotation([Ljava.lang.String;@41057bb,[Ljava.lang.String;@6d953001,[Ledu.cmu.lti.nlp.amr.Entity;@db1b61a))
AMR:
(a / allow-01, ARG0, l / law)
(a / allow-01, ARG1, a3 / air)
(a2 / airspace, mod, c / country)
(c / country, name, n / name)
(f / force, purpose, t / target-01)
(i / implement-01, ARG0, c / country)
(i / implement-01, ARG1, l / law)
(n / name, op, "Brazil")
(t / target-01, ARG1, a4 / aircraft)
(t / target-01, location, a2 / airspace)
(t2 / track-01, ARG0, a4 / aircraft)
(t2 / track-01, ARG1, d / drug)

Decoded in 799,962 microseconds
Sentence: US concerned over liability in the event of misidentification of a civilian plane.

Oracle Span 1:  civilian => civilian
Oracle Span 2:  concerned => concern-01
Oracle Span 3:  liability => liability
Oracle Span 4:  misidentification => misidentify-00
Oracle Span 5:  plane => plane
Oracle Span 6:  US => (country :name (name :op "US"))
NER Entity: (country :name (name :op "US"))
Spans:
Span 11-12:  civilian => civilian
Span 1-2:  concerned => concern-01
Span 6-7:  event => event
Span 3-4:  liability => liability
Span 12-13:  plane. => plane
Span 0-1:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 24 iterations. Delta = 0.0
Oracle Span 11-12:  civilian => civilian
Oracle Span 1-2:  concerned => concern-01
Oracle Span 3-4:  liability => liability
Oracle Span 8-9:  misidentification => misidentify-00
Oracle Span 12-13:  plane => plane
Oracle Span 0-1:  US => (country :name (name :op "US"))

Dependencies:
1	US	_	NNP	NNP	_	2	nsubj	_	_
2	concerned	_	VBN	VBN	_	0	root	_	_
3	over	_	IN	IN	_	2	prep	_	_
4	liability	_	NN	NN	_	3	pobj	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	7	det	_	_
7	event	_	NN	NN	_	5	pobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	misidentification	_	NN	NN	_	8	pobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	a	_	DT	DT	_	13	det	_	_
12	civilian	_	JJ	JJ	_	13	amod	_	_
13	plane	_	NN	NN	_	10	pobj	_	_
14	.	_	.	.	_	2	punct	_	_

Oracle:
(c / concern-01, ARG0, l / liability)
(c / concern-01, ARG1, c2 / country)
(c2 / country, name, n / name)
(l / liability, condition, m / misidentify-00)
(m / misidentify-00, ARG1, p / plane)
(n / name, op, "US")
(p / plane, mod, c3 / civilian)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),civilian,civilian,false), Span(12,13,List(1),plane.,plane,false), Span(3,4,List(2),liability,liability,false), Span(1,2,List(3),concerned,concern-01,false), Span(6,7,List(4),event,event,false), Span(0,1,List(7, 6, 5),US,(country :name (name :op "US")),false)),Map(2 -> liability, 5 -> country, 7 -> "US", 1 -> plane, 4 -> event, 6 -> name, 0 -> civilian, 3 -> concern-01),Map(n -> name, e -> event, p -> plane, c3 -> country, l -> liability, c -> civilian, c2 -> concern-01))),[Ljava.lang.String;@282b044,Annotation([Ljava.lang.String;@46e40334,[Ljava.lang.String;@3a8b33f,[Ljava.lang.String;@72122159),Annotation([Ljava.lang.String;@6505afcf,[Ljava.lang.String;@39eedf8,[Ledu.cmu.lti.nlp.amr.Dependency;@45e987ff),Annotation([Ljava.lang.String;@26926ef2,[Ljava.lang.String;@6e21d638,[Ljava.lang.String;@1aa40729),Annotation([Ljava.lang.String;@13fbadfd,[Ljava.lang.String;@262ba48e,[Ledu.cmu.lti.nlp.amr.Entity;@46db3665))
AMR:
(c2 / concern-01, ARG0, l / liability)
(c2 / concern-01, ARG1, c3 / country)
(c3 / country, name, n / name)
(e / event, location, p / plane)
(l / liability, poss, e / event)
(n / name, op, "US")
(p / plane, mod, c / civilian)

Decoded in 455,359 microseconds
Sentence: Brazil announced that the air force will begin shooting down aircraft used in trafficking illegal drugs in Brazilian airspace.

Oracle Span 1:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 2:  aircraft => aircraft
Oracle Span 3:  airspace => airspace
Oracle Span 4:  announced => announce-01
Oracle Span 5:  begin => begin-01
Oracle Span 6:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 7:  drugs => drug
Oracle Span 8:  illegal => (law :polarity -)
Oracle Span 9:  shooting => shoot-05
Oracle Span 10:  trafficking => traffic-00
Oracle Span 11:  used => use-01
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 4-5:  air => air
Span 10-11:  aircraft => aircraft
Span 18-19:  airspace. => airspace
Span 1-2:  announced => announce-01
Span 7-8:  begin => begin-01
Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Span 9-10:  down => down
Span 15-16:  drugs => drug
Span 5-6:  force => force
Span 14-15:  illegal => (law :polarity -)
Span 8-9:  shooting => shoot-04
Span 13-14:  trafficking => track-01
Span 11-12:  used => use-01

Langrangian relaxation converged after 17 iterations. Delta = 0.0
Oracle Span 4-6:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 10-11:  aircraft => aircraft
Oracle Span 18-19:  airspace => airspace
Oracle Span 1-2:  announced => announce-01
Oracle Span 7-8:  begin => begin-01
Oracle Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 15-16:  drugs => drug
Oracle Span 14-15:  illegal => (law :polarity -)
Oracle Span 8-9:  shooting => shoot-05
Oracle Span 13-14:  trafficking => traffic-00
Oracle Span 11-12:  used => use-01

Dependencies:
1	Brazil	_	NNP	NNP	_	2	nsubj	_	_
2	announced	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	8	mark	_	_
4	the	_	DT	DT	_	6	det	_	_
5	air	_	NN	NN	_	6	nn	_	_
6	force	_	NN	NN	_	8	nsubj	_	_
7	will	_	MD	MD	_	8	aux	_	_
8	begin	_	VB	VB	_	2	ccomp	_	_
9	shooting	_	VBG	VBG	_	8	xcomp	_	_
10	down	_	RP	RP	_	9	prt	_	_
11	aircraft	_	NN	NN	_	9	dobj	_	_
12	used	_	VBN	VBN	_	11	vmod	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	trafficking	_	NN	NN	_	16	nn	_	_
15	illegal	_	JJ	JJ	_	16	amod	_	_
16	drugs	_	NNS	NNS	_	13	pobj	_	_
17	in	_	IN	IN	_	16	prep	_	_
18	Brazilian	_	JJ	JJ	_	19	amod	_	_
19	airspace	_	NN	NN	_	17	pobj	_	_
20	.	_	.	.	_	2	punct	_	_

Oracle:
(a / announce-01, ARG0, c / country)
(a / announce-01, ARG1, b / begin-01)
(a4 / airspace, mod, c / country)
(b / begin-01, ARG0, m / military)
(b / begin-01, ARG1, s / shoot-05)
(c / country, name, n / name)
(d / drug, mod, l / law)
(l / law, polarity, -)
(m / military, name, n2 / name)
(n / name, op, "Brazil")
(n2 / name, op, "Air")
(n2 / name, op, "Force")
(s / shoot-05, ARG0, m / military)
(s / shoot-05, ARG1, a3 / aircraft)
(t / traffic-00, ARG1, d / drug)
(t / traffic-00, location, a4 / airspace)
(u / use-01, ARG1, a3 / aircraft)
(u / use-01, ARG2, t / traffic-00)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),air,air,false), Span(5,6,List(1),force,force,false), Span(11,12,List(2),used,use-01,false), Span(0,1,List(5, 4, 3),Brazil,(country :name (name :op "Brazil")),false), Span(18,19,List(6),airspace.,airspace,false), Span(8,9,List(7),shooting,shoot-04,false), Span(1,2,List(8),announced,announce-01,false), Span(10,11,List(9),aircraft,aircraft,false), Span(14,15,List(11, 10),illegal,(law :polarity -),false), Span(9,10,List(12),down,down,false), Span(13,14,List(13),trafficking,track-01,false), Span(7,8,List(14),begin,begin-01,false), Span(15,16,List(15),drugs,drug,false)),Map(2 -> use-01, 5 -> "Brazil", 12 -> down, 15 -> drug, 8 -> announce-01, 7 -> shoot-04, 1 -> force, 4 -> name, 11 -> -, 14 -> begin-01, 6 -> airspace, 0 -> air, 9 -> aircraft, 3 -> country, 10 -> law, 13 -> track-01),Map(n -> name, t -> track-01, b -> begin-01, a3 -> announce-01, s -> shoot-04, d -> down, a -> air, d2 -> drug, a2 -> airspace, c -> country, u -> use-01, l -> law, f -> force, a4 -> aircraft))),[Ljava.lang.String;@5c09a515,Annotation([Ljava.lang.String;@c11818e,[Ljava.lang.String;@615658f6,[Ljava.lang.String;@cf952dd),Annotation([Ljava.lang.String;@1dc97f5a,[Ljava.lang.String;@1d54909c,[Ledu.cmu.lti.nlp.amr.Dependency;@4e96fa28),Annotation([Ljava.lang.String;@83f369d,[Ljava.lang.String;@5e5aab6f,[Ljava.lang.String;@67b30048),Annotation([Ljava.lang.String;@1e8df12c,[Ljava.lang.String;@6ff7a7be,[Ledu.cmu.lti.nlp.amr.Entity;@647d68fc))
AMR:
(a2 / airspace, mod, c / country)
(a3 / announce-01, ARG0, c / country)
(a3 / announce-01, ARG1, b / begin-01)
(b / begin-01, ARG0, f / force)
(b / begin-01, ARG1, d / down)
(c / country, name, n / name)
(d2 / drug, mod, l / law)
(f / force, mod, a / air)
(l / law, polarity, -)
(n / name, op, "Brazil")
(s / shoot-04, ARG0, f / force)
(s / shoot-04, ARG1, a4 / aircraft)
(t / track-01, ARG1, d2 / drug)
(t / track-01, location, a2 / airspace)
(u / use-01, ARG1, a4 / aircraft)

Decoded in 712,623 microseconds
Sentence: The plan requires 8 precautionary steps before the order to shoot down a plane may be issued.

Oracle Span 1:  8 => 8
Oracle Span 2:  before => before
Oracle Span 3:  issued => issue-01
Oracle Span 4:  may => possible
Oracle Span 5:  order => order-01
Oracle Span 6:  plan => (thing :ARG1-of plan-01)
Oracle Span 7:  plane => plane
Oracle Span 8:  precautionary => precaution
Oracle Span 9:  requires => require-01
Oracle Span 10:  shoot => shoot-05
Oracle Span 11:  steps => step
Spans:
Span 6-7:  before => before
Span 16-17:  issued. => issue-01
Span 1-2:  plan => plan
Span 13-14:  plane => plane
Span 2-3:  requires => require-01
Span 10-11:  shoot => shoot-05
Span 5-6:  steps => step-01
Span 0-1:  The => 1

Langrangian relaxation converged after 22 iterations. Delta = 0.0
Oracle Span 3-4:  8 => 8
Oracle Span 6-7:  before => before
Oracle Span 16-17:  issued => issue-01
Oracle Span 14-15:  may => possible
Oracle Span 8-9:  order => order-01
Oracle Span 1-2:  plan => (thing :ARG1-of plan-01)
Oracle Span 13-14:  plane => plane
Oracle Span 4-5:  precautionary => precaution
Oracle Span 2-3:  requires => require-01
Oracle Span 10-11:  shoot => shoot-05
Oracle Span 5-6:  steps => step

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	plan	_	NN	NN	_	3	nsubj	_	_
3	requires	_	VBZ	VBZ	_	0	root	_	_
4	8	_	CD	CD	_	6	num	_	_
5	precautionary	_	JJ	JJ	_	6	amod	_	_
6	steps	_	NNS	NNS	_	3	dobj	_	_
7	before	_	IN	IN	_	17	mark	_	_
8	the	_	DT	DT	_	9	det	_	_
9	order	_	NN	NN	_	17	nsubjpass	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	shoot	_	VB	VB	_	9	vmod	_	_
12	down	_	RP	RP	_	11	prt	_	_
13	a	_	DT	DT	_	14	det	_	_
14	plane	_	NN	NN	_	11	dobj	_	_
15	may	_	MD	MD	_	17	aux	_	_
16	be	_	VB	VB	_	17	auxpass	_	_
17	issued	_	VBN	VBN	_	3	advcl	_	_
18	.	_	.	.	_	3	punct	_	_

Oracle:
(b / before, op, p3 / possible)
(i / issue-01, ARG1, o / order-01)
(o / order-01, ARG2, s2 / shoot-05)
(p / plan-01, ARG1, t / thing)
(p3 / possible, domain, i / issue-01)
(r / require-01, ARG0, t / thing)
(r / require-01, ARG1, s / step)
(r / require-01, time, b / before)
(s / step, mod, p2 / precaution)
(s / step, quant, 8 / 8)
(s2 / shoot-05, ARG1, p4 / plane)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),The,1,false), Span(1,2,List(1),plan,plan,false), Span(16,17,List(2),issued.,issue-01,false), Span(2,3,List(3),requires,require-01,false), Span(5,6,List(4),steps,step-01,false), Span(6,7,List(5),before,before,false), Span(10,11,List(6),shoot,shoot-05,false), Span(13,14,List(7),plane,plane,false)),Map(2 -> issue-01, 5 -> before, 7 -> plane, 1 -> plan, 4 -> step-01, 6 -> shoot-05, 0 -> 1, 3 -> require-01),Map(s2 -> shoot-05, b -> before, p2 -> plane, s -> step-01, p -> plan, 1 -> 1, r -> require-01, i -> issue-01))),[Ljava.lang.String;@134e5912,Annotation([Ljava.lang.String;@675e2371,[Ljava.lang.String;@6d5b8299,[Ljava.lang.String;@41e9dd4c),Annotation([Ljava.lang.String;@208e9aaa,[Ljava.lang.String;@36dd6061,[Ledu.cmu.lti.nlp.amr.Dependency;@7a37369),Annotation([Ljava.lang.String;@8afdd6c,[Ljava.lang.String;@5c205d19,[Ljava.lang.String;@1a3e094),Annotation([Ljava.lang.String;@1d07e3f2,[Ljava.lang.String;@6bb50983,[Ledu.cmu.lti.nlp.amr.Entity;@35235979))
AMR:
(i / issue-01, ARG1, s2 / shoot-05)
(p / plan, mod, 1 / 1)
(r / require-01, ARG0, p / plan)
(r / require-01, ARG1, s / step-01)
(r / require-01, time, b / before)
(s / step-01, ARG1, s2 / shoot-05)
(s2 / shoot-05, ARG1, p2 / plane)

Decoded in 453,445 microseconds
Sentence: Prior to the policy taking effect late 20041000 a publicity campaign will notify ranchers and others of the need to file flight plans.

Oracle Span 1:  20041000 => 2004
Oracle Span 2:  and => and
Oracle Span 3:  campaign => campaign-01
Oracle Span 4:  effect => effect
Oracle Span 5:  file => file-01
Oracle Span 6:  late => late
Oracle Span 7:  need => need-01
Oracle Span 8:  notify => notify-01
Oracle Span 9:  others => (person :mod other)
Oracle Span 10:  plans => plan
Oracle Span 11:  policy => policy
Oracle Span 12:  Prior => prior
Oracle Span 13:  publicity => publicity
Oracle Span 14:  ranchers => (person :ARG0-of ranch-01)
Oracle Span 15:  taking => take-01
mkDayMonthYear(20041000,00,10,2004)
Spans:
Span 14-15:  and => and
Span 10-11:  campaign => campaign-01
Span 5-6:  effect => effect
Span 20-21:  file => file-01
Span 21-22:  flight => flight-01
Span 6-7:  late => late
Span 18-19:  need => need-01
Span 12-13:  notify => notify-01
Span 15-16:  others => other
Span 22-23:  plans. => plan-01
Span 3-4:  policy => policy
Span 0-1:  Prior => prior
Span 0-1:  Prior => 1
Span 9-10:  publicity => publicity
Span 13-14:  ranchers => rancher
Span 4-5:  taking => take-01

Langrangian relaxation converged after 19 iterations. Delta = 0.0
Oracle Span 7-8:  20041000 => 2004
Oracle Span 14-15:  and => and
Oracle Span 10-11:  campaign => campaign-01
Oracle Span 5-6:  effect => effect
Oracle Span 20-21:  file => file-01
Oracle Span 6-7:  late => late
Oracle Span 18-19:  need => need-01
Oracle Span 12-13:  notify => notify-01
Oracle Span 15-16:  others => (person :mod other)
Oracle Span 22-23:  plans => plan
Oracle Span 3-4:  policy => policy
Oracle Span 0-1:  Prior => prior
Oracle Span 9-10:  publicity => publicity
Oracle Span 13-14:  ranchers => (person :ARG0-of ranch-01)
Oracle Span 4-5:  taking => take-01

Dependencies:
1	Prior	_	RB	RB	_	13	advmod	_	_
2	to	_	TO	TO	_	1	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	policy	_	NN	NN	_	2	pobj	_	_
5	taking	_	VBG	VBG	_	4	vmod	_	_
6	effect	_	NN	NN	_	5	dobj	_	_
7	late	_	RB	RB	_	5	advmod	_	_
8	20041000	_	CD	CD	_	7	pobj	_	_
9	a	_	DT	DT	_	11	det	_	_
10	publicity	_	NN	NN	_	11	nn	_	_
11	campaign	_	NN	NN	_	13	nsubj	_	_
12	will	_	MD	MD	_	13	aux	_	_
13	notify	_	VB	VB	_	0	root	_	_
14	ranchers	_	NNS	NNS	_	13	dobj	_	_
15	and	_	CC	CC	_	14	cc	_	_
16	others	_	NNS	NNS	_	14	conj	_	_
17	of	_	IN	IN	_	14	prep	_	_
18	the	_	DT	DT	_	19	det	_	_
19	need	_	NN	NN	_	17	pobj	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	file	_	VB	VB	_	19	vmod	_	_
22	flight	_	NN	NN	_	23	nn	_	_
23	plans	_	NNS	NNS	_	21	dobj	_	_
24	.	_	.	.	_	13	punct	_	_

Oracle:
(a / and, op, p2 / person)
(a / and, op, p3 / person)
(c / campaign-01, mod, p / publicity)
(f / file-01, ARG0, a / and)
(f / file-01, ARG1, p4 / plan)
(n / notify-01, ARG0, c / campaign-01)
(n / notify-01, ARG1, a / and)
(n / notify-01, ARG2, n2 / need-01)
(n / notify-01, time, p5 / prior)
(n2 / need-01, ARG0, a / and)
(n2 / need-01, ARG1, f / file-01)
(p3 / person, mod, o / other)
(p5 / prior, op, t / take-01)
(r / ranch-01, ARG0, p2 / person)
(t / take-01, ARG0, p6 / policy)
(t / take-01, ARG1, e / effect)
(t / take-01, time, l2 / late)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),others,other,false), Span(6,7,List(1),late,late,false), Span(0,1,List(2),Prior,prior,false), Span(4,5,List(3),taking,take-01,false), Span(10,11,List(4),campaign,campaign-01,false), Span(22,23,List(5),plans.,plan-01,false), Span(9,10,List(6),publicity,publicity,false), Span(12,13,List(7),notify,notify-01,false), Span(0,1,List(8),Prior,1,false), Span(14,15,List(9),and,and,false), Span(5,6,List(10),effect,effect,false), Span(20,21,List(11),file,file-01,false), Span(21,22,List(12),flight,flight-01,false), Span(3,4,List(13),policy,policy,false), Span(18,19,List(14),need,need-01,false), Span(13,14,List(15),ranchers,rancher,false)),Map(2 -> prior, 5 -> plan-01, 12 -> flight-01, 15 -> rancher, 8 -> 1, 7 -> notify-01, 1 -> late, 4 -> campaign-01, 11 -> file-01, 14 -> need-01, 6 -> publicity, 0 -> other, 9 -> and, 3 -> take-01, 10 -> effect, 13 -> policy),Map(e -> effect, n -> notify-01, t -> take-01, p2 -> plan-01, 1 -> 1, p -> prior, a -> and, p4 -> policy, r -> rancher, c -> campaign-01, l -> late, f2 -> flight-01, f -> file-01, o -> other, p3 -> publicity, n2 -> need-01))),[Ljava.lang.String;@6b26e63a,Annotation([Ljava.lang.String;@67a005fe,[Ljava.lang.String;@3d3ab74d,[Ljava.lang.String;@15d57932),Annotation([Ljava.lang.String;@491e5a84,[Ljava.lang.String;@2e7639ac,[Ledu.cmu.lti.nlp.amr.Dependency;@469e63f0),Annotation([Ljava.lang.String;@783c9ef8,[Ljava.lang.String;@43cd3101,[Ljava.lang.String;@5ce9cb8d),Annotation([Ljava.lang.String;@69dda203,[Ljava.lang.String;@750a2a9e,[Ledu.cmu.lti.nlp.amr.Entity;@5fe54807))
AMR:
(a / and, op, o / other)
(c / campaign-01, mod, p3 / publicity)
(f / file-01, ARG0, a / and)
(f / file-01, ARG1, p2 / plan-01)
(n / notify-01, ARG0, c / campaign-01)
(n / notify-01, ARG1, r / rancher)
(n / notify-01, ARG2, n2 / need-01)
(n / notify-01, time, 1 / 1)
(n / notify-01, time, p / prior)
(n2 / need-01, ARG1, f / file-01)
(p / prior, op, t / take-01)
(p2 / plan-01, ARG1, f2 / flight-01)
(t / take-01, ARG0, p4 / policy)
(t / take-01, ARG1, e / effect)
(t / take-01, time, l / late)

Decoded in 996,884 microseconds
Sentence: The Law to permit such an action was originally approved in 1998 but 1995-2003 President Fernando Henrique Cardoso never put the policy into effect.

Oracle Span 1:  1995-2003 => 1995
Oracle Span 2:  1998 => (date-entity :year 1998)
Oracle Span 3:  action => action
Oracle Span 4:  approved => approve-01
Oracle Span 5:  but => contrast-01
Oracle Span 6:  effect => effect
Oracle Span 7:  Fernando Henrique Cardoso => (person :name (name :op "Cardoso" :op "Henrique" :op "Fernando"))
Oracle Span 8:  Law => law
Oracle Span 9:  originally => original
Oracle Span 10:  permit => permit-01
Oracle Span 11:  policy => policy
Oracle Span 12:  President => (have-org-role-91 :ARG2 president)
Oracle Span 13:  put => put-03
Oracle Span 14:  such => such
NER Entity: (person :name (name :op "Fernando" :op "Henrique" :op "Cardoso"))
mkDayMonthYear(1995-2003,03,20,1995)
Spans:
Span 6-7:  action => action
Span 9-10:  approved => approve-01
Span 12-13:  but => contrast-01
Span 23-24:  effect. => effect
Span 15-18:  Fernando Henrique Cardoso => (person :name (name :op "Fernando" :op "Henrique" :op "Cardoso"))
Span 1-2:  Law => law
Span 8-9:  originally => original
Span 3-4:  permit => permit-01
Span 21-22:  policy => policy
Span 19-20:  put => put-01
Span 4-5:  such => such
Span 0-12:  The Law to permit such an action was originally approved in 1998 => (date-entity :year 1998)

Langrangian relaxation converged after 50 iterations. Delta = 0.0
Oracle Span 13-14:  1995-2003 => 1995
Oracle Span 11-12:  1998 => (date-entity :year 1998)
Oracle Span 6-7:  action => action
Oracle Span 9-10:  approved => approve-01
Oracle Span 12-13:  but => contrast-01
Oracle Span 23-24:  effect => effect
Oracle Span 15-18:  Fernando Henrique Cardoso => (person :name (name :op "Cardoso" :op "Henrique" :op "Fernando"))
Oracle Span 1-2:  Law => law
Oracle Span 8-9:  originally => original
Oracle Span 3-4:  permit => permit-01
Oracle Span 21-22:  policy => policy
Oracle Span 14-15:  President => (have-org-role-91 :ARG2 president)
Oracle Span 19-20:  put => put-03
Oracle Span 4-5:  such => such

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	Law	_	NN	NN	_	10	nsubjpass	_	_
3	to	_	TO	TO	_	4	aux	_	_
4	permit	_	VB	VB	_	2	vmod	_	_
5	such	_	PDT	PDT	_	7	predet	_	_
6	an	_	DT	DT	_	7	det	_	_
7	action	_	NN	NN	_	4	dobj	_	_
8	was	_	VBD	VBD	_	10	auxpass	_	_
9	originally	_	RB	RB	_	10	advmod	_	_
10	approved	_	VBN	VBN	_	0	root	_	_
11	in	_	IN	IN	_	10	prep	_	_
12	1998	_	CD	CD	_	11	pobj	_	_
13	but	_	CC	CC	_	10	cc	_	_
14	1995-2003	_	NNP	NNP	_	18	nn	_	_
15	President	_	NNP	NNP	_	18	nn	_	_
16	Fernando	_	NNP	NNP	_	18	nn	_	_
17	Henrique	_	NNP	NNP	_	18	nn	_	_
18	Cardoso	_	NNP	NNP	_	20	nsubj	_	_
19	never	_	RB	RB	_	20	neg	_	_
20	put	_	VBD	VBD	_	10	conj	_	_
21	the	_	DT	DT	_	22	det	_	_
22	policy	_	NN	NN	_	20	dobj	_	_
23	into	_	IN	IN	_	20	prep	_	_
24	effect	_	NN	NN	_	23	pobj	_	_
25	.	_	.	.	_	10	punct	_	_

Oracle:
(a / approve-01, ARG1, l / law)
(a / approve-01, mod, o / original)
(a / approve-01, time, d / date-entity)
(a2 / action, mod, s / such)
(c / contrast-01, ARG1, a / approve-01)
(c / contrast-01, ARG2, p2 / put-03)
(d / date-entity, year, 1998)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG2, p4 / president)
(n / name, op, "Cardoso")
(n / name, op, "Fernando")
(n / name, op, "Henrique")
(p / permit-01, ARG0, l / law)
(p / permit-01, ARG1, a2 / action)
(p2 / put-03, ARG0, p3 / person)
(p2 / put-03, ARG1, p5 / policy)
(p2 / put-03, ARG2, e2 / effect)
(p3 / person, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),action,action,false), Span(0,12,List(2, 1),The Law to permit such an action was originally approved in 1998,(date-entity :year 1998),false), Span(12,13,List(3),but,contrast-01,false), Span(21,22,List(4),policy,policy,false), Span(3,4,List(5),permit,permit-01,false), Span(15,18,List(10, 9, 8, 7, 6),Fernando Henrique Cardoso,(person :name (name :op "Fernando" :op "Henrique" :op "Cardoso")),false), Span(1,2,List(11),Law,law,false), Span(8,9,List(12),originally,original,false), Span(9,10,List(13),approved,approve-01,false), Span(4,5,List(14),such,such,false), Span(19,20,List(15),put,put-01,false), Span(23,24,List(16),effect.,effect,false)),Map(2 -> 1998, 5 -> permit-01, 12 -> original, 15 -> put-01, 8 -> "Fernando", 7 -> name, 1 -> date-entity, 4 -> policy, 11 -> law, 14 -> such, 6 -> person, 0 -> action, 9 -> "Henrique", 16 -> effect, 3 -> contrast-01, 10 -> "Cardoso", 13 -> approve-01),Map(e -> effect, n -> name, p2 -> permit-01, s -> such, d -> date-entity, 1 -> 1998, p -> policy, a -> action, p4 -> put-01, a2 -> approve-01, c -> contrast-01, l -> law, o -> original, p3 -> person))),[Ljava.lang.String;@4df41124,Annotation([Ljava.lang.String;@2767188,[Ljava.lang.String;@3a0ad0f5,[Ljava.lang.String;@6bad7db2),Annotation([Ljava.lang.String;@63d2cd2,[Ljava.lang.String;@3776e7ac,[Ledu.cmu.lti.nlp.amr.Dependency;@5b1704cf),Annotation([Ljava.lang.String;@5bd7a2f2,[Ljava.lang.String;@34635ee6,[Ljava.lang.String;@34289441),Annotation([Ljava.lang.String;@57fadf77,[Ljava.lang.String;@315c3748,[Ledu.cmu.lti.nlp.amr.Entity;@1fe6dbeb))
AMR:
(a / action, mod, s / such)
(a2 / approve-01, ARG1, l / law)
(a2 / approve-01, mod, o / original)
(c / contrast-01, ARG1, a2 / approve-01)
(c / contrast-01, ARG2, p4 / put-01)
(c / contrast-01, ARG6, d / date-entity)
(d / date-entity, year, 1 / 1998)
(n / name, op, "Cardoso")
(n / name, op, "Fernando")
(n / name, op, "Henrique")
(p2 / permit-01, ARG0, l / law)
(p2 / permit-01, ARG1, a / action)
(p3 / person, name, n / name)
(p4 / put-01, ARG0, p3 / person)
(p4 / put-01, ARG1, p / policy)
(p4 / put-01, ARG2, e / effect)

Decoded in 1,811,670 microseconds
Sentence: The United States dissuaded Cardoso from signing the decree out of concern that the accidental downing of civilian aircraft could expose the US government and companies to lawsuits.

Oracle Span 1:  accidental => accident
Oracle Span 2:  aircraft => aircraft
Oracle Span 3:  and => and
Oracle Span 4:  Cardoso => (person :name (name :op "Cardoso"))
Oracle Span 5:  civilian => civilian
Oracle Span 6:  companies => company
Oracle Span 7:  concern => concern-01
Oracle Span 8:  could => possible
Oracle Span 9:  decree => decree
Oracle Span 10:  dissuaded => dissuade-01
Oracle Span 11:  downing => down-01
Oracle Span 12:  expose => expose-01
Oracle Span 13:  government => (government-organization :ARG0-of govern-01)
Oracle Span 14:  lawsuits => lawsuit
Oracle Span 15:  signing => sign-01
Oracle Span 16:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (person :name (name :op "Cardoso"))
Spans:
Span 18-19:  aircraft => aircraft
Span 24-25:  and => and
Span 4-5:  Cardoso => (person :name (name :op "Cardoso"))
Span 17-18:  civilian => civilian
Span 25-26:  companies => company
Span 11-12:  concern => concern-01
Span 19-20:  could => possible
Span 8-9:  decree => decree
Span 3-4:  dissuaded => dissuade-01
Span 15-16:  downing => down-01
Span 20-21:  expose => expose-01
Span 23-24:  government => (government-organization :ARG0-of govern-01)
Span 27-28:  lawsuits. => lawsuit
Span 6-7:  signing => sign-02
Span 1-3:  United States => (country :name (name :op "United" :op "States"))
Span 22-23:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 64 iterations. Delta = 0.0
Oracle Span 14-15:  accidental => accident
Oracle Span 18-19:  aircraft => aircraft
Oracle Span 24-25:  and => and
Oracle Span 4-5:  Cardoso => (person :name (name :op "Cardoso"))
Oracle Span 17-18:  civilian => civilian
Oracle Span 25-26:  companies => company
Oracle Span 11-12:  concern => concern-01
Oracle Span 19-20:  could => possible
Oracle Span 8-9:  decree => decree
Oracle Span 3-4:  dissuaded => dissuade-01
Oracle Span 15-16:  downing => down-01
Oracle Span 20-21:  expose => expose-01
Oracle Span 23-24:  government => (government-organization :ARG0-of govern-01)
Oracle Span 27-28:  lawsuits => lawsuit
Oracle Span 6-7:  signing => sign-01
Oracle Span 1-3:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	United	_	NNP	NNP	_	3	nn	_	_
3	States	_	NNPS	NNPS	_	4	nsubj	_	_
4	dissuaded	_	VBD	VBD	_	0	root	_	_
5	Cardoso	_	NNP	NNP	_	4	dobj	_	_
6	from	_	IN	IN	_	4	prep	_	_
7	signing	_	VBG	VBG	_	6	pcomp	_	_
8	the	_	DT	DT	_	9	det	_	_
9	decree	_	NN	NN	_	7	dobj	_	_
10	out	_	RP	RP	_	7	prt	_	_
11	of	_	IN	IN	_	7	prep	_	_
12	concern	_	NN	NN	_	11	pobj	_	_
13	that	_	IN	IN	_	21	mark	_	_
14	the	_	DT	DT	_	16	det	_	_
15	accidental	_	JJ	JJ	_	16	amod	_	_
16	downing	_	NN	NN	_	21	nsubj	_	_
17	of	_	IN	IN	_	16	prep	_	_
18	civilian	_	JJ	JJ	_	19	amod	_	_
19	aircraft	_	NN	NN	_	17	pobj	_	_
20	could	_	MD	MD	_	21	aux	_	_
21	expose	_	VB	VB	_	4	ccomp	_	_
22	the	_	DT	DT	_	24	det	_	_
23	US	_	NNP	NNP	_	24	nn	_	_
24	government	_	NN	NN	_	21	dobj	_	_
25	and	_	CC	CC	_	24	cc	_	_
26	companies	_	NNS	NNS	_	24	conj	_	_
27	to	_	TO	TO	_	21	prep	_	_
28	lawsuits	_	NNS	NNS	_	27	pobj	_	_
29	.	_	.	.	_	4	punct	_	_

Oracle:
(a / aircraft, mod, c4 / civilian)
(a3 / and, op, c5 / company)
(a3 / and, op, g / government-organization)
(c / country, name, n / name)
(c3 / concern-01, ARG0, p2 / possible)
(c3 / concern-01, ARG1, c / country)
(d / dissuade-01, ARG0, c / country)
(d / dissuade-01, ARG1, p / person)
(d / dissuade-01, ARG2, s / sign-01)
(d3 / down-01, ARG1, a / aircraft)
(d3 / down-01, mod, a2 / accident)
(e / expose-01, ARG0, d3 / down-01)
(e / expose-01, ARG1, a3 / and)
(e / expose-01, ARG2, l / lawsuit)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "Cardoso")
(p / person, name, n2 / name)
(p2 / possible, domain, e / expose-01)
(s / sign-01, ARG0, p / person)
(s / sign-01, ARG1, d2 / decree)

Input(Some(Graph(null,ArrayBuffer(Span(1,3,List(3, 2, 1, 0),United States,(country :name (name :op "United" :op "States")),false), Span(11,12,List(4),concern,concern-01,false), Span(17,18,List(5),civilian,civilian,false), Span(6,7,List(6),signing,sign-02,false), Span(23,24,List(8, 7),government,(government-organization :ARG0-of govern-01),false), Span(18,19,List(9),aircraft,aircraft,false), Span(27,28,List(10),lawsuits.,lawsuit,false), Span(19,20,List(11),could,possible,false), Span(20,21,List(12),expose,expose-01,false), Span(22,23,List(15, 14, 13),US,(country :name (name :op "US")),false), Span(25,26,List(16),companies,company,false), Span(24,25,List(17),and,and,false), Span(4,5,List(20, 19, 18),Cardoso,(person :name (name :op "Cardoso")),false), Span(15,16,List(21),downing,down-01,false), Span(8,9,List(22),decree,decree,false), Span(3,4,List(23),dissuaded,dissuade-01,false)),Map(2 -> "United", 5 -> civilian, 12 -> expose-01, 15 -> "US", 8 -> govern-01, 21 -> down-01, 18 -> person, 7 -> government-organization, 17 -> and, 1 -> name, 23 -> dissuade-01, 4 -> concern-01, 11 -> possible, 14 -> name, 20 -> "Cardoso", 6 -> sign-02, 22 -> decree, 0 -> country, 9 -> aircraft, 16 -> company, 19 -> name, 3 -> "States", 10 -> lawsuit, 13 -> country),Map(e -> expose-01, n -> name, d3 -> dissuade-01, p2 -> person, c4 -> country, s -> sign-02, d -> down-01, g2 -> govern-01, g -> government-organization, p -> possible, n3 -> name, c3 -> civilian, a -> aircraft, d2 -> decree, a2 -> and, c -> country, l -> lawsuit, c2 -> concern-01, n2 -> name, c5 -> company))),[Ljava.lang.String;@79ef277a,Annotation([Ljava.lang.String;@6e3a7477,[Ljava.lang.String;@fa00363,[Ljava.lang.String;@43a6dd1d),Annotation([Ljava.lang.String;@43f2e6e4,[Ljava.lang.String;@7e56bb21,[Ledu.cmu.lti.nlp.amr.Dependency;@71e21493),Annotation([Ljava.lang.String;@4596187,[Ljava.lang.String;@5048722e,[Ljava.lang.String;@1b0c44b5),Annotation([Ljava.lang.String;@7a2b9dcb,[Ljava.lang.String;@35318e50,[Ledu.cmu.lti.nlp.amr.Entity;@26fb43da))
AMR:
(a / aircraft, mod, c3 / civilian)
(a2 / and, op, c5 / company)
(a2 / and, op, g / government-organization)
(c / country, name, n / name)
(c2 / concern-01, ARG0, p / possible)
(c2 / concern-01, ARG1, c / country)
(c4 / country, name, n2 / name)
(d / down-01, ARG1, a / aircraft)
(d3 / dissuade-01, ARG0, c / country)
(d3 / dissuade-01, ARG1, p2 / person)
(d3 / dissuade-01, ARG2, s / sign-02)
(e / expose-01, ARG0, d / down-01)
(e / expose-01, ARG1, a2 / and)
(e / expose-01, ARG2, l / lawsuit)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c4 / country)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "US")
(n3 / name, op, "Cardoso")
(p / possible, domain, e / expose-01)
(p2 / person, name, n3 / name)
(s / sign-02, ARG1, d2 / decree)

Decoded in 3,224,566 microseconds
Sentence: 20010400 the United States reduced previous support for operations targeting drug-running aircraft when a Peruvian jet shot down a small plane misidentified as a drug carrier and killed an American missionary and her child.

Oracle Span 1:  20010400 => 2001
Oracle Span 2:  aircraft => aircraft
Oracle Span 3:  and => and
Oracle Span 4:  and => and
Oracle Span 5:  carrier => (thing :ARG0-of carry-01)
Oracle Span 6:  child => child
Oracle Span 7:  drug => drug
Oracle Span 8:  drug => drug
Oracle Span 9:  jet => jet
Oracle Span 10:  killed => kill-01
Oracle Span 11:  misidentified => misidentify-00
Oracle Span 12:  missionary => missionary
Oracle Span 13:  operations => operation
Oracle Span 14:  Peruvian => (country :name (name :op "Peru"))
Oracle Span 15:  plane => plane
Oracle Span 16:  previous => previous
Oracle Span 17:  reduced => reduce-01
Oracle Span 18:  running => run-08
Oracle Span 19:  shot => shoot-05
Oracle Span 20:  small => small
Oracle Span 21:  support => support-01
Oracle Span 22:  targeting => target-01
Oracle Span 23:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (thing :name (name :op "American"))
mkDayMonthYear(20010400,00,04,2001)
Spans:
Span 0-1:  20010400 => 1
Span 11-12:  aircraft => aircraft
Span 28-29:  an => (person :ARG0-of have-org-role-91)
Span 26-27:  and => and
Span 31-32:  and => and
Span 25-26:  carrier => carbonize-01
Span 33-34:  child. => child
Span 24-25:  drug => drug
Span 15-16:  jet => jet
Span 27-28:  killed => kill-01
Span 8-9:  operations => operation
Span 20-21:  plane => plane
Span 5-6:  previous => previous
Span 4-5:  reduced => reduce-01
Span 19-20:  small => small
Span 6-7:  support => support-01
Span 9-10:  targeting => target-01
Span 2-4:  United States => (country :name (name :op "United" :op "States"))

Langrangian relaxation converged after 48 iterations. Delta = 0.0
Oracle Span 0-1:  20010400 => 2001
Oracle Span 13-14:  aircraft => aircraft
Oracle Span 28-29:  and => and
Oracle Span 33-34:  and => and
Oracle Span 27-28:  carrier => (thing :ARG0-of carry-01)
Oracle Span 35-36:  child => child
Oracle Span 10-11:  drug => drug
Oracle Span 26-27:  drug => drug
Oracle Span 17-18:  jet => jet
Oracle Span 29-30:  killed => kill-01
Oracle Span 23-24:  misidentified => misidentify-00
Oracle Span 32-33:  missionary => missionary
Oracle Span 8-9:  operations => operation
Oracle Span 16-17:  Peruvian => (country :name (name :op "Peru"))
Oracle Span 22-23:  plane => plane
Oracle Span 5-6:  previous => previous
Oracle Span 4-5:  reduced => reduce-01
Oracle Span 12-13:  running => run-08
Oracle Span 18-19:  shot => shoot-05
Oracle Span 21-22:  small => small
Oracle Span 6-7:  support => support-01
Oracle Span 9-10:  targeting => target-01
Oracle Span 2-4:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	20010400	_	CD	CD	_	5	nsubj	_	_
2	the	_	DT	DT	_	4	det	_	_
3	United	_	NNP	NNP	_	4	nn	_	_
4	States	_	NNPS	NNPS	_	1	dep	_	_
5	reduced	_	VBD	VBD	_	0	root	_	_
6	previous	_	JJ	JJ	_	7	amod	_	_
7	support	_	NN	NN	_	5	dobj	_	_
8	for	_	IN	IN	_	5	prep	_	_
9	operations	_	NNS	NNS	_	8	pobj	_	_
10	targeting	_	VBG	VBG	_	9	vmod	_	_
11	drug-running	_	JJ	JJ	_	12	amod	_	_
12	aircraft	_	NN	NN	_	10	dobj	_	_
13	when	_	WRB	WRB	_	17	advmod	_	_
14	a	_	DT	DT	_	16	det	_	_
15	Peruvian	_	JJ	JJ	_	16	amod	_	_
16	jet	_	NN	NN	_	17	nsubj	_	_
17	shot	_	VBD	VBD	_	10	advcl	_	_
18	down	_	RP	RP	_	17	prt	_	_
19	a	_	DT	DT	_	21	det	_	_
20	small	_	JJ	JJ	_	21	amod	_	_
21	plane	_	NN	NN	_	17	dobj	_	_
22	misidentified	_	VBN	VBN	_	21	vmod	_	_
23	as	_	IN	IN	_	22	prep	_	_
24	a	_	DT	DT	_	26	det	_	_
25	drug	_	NN	NN	_	26	nn	_	_
26	carrier	_	NN	NN	_	23	pobj	_	_
27	and	_	CC	CC	_	5	cc	_	_
28	killed	_	VBD	VBD	_	5	conj	_	_
29	an	_	DT	DT	_	31	det	_	_
30	American	_	JJ	JJ	_	31	amod	_	_
31	missionary	_	NN	NN	_	28	dobj	_	_
32	and	_	CC	CC	_	31	cc	_	_
33	her	_	PRP$	PRP$	_	34	poss	_	_
34	child	_	NN	NN	_	31	conj	_	_
35	.	_	.	.	_	5	punct	_	_

Oracle:
(a2 / and, op, k / kill-01)
(a2 / and, op, s2 / shoot-05)
(a3 / and, op, c4 / child)
(a3 / and, op, m2 / missionary)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / carry-01, ARG0, t2 / thing)
(c3 / carry-01, ARG1, d3 / drug)
(c4 / child, poss, m2 / missionary)
(j / jet, mod, c2 / country)
(k / kill-01, ARG0, j / jet)
(k / kill-01, ARG1, a3 / and)
(m / misidentify-00, ARG1, p2 / plane)
(m / misidentify-00, ARG2, t2 / thing)
(m2 / missionary, mod, c / country)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "Peru")
(p2 / plane, mod, s3 / small)
(r / reduce-01, ARG0, c / country)
(r / reduce-01, ARG1, s / support-01)
(r / reduce-01, time, a2 / and)
(r2 / run-08, ARG0, a / aircraft)
(r2 / run-08, ARG1, d2 / drug)
(s / support-01, ARG0, c / country)
(s / support-01, ARG1, o / operation)
(s / support-01, time, p / previous)
(s2 / shoot-05, ARG0, j / jet)
(s2 / shoot-05, ARG1, p2 / plane)
(t / target-01, ARG0, o / operation)
(t / target-01, ARG1, a / aircraft)

Input(Some(Graph(null,ArrayBuffer(Span(33,34,List(0),child.,child,false), Span(6,7,List(1),support,support-01,false), Span(15,16,List(2),jet,jet,false), Span(2,4,List(6, 5, 4, 3),United States,(country :name (name :op "United" :op "States")),false), Span(20,21,List(7),plane,plane,false), Span(26,27,List(8),and,and,false), Span(19,20,List(9),small,small,false), Span(31,32,List(10),and,and,false), Span(9,10,List(11),targeting,target-01,false), Span(0,1,List(12),20010400,1,false), Span(27,28,List(13),killed,kill-01,false), Span(24,25,List(14),drug,drug,false), Span(4,5,List(15),reduced,reduce-01,false), Span(28,29,List(17, 16),an,(person :ARG0-of have-org-role-91),false), Span(5,6,List(18),previous,previous,false), Span(8,9,List(19),operations,operation,false), Span(25,26,List(20),carrier,carbonize-01,false), Span(11,12,List(21),aircraft,aircraft,false)),Map(2 -> jet, 5 -> "United", 12 -> 1, 15 -> reduce-01, 8 -> and, 21 -> aircraft, 18 -> previous, 7 -> plane, 17 -> have-org-role-91, 1 -> support-01, 4 -> name, 11 -> target-01, 14 -> drug, 20 -> carbonize-01, 6 -> "States", 0 -> child, 9 -> small, 16 -> person, 19 -> operation, 3 -> country, 10 -> and, 13 -> kill-01),Map(n -> name, h -> have-org-role-91, s2 -> small, t -> target-01, k -> kill-01, p2 -> person, a3 -> aircraft, j -> jet, s -> support-01, d -> drug, 1 -> 1, p -> plane, c3 -> carbonize-01, a -> and, r -> reduce-01, a2 -> and, c -> child, o -> operation, p3 -> previous, c2 -> country))),[Ljava.lang.String;@6fb672bf,Annotation([Ljava.lang.String;@4804e73e,[Ljava.lang.String;@231d458a,[Ljava.lang.String;@56aadfea),Annotation([Ljava.lang.String;@a557c0a,[Ljava.lang.String;@65874769,[Ledu.cmu.lti.nlp.amr.Dependency;@2cff6f46),Annotation([Ljava.lang.String;@2caab0bc,[Ljava.lang.String;@d3e2c0f,[Ljava.lang.String;@52dd9ece),Annotation([Ljava.lang.String;@58f4e8c,[Ljava.lang.String;@7cd921d1,[Ledu.cmu.lti.nlp.amr.Entity;@7b3411))
AMR:
(a2 / and, op, a / and)
(a2 / and, op, p / plane)
(c / child, op, s / support-01)
(c2 / country, name, n / name)
(c3 / carbonize-01, ARG0, 1 / 1)
(c3 / carbonize-01, ARG1, d / drug)
(d / drug, op, k / kill-01)
(h / have-org-role-91, ARG0, p2 / person)
(j / jet, mod, c2 / country)
(k / kill-01, ARG2, a3 / aircraft)
(k / kill-01, mod, a / and)
(n / name, op, "States")
(n / name, op, "United")
(p2 / person, op, k / kill-01)
(r / reduce-01, ARG0, c2 / country)
(r / reduce-01, ARG1, s / support-01)
(r / reduce-01, time, p2 / person)
(s / support-01, ARG1, o / operation)
(s / support-01, time, p3 / previous)
(t / target-01, ARG1, o / operation)
(t / target-01, ARG6, s2 / small)

Decoded in 2,874,341 microseconds
Sentence: Relatives of the victims sued the US government and won a settlement due to the Government's provision of intelligence and technical support to the operation.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  government => government-organization
Oracle Span 4:  Government => govern-01
Oracle Span 5:  intelligence => intelligence
Oracle Span 6:  operation => operation
Oracle Span 7:  provision => provide-01
Oracle Span 8:  Relatives => relative
Oracle Span 9:  settlement => settle-02
Oracle Span 10:  sued => sue-01
Oracle Span 11:  support => support-01
Oracle Span 12:  technical => technical
Oracle Span 13:  US => (country :name (name :op "US"))
Oracle Span 14:  victims => victim
Oracle Span 15:  won => win-01
NER Entity: (country :name (name :op "US"))
Spans:
Span 25-26:   => operation
Span 8-9:  and => and
Span 19-20:  and => intelligence
Span 7-8:  government => (government-organization :ARG0-of govern-01)
Span 15-16:  Government's => (government-organization :ARG0-of govern-01)
Span 17-18:  of => (thing :ARG1-of provide-01)
Span 0-1:  Relatives => relative
Span 11-12:  settlement => settle-01
Span 4-5:  sued => sue-01
Span 21-22:  support => technical
Span 20-21:  technical => and
Span 22-23:  to => support-01
Span 6-7:  US => (country :name (name :op "US"))
Span 3-4:  victims => victim
Span 9-10:  won => win-01

Langrangian relaxation converged after 30 iterations. Delta = 0.0
Oracle Span 8-9:  and => and
Oracle Span 20-21:  and => and
Oracle Span 7-8:  government => government-organization
Oracle Span 15-16:  Government => govern-01
Oracle Span 19-20:  intelligence => intelligence
Oracle Span 25-26:  operation => operation
Oracle Span 17-18:  provision => provide-01
Oracle Span 0-1:  Relatives => relative
Oracle Span 11-12:  settlement => settle-02
Oracle Span 4-5:  sued => sue-01
Oracle Span 22-23:  support => support-01
Oracle Span 21-22:  technical => technical
Oracle Span 6-7:  US => (country :name (name :op "US"))
Oracle Span 3-4:  victims => victim
Oracle Span 9-10:  won => win-01

Dependencies:
1	Relatives	_	NNS	NNS	_	5	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	the	_	DT	DT	_	4	det	_	_
4	victims	_	NNS	NNS	_	2	pobj	_	_
5	sued	_	VBD	VBD	_	0	root	_	_
6	the	_	DT	DT	_	8	det	_	_
7	US	_	NNP	NNP	_	8	nn	_	_
8	government	_	NN	NN	_	5	dobj	_	_
9	and	_	CC	CC	_	5	cc	_	_
10	won	_	VBD	VBD	_	5	conj	_	_
11	a	_	DT	DT	_	12	det	_	_
12	settlement	_	NN	NN	_	10	dobj	_	_
13	due	_	JJ	JJ	_	14	mwe	_	_
14	to	_	TO	TO	_	10	prep	_	_
15	the	_	DT	DT	_	16	det	_	_
16	Government	_	NN	NN	_	18	poss	_	_
17	's	_	POS	POS	_	16	possessive	_	_
18	provision	_	NN	NN	_	14	pobj	_	_
19	of	_	IN	IN	_	18	prep	_	_
20	intelligence	_	NN	NN	_	23	nn	_	_
21	and	_	CC	CC	_	20	cc	_	_
22	technical	_	JJ	JJ	_	20	conj	_	_
23	support	_	NN	NN	_	19	pobj	_	_
24	to	_	TO	TO	_	10	prep	_	_
25	the	_	DT	DT	_	26	det	_	_
26	operation	_	NN	NN	_	24	pobj	_	_
27	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, op, s / sue-01)
(a / and, op, w / win-01)
(a2 / and, op, i / intelligence)
(a2 / and, op, s3 / support-01)
(c / country, name, n / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(n / name, op, "US")
(p / provide-01, ARG0, g / government-organization)
(p / provide-01, ARG1, a2 / and)
(p / provide-01, ARG2, o / operation)
(r / relative, poss, v / victim)
(s / sue-01, ARG0, r / relative)
(s / sue-01, ARG1, g / government-organization)
(s3 / support-01, mod, t / technical)
(w / win-01, ARG0, r / relative)
(w / win-01, ARG1, s2 / settle-02)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),won,win-01,false), Span(21,22,List(1),support,technical,false), Span(22,23,List(2),to,support-01,false), Span(25,26,List(3),,operation,false), Span(7,8,List(5, 4),government,(government-organization :ARG0-of govern-01),false), Span(11,12,List(6),settlement,settle-01,false), Span(4,5,List(7),sued,sue-01,false), Span(20,21,List(8),technical,and,false), Span(17,18,List(10, 9),of,(thing :ARG1-of provide-01),false), Span(6,7,List(13, 12, 11),US,(country :name (name :op "US")),false), Span(15,16,List(15, 14),Government's,(government-organization :ARG0-of govern-01),false), Span(3,4,List(16),victims,victim,false), Span(8,9,List(17),and,and,false), Span(19,20,List(18),and,intelligence,false), Span(0,1,List(19),Relatives,relative,false)),Map(2 -> support-01, 5 -> govern-01, 12 -> name, 15 -> govern-01, 8 -> and, 18 -> intelligence, 7 -> sue-01, 17 -> and, 1 -> technical, 4 -> government-organization, 11 -> country, 14 -> government-organization, 6 -> settle-01, 0 -> win-01, 9 -> thing, 16 -> victim, 19 -> relative, 3 -> operation, 10 -> provide-01, 13 -> "US"),Map(w -> win-01, n -> name, g3 -> government-organization, s2 -> settle-01, t -> technical, s -> support-01, v -> victim, g2 -> govern-01, g -> government-organization, p -> provide-01, a -> and, t2 -> thing, r -> relative, i -> intelligence, a2 -> and, s3 -> sue-01, c -> country, o -> operation, g4 -> govern-01))),[Ljava.lang.String;@75c7d3f9,Annotation([Ljava.lang.String;@18588a65,[Ljava.lang.String;@31680549,[Ljava.lang.String;@33704e7b),Annotation([Ljava.lang.String;@78630bf7,[Ljava.lang.String;@2434ad3c,[Ledu.cmu.lti.nlp.amr.Dependency;@5507a6be),Annotation([Ljava.lang.String;@64b539f3,[Ljava.lang.String;@4e9aa21,[Ljava.lang.String;@535aacd),Annotation([Ljava.lang.String;@6d6fce83,[Ljava.lang.String;@2058187c,[Ledu.cmu.lti.nlp.amr.Entity;@692906f4))
AMR:
(a / and, op, i / intelligence)
(a / and, op, s / support-01)
(a2 / and, op, s3 / sue-01)
(a2 / and, op, w / win-01)
(c / country, name, n / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(g4 / govern-01, ARG0, g3 / government-organization)
(g4 / govern-01, ARG1, c / country)
(n / name, op, "US")
(p / provide-01, ARG0, g / government-organization)
(p / provide-01, ARG1, t2 / thing)
(p / provide-01, ARG2, o / operation)
(r / relative, poss, v / victim)
(s / support-01, ARG1, t2 / thing)
(s / support-01, mod, t / technical)
(s3 / sue-01, ARG0, r / relative)
(s3 / sue-01, ARG1, g / government-organization)
(w / win-01, ARG0, r / relative)
(w / win-01, ARG1, s2 / settle-01)

Decoded in 1,611,988 microseconds
Sentence: A US State Department official stated --

Oracle Span 1:  official => (have-org-role-91 :ARG2 official)
Oracle Span 2:  State Department => (government-organization :name (name :op "Department" :op "State"))
Oracle Span 3:  stated => state-01
Oracle Span 4:  US => (country :name (name :op "US"))
NER Entity: (organization :name (name :op "US" :op "State" :op "Department"))
Spans:
Span 3-4:  Department => organization
Span 4-5:  official => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 2-3:  State => (thing :ARG1-of state-01)
Span 5-6:  stated => state-01
Span 1-2:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 58 iterations. Delta = 0.0
Oracle Span 4-5:  official => (have-org-role-91 :ARG2 official)
Oracle Span 2-4:  State Department => (government-organization :name (name :op "Department" :op "State"))
Oracle Span 5-6:  stated => state-01
Oracle Span 1-2:  US => (country :name (name :op "US"))

Dependencies:
1	A	_	DT	DT	_	5	det	_	_
2	US	_	NNP	NNP	_	5	nn	_	_
3	State	_	NNP	NNP	_	5	nn	_	_
4	Department	_	NNP	NNP	_	5	nn	_	_
5	official	_	NN	NN	_	0	root	_	_
6	stated	_	VBN	VBN	_	5	vmod	_	_
7	--	_	:	:	_	5	punct	_	_

Oracle:
(c / country, name, n2 / name)
(g / government-organization, mod, c / country)
(g / government-organization, name, n / name)
(h / have-org-role-91, ARG1, g / government-organization)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Department")
(n / name, op, "State")
(n2 / name, op, "US")

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(2, 1, 0),US,(country :name (name :op "US")),false), Span(2,3,List(4, 3),State,(thing :ARG1-of state-01),false), Span(3,4,List(5),Department,organization,false), Span(5,6,List(6),stated,state-01,false), Span(4,5,List(9, 8, 7),official,(person :ARG0-of (have-org-role-91 :ARG2 official)),false)),Map(2 -> "US", 5 -> organization, 8 -> have-org-role-91, 7 -> person, 1 -> name, 4 -> state-01, 6 -> state-01, 9 -> official, 0 -> country, 3 -> thing),Map(n -> name, h -> have-org-role-91, s2 -> state-01, t -> thing, s -> state-01, p -> person, o2 -> official, c -> country, o -> organization))),[Ljava.lang.String;@67d3dbef,Annotation([Ljava.lang.String;@1af0ddb8,[Ljava.lang.String;@6b720239,[Ljava.lang.String;@740f5cf2),Annotation([Ljava.lang.String;@dfafd3f,[Ljava.lang.String;@11fbec25,[Ledu.cmu.lti.nlp.amr.Dependency;@6ae357e9),Annotation([Ljava.lang.String;@64056e8b,[Ljava.lang.String;@3e4c6431,[Ljava.lang.String;@70982d19),Annotation([Ljava.lang.String;@3470fc,[Ljava.lang.String;@4f8a3747,[Ledu.cmu.lti.nlp.amr.Entity;@123aaf6b))
AMR:
(c / country, name, n / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, o / organization)
(h / have-org-role-91, ARG2, o2 / official)
(n / name, op, "US")
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, t / thing)
(s2 / state-01, ARG0, p / person)
(t / thing, poss, c / country)

Decoded in 804,480 microseconds
Sentence: US law may forbid assistance to countries that implement shoot-down laws under certain conditions.

Oracle Span 1:  assistance => assist-01
Oracle Span 2:  certain => certain
Oracle Span 3:  conditions => condition-01
Oracle Span 4:  countries => country
Oracle Span 5:  forbid => forbid-01
Oracle Span 6:  implement => implement-01
Oracle Span 7:  law => law
Oracle Span 8:  laws => law
Oracle Span 9:  may => possible
Oracle Span 10:  shoot => shoot-05
Oracle Span 11:  US => (country :name (name :op "US"))
NER Entity: (country :name (name :op "US"))
Spans:
Span 4-5:  assistance => transcribe-01
Span 12-13:  certain => certain
Span 13-14:  conditions. => condition
Span 6-7:  countries => country
Span 3-4:  forbid => forbid-01
Span 8-9:  implement => implement-01
Span 1-2:  law => law
Span 10-11:  laws => law
Span 0-1:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 46 iterations. Delta = 0.0
Oracle Span 4-5:  assistance => assist-01
Oracle Span 14-15:  certain => certain
Oracle Span 15-16:  conditions => condition-01
Oracle Span 6-7:  countries => country
Oracle Span 3-4:  forbid => forbid-01
Oracle Span 8-9:  implement => implement-01
Oracle Span 1-2:  law => law
Oracle Span 12-13:  laws => law
Oracle Span 2-3:  may => possible
Oracle Span 9-10:  shoot => shoot-05
Oracle Span 0-1:  US => (country :name (name :op "US"))

Dependencies:
1	US	_	NNP	NNP	_	2	nn	_	_
2	law	_	NN	NN	_	4	nsubj	_	_
3	may	_	MD	MD	_	4	aux	_	_
4	forbid	_	VB	VB	_	0	root	_	_
5	assistance	_	NN	NN	_	4	dobj	_	_
6	to	_	TO	TO	_	4	prep	_	_
7	countries	_	NNS	NNS	_	6	pobj	_	_
8	that	_	WDT	WDT	_	9	nsubj	_	_
9	implement	_	VB	VB	_	7	rcmod	_	_
10	shoot-down	_	JJ	JJ	_	11	amod	_	_
11	laws	_	NNS	NNS	_	9	dobj	_	_
12	under	_	IN	IN	_	9	prep	_	_
13	certain	_	JJ	JJ	_	14	amod	_	_
14	conditions	_	NNS	NNS	_	12	pobj	_	_
15	.	_	.	.	_	4	punct	_	_

Oracle:
(a / assist-01, ARG1, c2 / country)
(c / country, name, n / name)
(c3 / condition-01, ARG1, p / possible)
(f / forbid-01, ARG0, l / law)
(f / forbid-01, ARG1, a / assist-01)
(i / implement-01, ARG0, c2 / country)
(i / implement-01, ARG1, l2 / law)
(l / law, mod, c / country)
(l2 / law, mod, s / shoot-05)
(n / name, op, "US")
(p / possible, domain, f / forbid-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),laws,law,false), Span(3,4,List(1),forbid,forbid-01,false), Span(4,5,List(2),assistance,transcribe-01,false), Span(6,7,List(3),countries,country,false), Span(13,14,List(4),conditions.,condition,false), Span(1,2,List(5),law,law,false), Span(12,13,List(6),certain,certain,false), Span(8,9,List(7),implement,implement-01,false), Span(0,1,List(10, 9, 8),US,(country :name (name :op "US")),false)),Map(2 -> transcribe-01, 5 -> law, 8 -> country, 7 -> implement-01, 1 -> forbid-01, 4 -> condition, 6 -> certain, 9 -> name, 0 -> law, 10 -> "US", 3 -> country),Map(n -> name, t -> transcribe-01, c4 -> country, c3 -> certain, i -> implement-01, l2 -> law, c -> country, l -> law, f -> forbid-01, c2 -> condition))),[Ljava.lang.String;@131b7493,Annotation([Ljava.lang.String;@1a2cf382,[Ljava.lang.String;@18e2991a,[Ljava.lang.String;@54c54a4e),Annotation([Ljava.lang.String;@1c3203a9,[Ljava.lang.String;@617f434e,[Ledu.cmu.lti.nlp.amr.Dependency;@6dd92c32),Annotation([Ljava.lang.String;@13b09cfd,[Ljava.lang.String;@1f93fa69,[Ljava.lang.String;@46dafe6),Annotation([Ljava.lang.String;@20f1bbe5,[Ljava.lang.String;@37318c72,[Ledu.cmu.lti.nlp.amr.Entity;@37f1784f))
AMR:
(c3 / certain, mod, c4 / country)
(c4 / country, name, n / name)
(f / forbid-01, ARG0, c3 / certain)
(f / forbid-01, ARG1, t / transcribe-01)
(i / implement-01, ARG0, c / country)
(i / implement-01, ARG1, l2 / law)
(i / implement-01, location, c2 / condition)
(l2 / law, mod, l / law)
(n / name, op, "US")
(t / transcribe-01, ARG1, c / country)

Decoded in 818,797 microseconds
Sentence: The US agrees with the Brazilian assessment that the threat posed by drug traffickers is both very serious and increasing.

Oracle Span 1:  agrees => agree-01
Oracle Span 2:  and => and
Oracle Span 3:  assessment => assess-01
Oracle Span 4:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 5:  drug => drug
Oracle Span 6:  increasing => increase-01
Oracle Span 7:  serious => serious
Oracle Span 8:  threat => (thing :ARG1-of threaten-01)
Oracle Span 9:  traffickers => (person :ARG0-of traffic-00)
Oracle Span 10:  US => (country :name (name :op "US"))
Oracle Span 11:  very => very
NER Entity: (country :name (name :op "US"))
NER Entity: (thing :name (name :op "Brazilian"))
Spans:
Span 2-3:  agrees => agree-01
Span 18-19:  and => and
Span 6-7:  assessment => smarten-02
Span 15-16:  both => both
Span 12-13:  drug => drug
Span 19-20:  increasing. => increase-01
Span 10-11:  posed => pose-02
Span 17-18:  serious => serious
Span 9-10:  threat => treat-01
Span 13-14:  traffickers => (person :ARG0-of traffic-00)
Span 1-2:  US => (country :name (name :op "US"))
Span 16-17:  very => very

Langrangian relaxation converged after 22 iterations. Delta = 0.0
Oracle Span 2-3:  agrees => agree-01
Oracle Span 18-19:  and => and
Oracle Span 6-7:  assessment => assess-01
Oracle Span 5-6:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 12-13:  drug => drug
Oracle Span 19-20:  increasing => increase-01
Oracle Span 17-18:  serious => serious
Oracle Span 9-10:  threat => (thing :ARG1-of threaten-01)
Oracle Span 13-14:  traffickers => (person :ARG0-of traffic-00)
Oracle Span 1-2:  US => (country :name (name :op "US"))
Oracle Span 16-17:  very => very

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	US	_	NNP	NNP	_	3	nsubj	_	_
3	agrees	_	VBZ	VBZ	_	0	root	_	_
4	with	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	Brazilian	_	JJ	JJ	_	7	amod	_	_
7	assessment	_	NN	NN	_	4	pobj	_	_
8	that	_	IN	IN	_	18	mark	_	_
9	the	_	DT	DT	_	10	det	_	_
10	threat	_	NN	NN	_	18	nsubj	_	_
11	posed	_	VBN	VBN	_	10	vmod	_	_
12	by	_	IN	IN	_	11	prep	_	_
13	drug	_	NN	NN	_	14	nn	_	_
14	traffickers	_	NNS	NNS	_	12	pobj	_	_
15	is	_	VBZ	VBZ	_	18	cop	_	_
16	both	_	DT	DT	_	18	det	_	_
17	very	_	RB	RB	_	18	advmod	_	_
18	serious	_	JJ	JJ	_	3	ccomp	_	_
19	and	_	CC	CC	_	3	cc	_	_
20	increasing	_	VBG	VBG	_	3	conj	_	_
21	.	_	.	.	_	3	punct	_	_

Oracle:
(a / agree-01, ARG0, c / country)
(a / agree-01, ARG1, a2 / assess-01)
(a2 / assess-01, ARG0, c2 / country)
(a2 / assess-01, ARG2, a3 / and)
(a3 / and, op, i / increase-01)
(a3 / and, op, s / serious)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(i / increase-01, ARG1, t / thing)
(n / name, op, "US")
(n2 / name, op, "Brazil")
(s / serious, degree, v / very)
(s / serious, domain, t / thing)
(t2 / threaten-01, ARG0, p / person)
(t2 / threaten-01, ARG1, t / thing)
(t3 / traffic-00, ARG0, p / person)
(t3 / traffic-00, ARG1, d / drug)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),both,both,false), Span(1,2,List(3, 2, 1),US,(country :name (name :op "US")),false), Span(13,14,List(5, 4),traffickers,(person :ARG0-of traffic-00),false), Span(2,3,List(6),agrees,agree-01,false), Span(19,20,List(7),increasing.,increase-01,false), Span(6,7,List(8),assessment,smarten-02,false), Span(17,18,List(9),serious,serious,false), Span(9,10,List(10),threat,treat-01,false), Span(16,17,List(11),very,very,false), Span(18,19,List(12),and,and,false), Span(10,11,List(13),posed,pose-02,false), Span(12,13,List(14),drug,drug,false)),Map(2 -> name, 5 -> traffic-00, 12 -> and, 8 -> smarten-02, 7 -> increase-01, 1 -> country, 4 -> person, 11 -> very, 14 -> drug, 6 -> agree-01, 0 -> both, 9 -> serious, 3 -> "US", 10 -> treat-01, 13 -> pose-02),Map(n -> name, s2 -> serious, b -> both, t -> traffic-00, p2 -> pose-02, s -> smarten-02, v -> very, d -> drug, p -> person, a -> agree-01, t2 -> treat-01, i -> increase-01, a2 -> and, c -> country))),[Ljava.lang.String;@443183da,Annotation([Ljava.lang.String;@1bfe7b72,[Ljava.lang.String;@f9f278e,[Ljava.lang.String;@1142804f),Annotation([Ljava.lang.String;@5925eeee,[Ljava.lang.String;@31683b53,[Ledu.cmu.lti.nlp.amr.Dependency;@473dd9a7),Annotation([Ljava.lang.String;@42f869f7,[Ljava.lang.String;@345cbdd8,[Ljava.lang.String;@441eaaa3),Annotation([Ljava.lang.String;@6d47a366,[Ljava.lang.String;@6cf1c8e8,[Ledu.cmu.lti.nlp.amr.Entity;@3d920ad3))
AMR:
(a / agree-01, ARG0, c / country)
(a / agree-01, ARG1, a2 / and)
(a2 / and, op, i / increase-01)
(c / country, name, n / name)
(i / increase-01, ARG1, t2 / treat-01)
(n / name, op, "US")
(p2 / pose-02, ARG1, t2 / treat-01)
(p2 / pose-02, ARG2, p / person)
(s / smarten-02, ARG2, a2 / and)
(s2 / serious, degree, v / very)
(s2 / serious, domain, t2 / treat-01)
(t / traffic-00, ARG0, p / person)
(t / traffic-00, ARG1, d / drug)
(t2 / treat-01, ARG1, b / both)

Decoded in 889,900 microseconds
Sentence: The US government has consulted the Brazilian Government about the provisions of US law.

Oracle Span 1:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 2:  consulted => consult-01
Oracle Span 3:  government => government-organization
Oracle Span 4:  Government => govern-01
Oracle Span 5:  law => law
Oracle Span 6:  provisions => provision
Oracle Span 7:  US => (country :name (name :op "US"))
NER Entity: (thing :name (name :op "Brazilian"))
Spans:
Span 4-5:  consulted => consult-01
Span 2-3:  government => (government-organization :ARG0-of govern-01)
Span 7-8:  Government => (government-organization :ARG0-of govern-01)
Span 13-14:  law. => law
Span 10-11:  provisions => provision
Span 1-2:  US => (country :name (name :op "US"))
Span 12-13:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 109 iterations. Delta = 0.0
Oracle Span 6-7:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 4-5:  consulted => consult-01
Oracle Span 2-3:  government => government-organization
Oracle Span 7-8:  Government => govern-01
Oracle Span 13-14:  law => law
Oracle Span 10-11:  provisions => provision
Oracle Span 1-2:  US => (country :name (name :op "US"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	US	_	NNP	NNP	_	3	nn	_	_
3	government	_	NN	NN	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	consulted	_	VBN	VBN	_	0	root	_	_
6	the	_	DT	DT	_	8	det	_	_
7	Brazilian	_	JJ	JJ	_	8	amod	_	_
8	Government	_	NN	NN	_	5	dobj	_	_
9	about	_	IN	IN	_	5	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	provisions	_	NNS	NNS	_	9	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	US	_	NNP	NNP	_	14	nn	_	_
14	law	_	NN	NN	_	12	pobj	_	_
15	.	_	.	.	_	5	punct	_	_

Oracle:
(c / consult-01, ARG1, g3 / government-organization)
(c / consult-01, ARG2, p / provision)
(c2 / country, name, n / name)
(c3 / country, name, n2 / name)
(g4 / govern-01, ARG0, g3 / government-organization)
(g4 / govern-01, ARG1, c3 / country)
(l / law, mod, c / consult-01)
(n / name, op, "US")
(n2 / name, op, "Brazil")
(p / provision, mod, l / law)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(1, 0),government,(government-organization :ARG0-of govern-01),false), Span(1,2,List(4, 3, 2),US,(country :name (name :op "US")),false), Span(13,14,List(5),law.,law,false), Span(7,8,List(7, 6),Government,(government-organization :ARG0-of govern-01),false), Span(12,13,List(10, 9, 8),US,(country :name (name :op "US")),false), Span(4,5,List(11),consulted,consult-01,false), Span(10,11,List(12),provisions,provision,false)),Map(2 -> country, 5 -> law, 12 -> provision, 8 -> country, 7 -> govern-01, 1 -> govern-01, 4 -> "US", 11 -> consult-01, 6 -> government-organization, 0 -> government-organization, 9 -> name, 3 -> name, 10 -> "US"),Map(n -> name, g3 -> government-organization, p -> provision, g2 -> govern-01, g -> government-organization, c3 -> consult-01, l -> law, c -> country, n2 -> name, c2 -> country, g4 -> govern-01))),[Ljava.lang.String;@6fa96eeb,Annotation([Ljava.lang.String;@83fe22f,[Ljava.lang.String;@147b4f3,[Ljava.lang.String;@484c882b),Annotation([Ljava.lang.String;@6cb669ff,[Ljava.lang.String;@1befd0dc,[Ledu.cmu.lti.nlp.amr.Dependency;@27b31f7e),Annotation([Ljava.lang.String;@b92d673,[Ljava.lang.String;@54b4af6f,[Ljava.lang.String;@31b8fc15),Annotation([Ljava.lang.String;@ecf5db3,[Ljava.lang.String;@13f33357,[Ledu.cmu.lti.nlp.amr.Entity;@62cd2991))
AMR:
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / consult-01, ARG0, g / government-organization)
(c3 / consult-01, ARG1, g3 / government-organization)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(g4 / govern-01, ARG0, g3 / government-organization)
(g4 / govern-01, ARG1, c2 / country)
(l / law, mod, c3 / consult-01)
(n / name, op, "US")
(n2 / name, op, "US")
(p / provision, mod, l / law)

Decoded in 1,653,743 microseconds
Sentence: Brazilian Defense Minister Jose Viegas stated that Brazil has encountered difficulties in securing US support for the plan but recent bilateral talks led to certainty that the decree would be accepted by the US government without exposing Brazil to commercial sanctions.

Oracle Span 1:  accepted => accept-01
Oracle Span 2:  bilateral => bilateral
Oracle Span 3:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 4:  but => contrast-01
Oracle Span 5:  certainty => certainty
Oracle Span 6:  commercial => commerce
Oracle Span 7:  decree => decree
Oracle Span 8:  Defense => defense
Oracle Span 9:  difficulties => difficulty
Oracle Span 10:  encountered => encounter-01
Oracle Span 11:  exposing => expose-01
Oracle Span 12:  government => (government-organization :ARG0-of govern-01)
Oracle Span 13:  has => have-org-role-91
Oracle Span 14:  Jose Viegas => (person :name (name :op "Viegas" :op "Jose"))
Oracle Span 15:  led => lead-03
Oracle Span 16:  Minister => minister
Oracle Span 17:  plan => plan
Oracle Span 18:  recent => recent
Oracle Span 19:  sanctions => sanction-02
Oracle Span 20:  securing => secure-01
Oracle Span 21:  stated => state-01
Oracle Span 22:  support => support-01
Oracle Span 23:  talks => talk-01
Oracle Span 24:  US => (country :name (name :op "US"))
NER Entity: (person :name (name :op "Jose" :op "Viegas"))
NER Entity: (country :name (name :op "Brazil"))
NER Entity: (country :name (name :op "US"))
Spans:
Span 30-31:  accepted => accept-01
Span 20-21:  bilateral => bilateral
Span 37-38:  Brazil => (country :name (name :op "Brazil"))
Span 7-8:  Brazil => (country :name (name :op "Brazil"))
Span 0-1:  Brazilian => (country :name (name :op "Brazil"))
Span 18-19:  but => bunt-01
Span 24-25:  certainty => certainty
Span 39-40:  commercial => commerce
Span 27-28:  decree => decree
Span 1-2:  Defense => defense
Span 10-11:  difficulties => difficulty
Span 9-10:  encountered => encounter-01
Span 34-35:  government => (government-organization :ARG0-of govern-01)
Span 3-5:  Jose Viegas => (person :name (name :op "Jose" :op "Viegas"))
Span 17-18:  plan => plan
Span 19-20:  recent => recent
Span 40-41:  sanctions. => (thing :ARG2-of sanction-02)
Span 12-13:  securing => secure-01
Span 5-6:  stated => state-01
Span 14-15:  support => support-01
Span 21-22:  talks => talk-01
Span 13-14:  US => (country :name (name :op "US"))
Span 33-34:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 127 iterations. Delta = 0.0
Oracle Span 30-31:  accepted => accept-01
Oracle Span 20-21:  bilateral => bilateral
Oracle Span 7-8:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 18-19:  but => contrast-01
Oracle Span 24-25:  certainty => certainty
Oracle Span 39-40:  commercial => commerce
Oracle Span 27-28:  decree => decree
Oracle Span 1-2:  Defense => defense
Oracle Span 10-11:  difficulties => difficulty
Oracle Span 9-10:  encountered => encounter-01
Oracle Span 36-37:  exposing => expose-01
Oracle Span 34-35:  government => (government-organization :ARG0-of govern-01)
Oracle Span 8-9:  has => have-org-role-91
Oracle Span 3-5:  Jose Viegas => (person :name (name :op "Viegas" :op "Jose"))
Oracle Span 22-23:  led => lead-03
Oracle Span 2-3:  Minister => minister
Oracle Span 17-18:  plan => plan
Oracle Span 19-20:  recent => recent
Oracle Span 40-41:  sanctions => sanction-02
Oracle Span 12-13:  securing => secure-01
Oracle Span 5-6:  stated => state-01
Oracle Span 14-15:  support => support-01
Oracle Span 21-22:  talks => talk-01
Oracle Span 13-14:  US => (country :name (name :op "US"))

Dependencies:
1	Brazilian	_	JJ	JJ	_	5	amod	_	_
2	Defense	_	NNP	NNP	_	5	nn	_	_
3	Minister	_	NNP	NNP	_	5	nn	_	_
4	Jose	_	NNP	NNP	_	5	nn	_	_
5	Viegas	_	NNP	NNP	_	6	nsubj	_	_
6	stated	_	VBD	VBD	_	0	root	_	_
7	that	_	IN	IN	_	10	mark	_	_
8	Brazil	_	NNP	NNP	_	10	nsubj	_	_
9	has	_	VBZ	VBZ	_	10	aux	_	_
10	encountered	_	VBN	VBN	_	6	ccomp	_	_
11	difficulties	_	NNS	NNS	_	10	dobj	_	_
12	in	_	IN	IN	_	10	prep	_	_
13	securing	_	VBG	VBG	_	12	pcomp	_	_
14	US	_	NNP	NNP	_	15	nn	_	_
15	support	_	NN	NN	_	13	dobj	_	_
16	for	_	IN	IN	_	13	prep	_	_
17	the	_	DT	DT	_	18	det	_	_
18	plan	_	NN	NN	_	16	pobj	_	_
19	but	_	CC	CC	_	6	cc	_	_
20	recent	_	JJ	JJ	_	22	amod	_	_
21	bilateral	_	JJ	JJ	_	22	amod	_	_
22	talks	_	NNS	NNS	_	23	nsubj	_	_
23	led	_	VBD	VBD	_	6	conj	_	_
24	to	_	TO	TO	_	23	prep	_	_
25	certainty	_	NN	NN	_	24	pobj	_	_
26	that	_	IN	IN	_	31	mark	_	_
27	the	_	DT	DT	_	28	det	_	_
28	decree	_	NN	NN	_	31	nsubjpass	_	_
29	would	_	MD	MD	_	31	aux	_	_
30	be	_	VB	VB	_	31	auxpass	_	_
31	accepted	_	VBN	VBN	_	23	ccomp	_	_
32	by	_	IN	IN	_	31	prep	_	_
33	the	_	DT	DT	_	35	det	_	_
34	US	_	NNP	NNP	_	35	nn	_	_
35	government	_	NN	NN	_	32	pobj	_	_
36	without	_	IN	IN	_	31	prep	_	_
37	exposing	_	VBG	VBG	_	36	pcomp	_	_
38	Brazil	_	NNP	NNP	_	37	dobj	_	_
39	to	_	TO	TO	_	37	prep	_	_
40	commercial	_	JJ	JJ	_	41	amod	_	_
41	sanctions	_	NNS	NNS	_	39	pobj	_	_
42	.	_	.	.	_	6	punct	_	_

Oracle:
(a / accept-01, ARG0, g / government-organization)
(a / accept-01, ARG1, d3 / decree)
(a / accept-01, manner, e2 / expose-01)
(c / country, name, n / name)
(c2 / contrast-01, ARG1, e / encounter-01)
(c2 / contrast-01, ARG2, l / lead-03)
(c3 / country, name, n3 / name)
(c4 / certainty, domain, a / accept-01)
(d2 / difficulty, domain, s2 / secure-01)
(e / encounter-01, ARG0, c / country)
(e / encounter-01, ARG1, d2 / difficulty)
(e2 / expose-01, ARG0, g / government-organization)
(e2 / expose-01, ARG1, c / country)
(e2 / expose-01, ARG2, s4 / sanction-02)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c3 / country)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, m / minister)
(l / lead-03, ARG0, t / talk-01)
(l / lead-03, ARG2, c4 / certainty)
(m / minister, mod, d / defense)
(n / name, op, "Brazil")
(n2 / name, op, "Jose")
(n2 / name, op, "Viegas")
(n3 / name, op, "US")
(p2 / person, name, n2 / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, c2 / contrast-01)
(s2 / secure-01, ARG0, c / country)
(s2 / secure-01, ARG1, s3 / support-01)
(s2 / secure-01, ARG2, c3 / country)
(s2 / secure-01, ARG3, p / plan)
(s3 / support-01, ARG0, c3 / country)
(s3 / support-01, ARG1, p / plan)
(s4 / sanction-02, ARG1, c / country)
(s4 / sanction-02, mod, c5 / commerce)
(t / talk-01, mod, b / bilateral)
(t / talk-01, time, r / recent)

Input(Some(Graph(null,ArrayBuffer(Span(34,35,List(1, 0),government,(government-organization :ARG0-of govern-01),false), Span(3,5,List(5, 4, 3, 2),Jose Viegas,(person :name (name :op "Jose" :op "Viegas")),false), Span(18,19,List(6),but,bunt-01,false), Span(0,1,List(9, 8, 7),Brazilian,(country :name (name :op "Brazil")),false), Span(13,14,List(12, 11, 10),US,(country :name (name :op "US")),false), Span(37,38,List(15, 14, 13),Brazil,(country :name (name :op "Brazil")),false), Span(21,22,List(16),talks,talk-01,false), Span(24,25,List(17),certainty,certainty,false), Span(27,28,List(18),decree,decree,false), Span(20,21,List(19),bilateral,bilateral,false), Span(33,34,List(22, 21, 20),US,(country :name (name :op "US")),false), Span(17,18,List(23),plan,plan,false), Span(14,15,List(24),support,support-01,false), Span(12,13,List(25),securing,secure-01,false), Span(5,6,List(26),stated,state-01,false), Span(19,20,List(27),recent,recent,false), Span(39,40,List(28),commercial,commerce,false), Span(10,11,List(29),difficulties,difficulty,false), Span(1,2,List(30),Defense,defense,false), Span(9,10,List(31),encountered,encounter-01,false), Span(30,31,List(32),accepted,accept-01,false), Span(7,8,List(35, 34, 33),Brazil,(country :name (name :op "Brazil")),false), Span(40,41,List(37, 36),sanctions.,(thing :ARG2-of sanction-02),false)),Map(30 -> defense, 2 -> person, 5 -> "Viegas", 33 -> country, 27 -> recent, 12 -> "US", 8 -> name, 15 -> "Brazil", 36 -> thing, 21 -> name, 18 -> decree, 24 -> support-01, 35 -> "Brazil", 7 -> country, 1 -> govern-01, 17 -> certainty, 23 -> plan, 26 -> state-01, 4 -> "Jose", 11 -> name, 32 -> accept-01, 14 -> name, 29 -> difficulty, 20 -> country, 34 -> name, 28 -> commerce, 6 -> bunt-01, 9 -> "Brazil", 0 -> government-organization, 22 -> "US", 16 -> talk-01, 37 -> sanction-02, 19 -> bilateral, 10 -> country, 3 -> name, 31 -> encounter-01, 25 -> secure-01, 13 -> country),Map(e -> encounter-01, n -> name, s2 -> secure-01, t -> talk-01, b -> bunt-01, b2 -> bilateral, d3 -> defense, c7 -> country, p2 -> plan, c4 -> certainty, n4 -> name, s -> support-01, s4 -> sanction-02, d -> decree, g2 -> govern-01, p -> person, g -> government-organization, a -> accept-01, c3 -> country, n3 -> name, n6 -> name, d2 -> difficulty, c6 -> commerce, t2 -> thing, r -> recent, c -> country, s3 -> state-01, c2 -> country, n2 -> name, c5 -> country, n5 -> name))),[Ljava.lang.String;@45155b13,Annotation([Ljava.lang.String;@776b3375,[Ljava.lang.String;@451e9340,[Ljava.lang.String;@209946aa),Annotation([Ljava.lang.String;@4fbb4c69,[Ljava.lang.String;@61e53e70,[Ledu.cmu.lti.nlp.amr.Dependency;@50d0259f),Annotation([Ljava.lang.String;@3a968539,[Ljava.lang.String;@2f5b5e06,[Ljava.lang.String;@6705f323),Annotation([Ljava.lang.String;@36a8de81,[Ljava.lang.String;@38992a20,[Ledu.cmu.lti.nlp.amr.Entity;@4dc7f85b))
AMR:
(a / accept-01, ARG0, g / government-organization)
(a / accept-01, ARG1, d / decree)
(b / bunt-01, ARG1, e / encounter-01)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(c4 / certainty, domain, a / accept-01)
(c5 / country, name, n5 / name)
(c7 / country, name, n6 / name)
(e / encounter-01, ARG0, c7 / country)
(e / encounter-01, ARG1, d2 / difficulty)
(g / government-organization, poss, c2 / country)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c5 / country)
(n / name, op, "Jose")
(n / name, op, "Viegas")
(n2 / name, op, "Brazil")
(n3 / name, op, "US")
(n4 / name, op, "Brazil")
(n5 / name, op, "US")
(n6 / name, op, "Brazil")
(p / person, name, n / name)
(s / support-01, ARG0, c2 / country)
(s / support-01, ARG1, d3 / defense)
(s2 / secure-01, ARG0, c7 / country)
(s2 / secure-01, ARG1, s / support-01)
(s2 / secure-01, ARG2, c3 / country)
(s2 / secure-01, ARG3, p2 / plan)
(s3 / state-01, ARG0, p / person)
(s3 / state-01, ARG1, b / bunt-01)
(s4 / sanction-02, ARG1, c7 / country)
(s4 / sanction-02, ARG2, t2 / thing)
(s4 / sanction-02, mod, c6 / commerce)
(t / talk-01, ARG0, p / person)
(t / talk-01, ARG1, c / country)
(t / talk-01, mod, b2 / bilateral)
(t / talk-01, time, r / recent)

Decoded in 11,903,486 microseconds
Sentence: Brazilian officials have expressed hope that the policy will be endorsed by the US before going into effect.

Oracle Span 1:  before => before
Oracle Span 2:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 3:  effect => effect
Oracle Span 4:  endorsed => endorse-01
Oracle Span 5:  expressed => express-01
Oracle Span 6:  going => go-06
Oracle Span 7:  have => (person :ARG0-of have-org-role-91)
Oracle Span 8:  hope => hope-01
Oracle Span 9:  officials => official
Oracle Span 10:  policy => policy
Oracle Span 11:  US => (country :name (name :op "US"))
NER Entity: (country :name (name :op "US"))
NER Entity: (thing :name (name :op "Brazilian"))
Spans:
Span 14-15:  before => before
Span 0-1:  Brazilian => (country :name (name :op "Brazil"))
Span 17-18:  effect. => effect
Span 10-11:  endorsed => endorse-01
Span 3-4:  expressed => express-01
Span 15-16:  going => go-08
Span 4-5:  hope => hope-01
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 7-8:  policy => policy
Span 13-14:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 13 iterations. Delta = 0.0
Oracle Span 14-15:  before => before
Oracle Span 0-1:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 17-18:  effect => effect
Oracle Span 10-11:  endorsed => endorse-01
Oracle Span 3-4:  expressed => express-01
Oracle Span 15-16:  going => go-06
Oracle Span 2-3:  have => (person :ARG0-of have-org-role-91)
Oracle Span 4-5:  hope => hope-01
Oracle Span 1-2:  officials => official
Oracle Span 7-8:  policy => policy
Oracle Span 13-14:  US => (country :name (name :op "US"))

Dependencies:
1	Brazilian	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	4	nsubj	_	_
3	have	_	VBP	VBP	_	4	aux	_	_
4	expressed	_	VBN	VBN	_	0	root	_	_
5	hope	_	NN	NN	_	4	dobj	_	_
6	that	_	IN	IN	_	11	mark	_	_
7	the	_	DT	DT	_	8	det	_	_
8	policy	_	NN	NN	_	11	nsubjpass	_	_
9	will	_	MD	MD	_	11	aux	_	_
10	be	_	VB	VB	_	11	auxpass	_	_
11	endorsed	_	VBN	VBN	_	4	ccomp	_	_
12	by	_	IN	IN	_	11	prep	_	_
13	the	_	DT	DT	_	14	det	_	_
14	US	_	NNP	NNP	_	12	pobj	_	_
15	before	_	IN	IN	_	11	prep	_	_
16	going	_	VBG	VBG	_	15	pcomp	_	_
17	into	_	IN	IN	_	16	prep	_	_
18	effect	_	NN	NN	_	17	pobj	_	_
19	.	_	.	.	_	4	punct	_	_

Oracle:
(b / before, op, g / go-06)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(e / express-01, ARG0, p / person)
(e / express-01, ARG1, h2 / hope-01)
(e2 / endorse-01, ARG0, c2 / country)
(e2 / endorse-01, ARG1, p2 / policy)
(e2 / endorse-01, time, b / before)
(g / go-06, ARG1, p2 / policy)
(g / go-06, ARG2, e3 / effect)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(h2 / hope-01, ARG0, p / person)
(h2 / hope-01, ARG1, e2 / endorse-01)
(n / name, op, "Brazil")
(n2 / name, op, "US")

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),going,go-08,false), Span(1,2,List(3, 2, 1),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(7,8,List(4),policy,policy,false), Span(4,5,List(5),hope,hope-01,false), Span(10,11,List(6),endorsed,endorse-01,false), Span(14,15,List(7),before,before,false), Span(0,1,List(10, 9, 8),Brazilian,(country :name (name :op "Brazil")),false), Span(13,14,List(13, 12, 11),US,(country :name (name :op "US")),false), Span(3,4,List(14),expressed,express-01,false), Span(17,18,List(15),effect.,effect,false)),Map(2 -> have-org-role-91, 5 -> hope-01, 12 -> name, 15 -> effect, 8 -> country, 7 -> before, 1 -> person, 4 -> policy, 11 -> country, 14 -> express-01, 6 -> endorse-01, 0 -> go-08, 9 -> name, 3 -> official, 10 -> "Brazil", 13 -> "US"),Map(e -> endorse-01, n -> name, h -> have-org-role-91, h2 -> hope-01, b -> before, p2 -> policy, e2 -> express-01, g -> go-08, p -> person, c -> country, o -> official, e3 -> effect, c2 -> country, n2 -> name))),[Ljava.lang.String;@3d200d05,Annotation([Ljava.lang.String;@46baccc7,[Ljava.lang.String;@181fb234,[Ljava.lang.String;@39c1b1d9),Annotation([Ljava.lang.String;@4b4dbc1,[Ljava.lang.String;@14f8f364,[Ledu.cmu.lti.nlp.amr.Dependency;@71937ddd),Annotation([Ljava.lang.String;@45e8454f,[Ljava.lang.String;@6720f4e0,[Ljava.lang.String;@341058b3),Annotation([Ljava.lang.String;@5e87a679,[Ljava.lang.String;@594252db,[Ledu.cmu.lti.nlp.amr.Entity;@39252ae7))
AMR:
(b / before, op, g / go-08)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(e / endorse-01, ARG0, c2 / country)
(e / endorse-01, ARG1, p2 / policy)
(e / endorse-01, time, b / before)
(e2 / express-01, ARG0, p / person)
(e2 / express-01, ARG1, h2 / hope-01)
(g / go-08, ARG1, p2 / policy)
(g / go-08, ARG2, e3 / effect)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(h2 / hope-01, ARG1, e / endorse-01)
(n / name, op, "Brazil")
(n2 / name, op, "US")

Decoded in 546,744 microseconds
Sentence: The US is scheduled to provide 10.2 million dollars in drug and law enforcement aid to Brazil in 2004.

Oracle Span 1:  2004 => (date-entity :year 2004)
Oracle Span 2:  aid => aid-01
Oracle Span 3:  and => and
Oracle Span 4:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 5:  dollars => (monetary-quantity :unit dollar)
Oracle Span 6:  drug => drug
Oracle Span 7:  enforcement => enforce-01
Oracle Span 8:  law => law
Oracle Span 9:  provide => provide-01
Oracle Span 10:  scheduled => schedule-01
Oracle Span 11:  US => (country :name (name :op "US"))
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 14-15:  aid => aid-01
Span 11-12:  and => and
Span 16-17:  Brazil => (country :name (name :op "Brazil"))
Span 8-9:  dollars => (monetary-quantity :unit dollar)
Span 10-11:  drug => drug
Span 13-14:  enforcement => enforce-01
Span 12-13:  law => law
Span 5-6:  provide => provide-01
Span 3-4:  scheduled => schedule-01
Span 0-19:  The US is scheduled to provide 10.2 million dollars in drug and law enforcement aid to Brazil in 2004. => (date-entity :year 2004)
Span 1-2:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 72 iterations. Delta = 0.0
Oracle Span 18-19:  2004 => (date-entity :year 2004)
Oracle Span 14-15:  aid => aid-01
Oracle Span 11-12:  and => and
Oracle Span 16-17:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 8-9:  dollars => (monetary-quantity :unit dollar)
Oracle Span 10-11:  drug => drug
Oracle Span 13-14:  enforcement => enforce-01
Oracle Span 12-13:  law => law
Oracle Span 5-6:  provide => provide-01
Oracle Span 3-4:  scheduled => schedule-01
Oracle Span 1-2:  US => (country :name (name :op "US"))

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	US	_	NNP	NNP	_	4	nsubjpass	_	_
3	is	_	VBZ	VBZ	_	4	auxpass	_	_
4	scheduled	_	VBN	VBN	_	0	root	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	provide	_	VB	VB	_	4	xcomp	_	_
7	10.2	_	CD	CD	_	8	number	_	_
8	million	_	CD	CD	_	9	num	_	_
9	dollars	_	NNS	NNS	_	6	dobj	_	_
10	in	_	IN	IN	_	6	prep	_	_
11	drug	_	NN	NN	_	15	nn	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	law	_	NN	NN	_	11	conj	_	_
14	enforcement	_	NN	NN	_	15	nn	_	_
15	aid	_	NN	NN	_	10	pobj	_	_
16	to	_	TO	TO	_	6	prep	_	_
17	Brazil	_	NNP	NNP	_	16	pobj	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	2004	_	CD	CD	_	18	pobj	_	_
20	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, instrument, m2 / monetary-quantity)
(a / and, op, a3 / aid-01)
(a3 / aid-01, ARG0, c / country)
(a3 / aid-01, ARG2, c2 / country)
(a3 / aid-01, mod, e / enforce-01)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(d2 / date-entity, year, 2004)
(e / enforce-01, ARG1, l / law)
(m2 / monetary-quantity, unit, d3 / dollar)
(n / name, op, "US")
(n2 / name, op, "Brazil")
(p / provide-01, ARG0, c / country)
(p / provide-01, ARG1, m2 / monetary-quantity)
(p / provide-01, ARG2, c2 / country)
(s / schedule-01, ARG1, c / country)
(s / schedule-01, ARG2, p / provide-01)
(s / schedule-01, ARG3, d2 / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),scheduled,schedule-01,false), Span(1,2,List(3, 2, 1),US,(country :name (name :op "US")),false), Span(10,11,List(4),drug,drug,false), Span(11,12,List(5),and,and,false), Span(13,14,List(6),enforcement,enforce-01,false), Span(8,9,List(8, 7),dollars,(monetary-quantity :unit dollar),false), Span(5,6,List(9),provide,provide-01,false), Span(16,17,List(12, 11, 10),Brazil,(country :name (name :op "Brazil")),false), Span(12,13,List(13),law,law,false), Span(0,19,List(15, 14),The US is scheduled to provide 10.2 million dollars in drug and law enforcement aid to Brazil in 2004.,(date-entity :year 2004),false), Span(14,15,List(16),aid,aid-01,false)),Map(2 -> name, 5 -> and, 12 -> "Brazil", 15 -> 2004, 8 -> dollar, 7 -> monetary-quantity, 1 -> country, 4 -> drug, 11 -> name, 14 -> date-entity, 6 -> enforce-01, 0 -> schedule-01, 9 -> provide-01, 16 -> aid-01, 3 -> "US", 10 -> country, 13 -> law),Map(e -> enforce-01, n -> name, 2 -> 2004, d3 -> date-entity, s -> schedule-01, d -> drug, m -> monetary-quantity, p -> provide-01, a -> and, d2 -> dollar, a2 -> aid-01, c -> country, l -> law, c2 -> country, n2 -> name))),[Ljava.lang.String;@44c47bf3,Annotation([Ljava.lang.String;@2f5a844c,[Ljava.lang.String;@11d759f3,[Ljava.lang.String;@64907adc),Annotation([Ljava.lang.String;@36c9e5e,[Ljava.lang.String;@78ef029b,[Ledu.cmu.lti.nlp.amr.Dependency;@535cc4b4),Annotation([Ljava.lang.String;@347d1299,[Ljava.lang.String;@5384e426,[Ljava.lang.String;@53ffcf17),Annotation([Ljava.lang.String;@6633c8b8,[Ljava.lang.String;@3a06f73d,[Ledu.cmu.lti.nlp.amr.Entity;@4ed7918f))
AMR:
(a / and, op, a2 / aid-01)
(a / and, op, d / drug)
(a2 / aid-01, ARG0, c / country)
(a2 / aid-01, ARG1, d3 / date-entity)
(a2 / aid-01, mod, e / enforce-01)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(d3 / date-entity, year, 2 / 2004)
(e / enforce-01, ARG1, l / law)
(m / monetary-quantity, unit, d2 / dollar)
(n / name, op, "US")
(n2 / name, op, "Brazil")
(p / provide-01, ARG0, c / country)
(p / provide-01, ARG1, m / monetary-quantity)
(p / provide-01, ARG2, c2 / country)
(s / schedule-01, ARG1, c / country)
(s / schedule-01, ARG2, p / provide-01)

Decoded in 2,163,084 microseconds
Sentence: Former air force chief and current Director of the Air Institute at estacio de sa University in Rio de Janeiro General Mauro Jose Miranda gandra stated that the measure was a courageous step by the Government but the impact may be more political than practical because of self-imposed restrictions by the Brazilian government.

Oracle Span 1:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 2:  Air Institute => (research-institute :name (name :op "Institute" :op "Air"))
Oracle Span 3:  because => cause-01
Oracle Span 4:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 5:  but => contrast-01
Oracle Span 6:  chief => (have-org-role-91 :ARG2 chief)
Oracle Span 7:  courageous => courage
Oracle Span 8:  current => current
Oracle Span 9:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 10:  estacio de sa University => (university :name (name :op "University" :op "Sa" :op "de" :op "Estacio"))
Oracle Span 11:  Former => former
Oracle Span 12:  General => (have-org-role-91 :ARG2 general)
Oracle Span 13:  Government => government-organization
Oracle Span 14:  government => govern-01
Oracle Span 15:  impact => impact-01
Oracle Span 16:  imposed => impose-01
Oracle Span 17:  Mauro Jose Miranda gandra => (person :name (name :op "Gandra" :op "Miranda" :op "Jose" :op "Mauro"))
Oracle Span 18:  may => possible
Oracle Span 19:  measure => measure
Oracle Span 20:  more => more
Oracle Span 21:  political => politics
Oracle Span 22:  practical => practical
Oracle Span 23:  restrictions => (thing :ARG2-of restrict-01)
Oracle Span 24:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 25:  stated => state-01
Oracle Span 26:  step => step-01
NER Entity: (person :name (name :op "Mauro" :op "Jose" :op "Miranda" :op "gandra"))
NER Entity: (organization :name (name :op "Air" :op "Institute"))
NER Entity: (country :name (name :op "Rio" :op "de" :op "Janeiro"))
Spans:
Span 9-10:  Air => military
Span 1-2:  air => air
Span 4-5:  and => and
Span 11-12:  at => at-least
Span 51-52:  Brazilian => (country :name (name :op "Brazil"))
Span 36-37:  but => bunt-01
Span 3-4:  chief => (have-org-role-91 :ARG2 chief)
Span 31-32:  courageous => courageous
Span 13-14:  de => (distance-quantity :unit mile)
Span 2-3:  force => force
Span 0-1:  Former => former
Span 0-6:  Former air force chief and current => (date-entity :time current)
Span 35-36:  Government => (government-organization :ARG0-of govern-01)
Span 52-53:  government. => (government-organization :ARG0-of govern-01)
Span 38-39:  impact => impact-01
Span 10-11:  Institute => institute
Span 21-25:  Mauro Jose Miranda gandra => (person :name (name :op "Mauro" :op "Jose" :op "Miranda" :op "gandra"))
Span 28-29:  measure => measure
Span 41-42:  more => more
Span 42-43:  political => politics
Span 44-45:  practical => practical
Span 48-49:  restrictions => reconstitute-01
Span 14-15:  sa => (country :name (name :op "SA"))
Span 25-26:  stated => state-01
Span 32-33:  step => step-01

Langrangian relaxation converged after 127 iterations. Delta = 0.0
Oracle Span 1-3:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 9-11:  Air Institute => (research-institute :name (name :op "Institute" :op "Air"))
Oracle Span 45-46:  because => cause-01
Oracle Span 53-54:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 36-37:  but => contrast-01
Oracle Span 3-4:  chief => (have-org-role-91 :ARG2 chief)
Oracle Span 31-32:  courageous => courage
Oracle Span 5-6:  current => current
Oracle Span 6-7:  Director => (have-org-role-91 :ARG2 director)
Oracle Span 12-16:  estacio de sa University => (university :name (name :op "University" :op "Sa" :op "de" :op "Estacio"))
Oracle Span 0-1:  Former => former
Oracle Span 20-21:  General => (have-org-role-91 :ARG2 general)
Oracle Span 35-36:  Government => government-organization
Oracle Span 54-55:  government => govern-01
Oracle Span 38-39:  impact => impact-01
Oracle Span 49-50:  imposed => impose-01
Oracle Span 21-25:  Mauro Jose Miranda gandra => (person :name (name :op "Gandra" :op "Miranda" :op "Jose" :op "Mauro"))
Oracle Span 39-40:  may => possible
Oracle Span 28-29:  measure => measure
Oracle Span 41-42:  more => more
Oracle Span 42-43:  political => politics
Oracle Span 44-45:  practical => practical
Oracle Span 50-51:  restrictions => (thing :ARG2-of restrict-01)
Oracle Span 17-20:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 25-26:  stated => state-01
Oracle Span 32-33:  step => step-01

Dependencies:
1	Former	_	JJ	JJ	_	4	amod	_	_
2	air	_	NN	NN	_	4	nn	_	_
3	force	_	NN	NN	_	4	nn	_	_
4	chief	_	NN	NN	_	26	nsubj	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	current	_	JJ	JJ	_	7	amod	_	_
7	Director	_	NN	NN	_	4	conj	_	_
8	of	_	IN	IN	_	4	prep	_	_
9	the	_	DT	DT	_	11	det	_	_
10	Air	_	NNP	NNP	_	11	nn	_	_
11	Institute	_	NNP	NNP	_	8	pobj	_	_
12	at	_	IN	IN	_	11	prep	_	_
13	estacio	_	NNP	NNP	_	16	nn	_	_
14	de	_	IN	IN	_	16	amod	_	_
15	sa	_	NNP	NNP	_	16	nn	_	_
16	University	_	NNP	NNP	_	12	pobj	_	_
17	in	_	IN	IN	_	16	prep	_	_
18	Rio	_	NNP	NNP	_	25	nn	_	_
19	de	_	NNP	NNP	_	25	nn	_	_
20	Janeiro	_	NNP	NNP	_	25	nn	_	_
21	General	_	NNP	NNP	_	25	nn	_	_
22	Mauro	_	NNP	NNP	_	25	nn	_	_
23	Jose	_	NNP	NNP	_	25	nn	_	_
24	Miranda	_	NNP	NNP	_	25	nn	_	_
25	gandra	_	NN	NN	_	17	pobj	_	_
26	stated	_	VBD	VBD	_	0	root	_	_
27	that	_	IN	IN	_	33	mark	_	_
28	the	_	DT	DT	_	29	det	_	_
29	measure	_	NN	NN	_	33	nsubj	_	_
30	was	_	VBD	VBD	_	33	cop	_	_
31	a	_	DT	DT	_	33	det	_	_
32	courageous	_	JJ	JJ	_	33	amod	_	_
33	step	_	NN	NN	_	26	ccomp	_	_
34	by	_	IN	IN	_	33	prep	_	_
35	the	_	DT	DT	_	36	det	_	_
36	Government	_	NN	NN	_	34	pobj	_	_
37	but	_	CC	CC	_	26	cc	_	_
38	the	_	DT	DT	_	39	det	_	_
39	impact	_	NN	NN	_	43	nsubj	_	_
40	may	_	MD	MD	_	43	aux	_	_
41	be	_	VB	VB	_	43	cop	_	_
42	more	_	RBR	RBR	_	43	advmod	_	_
43	political	_	JJ	JJ	_	26	conj	_	_
44	than	_	IN	IN	_	43	prep	_	_
45	practical	_	JJ	JJ	_	44	pobj	_	_
46	because	_	RB	RB	_	47	advmod	_	_
47	of	_	IN	IN	_	45	prep	_	_
48	self-imposed	_	JJ	JJ	_	49	amod	_	_
49	restrictions	_	NNS	NNS	_	47	pobj	_	_
50	by	_	IN	IN	_	43	prep	_	_
51	the	_	DT	DT	_	53	det	_	_
52	Brazilian	_	JJ	JJ	_	53	amod	_	_
53	government	_	NN	NN	_	50	pobj	_	_
54	.	_	.	.	_	26	punct	_	_

Oracle:
(c / chief, mod, f2 / former)
(c2 / city, name, n4 / name)
(c4 / contrast-01, ARG1, s2 / step-01)
(c4 / contrast-01, ARG2, p / possible)
(c6 / cause-01, ARG0, t / thing)
(c6 / cause-01, ARG1, p / possible)
(c7 / country, name, n5 / name)
(d2 / director, time, c3 / current)
(g5 / govern-01, ARG0, g4 / government-organization)
(g5 / govern-01, ARG1, c7 / country)
(h / have-org-role-91, ARG0, p4 / person)
(h / have-org-role-91, ARG1, m3 / military)
(h / have-org-role-91, ARG2, c / chief)
(h2 / have-org-role-91, ARG0, p4 / person)
(h2 / have-org-role-91, ARG1, r / research-institute)
(h2 / have-org-role-91, ARG2, d2 / director)
(h3 / have-org-role-91, ARG0, p4 / person)
(h3 / have-org-role-91, ARG2, g / general)
(i2 / impose-01, ARG0, g4 / government-organization)
(i2 / impose-01, ARG1, r2 / restrict-01)
(i2 / impose-01, ARG2, g4 / government-organization)
(m3 / military, name, n6 / name)
(n / name, op, "Gandra")
(n / name, op, "Jose")
(n / name, op, "Mauro")
(n / name, op, "Miranda")
(n2 / name, op, "Air")
(n2 / name, op, "Institute")
(n3 / name, op, "Estacio")
(n3 / name, op, "Sa")
(n3 / name, op, "University")
(n3 / name, op, "de")
(n4 / name, op, "Janeiro")
(n4 / name, op, "Rio")
(n4 / name, op, "de")
(n5 / name, op, "Brazil")
(n6 / name, op, "Air")
(n6 / name, op, "Force")
(p / possible, domain, p2 / politics)
(p2 / politics, compared-to, p3 / practical)
(p2 / politics, degree, m2 / more)
(p2 / politics, domain, i / impact-01)
(p4 / person, name, n / name)
(r / research-institute, name, n2 / name)
(r2 / restrict-01, ARG0, g4 / government-organization)
(r2 / restrict-01, ARG2, t / thing)
(s / state-01, ARG0, p4 / person)
(s / state-01, ARG1, c4 / contrast-01)
(s2 / step-01, domain, m / measure)
(s2 / step-01, mod, c5 / courage)
(u / university, location, c2 / city)
(u / university, name, n3 / name)
(u / university, part, r / research-institute)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),stated,state-01,false), Span(38,39,List(1),impact,impact-01,false), Span(0,6,List(3, 2),Former air force chief and current,(date-entity :time current),false), Span(4,5,List(4),and,and,false), Span(21,25,List(10, 9, 8, 7, 6, 5),Mauro Jose Miranda gandra,(person :name (name :op "Mauro" :op "Jose" :op "Miranda" :op "gandra")),false), Span(36,37,List(11),but,bunt-01,false), Span(42,43,List(12),political,politics,false), Span(51,52,List(15, 14, 13),Brazilian,(country :name (name :op "Brazil")),false), Span(2,3,List(16),force,force,false), Span(52,53,List(18, 17),government.,(government-organization :ARG0-of govern-01),false), Span(10,11,List(19),Institute,institute,false), Span(11,12,List(20),at,at-least,false), Span(0,1,List(21),Former,former,false), Span(44,45,List(22),practical,practical,false), Span(9,10,List(23),Air,military,false), Span(48,49,List(24),restrictions,reconstitute-01,false), Span(41,42,List(25),more,more,false), Span(31,32,List(26),courageous,courageous,false), Span(35,36,List(28, 27),Government,(government-organization :ARG0-of govern-01),false), Span(1,2,List(29),air,air,false), Span(13,14,List(31, 30),de,(distance-quantity :unit mile),false), Span(32,33,List(32),step,step-01,false), Span(28,29,List(33),measure,measure,false), Span(3,4,List(35, 34),chief,(have-org-role-91 :ARG2 chief),false), Span(14,15,List(38, 37, 36),sa,(country :name (name :op "SA")),false)),Map(30 -> distance-quantity, 2 -> date-entity, 5 -> person, 33 -> measure, 27 -> government-organization, 12 -> politics, 8 -> "Jose", 15 -> "Brazil", 36 -> country, 21 -> former, 18 -> govern-01, 24 -> reconstitute-01, 35 -> chief, 7 -> "Mauro", 1 -> impact-01, 17 -> government-organization, 23 -> military, 38 -> "SA", 26 -> courageous, 4 -> and, 11 -> bunt-01, 32 -> step-01, 14 -> name, 29 -> air, 20 -> at-least, 34 -> have-org-role-91, 28 -> govern-01, 6 -> name, 9 -> "Miranda", 0 -> state-01, 22 -> practical, 16 -> force, 37 -> name, 19 -> institute, 10 -> "gandra", 3 -> current, 31 -> mile, 25 -> more, 13 -> country),Map(m3 -> mile, n -> name, h -> have-org-role-91, g3 -> government-organization, s2 -> step-01, b -> bunt-01, m2 -> more, p2 -> politics, c4 -> chief, a3 -> air, s -> state-01, d -> date-entity, m -> military, g2 -> govern-01, g -> government-organization, p -> person, n3 -> name, a -> and, c3 -> courageous, d2 -> distance-quantity, m4 -> measure, i2 -> institute, i -> impact-01, a2 -> at-least, r -> reconstitute-01, c -> current, f2 -> former, f -> force, p3 -> practical, n2 -> name, c2 -> country, g4 -> govern-01, c5 -> country))),[Ljava.lang.String;@37dc9192,Annotation([Ljava.lang.String;@742d352,[Ljava.lang.String;@45ee48dc,[Ljava.lang.String;@35823203),Annotation([Ljava.lang.String;@66816520,[Ljava.lang.String;@77c8f2e1,[Ledu.cmu.lti.nlp.amr.Dependency;@40d7ec6c),Annotation([Ljava.lang.String;@64e1dc5f,[Ljava.lang.String;@9241d86,[Ljava.lang.String;@39cbb9b9),Annotation([Ljava.lang.String;@46809660,[Ljava.lang.String;@2ce9b9cb,[Ledu.cmu.lti.nlp.amr.Entity;@50859fd))
AMR:
(a / and, op, a3 / air)
(a / and, op, d / date-entity)
(b / bunt-01, ARG1, s2 / step-01)
(c2 / country, name, n2 / name)
(c4 / chief, mod, f2 / former)
(c5 / country, name, n3 / name)
(d / date-entity, time, c / current)
(d2 / distance-quantity, op, c5 / country)
(d2 / distance-quantity, unit, m3 / mile)
(f / force, mod, a3 / air)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c2 / country)
(g4 / govern-01, ARG0, g3 / government-organization)
(g4 / govern-01, ARG1, c5 / country)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, f / force)
(h / have-org-role-91, ARG2, c4 / chief)
(i / impact-01, ARG1, m4 / measure)
(i2 / institute, location, a2 / at-least)
(i2 / institute, mod, m / military)
(m / military, location, d2 / distance-quantity)
(n / name, op, "Jose")
(n / name, op, "Mauro")
(n / name, op, "Miranda")
(n / name, op, "gandra")
(n2 / name, op, "Brazil")
(n3 / name, op, "SA")
(p / person, name, n / name)
(p2 / politics, compared-to, p3 / practical)
(p2 / politics, degree, m2 / more)
(p2 / politics, domain, i / impact-01)
(r / reconstitute-01, ARG1, c2 / country)
(r / reconstitute-01, ARG2, g3 / government-organization)
(s / state-01, ARG0, a / and)
(s / state-01, ARG1, b / bunt-01)
(s2 / step-01, ARG1, g3 / government-organization)
(s2 / step-01, domain, m4 / measure)
(s2 / step-01, mod, c3 / courageous)

Decoded in 14,008,305 microseconds
Sentence: Brazilian officials stated that the policy would be inapplicable against aircraft with children on board.

Oracle Span 1:  against => against
Oracle Span 2:  aircraft => aircraft
Oracle Span 3:  board => board-01
Oracle Span 4:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 5:  children => child
Oracle Span 6:  inapplicable => (apply-02 :polarity -)
Oracle Span 7:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 8:  policy => policy
Oracle Span 9:  stated => state-01
NER Entity: (thing :name (name :op "Brazilian"))
Spans:
Span 14-15:  board. => (organization :name (name :op "Board"))
Span 0-1:  Brazilian => (country :name (name :op "Brazil"))
Span 12-13:  children => child
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 5-6:  policy => policy
Span 2-3:  stated => state-01

Langrangian relaxation converged after 17 iterations. Delta = 0.0
Oracle Span 9-10:  against => against
Oracle Span 10-11:  aircraft => aircraft
Oracle Span 14-15:  board => board-01
Oracle Span 0-1:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 12-13:  children => child
Oracle Span 8-9:  inapplicable => (apply-02 :polarity -)
Oracle Span 1-2:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 5-6:  policy => policy
Oracle Span 2-3:  stated => state-01

Dependencies:
1	Brazilian	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	3	nsubj	_	_
3	stated	_	VBD	VBD	_	0	root	_	_
4	that	_	IN	IN	_	9	mark	_	_
5	the	_	DT	DT	_	6	det	_	_
6	policy	_	NN	NN	_	9	nsubj	_	_
7	would	_	MD	MD	_	9	aux	_	_
8	be	_	VB	VB	_	9	cop	_	_
9	inapplicable	_	JJ	JJ	_	3	ccomp	_	_
10	against	_	IN	IN	_	9	prep	_	_
11	aircraft	_	NN	NN	_	10	pobj	_	_
12	with	_	IN	IN	_	9	prep	_	_
13	children	_	NNS	NNS	_	12	pobj	_	_
14	on	_	IN	IN	_	13	prep	_	_
15	board	_	NN	NN	_	14	pobj	_	_
16	.	_	.	.	_	3	punct	_	_

Oracle:
(a / apply-02, ARG1, p3 / policy)
(a / apply-02, ARG2, a2 / against)
(a / apply-02, polarity, -)
(a2 / against, op, a3 / aircraft)
(b / board-01, ARG0, c2 / child)
(b / board-01, ARG1, a3 / aircraft)
(c / country, name, n / name)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Brazil")
(s / state-01, ARG1, a / apply-02)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),children,child,false), Span(1,2,List(3, 2, 1),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(14,15,List(6, 5, 4),board.,(organization :name (name :op "Board")),false), Span(5,6,List(7),policy,policy,false), Span(0,1,List(10, 9, 8),Brazilian,(country :name (name :op "Brazil")),false), Span(2,3,List(11),stated,state-01,false)),Map(2 -> have-org-role-91, 5 -> name, 8 -> country, 7 -> policy, 1 -> person, 11 -> state-01, 4 -> organization, 6 -> "Board", 9 -> name, 0 -> child, 10 -> "Brazil", 3 -> official),Map(n -> name, h -> have-org-role-91, p2 -> policy, s -> state-01, p -> person, o2 -> organization, c -> child, o -> official, n2 -> name, c2 -> country))),[Ljava.lang.String;@48b6f4be,Annotation([Ljava.lang.String;@94780a,[Ljava.lang.String;@170676be,[Ljava.lang.String;@36fad096),Annotation([Ljava.lang.String;@4996d1f3,[Ljava.lang.String;@6ae1b4e3,[Ledu.cmu.lti.nlp.amr.Dependency;@4ef69c87),Annotation([Ljava.lang.String;@2ee88baf,[Ljava.lang.String;@518edec8,[Ljava.lang.String;@362f3eb6),Annotation([Ljava.lang.String;@4cc79e50,[Ljava.lang.String;@2618d194,[Ledu.cmu.lti.nlp.amr.Entity;@1473301))
AMR:
(c2 / country, name, n2 / name)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Board")
(n2 / name, op, "Brazil")
(o2 / organization, name, n / name)
(o2 / organization, quant, c / child)
(p2 / policy, poss, o2 / organization)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, o2 / organization)

Decoded in 344,255 microseconds
Sentence: Viegas stated that the limitation was necessary.

Oracle Span 1:  limitation => limit-01
Oracle Span 2:  stated => state-01
Oracle Span 3:  Viegas => (person :name (name :op "Viegas"))
NER Entity: (person :name (name :op "Viegas"))
Spans:
Span 4-5:  limitation => limit-01
Span 6-7:  necessary. => necessitate-01
Span 1-2:  stated => state-01
Span 0-1:  Viegas => (person :name (name :op "Viegas"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 4-5:  limitation => limit-01
Oracle Span 1-2:  stated => state-01
Oracle Span 0-1:  Viegas => (person :name (name :op "Viegas"))

Dependencies:
1	Viegas	_	NNS	NNS	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	7	mark	_	_
4	the	_	DT	DT	_	5	det	_	_
5	limitation	_	NN	NN	_	7	nsubj	_	_
6	was	_	VBD	VBD	_	7	cop	_	_
7	necessary	_	JJ	JJ	_	2	ccomp	_	_
8	.	_	.	.	_	2	punct	_	_

Oracle:
(n / name, op, "Viegas")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(4,5,List(1),limitation,limit-01,false), Span(0,1,List(4, 3, 2),Viegas,(person :name (name :op "Viegas")),false), Span(6,7,List(5),necessary.,necessitate-01,false)),Map(2 -> person, 5 -> necessitate-01, 1 -> limit-01, 4 -> "Viegas", 0 -> state-01, 3 -> name),Map(n -> name, s -> state-01, p -> person, l -> limit-01, n2 -> necessitate-01))),[Ljava.lang.String;@61aa1376,Annotation([Ljava.lang.String;@127d1747,[Ljava.lang.String;@5e9bcd8b,[Ljava.lang.String;@b31465d),Annotation([Ljava.lang.String;@3ab1d5ee,[Ljava.lang.String;@408c2ad0,[Ledu.cmu.lti.nlp.amr.Dependency;@40fb40df),Annotation([Ljava.lang.String;@4179f533,[Ljava.lang.String;@75534657,[Ljava.lang.String;@54a83887),Annotation([Ljava.lang.String;@4e4f7775,[Ljava.lang.String;@4011c3e2,[Ledu.cmu.lti.nlp.amr.Entity;@2f9f4449))
AMR:
(n / name, op, "Viegas")
(n2 / necessitate-01, ARG1, l / limit-01)
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, n2 / necessitate-01)

Decoded in 123,687 microseconds
Sentence: Gandra stated that the provision undermines the decree's essential purpose by granting immunity to drug-smuggling aircraft carrying children and thus introducing the possibility of kidnapped children being used as human shields.

Oracle Span 1:  aircraft => aircraft
Oracle Span 2:  carrying => carry-01
Oracle Span 3:  children => child
Oracle Span 4:  children => child
Oracle Span 5:  decree => decree
Oracle Span 6:  drug => drug
Oracle Span 7:  essential => essential
Oracle Span 8:  Gandra => (person :name (name :op "Gandra"))
Oracle Span 9:  granting => grant-01
Oracle Span 10:  human => human
Oracle Span 11:  immunity => immunity
Oracle Span 12:  introducing => introduce-02
Oracle Span 13:  kidnapped => kidnap-01
Oracle Span 14:  possibility => possible
Oracle Span 15:  provision => provision
Oracle Span 16:  purpose => purpose
Oracle Span 17:  shields => shield-01
Oracle Span 18:  smuggling => smuggle-01
Oracle Span 19:  stated => state-01
Oracle Span 20:  undermines => undermine-01
Oracle Span 21:  used => use-01
NER Entity: (country :name (name :op "Gandra"))
Spans:
Span 31-32:   => (thing :instrument-of shield-01)
Span 15-16:  aircraft => (smuggle-01 :ARG1 drug)
Span 18-19:  and => child
Span 28-29:  as => use-01
Span 26-27:  being => child
Span 10-11:  by => have-purpose-91
Span 16-17:  carrying => aircraft
Span 25-26:  children => kidnap-01
Span 17-18:  children => carry-01
Span 7-8:  decree's => decree
Span 0-1:  Gandra => (person :name (name :op "Gandra"))
Span 12-13:  immunity => grant-01
Span 23-24:  of => possible
Span 4-5:  provision => (thing :ARG1-of provide-01)
Span 9-10:  purpose => essential
Span 30-31:  shields. => human
Span 1-2:  stated => state-01
Span 21-22:  the => introduce-01
Span 19-20:  thus => and
Span 13-14:  to => immunize-01
Span 5-6:  undermines => undermine-01

Langrangian relaxation converged after 47 iterations. Delta = 0.0
Oracle Span 18-19:  aircraft => aircraft
Oracle Span 19-20:  carrying => carry-01
Oracle Span 20-21:  children => child
Oracle Span 28-29:  children => child
Oracle Span 7-8:  decree => decree
Oracle Span 15-16:  drug => drug
Oracle Span 9-10:  essential => essential
Oracle Span 0-1:  Gandra => (person :name (name :op "Gandra"))
Oracle Span 12-13:  granting => grant-01
Oracle Span 32-33:  human => human
Oracle Span 13-14:  immunity => immunity
Oracle Span 23-24:  introducing => introduce-02
Oracle Span 27-28:  kidnapped => kidnap-01
Oracle Span 25-26:  possibility => possible
Oracle Span 4-5:  provision => provision
Oracle Span 10-11:  purpose => purpose
Oracle Span 33-34:  shields => shield-01
Oracle Span 17-18:  smuggling => smuggle-01
Oracle Span 1-2:  stated => state-01
Oracle Span 5-6:  undermines => undermine-01
Oracle Span 30-31:  used => use-01

Dependencies:
1	Gandra	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	6	mark	_	_
4	the	_	DT	DT	_	5	det	_	_
5	provision	_	NN	NN	_	6	nsubj	_	_
6	undermines	_	VBZ	VBZ	_	2	ccomp	_	_
7	the	_	DT	DT	_	8	det	_	_
8	decree	_	NN	NN	_	11	poss	_	_
9	's	_	POS	POS	_	8	possessive	_	_
10	essential	_	JJ	JJ	_	11	amod	_	_
11	purpose	_	NN	NN	_	6	dobj	_	_
12	by	_	IN	IN	_	6	prep	_	_
13	granting	_	VBG	VBG	_	12	pcomp	_	_
14	immunity	_	NN	NN	_	13	dobj	_	_
15	to	_	TO	TO	_	13	prep	_	_
16	drug-smuggling	_	JJ	JJ	_	19	amod	_	_
17	aircraft	_	NN	NN	_	19	nn	_	_
18	carrying	_	NN	NN	_	19	nn	_	_
19	children	_	NNS	NNS	_	15	pobj	_	_
20	and	_	CC	CC	_	13	cc	_	_
21	thus	_	RB	RB	_	22	advmod	_	_
22	introducing	_	VBG	VBG	_	13	conj	_	_
23	the	_	DT	DT	_	24	det	_	_
24	possibility	_	NN	NN	_	22	dobj	_	_
25	of	_	IN	IN	_	24	prep	_	_
26	kidnapped	_	JJ	JJ	_	27	amod	_	_
27	children	_	NNS	NNS	_	25	pobj	_	_
28	being	_	VBG	VBG	_	29	auxpass	_	_
29	used	_	VBN	VBN	_	27	vmod	_	_
30	as	_	IN	IN	_	29	prep	_	_
31	human	_	JJ	JJ	_	32	amod	_	_
32	shields	_	NNS	NNS	_	30	pobj	_	_
33	.	_	.	.	_	2	punct	_	_

Oracle:
(c / carry-01, ARG0, a / aircraft)
(c / carry-01, ARG1, c2 / child)
(g / grant-01, ARG0, p2 / provision)
(g / grant-01, ARG1, i / immunity)
(g / grant-01, ARG2, a / aircraft)
(i2 / introduce-02, ARG0, p2 / provision)
(i2 / introduce-02, ARG1, p4 / possible)
(k / kidnap-01, ARG1, c4 / child)
(n / name, op, "Gandra")
(p / person, name, n / name)
(p3 / purpose, mod, e / essential)
(p3 / purpose, poss, d / decree)
(p4 / possible, domain, u2 / use-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, u / undermine-01)
(s2 / smuggle-01, ARG0, a / aircraft)
(s2 / smuggle-01, ARG1, d2 / drug)
(s3 / shield-01, mod, h / human)
(u / undermine-01, ARG0, p2 / provision)
(u / undermine-01, ARG1, p3 / purpose)
(u / undermine-01, instrument, g / grant-01)
(u2 / use-01, ARG1, c4 / child)
(u2 / use-01, ARG2, s3 / shield-01)

Input(Some(Graph(null,ArrayBuffer(Span(28,29,List(0),as,use-01,false), Span(7,8,List(1),decree's,decree,false), Span(4,5,List(3, 2),provision,(thing :ARG1-of provide-01),false), Span(21,22,List(4),the,introduce-01,false), Span(18,19,List(5),and,child,false), Span(31,32,List(7, 6),,(thing :instrument-of shield-01),false), Span(25,26,List(8),children,kidnap-01,false), Span(17,18,List(9),children,carry-01,false), Span(15,16,List(11, 10),aircraft,(smuggle-01 :ARG1 drug),false), Span(1,2,List(12),stated,state-01,false), Span(5,6,List(13),undermines,undermine-01,false), Span(19,20,List(14),thus,and,false), Span(23,24,List(15),of,possible,false), Span(0,1,List(18, 17, 16),Gandra,(person :name (name :op "Gandra")),false), Span(26,27,List(19),being,child,false), Span(10,11,List(20),by,have-purpose-91,false), Span(13,14,List(21),to,immunize-01,false), Span(12,13,List(22),immunity,grant-01,false), Span(16,17,List(23),carrying,aircraft,false), Span(30,31,List(24),shields.,human,false), Span(9,10,List(25),purpose,essential,false)),Map(2 -> thing, 5 -> child, 12 -> state-01, 8 -> kidnap-01, 15 -> possible, 21 -> immunize-01, 18 -> "Gandra", 24 -> human, 7 -> shield-01, 1 -> decree, 17 -> name, 23 -> aircraft, 4 -> introduce-01, 11 -> drug, 14 -> and, 20 -> have-purpose-91, 6 -> thing, 9 -> carry-01, 0 -> use-01, 22 -> grant-01, 16 -> person, 19 -> child, 10 -> smuggle-01, 3 -> provide-01, 25 -> essential, 13 -> undermine-01),Map(e -> essential, n -> name, h -> have-purpose-91, s2 -> smuggle-01, h2 -> human, t -> thing, k -> kidnap-01, p2 -> possible, u2 -> undermine-01, s -> shield-01, d -> decree, p -> provide-01, g -> grant-01, a -> and, c3 -> child, d2 -> drug, t2 -> thing, i2 -> immunize-01, i -> introduce-01, a2 -> aircraft, c -> child, s3 -> state-01, u -> use-01, p3 -> person, c2 -> carry-01))),[Ljava.lang.String;@782ead69,Annotation([Ljava.lang.String;@24dd01d2,[Ljava.lang.String;@40295209,[Ljava.lang.String;@1d3f9876),Annotation([Ljava.lang.String;@10773b5d,[Ljava.lang.String;@5ce87b10,[Ledu.cmu.lti.nlp.amr.Dependency;@565bd39e),Annotation([Ljava.lang.String;@37460d0b,[Ljava.lang.String;@1e42656d,[Ljava.lang.String;@16dad4e),Annotation([Ljava.lang.String;@92249de,[Ljava.lang.String;@e8b23a4,[Ledu.cmu.lti.nlp.amr.Entity;@3ef4615))
AMR:
(a / and, mod, c / child)
(a / and, op, u / use-01)
(c2 / carry-01, ARG0, a2 / aircraft)
(c2 / carry-01, ARG1, a / and)
(g / grant-01, ARG0, t / thing)
(g / grant-01, ARG1, i2 / immunize-01)
(g / grant-01, ARG2, c / child)
(h / have-purpose-91, ARG1, d / decree)
(h / have-purpose-91, mod, e / essential)
(i / introduce-01, ARG1, g / grant-01)
(i / introduce-01, ARG2, p2 / possible)
(i2 / immunize-01, ARG1, c3 / child)
(k / kidnap-01, ARG1, u / use-01)
(k / kidnap-01, domain, h2 / human)
(n / name, op, "Gandra")
(p / provide-01, ARG1, t / thing)
(p3 / person, name, n / name)
(s / shield-01, ARG1, h2 / human)
(s / shield-01, instrument, t2 / thing)
(s2 / smuggle-01, ARG0, a2 / aircraft)
(s2 / smuggle-01, ARG1, d2 / drug)
(s3 / state-01, ARG0, p3 / person)
(s3 / state-01, ARG1, u2 / undermine-01)
(u2 / undermine-01, ARG0, t / thing)
(u2 / undermine-01, ARG1, h / have-purpose-91)
(u2 / undermine-01, instrument, g / grant-01)

Decoded in 3,590,734 microseconds
Sentence: Viegas stated in an interview in Brasilia that the government will use the law to more powerfully dissuade drug traffickers who have previously entered Brazilian airspace feeling unthreatened by the air force.

Oracle Span 1:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 2:  airspace => airspace
Oracle Span 3:  Brasilia => (city :name (name :op "Brasilia"))
Oracle Span 4:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 5:  dissuade => dissuade-01
Oracle Span 6:  drug => drug
Oracle Span 7:  entered => enter-01
Oracle Span 8:  feeling => feel-01
Oracle Span 9:  government => (government-organization :ARG0-of govern-01)
Oracle Span 10:  interview => interview-01
Oracle Span 11:  law => law
Oracle Span 12:  more => more
Oracle Span 13:  powerfully => powerful
Oracle Span 14:  previously => previous
Oracle Span 15:  stated => state-01
Oracle Span 16:  traffickers => (person :ARG0-of traffic-00)
Oracle Span 17:  unthreatened => (threaten-01 :polarity -)
Oracle Span 18:  use => use-01
Oracle Span 19:  Viegas => (person :name (name :op "Viegas"))
NER Entity: (person :name (name :op "Viegas"))
NER Entity: (country :name (name :op "Brasilia"))
NER Entity: (thing :name (name :op "Brazilian"))
Spans:
Span 30-31:  air => air
Span 25-26:  airspace => airspace
Span 24-25:  Brazilian => (country :name (name :op "Brazil"))
Span 17-18:  dissuade => dissuade-01
Span 18-19:  drug => drug
Span 26-27:  feeling => fling-01
Span 31-32:  force. => force
Span 4-5:  interview => interview-01
Span 13-14:  law => law
Span 15-16:  more => more
Span 1-2:  stated => state-01
Span 19-20:  traffickers => (person :ARG0-of traffic-00)
Span 11-12:  use => use-01
Span 0-1:  Viegas => (person :name (name :op "Viegas"))
Span 0-23:  Viegas stated in an interview in Brasilia that the government will use the law to more powerfully dissuade drug traffickers who have previously => (date-entity :time previously)

Langrangian relaxation converged after 60 iterations. Delta = 0.0
Oracle Span 30-32:  air force => (military :name (name :op "Force" :op "Air"))
Oracle Span 25-26:  airspace => airspace
Oracle Span 6-7:  Brasilia => (city :name (name :op "Brasilia"))
Oracle Span 24-25:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 17-18:  dissuade => dissuade-01
Oracle Span 18-19:  drug => drug
Oracle Span 23-24:  entered => enter-01
Oracle Span 26-27:  feeling => feel-01
Oracle Span 9-10:  government => (government-organization :ARG0-of govern-01)
Oracle Span 4-5:  interview => interview-01
Oracle Span 13-14:  law => law
Oracle Span 15-16:  more => more
Oracle Span 16-17:  powerfully => powerful
Oracle Span 22-23:  previously => previous
Oracle Span 1-2:  stated => state-01
Oracle Span 19-20:  traffickers => (person :ARG0-of traffic-00)
Oracle Span 27-28:  unthreatened => (threaten-01 :polarity -)
Oracle Span 11-12:  use => use-01
Oracle Span 0-1:  Viegas => (person :name (name :op "Viegas"))

Dependencies:
1	Viegas	_	NNS	NNS	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	in	_	IN	IN	_	2	prep	_	_
4	an	_	DT	DT	_	5	det	_	_
5	interview	_	NN	NN	_	3	pobj	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	Brasilia	_	NNP	NNP	_	6	pobj	_	_
8	that	_	IN	IN	_	12	mark	_	_
9	the	_	DT	DT	_	10	det	_	_
10	government	_	NN	NN	_	12	nsubj	_	_
11	will	_	MD	MD	_	12	aux	_	_
12	use	_	VB	VB	_	2	ccomp	_	_
13	the	_	DT	DT	_	14	det	_	_
14	law	_	NN	NN	_	12	dobj	_	_
15	to	_	TO	TO	_	12	prep	_	_
16	more	_	RBR	RBR	_	17	advmod	_	_
17	powerfully	_	JJ	JJ	_	20	amod	_	_
18	dissuade	_	JJ	JJ	_	20	amod	_	_
19	drug	_	NN	NN	_	20	nn	_	_
20	traffickers	_	NNS	NNS	_	15	pobj	_	_
21	who	_	WP	WP	_	24	nsubj	_	_
22	have	_	VBP	VBP	_	24	aux	_	_
23	previously	_	RB	RB	_	24	advmod	_	_
24	entered	_	VBN	VBN	_	20	rcmod	_	_
25	Brazilian	_	JJ	JJ	_	27	amod	_	_
26	airspace	_	NN	NN	_	27	nn	_	_
27	feeling	_	NN	NN	_	24	dobj	_	_
28	unthreatened	_	VBN	VBN	_	27	vmod	_	_
29	by	_	IN	IN	_	28	prep	_	_
30	the	_	DT	DT	_	32	det	_	_
31	air	_	NN	NN	_	32	nn	_	_
32	force	_	NN	NN	_	29	pobj	_	_
33	.	_	.	.	_	2	punct	_	_

Oracle:
(a / airspace, mod, c / country)
(c / country, name, n2 / name)
(c2 / city, name, n3 / name)
(d / dissuade-01, ARG0, g / government-organization)
(d / dissuade-01, ARG1, p2 / person)
(d / dissuade-01, manner, p3 / powerful)
(e / enter-01, ARG0, p2 / person)
(e / enter-01, ARG1, a / airspace)
(e / enter-01, manner, f / feel-01)
(e / enter-01, time, p4 / previous)
(f / feel-01, ARG0, p2 / person)
(f / feel-01, ARG1, t2 / threaten-01)
(g2 / govern-01, ARG0, g / government-organization)
(i / interview-01, ARG1, p / person)
(m2 / military, name, n4 / name)
(n / name, op, "Viegas")
(n2 / name, op, "Brazil")
(n3 / name, op, "Brasilia")
(n4 / name, op, "Air")
(n4 / name, op, "Force")
(p / person, name, n / name)
(p3 / powerful, degree, m / more)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, u / use-01)
(s / state-01, location, c2 / city)
(s / state-01, medium, i / interview-01)
(t / traffic-00, ARG0, p2 / person)
(t / traffic-00, ARG1, d2 / drug)
(t2 / threaten-01, ARG0, m2 / military)
(t2 / threaten-01, ARG2, p2 / person)
(t2 / threaten-01, polarity, -)
(u / use-01, ARG0, g / government-organization)
(u / use-01, ARG1, l / law)
(u / use-01, ARG2, d / dissuade-01)

Input(Some(Graph(null,ArrayBuffer(Span(17,18,List(0),dissuade,dissuade-01,false), Span(31,32,List(1),force.,force,false), Span(13,14,List(2),law,law,false), Span(26,27,List(3),feeling,fling-01,false), Span(30,31,List(4),air,air,false), Span(11,12,List(5),use,use-01,false), Span(0,23,List(7, 6),Viegas stated in an interview in Brasilia that the government will use the law to more powerfully dissuade drug traffickers who have previously,(date-entity :time previously),false), Span(1,2,List(8),stated,state-01,false), Span(18,19,List(9),drug,drug,false), Span(4,5,List(10),interview,interview-01,false), Span(15,16,List(11),more,more,false), Span(19,20,List(13, 12),traffickers,(person :ARG0-of traffic-00),false), Span(0,1,List(16, 15, 14),Viegas,(person :name (name :op "Viegas")),false), Span(24,25,List(19, 18, 17),Brazilian,(country :name (name :op "Brazil")),false), Span(25,26,List(20),airspace,airspace,false)),Map(2 -> law, 5 -> use-01, 12 -> person, 15 -> name, 8 -> state-01, 18 -> name, 7 -> previously, 17 -> country, 1 -> force, 4 -> air, 11 -> more, 14 -> person, 20 -> airspace, 6 -> date-entity, 0 -> dissuade-01, 9 -> drug, 16 -> "Viegas", 19 -> "Brazil", 3 -> fling-01, 10 -> interview-01, 13 -> traffic-00),Map(n -> name, t -> traffic-00, d3 -> drug, p2 -> person, s -> state-01, d -> dissuade-01, m -> more, p -> previously, a -> air, d2 -> date-entity, a2 -> airspace, i -> interview-01, c -> country, l -> law, f2 -> fling-01, u -> use-01, f -> force, p3 -> person, n2 -> name))),[Ljava.lang.String;@23651ea9,Annotation([Ljava.lang.String;@6b331595,[Ljava.lang.String;@5a18e7f9,[Ljava.lang.String;@62b64115),Annotation([Ljava.lang.String;@692d8bbc,[Ljava.lang.String;@1ac1a4b1,[Ledu.cmu.lti.nlp.amr.Dependency;@7fbaf3f),Annotation([Ljava.lang.String;@5795f83c,[Ljava.lang.String;@52e0f919,[Ljava.lang.String;@45132bd8),Annotation([Ljava.lang.String;@1f4be612,[Ljava.lang.String;@6767a9df,[Ledu.cmu.lti.nlp.amr.Entity;@329abc1b))
AMR:
(a2 / airspace, mod, c / country)
(c / country, name, n2 / name)
(d / dissuade-01, ARG1, p2 / person)
(d2 / date-entity, time, p / previously)
(f / force, mod, a / air)
(f2 / fling-01, ARG0, p2 / person)
(f2 / fling-01, ARG1, a2 / airspace)
(f2 / fling-01, ARG6, d2 / date-entity)
(i / interview-01, ARG0, m / more)
(i / interview-01, ARG1, p3 / person)
(n / name, op, "Viegas")
(n2 / name, op, "Brazil")
(p3 / person, name, n / name)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, u / use-01)
(s / state-01, medium, i / interview-01)
(t / traffic-00, ARG0, p2 / person)
(t / traffic-00, ARG1, d3 / drug)
(u / use-01, ARG0, a / air)
(u / use-01, ARG1, l / law)
(u / use-01, ARG2, d / dissuade-01)

Decoded in 3,198,456 microseconds
Sentence: The Government was prompted to act due to the deteriorating public security situation with increasingly powerful and violent drug gangs in Sao Paolo and particularly Rio de Janeiro.

Oracle Span 1:  act => act-02
Oracle Span 2:  and => and
Oracle Span 3:  deteriorating => deteriorate-01
Oracle Span 4:  drug => drug
Oracle Span 5:  gangs => gang
Oracle Span 6:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 7:  increasingly => increase-01
Oracle Span 8:  particularly => particular
Oracle Span 9:  powerful => power
Oracle Span 10:  prompted => prompt-02
Oracle Span 11:  public => public
Oracle Span 12:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 13:  Sao Paolo => (city :name (name :op "Paolo" :op "Sao"))
Oracle Span 14:  security => security
Oracle Span 15:  situation => situation
Oracle Span 16:  violent => violence
NER Entity: (country :name (name :op "Sao" :op "Paolo"))
NER Entity: (country :name (name :op "Rio" :op "de" :op "Janeiro"))
Spans:
Span 5-6:  act => act-02
Span 16-17:  and => and
Span 23-24:  and => and
Span 9-10:  deteriorating => deteriorate-01
Span 18-19:  drug => drug
Span 6-7:  due => duel-01
Span 19-20:  gangs => gang
Span 1-2:  Government => (government-organization :ARG0-of govern-01)
Span 14-15:  increasingly => increase-01
Span 22-23:  Paolo => (person :name (name :op "Baldelli" :op "Paolo"))
Span 24-25:  particularly => particular
Span 15-16:  powerful => powerful
Span 3-4:  prompted => prompt-02
Span 10-11:  public => public
Span 25-28:  Rio de Janeiro. => (city :name (name :op "Janeiro" :op "Rio" :op "de"))
Span 11-12:  security => security
Span 12-13:  situation => situation
Span 17-18:  violent => violent

Langrangian relaxation converged after 47 iterations. Delta = 0.0
Oracle Span 5-6:  act => act-02
Oracle Span 16-17:  and => and
Oracle Span 9-10:  deteriorating => deteriorate-01
Oracle Span 18-19:  drug => drug
Oracle Span 19-20:  gangs => gang
Oracle Span 1-2:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 14-15:  increasingly => increase-01
Oracle Span 24-25:  particularly => particular
Oracle Span 15-16:  powerful => power
Oracle Span 3-4:  prompted => prompt-02
Oracle Span 10-11:  public => public
Oracle Span 25-28:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 21-23:  Sao Paolo => (city :name (name :op "Paolo" :op "Sao"))
Oracle Span 11-12:  security => security
Oracle Span 12-13:  situation => situation
Oracle Span 17-18:  violent => violence

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	Government	_	NN	NN	_	4	nsubjpass	_	_
3	was	_	VBD	VBD	_	4	auxpass	_	_
4	prompted	_	VBN	VBN	_	0	root	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	act	_	VB	VB	_	4	xcomp	_	_
7	due	_	JJ	JJ	_	6	acomp	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	the	_	DT	DT	_	13	det	_	_
10	deteriorating	_	VBG	VBG	_	13	amod	_	_
11	public	_	JJ	JJ	_	13	amod	_	_
12	security	_	NN	NN	_	13	nn	_	_
13	situation	_	NN	NN	_	8	pobj	_	_
14	with	_	IN	IN	_	13	prep	_	_
15	increasingly	_	RB	RB	_	16	advmod	_	_
16	powerful	_	JJ	JJ	_	20	amod	_	_
17	and	_	CC	CC	_	16	cc	_	_
18	violent	_	JJ	JJ	_	16	conj	_	_
19	drug	_	NN	NN	_	20	nn	_	_
20	gangs	_	NNS	NNS	_	14	pobj	_	_
21	in	_	IN	IN	_	20	prep	_	_
22	Sao	_	NNP	NNP	_	23	nn	_	_
23	Paolo	_	NNP	NNP	_	21	pobj	_	_
24	and	_	CC	CC	_	23	cc	_	_
25	particularly	_	RB	RB	_	23	advmod	_	_
26	Rio	_	NNP	NNP	_	28	nn	_	_
27	de	_	IN	IN	_	28	amod	_	_
28	Janeiro	_	NNP	NNP	_	23	dep	_	_
29	.	_	.	.	_	4	punct	_	_

Oracle:
(a / act-02, ARG0, g / government-organization)
(a2 / and, op, c / city)
(a2 / and, op, c2 / city)
(c / city, name, n / name)
(c2 / city, mod, p4 / particular)
(c2 / city, name, n2 / name)
(d / deteriorate-01, ARG0, s / situation)
(g2 / govern-01, ARG0, g / government-organization)
(g3 / gang, location, a2 / and)
(g3 / gang, mod, d2 / drug)
(g3 / gang, mod, p3 / power)
(g3 / gang, mod, v / violence)
(i / increase-01, ARG1, p3 / power)
(i / increase-01, ARG1, v / violence)
(n / name, op, "Paolo")
(n / name, op, "Sao")
(n2 / name, op, "Janeiro")
(n2 / name, op, "Rio")
(n2 / name, op, "de")
(p / prompt-02, ARG0, d / deteriorate-01)
(p / prompt-02, ARG1, g / government-organization)
(p / prompt-02, ARG2, a / act-02)
(s / situation, mod, s2 / security)
(s / situation, topic, g3 / gang)
(s2 / security, mod, p2 / public)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),due,duel-01,false), Span(15,16,List(1),powerful,powerful,false), Span(25,28,List(6, 5, 4, 3, 2),Rio de Janeiro.,(city :name (name :op "Janeiro" :op "Rio" :op "de")),false), Span(5,6,List(7),act,act-02,false), Span(9,10,List(8),deteriorating,deteriorate-01,false), Span(16,17,List(9),and,and,false), Span(17,18,List(10),violent,violent,false), Span(22,23,List(14, 13, 12, 11),Paolo,(person :name (name :op "Baldelli" :op "Paolo")),false), Span(12,13,List(15),situation,situation,false), Span(24,25,List(16),particularly,particular,false), Span(18,19,List(17),drug,drug,false), Span(19,20,List(18),gangs,gang,false), Span(3,4,List(19),prompted,prompt-02,false), Span(1,2,List(21, 20),Government,(government-organization :ARG0-of govern-01),false), Span(11,12,List(22),security,security,false), Span(14,15,List(23),increasingly,increase-01,false), Span(23,24,List(24),and,and,false), Span(10,11,List(25),public,public,false)),Map(2 -> city, 5 -> "Rio", 12 -> name, 8 -> deteriorate-01, 15 -> situation, 21 -> govern-01, 18 -> gang, 24 -> and, 7 -> act-02, 1 -> powerful, 17 -> drug, 23 -> increase-01, 4 -> "Janeiro", 11 -> person, 14 -> "Paolo", 20 -> government-organization, 6 -> "de", 9 -> and, 0 -> duel-01, 22 -> security, 16 -> particular, 19 -> prompt-02, 10 -> violent, 3 -> name, 25 -> public, 13 -> "Baldelli"),Map(n -> name, g3 -> govern-01, p5 -> public, s2 -> security, d3 -> drug, p2 -> person, a3 -> and, s -> situation, v -> violent, d -> duel-01, g2 -> government-organization, g -> gang, p -> powerful, a -> act-02, p4 -> prompt-02, d2 -> deteriorate-01, i -> increase-01, a2 -> and, c -> city, p3 -> particular, n2 -> name))),[Ljava.lang.String;@70b4d3ea,Annotation([Ljava.lang.String;@22d65ba1,[Ljava.lang.String;@1e115a5d,[Ljava.lang.String;@52265546),Annotation([Ljava.lang.String;@45be76b,[Ljava.lang.String;@1440af12,[Ledu.cmu.lti.nlp.amr.Dependency;@97cc75),Annotation([Ljava.lang.String;@60fb3544,[Ljava.lang.String;@3bc0e68f,[Ljava.lang.String;@2a69e6da),Annotation([Ljava.lang.String;@14a36386,[Ljava.lang.String;@2d4b3543,[Ledu.cmu.lti.nlp.amr.Entity;@11835afb))
AMR:
(a / act-02, ARG0, g2 / government-organization)
(a / act-02, ARG1, d / duel-01)
(a2 / and, op, c / city)
(a2 / and, op, p2 / person)
(a3 / and, op, p2 / person)
(c / city, mod, p3 / particular)
(c / city, name, n / name)
(d / duel-01, ARG1, s / situation)
(d2 / deteriorate-01, ARG0, s / situation)
(g / gang, location, a2 / and)
(g / gang, mod, d3 / drug)
(g / gang, mod, p / powerful)
(g / gang, mod, v / violent)
(g3 / govern-01, ARG0, g2 / government-organization)
(i / increase-01, ARG1, v / violent)
(n / name, op, "Janeiro")
(n / name, op, "Rio")
(n / name, op, "de")
(n2 / name, op, "Baldelli")
(n2 / name, op, "Paolo")
(p2 / person, name, n2 / name)
(p4 / prompt-02, ARG1, g2 / government-organization)
(p4 / prompt-02, ARG2, a / act-02)
(s / situation, mod, s2 / security)
(s / situation, prep-with, g / gang)
(s2 / security, mod, p5 / public)

Decoded in 3,011,023 microseconds
Sentence: Rio de Janeiro drug gangs have more firepower than the police and have successfully attacked police stations and forced businesses and schools to close.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  attacked => attack-01
Oracle Span 4:  businesses => business
Oracle Span 5:  close => close-01
Oracle Span 6:  drug => drug
Oracle Span 7:  firepower => firepower
Oracle Span 8:  forced => force-01
Oracle Span 9:  gangs => gang
Oracle Span 10:  have => have-03
Oracle Span 11:  more => more
Oracle Span 12:  police => police
Oracle Span 13:  police => police
Oracle Span 14:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 15:  schools => school
Oracle Span 16:  stations => station
Oracle Span 17:  successfully => succeed-01
NER Entity: (country :name (name :op "Rio" :op "de" :op "Janeiro"))
Spans:
Span 11-12:  and => and
Span 20-21:  and => and
Span 17-18:  and => and
Span 14-15:  attacked => attack-01
Span 19-20:  businesses => business
Span 23-24:  close. => close-03
Span 3-4:  drug => drug
Span 7-8:  firepower => firepower
Span 18-19:  forced => force-01
Span 4-5:  gangs => gang
Span 5-6:  have => have-03
Span 6-7:  more => more
Span 10-11:  police => police
Span 15-16:  police => police
Span 0-3:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "Rio" :op "de"))
Span 21-22:  schools => school
Span 16-17:  stations => station
Span 13-14:  successfully => success

Langrangian relaxation converged after 22 iterations. Delta = 0.0
Oracle Span 11-12:  and => and
Oracle Span 17-18:  and => and
Oracle Span 14-15:  attacked => attack-01
Oracle Span 19-20:  businesses => business
Oracle Span 23-24:  close => close-01
Oracle Span 3-4:  drug => drug
Oracle Span 7-8:  firepower => firepower
Oracle Span 18-19:  forced => force-01
Oracle Span 4-5:  gangs => gang
Oracle Span 5-6:  have => have-03
Oracle Span 6-7:  more => more
Oracle Span 10-11:  police => police
Oracle Span 15-16:  police => police
Oracle Span 0-3:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 21-22:  schools => school
Oracle Span 16-17:  stations => station
Oracle Span 13-14:  successfully => succeed-01

Dependencies:
1	Rio	_	NNP	NNP	_	5	nn	_	_
2	de	_	NNP	NNP	_	5	nn	_	_
3	Janeiro	_	NNP	NNP	_	5	nn	_	_
4	drug	_	NN	NN	_	5	nn	_	_
5	gangs	_	NNS	NNS	_	6	nsubj	_	_
6	have	_	VBP	VBP	_	0	root	_	_
7	more	_	JJR	JJR	_	8	amod	_	_
8	firepower	_	NN	NN	_	6	dobj	_	_
9	than	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	11	det	_	_
11	police	_	NN	NN	_	9	pobj	_	_
12	and	_	CC	CC	_	6	cc	_	_
13	have	_	VBP	VBP	_	15	aux	_	_
14	successfully	_	RB	RB	_	15	advmod	_	_
15	attacked	_	VBN	VBN	_	6	conj	_	_
16	police	_	NN	NN	_	17	nn	_	_
17	stations	_	NNS	NNS	_	15	dobj	_	_
18	and	_	CC	CC	_	15	cc	_	_
19	forced	_	VBN	VBN	_	15	conj	_	_
20	businesses	_	NNS	NNS	_	19	dobj	_	_
21	and	_	CC	CC	_	20	cc	_	_
22	schools	_	NNS	NNS	_	20	conj	_	_
23	to	_	TO	TO	_	24	aux	_	_
24	close	_	VB	VB	_	19	xcomp	_	_
25	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, a2 / attack-01)
(a / and, op, f2 / force-01)
(a / and, op, h / have-03)
(a2 / attack-01, ARG0, g / gang)
(a2 / attack-01, ARG1, s / station)
(a3 / and, op, b / business)
(a3 / and, op, s3 / school)
(c / city, name, n / name)
(c2 / close-01, ARG1, a3 / and)
(f / firepower, compared-to, p / police)
(f / firepower, mod, m / more)
(f2 / force-01, ARG0, g / gang)
(f2 / force-01, ARG1, a3 / and)
(f2 / force-01, ARG2, c2 / close-01)
(g / gang, location, c / city)
(g / gang, mod, d / drug)
(h / have-03, ARG0, g / gang)
(h / have-03, ARG1, f / firepower)
(n / name, op, "Janeiro")
(n / name, op, "Rio")
(n / name, op, "de")
(s / station, mod, p2 / police)
(s2 / succeed-01, ARG0, g / gang)
(s2 / succeed-01, ARG1, a2 / attack-01)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),stations,station,false), Span(21,22,List(1),schools,school,false), Span(18,19,List(2),forced,force-01,false), Span(13,14,List(3),successfully,success,false), Span(11,12,List(4),and,and,false), Span(10,11,List(5),police,police,false), Span(14,15,List(6),attacked,attack-01,false), Span(15,16,List(7),police,police,false), Span(19,20,List(8),businesses,business,false), Span(7,8,List(9),firepower,firepower,false), Span(5,6,List(10),have,have-03,false), Span(20,21,List(11),and,and,false), Span(3,4,List(12),drug,drug,false), Span(6,7,List(13),more,more,false), Span(0,3,List(18, 17, 16, 15, 14),Rio de Janeiro,(city :name (name :op "Janeiro" :op "Rio" :op "de")),false), Span(23,24,List(19),close.,close-03,false), Span(4,5,List(20),gangs,gang,false), Span(17,18,List(21),and,and,false)),Map(2 -> force-01, 5 -> police, 12 -> drug, 15 -> name, 8 -> business, 21 -> and, 18 -> "de", 7 -> police, 17 -> "Rio", 1 -> school, 4 -> and, 11 -> and, 14 -> city, 20 -> gang, 6 -> attack-01, 0 -> station, 9 -> firepower, 16 -> "Janeiro", 19 -> close-03, 3 -> success, 10 -> have-03, 13 -> more),Map(n -> name, h -> have-03, s2 -> school, b -> business, p2 -> police, a3 -> and, s -> station, m -> more, d -> drug, g -> gang, p -> police, a -> and, a2 -> attack-01, c -> city, s3 -> success, f2 -> firepower, f -> force-01, c2 -> close-03, a4 -> and))),[Ljava.lang.String;@629dc10b,Annotation([Ljava.lang.String;@5a8c478b,[Ljava.lang.String;@4cf8ee4c,[Ljava.lang.String;@62799cae),Annotation([Ljava.lang.String;@6e608c73,[Ljava.lang.String;@56682e2b,[Ledu.cmu.lti.nlp.amr.Dependency;@5d693024),Annotation([Ljava.lang.String;@73db4bcb,[Ljava.lang.String;@19b252d7,[Ljava.lang.String;@e3c3ebc),Annotation([Ljava.lang.String;@1ac0d74f,[Ljava.lang.String;@33ec52cf,[Ledu.cmu.lti.nlp.amr.Entity;@38439a8f))
AMR:
(a / and, op, a2 / attack-01)
(a / and, op, f / force-01)
(a / and, op, h / have-03)
(a2 / attack-01, ARG0, g / gang)
(a2 / attack-01, ARG1, s / station)
(a4 / and, op, b / business)
(a4 / and, op, s2 / school)
(c / city, name, n / name)
(c2 / close-03, ARG1, a4 / and)
(f / force-01, ARG0, g / gang)
(f / force-01, ARG1, a3 / and)
(f / force-01, ARG2, c2 / close-03)
(f2 / firepower, compared-to, p2 / police)
(f2 / firepower, mod, m / more)
(g / gang, location, c / city)
(g / gang, mod, d / drug)
(h / have-03, ARG0, g / gang)
(h / have-03, ARG1, f2 / firepower)
(n / name, op, "Janeiro")
(n / name, op, "Rio")
(n / name, op, "de")
(s / station, mod, p / police)
(s3 / success, ARG0, g / gang)

Decoded in 1,793,609 microseconds
Sentence: President Luiz Inacio Lula da Silva stated in a 2003 interview with foreign correspondents --

Oracle Span 1:  2003 => (date-entity :year 2003)
Oracle Span 2:  correspondents => correspondent
Oracle Span 3:  foreign => foreign
Oracle Span 4:  interview => interview-01
Oracle Span 5:  Luiz Inacio Lula da Silva => (person :name (name :op "Silva" :op "da" :op "Lula" :op "Inacio" :op "Luiz"))
Oracle Span 6:  President => (have-org-role-91 :ARG2 president)
Oracle Span 7:  stated => state-01
NER Entity: (person :name (name :op "Luiz" :op "Inacio" :op "Lula" :op "da" :op "Silva"))
Spans:
Span 13-14:  correspondents => (person :ARG0-of (have-org-role-91 :ARG2 correspondent))
Span 12-13:  foreign => foreign
Span 10-11:  interview => interview-01
Span 1-6:  Luiz Inacio Lula da Silva => (person :name (name :op "Luiz" :op "Inacio" :op "Lula" :op "da" :op "Silva"))
Span 0-10:  President Luiz Inacio Lula da Silva stated in a 2003 => (date-entity :year 2003)
Span 6-7:  stated => state-01

Langrangian relaxation converged after 10 iterations. Delta = 0.0
Oracle Span 9-10:  2003 => (date-entity :year 2003)
Oracle Span 13-14:  correspondents => correspondent
Oracle Span 12-13:  foreign => foreign
Oracle Span 10-11:  interview => interview-01
Oracle Span 1-6:  Luiz Inacio Lula da Silva => (person :name (name :op "Silva" :op "da" :op "Lula" :op "Inacio" :op "Luiz"))
Oracle Span 0-1:  President => (have-org-role-91 :ARG2 president)
Oracle Span 6-7:  stated => state-01

Dependencies:
1	President	_	NNP	NNP	_	6	nn	_	_
2	Luiz	_	NNP	NNP	_	6	nn	_	_
3	Inacio	_	NNP	NNP	_	6	nn	_	_
4	Lula	_	NNP	NNP	_	6	nn	_	_
5	da	_	NNP	NNP	_	6	nn	_	_
6	Silva	_	NNP	NNP	_	0	root	_	_
7	stated	_	VBN	VBN	_	6	vmod	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	a	_	DT	DT	_	11	det	_	_
10	2003	_	CD	CD	_	11	num	_	_
11	interview	_	NN	NN	_	8	pobj	_	_
12	with	_	IN	IN	_	7	prep	_	_
13	foreign	_	JJ	JJ	_	14	amod	_	_
14	correspondents	_	NNS	NNS	_	12	pobj	_	_
15	--	_	:	:	_	6	punct	_	_

Oracle:
(c2 / correspondent, mod, f / foreign)
(d / date-entity, year, 2003)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG2, p2 / president)
(i / interview-01, ARG0, c2 / correspondent)
(i / interview-01, ARG1, p / person)
(i / interview-01, time, d / date-entity)
(n / name, op, "Inacio")
(n / name, op, "Luiz")
(n / name, op, "Lula")
(n / name, op, "Silva")
(n / name, op, "da")
(p / person, name, n / name)
(s / state-01, ARG0, p / person)
(s / state-01, medium, i / interview-01)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(2, 1, 0),correspondents,(person :ARG0-of (have-org-role-91 :ARG2 correspondent)),false), Span(1,6,List(9, 8, 7, 6, 5, 4, 3),Luiz Inacio Lula da Silva,(person :name (name :op "Luiz" :op "Inacio" :op "Lula" :op "da" :op "Silva")),false), Span(12,13,List(10),foreign,foreign,false), Span(6,7,List(11),stated,state-01,false), Span(10,11,List(12),interview,interview-01,false), Span(0,10,List(14, 13),President Luiz Inacio Lula da Silva stated in a 2003,(date-entity :year 2003),false)),Map(2 -> correspondent, 5 -> "Luiz", 12 -> interview-01, 8 -> "da", 7 -> "Lula", 1 -> have-org-role-91, 4 -> name, 11 -> state-01, 14 -> 2003, 6 -> "Inacio", 0 -> person, 9 -> "Silva", 3 -> person, 10 -> foreign, 13 -> date-entity),Map(n -> name, 2 -> 2003, h -> have-org-role-91, p2 -> person, s -> state-01, d -> date-entity, p -> person, i -> interview-01, c -> correspondent, f -> foreign))),[Ljava.lang.String;@43b136b8,Annotation([Ljava.lang.String;@63fc84f6,[Ljava.lang.String;@2e070d6,[Ljava.lang.String;@3ede4699),Annotation([Ljava.lang.String;@7490a30c,[Ljava.lang.String;@734c525c,[Ledu.cmu.lti.nlp.amr.Dependency;@72abea23),Annotation([Ljava.lang.String;@3e0d8061,[Ljava.lang.String;@4ff4cc6f,[Ljava.lang.String;@5ebba97f),Annotation([Ljava.lang.String;@736cba79,[Ljava.lang.String;@213022fd,[Ledu.cmu.lti.nlp.amr.Entity;@484e1500))
AMR:
(d / date-entity, year, 2 / 2003)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG2, c / correspondent)
(i / interview-01, ARG0, p / person)
(i / interview-01, ARG1, p2 / person)
(i / interview-01, ARG6, d / date-entity)
(n / name, op, "Inacio")
(n / name, op, "Luiz")
(n / name, op, "Lula")
(n / name, op, "Silva")
(n / name, op, "da")
(p / person, mod, f / foreign)
(p2 / person, name, n / name)
(s / state-01, medium, i / interview-01)

Decoded in 379,313 microseconds
Sentence: The policy is a matter of national sovereignty and security.

Oracle Span 1:  and => and
Oracle Span 2:  matter => matter
Oracle Span 3:  national => nation
Oracle Span 4:  policy => policy
Oracle Span 5:  security => security
Oracle Span 6:  sovereignty => sovereignty
Spans:
Span 8-9:  and => and
Span 4-5:  matter => matter
Span 6-7:  national => nation
Span 1-2:  policy => policy
Span 9-10:  security. => security
Span 7-8:  sovereignty => sovereignty

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  and => and
Oracle Span 4-5:  matter => matter
Oracle Span 6-7:  national => nation
Oracle Span 1-2:  policy => policy
Oracle Span 9-10:  security => security
Oracle Span 7-8:  sovereignty => sovereignty

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	policy	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	a	_	DT	DT	_	5	det	_	_
5	matter	_	NN	NN	_	0	root	_	_
6	of	_	IN	IN	_	5	prep	_	_
7	national	_	JJ	JJ	_	8	amod	_	_
8	sovereignty	_	NN	NN	_	6	pobj	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	security	_	NN	NN	_	8	conj	_	_
11	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, op, s / sovereignty)
(a / and, op, s2 / security)
(m / matter, domain, p / policy)
(m / matter, topic, a / and)
(s / sovereignty, mod, n / nation)
(s2 / security, mod, n / nation)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),and,and,false), Span(9,10,List(1),security.,security,false), Span(4,5,List(2),matter,matter,false), Span(6,7,List(3),national,nation,false), Span(7,8,List(4),sovereignty,sovereignty,false), Span(1,2,List(5),policy,policy,false)),Map(2 -> matter, 5 -> policy, 1 -> security, 4 -> sovereignty, 0 -> and, 3 -> nation),Map(n -> nation, s2 -> sovereignty, s -> security, m -> matter, p -> policy, a -> and))),[Ljava.lang.String;@4b7a8afa,Annotation([Ljava.lang.String;@549999cd,[Ljava.lang.String;@241d7d2b,[Ljava.lang.String;@abffc7c),Annotation([Ljava.lang.String;@158d9a8b,[Ljava.lang.String;@dc22e06,[Ledu.cmu.lti.nlp.amr.Dependency;@42f9eeb0),Annotation([Ljava.lang.String;@37d0a68f,[Ljava.lang.String;@4e703b3c,[Ljava.lang.String;@525e8eea),Annotation([Ljava.lang.String;@5f5f667f,[Ljava.lang.String;@6d0947c5,[Ledu.cmu.lti.nlp.amr.Entity;@22ef3883))
AMR:
(a / and, op, s2 / sovereignty)
(m / matter, domain, p / policy)
(m / matter, topic, a / and)
(s / security, mod, n / nation)
(s2 / sovereignty, mod, n / nation)

Decoded in 166,870 microseconds
Sentence: Some pilots of drug-running aircraft felt so confidently immune from retribution as to make obscene gestures at pursuing Brazilian air force pilots.

Oracle Span 1:  aircraft => aircraft
Oracle Span 2:  Brazilian air force => (have-org-role-91 :ARG1 (military :name (name :op "Force" :op "Air" :op "Brazilian")))
Oracle Span 3:  confidently => confident-41
Oracle Span 4:  drug => drug
Oracle Span 5:  felt => feel-01
Oracle Span 6:  gestures => gesture-01
Oracle Span 7:  immune => immune
Oracle Span 8:  obscene => obscene
Oracle Span 9:  pilots => pilot-01
Oracle Span 10:  pilots => (person :ARG0-of pilot-01)
Oracle Span 11:  pursuing => pursue-01
Oracle Span 12:  retribution => retribution
Oracle Span 13:  running => run-08
Oracle Span 14:  so => so
Oracle Span 15:  Some => some
Spans:
Span 19-20:  air => military
Span 4-5:  aircraft => aircraft
Span 18-19:  Brazilian => (country :name (name :op "Brazil"))
Span 5-6:  felt => felt-01
Span 20-21:  force => (force-01 :ARG1-of cause-01)
Span 13-14:  make => make-03
Span 14-15:  obscene => obscene
Span 1-2:  pilots => pilot
Span 21-22:  pilots. => pilot
Span 17-18:  pursuing => pursue-01
Span 0-1:  Some => some

Langrangian relaxation converged after 30 iterations. Delta = 0.0
Oracle Span 6-7:  aircraft => aircraft
Oracle Span 20-23:  Brazilian air force => (have-org-role-91 :ARG1 (military :name (name :op "Force" :op "Air" :op "Brazilian")))
Oracle Span 9-10:  confidently => confident-41
Oracle Span 3-4:  drug => drug
Oracle Span 7-8:  felt => feel-01
Oracle Span 17-18:  gestures => gesture-01
Oracle Span 10-11:  immune => immune
Oracle Span 16-17:  obscene => obscene
Oracle Span 1-2:  pilots => pilot-01
Oracle Span 23-24:  pilots => (person :ARG0-of pilot-01)
Oracle Span 19-20:  pursuing => pursue-01
Oracle Span 12-13:  retribution => retribution
Oracle Span 5-6:  running => run-08
Oracle Span 8-9:  so => so
Oracle Span 0-1:  Some => some

Dependencies:
1	Some	_	DT	DT	_	2	det	_	_
2	pilots	_	NNS	NNS	_	6	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	drug-running	_	JJ	JJ	_	5	amod	_	_
5	aircraft	_	NN	NN	_	3	pobj	_	_
6	felt	_	VBD	VBD	_	0	root	_	_
7	so	_	RB	RB	_	9	advmod	_	_
8	confidently	_	RB	RB	_	9	advmod	_	_
9	immune	_	JJ	JJ	_	6	acomp	_	_
10	from	_	IN	IN	_	9	prep	_	_
11	retribution	_	NN	NN	_	10	pobj	_	_
12	as	_	IN	IN	_	14	mark	_	_
13	to	_	TO	TO	_	14	aux	_	_
14	make	_	VB	VB	_	6	advcl	_	_
15	obscene	_	JJ	JJ	_	16	amod	_	_
16	gestures	_	NNS	NNS	_	14	dobj	_	_
17	at	_	IN	IN	_	14	prep	_	_
18	pursuing	_	VBG	VBG	_	17	pcomp	_	_
19	Brazilian	_	JJ	JJ	_	22	amod	_	_
20	air	_	NN	NN	_	22	nn	_	_
21	force	_	NN	NN	_	22	nn	_	_
22	pilots	_	NNS	NNS	_	18	dobj	_	_
23	.	_	.	.	_	6	punct	_	_

Oracle:
(c / confident-41, ARG1, p / person)
(c / confident-41, ARG2, i2 / immune)
(f / feel-01, ARG0, p / person)
(f / feel-01, ARG1, i2 / immune)
(f / feel-01, ARG2, r2 / retribution)
(g / gesture-01, ARG0, p / person)
(g / gesture-01, mod, o / obscene)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG3, p5 / pilot-01)
(i2 / immune, degree, s2 / so)
(m / military, name, n / name)
(n / name, op, "Air")
(n / name, op, "Brazilian")
(n / name, op, "Force")
(p / person, quant, s / some)
(p2 / pilot-01, ARG0, p / person)
(p2 / pilot-01, ARG1, a / aircraft)
(r / run-08, ARG0, a / aircraft)
(r / run-08, ARG1, d / drug)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(1, 0),force,(force-01 :ARG1-of cause-01),false), Span(5,6,List(2),felt,felt-01,false), Span(1,2,List(3),pilots,pilot,false), Span(4,5,List(4),aircraft,aircraft,false), Span(13,14,List(5),make,make-03,false), Span(0,1,List(6),Some,some,false), Span(21,22,List(7),pilots.,pilot,false), Span(14,15,List(8),obscene,obscene,false), Span(17,18,List(9),pursuing,pursue-01,false), Span(19,20,List(10),air,military,false), Span(18,19,List(13, 12, 11),Brazilian,(country :name (name :op "Brazil")),false)),Map(2 -> felt-01, 5 -> make-03, 12 -> name, 8 -> obscene, 7 -> pilot, 1 -> cause-01, 4 -> aircraft, 11 -> country, 6 -> some, 0 -> force-01, 9 -> pursue-01, 3 -> pilot, 10 -> military, 13 -> "Brazil"),Map(n -> name, m2 -> military, p2 -> pilot, s -> some, m -> make-03, p -> pilot, a -> aircraft, c -> cause-01, f2 -> felt-01, f -> force-01, o -> obscene, p3 -> pursue-01, c2 -> country))),[Ljava.lang.String;@1bacedbe,Annotation([Ljava.lang.String;@5b5f2b67,[Ljava.lang.String;@4185fe5c,[Ljava.lang.String;@6e20210b),Annotation([Ljava.lang.String;@129df06c,[Ljava.lang.String;@303be54b,[Ledu.cmu.lti.nlp.amr.Dependency;@5e229a0e),Annotation([Ljava.lang.String;@3165d0b8,[Ljava.lang.String;@4c864868,[Ljava.lang.String;@23f8ed0e),Annotation([Ljava.lang.String;@69c0f195,[Ljava.lang.String;@76bf1c05,[Ledu.cmu.lti.nlp.amr.Entity;@804dfb2))
AMR:
(c / cause-01, ARG1, f / force-01)
(c2 / country, name, n / name)
(c2 / country, op, m2 / military)
(f / force-01, ARG0, m2 / military)
(f / force-01, ARG1, p2 / pilot)
(f2 / felt-01, ARG1, a / aircraft)
(m / make-03, ARG1, p3 / pursue-01)
(m / make-03, ARG6, o / obscene)
(n / name, op, "Brazil")
(p / pilot, quant, s / some)
(p3 / pursue-01, ARG0, s / some)
(p3 / pursue-01, ARG1, f2 / felt-01)
(p3 / pursue-01, location, c2 / country)

Decoded in 1,187,183 microseconds
Sentence: The constitutionality of the law has been questioned under Brazil's prohibition of the death penalty as punishment for criminal acts.

Oracle Span 1:  acts => act
Oracle Span 2:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 3:  constitutionality => constitution
Oracle Span 4:  criminal => crime
Oracle Span 5:  death => die-01
Oracle Span 6:  law => law
Oracle Span 7:  penalty => penalize-01
Oracle Span 8:  prohibition => prohibit-01
Oracle Span 9:  punishment => punish-01
Oracle Span 10:  questioned => question-01
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 20-21:   => act
Span 19-20:  acts. => crime
Span 15-16:  as => peal-01
Span 9-10:  Brazil's => (country :name (name :op "Brazil"))
Span 17-18:  for => punish-01
Span 4-5:  law => law
Span 11-12:  of => prohibit-01
Span 14-15:  penalty => detach-01
Span 7-8:  questioned => question-01

Langrangian relaxation converged after 32 iterations. Delta = 0.0
Oracle Span 20-21:  acts => act
Oracle Span 9-10:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 1-2:  constitutionality => constitution
Oracle Span 19-20:  criminal => crime
Oracle Span 14-15:  death => die-01
Oracle Span 4-5:  law => law
Oracle Span 15-16:  penalty => penalize-01
Oracle Span 11-12:  prohibition => prohibit-01
Oracle Span 17-18:  punishment => punish-01
Oracle Span 7-8:  questioned => question-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	constitutionality	_	NN	NN	_	8	nsubjpass	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	5	det	_	_
5	law	_	NN	NN	_	3	pobj	_	_
6	has	_	VBZ	VBZ	_	8	aux	_	_
7	been	_	VBN	VBN	_	8	auxpass	_	_
8	questioned	_	VBN	VBN	_	0	root	_	_
9	under	_	IN	IN	_	8	prep	_	_
10	Brazil	_	NNP	NNP	_	12	poss	_	_
11	's	_	POS	POS	_	10	possessive	_	_
12	prohibition	_	NN	NN	_	9	pobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	the	_	DT	DT	_	16	det	_	_
15	death	_	NN	NN	_	16	nn	_	_
16	penalty	_	NN	NN	_	13	pobj	_	_
17	as	_	IN	IN	_	8	prep	_	_
18	punishment	_	NN	NN	_	17	pobj	_	_
19	for	_	IN	IN	_	18	prep	_	_
20	criminal	_	JJ	JJ	_	21	amod	_	_
21	acts	_	NNS	NNS	_	19	pobj	_	_
22	.	_	.	.	_	8	punct	_	_

Oracle:
(a / act, mod, c3 / crime)
(c / constitution, domain, l / law)
(c2 / country, name, n / name)
(n / name, op, "Brazil")
(p / prohibit-01, ARG0, c2 / country)
(p / prohibit-01, ARG1, p2 / penalize-01)
(p2 / penalize-01, instrument, d / die-01)
(p3 / punish-01, ARG2, a / act)
(p3 / punish-01, instrument, p2 / penalize-01)
(q / question-01, ARG1, c / constitution)
(q / question-01, prep-under, p / prohibit-01)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(2, 1, 0),Brazil's,(country :name (name :op "Brazil")),false), Span(14,15,List(3),penalty,detach-01,false), Span(17,18,List(4),for,punish-01,false), Span(19,20,List(5),acts.,crime,false), Span(20,21,List(6),,act,false), Span(15,16,List(7),as,peal-01,false), Span(11,12,List(8),of,prohibit-01,false), Span(4,5,List(9),law,law,false), Span(7,8,List(10),questioned,question-01,false)),Map(2 -> "Brazil", 5 -> crime, 8 -> prohibit-01, 7 -> peal-01, 1 -> name, 4 -> punish-01, 6 -> act, 9 -> law, 0 -> country, 10 -> question-01, 3 -> detach-01),Map(n -> name, q -> question-01, p2 -> peal-01, d -> detach-01, p -> punish-01, a -> act, l -> law, c -> country, p3 -> prohibit-01, c2 -> crime))),[Ljava.lang.String;@2ac0c054,Annotation([Ljava.lang.String;@71829894,[Ljava.lang.String;@61142b4a,[Ljava.lang.String;@5e2a0307),Annotation([Ljava.lang.String;@7244aaf6,[Ljava.lang.String;@1767ca12,[Ledu.cmu.lti.nlp.amr.Dependency;@5769edcf),Annotation([Ljava.lang.String;@5955fe1e,[Ljava.lang.String;@e91ecd8,[Ljava.lang.String;@270f8042),Annotation([Ljava.lang.String;@3f9006f9,[Ljava.lang.String;@4943aa1b,[Ledu.cmu.lti.nlp.amr.Entity;@483578c7))
AMR:
(a / act, mod, c2 / crime)
(c / country, name, n / name)
(n / name, op, "Brazil")
(p / punish-01, ARG1, p2 / peal-01)
(p / punish-01, ARG2, a / act)
(p2 / peal-01, ARG1, d / detach-01)
(p3 / prohibit-01, ARG0, c / country)
(p3 / prohibit-01, ARG1, p2 / peal-01)
(q / question-01, ARG1, l / law)
(q / question-01, prep-under, p3 / prohibit-01)

Decoded in 927,014 microseconds
Sentence: Some legal experts and other commentators stated that contrary to government claims, the Statute amounts to a de facto execution of drug traffickers.

Oracle Span 1:  amounts => amount-02
Oracle Span 2:  and => and
Oracle Span 3:  claims => (thing :ARG1-of claim-01)
Oracle Span 4:  commentators => (person :ARG0-of comment-01)
Oracle Span 5:  contrary => contrary-41
Oracle Span 6:  drug => drug
Oracle Span 7:  execution => execute-01
Oracle Span 8:  experts => (person :ARG1-of expert-41)
Oracle Span 9:  government => (government-organization :ARG0-of govern-01)
Oracle Span 10:  other => other
Oracle Span 11:  Some => some
Oracle Span 12:  stated => state-01
Oracle Span 13:  Statute => statute
Oracle Span 14:  traffickers => (person :ARG0-of traffic-00)
Spans:
Span 23-24:   => (person :ARG0-of traffic-00)
Span 3-4:  and => and
Span 11-12:  claims, => claim-01
Span 2-3:  experts => (person :ARG1-of expert-41)
Span 18-19:  facto => (distance-quantity :unit mile)
Span 10-11:  government => (government-organization :ARG0-of govern-01)
Span 1-2:  legal => law
Span 20-21:  of => execute-01
Span 4-5:  other => other
Span 0-1:  Some => some
Span 6-7:  stated => state-01
Span 15-16:  to => amount
Span 22-23:  traffickers. => drug

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 15-16:  amounts => amount-02
Oracle Span 3-4:  and => and
Oracle Span 11-12:  claims => (thing :ARG1-of claim-01)
Oracle Span 5-6:  commentators => (person :ARG0-of comment-01)
Oracle Span 8-9:  contrary => contrary-41
Oracle Span 22-23:  drug => drug
Oracle Span 20-21:  execution => execute-01
Oracle Span 2-3:  experts => (person :ARG1-of expert-41)
Oracle Span 10-11:  government => (government-organization :ARG0-of govern-01)
Oracle Span 4-5:  other => other
Oracle Span 0-1:  Some => some
Oracle Span 6-7:  stated => state-01
Oracle Span 14-15:  Statute => statute
Oracle Span 23-24:  traffickers => (person :ARG0-of traffic-00)

Dependencies:
1	Some	_	DT	DT	_	3	det	_	_
2	legal	_	JJ	JJ	_	3	amod	_	_
3	experts	_	NNS	NNS	_	7	nsubj	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	other	_	JJ	JJ	_	6	amod	_	_
6	commentators	_	NNS	NNS	_	3	conj	_	_
7	stated	_	VBD	VBD	_	0	root	_	_
8	that	_	IN	IN	_	16	mark	_	_
9	contrary	_	JJ	JJ	_	16	advmod	_	_
10	to	_	TO	TO	_	9	prep	_	_
11	government	_	NN	NN	_	12	nn	_	_
12	claims	_	NNS	NNS	_	10	pobj	_	_
13	,	_	,	,	_	16	punct	_	_
14	the	_	DT	DT	_	15	det	_	_
15	Statute	_	NNP	NNP	_	16	nsubj	_	_
16	amounts	_	VBZ	VBZ	_	7	ccomp	_	_
17	to	_	TO	TO	_	16	prep	_	_
18	a	_	DT	DT	_	21	det	_	_
19	de	_	FW	FW	_	21	amod	_	_
20	facto	_	FW	FW	_	19	dep	_	_
21	execution	_	NN	NN	_	17	pobj	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	drug	_	NN	NN	_	24	nn	_	_
24	traffickers	_	NNS	NNS	_	22	pobj	_	_
25	.	_	.	.	_	7	punct	_	_

Oracle:
(a / and, op, p / person)
(a / and, op, p2 / person)
(a2 / amount-02, ARG1, s3 / statute)
(a2 / amount-02, ARG2, e2 / execute-01)
(c / comment-01, ARG0, p2 / person)
(c2 / contrary-41, ARG1, a2 / amount-02)
(c2 / contrary-41, ARG2, t2 / thing)
(c3 / claim-01, ARG0, g / government-organization)
(c3 / claim-01, ARG1, t2 / thing)
(e / expert-41, ARG1, p / person)
(e2 / execute-01, ARG1, p3 / person)
(g2 / govern-01, ARG0, g / government-organization)
(p / person, quant, s2 / some)
(p2 / person, mod, o / other)
(s / state-01, ARG0, a / and)
(s / state-01, ARG1, a2 / amount-02)
(t / traffic-00, ARG0, p3 / person)
(t / traffic-00, ARG1, d / drug)

Input(Some(Graph(null,ArrayBuffer(Span(11,12,List(0),claims,,claim-01,false), Span(4,5,List(1),other,other,false), Span(22,23,List(2),traffickers.,drug,false), Span(0,1,List(3),Some,some,false), Span(2,3,List(5, 4),experts,(person :ARG1-of expert-41),false), Span(18,19,List(7, 6),facto,(distance-quantity :unit mile),false), Span(23,24,List(9, 8),,(person :ARG0-of traffic-00),false), Span(15,16,List(10),to,amount,false), Span(10,11,List(12, 11),government,(government-organization :ARG0-of govern-01),false), Span(3,4,List(13),and,and,false), Span(6,7,List(14),stated,state-01,false), Span(20,21,List(15),of,execute-01,false), Span(1,2,List(16),legal,law,false)),Map(2 -> drug, 5 -> expert-41, 12 -> govern-01, 15 -> execute-01, 8 -> person, 7 -> mile, 1 -> other, 4 -> person, 11 -> government-organization, 14 -> state-01, 6 -> distance-quantity, 0 -> claim-01, 9 -> traffic-00, 16 -> law, 3 -> some, 10 -> amount, 13 -> and),Map(e -> expert-41, s2 -> state-01, t -> traffic-00, e2 -> execute-01, p2 -> person, s -> some, d -> drug, m -> mile, g2 -> govern-01, p -> person, g -> government-organization, a -> amount, d2 -> distance-quantity, a2 -> and, c -> claim-01, l -> law, o -> other))),[Ljava.lang.String;@3c239cfd,Annotation([Ljava.lang.String;@56137f7e,[Ljava.lang.String;@36f24381,[Ljava.lang.String;@4c1e8960),Annotation([Ljava.lang.String;@6cfa306a,[Ljava.lang.String;@21df5a04,[Ledu.cmu.lti.nlp.amr.Dependency;@595ebf5),Annotation([Ljava.lang.String;@3d7837ae,[Ljava.lang.String;@bc390b,[Ljava.lang.String;@5be84c62),Annotation([Ljava.lang.String;@7188cea9,[Ljava.lang.String;@d315271,[Ledu.cmu.lti.nlp.amr.Entity;@6ca456bd))
AMR:
(a / amount, domain, e2 / execute-01)
(a2 / and, op, p / person)
(c / claim-01, ARG0, g / government-organization)
(c / claim-01, ARG1, a2 / and)
(d2 / distance-quantity, unit, m / mile)
(e / expert-41, ARG1, p / person)
(e2 / execute-01, ARG0, l / law)
(e2 / execute-01, ARG1, p2 / person)
(e2 / execute-01, ARG6, d2 / distance-quantity)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, o / other)
(p / person, quant, s / some)
(s2 / state-01, ARG0, a2 / and)
(s2 / state-01, ARG1, a / amount)
(t / traffic-00, ARG0, p2 / person)
(t / traffic-00, ARG1, d / drug)

Decoded in 1,644,657 microseconds
Sentence: The daily newspaper O Estado de Sao Paolo stated in an editorial the week of 20040718-20040824 -- the extreme measure raises ethical and juridical problems exceeding any potential benefits.

Oracle Span 1:  20040718-20040824 => 2004
Oracle Span 2:  and => and
Oracle Span 3:  any => any
Oracle Span 4:  benefits => benefit-01
Oracle Span 5:  editorial => editorial
Oracle Span 6:  ethical => ethics
Oracle Span 7:  exceeding => exceed-01
Oracle Span 8:  extreme => extreme
Oracle Span 9:  juridical => juridical
Oracle Span 10:  measure => measure
Oracle Span 11:  newspaper => newspaper
Oracle Span 12:  O Estado de Sao Paolo => (name :op "Paolo" :op "Sao" :op "de" :op "Estado" :op "O")
Oracle Span 13:  potential => potential
Oracle Span 14:  problems => problem
Oracle Span 15:  raises => raise-01
Oracle Span 16:  stated => state-01
Oracle Span 17:  week => week
NER Entity: (country :name (name :op "O" :op "Estado" :op "de"))
Spans:
Span 22-23:  and => and
Span 26-27:  any => any
Span 28-29:  benefits. => benefit-01
Span 1-2:  daily => (rate-entity-91 :ARG3 (temporal-quantity :unit day))
Span 5-6:  de => (distance-quantity :unit mile)
Span 11-12:  editorial => editorial
Span 21-22:  ethical => ethical
Span 25-26:  exceeding => exceed-01
Span 18-19:  extreme => extreme
Span 19-20:  measure => measure
Span 2-3:  newspaper => newspaper
Span 7-8:  Paolo => (person :name (name :op "Baldelli" :op "Paolo"))
Span 27-28:  potential => potential
Span 24-25:  problems => problem
Span 20-21:  raises => raise-01
Span 8-9:  stated => state-01
Span 0-1:  The => 1
Span 0-13:  The daily newspaper O Estado de Sao Paolo stated in an editorial the => (date-entity :time the :time week)

Langrangian relaxation converged after 26 iterations. Delta = 0.0
Oracle Span 15-16:  20040718-20040824 => 2004
Oracle Span 22-23:  and => and
Oracle Span 26-27:  any => any
Oracle Span 28-29:  benefits => benefit-01
Oracle Span 11-12:  editorial => editorial
Oracle Span 21-22:  ethical => ethics
Oracle Span 25-26:  exceeding => exceed-01
Oracle Span 18-19:  extreme => extreme
Oracle Span 23-24:  juridical => juridical
Oracle Span 19-20:  measure => measure
Oracle Span 2-3:  newspaper => newspaper
Oracle Span 3-8:  O Estado de Sao Paolo => (name :op "Paolo" :op "Sao" :op "de" :op "Estado" :op "O")
Oracle Span 27-28:  potential => potential
Oracle Span 24-25:  problems => problem
Oracle Span 20-21:  raises => raise-01
Oracle Span 8-9:  stated => state-01
Oracle Span 13-14:  week => week

Dependencies:
1	The	_	DT	DT	_	8	det	_	_
2	daily	_	JJ	JJ	_	8	amod	_	_
3	newspaper	_	NN	NN	_	8	nn	_	_
4	O	_	NNP	NNP	_	8	nn	_	_
5	Estado	_	NNP	NNP	_	8	nn	_	_
6	de	_	FW	FW	_	8	nn	_	_
7	Sao	_	NNP	NNP	_	8	nn	_	_
8	Paolo	_	NNP	NNP	_	9	nsubj	_	_
9	stated	_	VBD	VBD	_	0	root	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	an	_	DT	DT	_	12	det	_	_
12	editorial	_	NN	NN	_	10	pobj	_	_
13	the	_	DT	DT	_	14	det	_	_
14	week	_	NN	NN	_	9	tmod	_	_
15	of	_	IN	IN	_	9	prep	_	_
16	20040718-20040824	_	CD	CD	_	15	pobj	_	_
17	--	_	:	:	_	9	punct	_	_
18	the	_	DT	DT	_	20	det	_	_
19	extreme	_	JJ	JJ	_	20	amod	_	_
20	measure	_	NN	NN	_	21	nsubj	_	_
21	raises	_	VBZ	VBZ	_	9	parataxis	_	_
22	ethical	_	JJ	JJ	_	25	amod	_	_
23	and	_	CC	CC	_	22	cc	_	_
24	juridical	_	JJ	JJ	_	22	conj	_	_
25	problems	_	NNS	NNS	_	21	dobj	_	_
26	exceeding	_	VBG	VBG	_	25	vmod	_	_
27	any	_	DT	DT	_	29	det	_	_
28	potential	_	JJ	JJ	_	29	amod	_	_
29	benefits	_	NNS	NNS	_	26	dobj	_	_
30	.	_	.	.	_	9	punct	_	_

Oracle:
(a / and, op, p2 / problem)
(b / benefit-01, mod, a2 / any)
(b / benefit-01, mod, p3 / potential)
(e3 / exceed-01, ARG0, p2 / problem)
(e3 / exceed-01, ARG1, b / benefit-01)
(m / measure, mod, e / extreme)
(n / newspaper, name, n2 / name)
(n2 / name, op, "Estado")
(n2 / name, op, "O")
(n2 / name, op, "Paolo")
(n2 / name, op, "Sao")
(n2 / name, op, "de")
(p2 / problem, mod, j / juridical)
(r / raise-01, ARG0, m / measure)
(r / raise-01, ARG1, a / and)
(s / state-01, ARG0, n / newspaper)
(s / state-01, ARG1, r / raise-01)
(s / state-01, medium, e4 / editorial)
(s / state-01, time, w / week)

Input(Some(Graph(null,ArrayBuffer(Span(0,13,List(2, 1, 0),The daily newspaper O Estado de Sao Paolo stated in an editorial the,(date-entity :time the :time week),false), Span(22,23,List(3),and,and,false), Span(5,6,List(5, 4),de,(distance-quantity :unit mile),false), Span(20,21,List(6),raises,raise-01,false), Span(18,19,List(7),extreme,extreme,false), Span(28,29,List(8),benefits.,benefit-01,false), Span(7,8,List(12, 11, 10, 9),Paolo,(person :name (name :op "Baldelli" :op "Paolo")),false), Span(8,9,List(13),stated,state-01,false), Span(19,20,List(14),measure,measure,false), Span(27,28,List(15),potential,potential,false), Span(0,1,List(16),The,1,false), Span(1,2,List(19, 18, 17),daily,(rate-entity-91 :ARG3 (temporal-quantity :unit day)),false), Span(11,12,List(20),editorial,editorial,false), Span(21,22,List(21),ethical,ethical,false), Span(25,26,List(22),exceeding,exceed-01,false), Span(2,3,List(23),newspaper,newspaper,false), Span(24,25,List(24),problems,problem,false), Span(26,27,List(25),any,any,false)),Map(2 -> week, 5 -> mile, 12 -> "Paolo", 8 -> benefit-01, 15 -> potential, 21 -> ethical, 18 -> temporal-quantity, 24 -> problem, 7 -> extreme, 1 -> the, 17 -> rate-entity-91, 23 -> newspaper, 4 -> distance-quantity, 11 -> "Baldelli", 14 -> measure, 20 -> editorial, 6 -> raise-01, 9 -> person, 0 -> date-entity, 22 -> exceed-01, 16 -> 1, 19 -> day, 10 -> name, 3 -> and, 25 -> any, 13 -> state-01),Map(e -> extreme, w -> week, n -> name, t -> the, b -> benefit-01, d3 -> day, m2 -> measure, e2 -> editorial, p2 -> potential, s -> state-01, d -> date-entity, m -> mile, 1 -> 1, r2 -> rate-entity-91, p -> person, a -> and, e4 -> exceed-01, d2 -> distance-quantity, t2 -> temporal-quantity, a2 -> any, r -> raise-01, p3 -> problem, e3 -> ethical, n2 -> newspaper))),[Ljava.lang.String;@2f7b95be,Annotation([Ljava.lang.String;@4570c7d3,[Ljava.lang.String;@5f1f73a8,[Ljava.lang.String;@32f9dcdd),Annotation([Ljava.lang.String;@41dc7959,[Ljava.lang.String;@2d160ee,[Ledu.cmu.lti.nlp.amr.Dependency;@2677d12f),Annotation([Ljava.lang.String;@5a14fe08,[Ljava.lang.String;@78a052a2,[Ljava.lang.String;@71ff8b48),Annotation([Ljava.lang.String;@6999d2f1,[Ljava.lang.String;@14809574,[Ledu.cmu.lti.nlp.amr.Entity;@6e4fe004))
AMR:
(a / and, op, e3 / ethical)
(a / and, op, p3 / problem)
(b / benefit-01, ARG1, d2 / distance-quantity)
(b / benefit-01, mod, a2 / any)
(b / benefit-01, mod, p2 / potential)
(d / date-entity, op, r / raise-01)
(d / date-entity, time, t / the)
(d / date-entity, time, w / week)
(d2 / distance-quantity, unit, m / mile)
(e4 / exceed-01, ARG0, p3 / problem)
(e4 / exceed-01, ARG1, b / benefit-01)
(m2 / measure, mod, e / extreme)
(n / name, op, "Baldelli")
(n / name, op, "Paolo")
(p / person, mod, 1 / 1)
(p / person, name, n / name)
(r / raise-01, ARG0, m2 / measure)
(r / raise-01, ARG1, a / and)
(r2 / rate-entity-91, ARG0, n2 / newspaper)
(r2 / rate-entity-91, ARG1, d / date-entity)
(r2 / rate-entity-91, ARG3, t2 / temporal-quantity)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, r / raise-01)
(s / state-01, medium, e2 / editorial)
(t2 / temporal-quantity, unit, d3 / day)

Decoded in 2,119,379 microseconds
Sentence: The penalty will be applied extrajudicially by administrative decision of the Commander of the Air Force.

Oracle Span 1:  administrative => administrate-01
Oracle Span 2:  Air Force => (military :name (name :op "Force" :op "Air"))
Oracle Span 3:  applied => apply-02
Oracle Span 4:  Commander => (have-org-role-91 :ARG2 commander)
Oracle Span 5:  decision => (thing :ARG1-of decide-01)
Oracle Span 6:  extrajudicially => extrajudicial
Oracle Span 7:  penalty => penalize-01
NER Entity: (organization :name (name :op "Air" :op "Force"))
Spans:
Span 7-8:  administrative => administrate-01
Span 14-16:  Air Force. => (military :name (name :op "Air" :op "Force"))
Span 4-5:  applied => apply-02
Span 11-12:  Commander => (person :ARG0-of (have-org-role-91 :ARG2 commander))
Span 8-9:  decision => decide-01
Span 1-2:  penalty => peal-01

Langrangian relaxation converged after 4 iterations. Delta = 0.0
Oracle Span 7-8:  administrative => administrate-01
Oracle Span 14-16:  Air Force => (military :name (name :op "Force" :op "Air"))
Oracle Span 4-5:  applied => apply-02
Oracle Span 11-12:  Commander => (have-org-role-91 :ARG2 commander)
Oracle Span 8-9:  decision => (thing :ARG1-of decide-01)
Oracle Span 5-6:  extrajudicially => extrajudicial
Oracle Span 1-2:  penalty => penalize-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	penalty	_	NN	NN	_	5	nsubjpass	_	_
3	will	_	MD	MD	_	5	aux	_	_
4	be	_	VB	VB	_	5	auxpass	_	_
5	applied	_	VBN	VBN	_	0	root	_	_
6	extrajudicially	_	RB	RB	_	5	advmod	_	_
7	by	_	IN	IN	_	5	prep	_	_
8	administrative	_	JJ	JJ	_	9	amod	_	_
9	decision	_	NN	NN	_	7	pobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	Commander	_	NNP	NNP	_	10	pobj	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	the	_	DT	DT	_	16	det	_	_
15	Air	_	NNP	NNP	_	16	nn	_	_
16	Force	_	NNP	NNP	_	13	pobj	_	_
17	.	_	.	.	_	5	punct	_	_

Oracle:
(a / apply-02, ARG1, p / penalize-01)
(a / apply-02, instrument, t / thing)
(a / apply-02, manner, e / extrajudicial)
(d / decide-01, ARG1, t / thing)
(d / decide-01, mod, a2 / administrate-01)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG2, c / commander)
(m / military, name, n / name)
(n / name, op, "Air")
(n / name, op, "Force")

Input(Some(Graph(null,ArrayBuffer(Span(14,16,List(3, 2, 1, 0),Air Force.,(military :name (name :op "Air" :op "Force")),false), Span(7,8,List(4),administrative,administrate-01,false), Span(8,9,List(5),decision,decide-01,false), Span(4,5,List(6),applied,apply-02,false), Span(11,12,List(9, 8, 7),Commander,(person :ARG0-of (have-org-role-91 :ARG2 commander)),false), Span(1,2,List(10),penalty,peal-01,false)),Map(2 -> "Air", 5 -> decide-01, 8 -> have-org-role-91, 7 -> person, 1 -> name, 4 -> administrate-01, 6 -> apply-02, 9 -> commander, 0 -> military, 10 -> peal-01, 3 -> "Force"),Map(n -> name, h -> have-org-role-91, p2 -> peal-01, d -> decide-01, m -> military, p -> person, a -> administrate-01, a2 -> apply-02, c -> commander))),[Ljava.lang.String;@576ec99,Annotation([Ljava.lang.String;@c56178f,[Ljava.lang.String;@15e95784,[Ljava.lang.String;@6f73660f),Annotation([Ljava.lang.String;@5dd34d5c,[Ljava.lang.String;@6105c306,[Ledu.cmu.lti.nlp.amr.Dependency;@3e0fedd5),Annotation([Ljava.lang.String;@4a38b705,[Ljava.lang.String;@d46aab3,[Ljava.lang.String;@421455ee),Annotation([Ljava.lang.String;@334693c,[Ljava.lang.String;@c3b66c0,[Ledu.cmu.lti.nlp.amr.Entity;@349046c6))
AMR:
(a2 / apply-02, ARG1, p2 / peal-01)
(a2 / apply-02, instrument, d / decide-01)
(d / decide-01, ARG0, p / person)
(d / decide-01, mod, a / administrate-01)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG2, c / commander)
(m / military, name, n / name)
(n / name, op, "Air")
(n / name, op, "Force")

Decoded in 466,100 microseconds
Sentence: This person will gain life and death power over crew members and passengers of irregular flights.

Oracle Span 1:  and => and
Oracle Span 2:  crew => crew
Oracle Span 3:  death => die-01
Oracle Span 4:  gain => gain-02
Oracle Span 5:  members => (have-org-role-91 :ARG2 member)
Oracle Span 6:  over => over
Oracle Span 7:  passengers => passenger
Oracle Span 8:  person => person
Oracle Span 9:  power => power
Oracle Span 10:  This => (person :mod this)
Spans:
Span 11-12:  and => and
Span 5-6:  and => and
Span 9-10:  crew => crew
Span 6-7:  death => detach-01
Span 15-16:  flights. => flight
Span 3-4:  gain => gain-02
Span 4-5:  life => life
Span 10-11:  members => (have-org-role-91 :ARG2 member)
Span 12-13:  passengers => passenger
Span 1-2:  person => (person :ARG0-of oppose-01)
Span 7-8:  power => power
Span 0-1:  This => this

Langrangian relaxation converged after 49 iterations. Delta = 0.0
Oracle Span 5-6:  and => and
Oracle Span 9-10:  crew => crew
Oracle Span 6-7:  death => die-01
Oracle Span 3-4:  gain => gain-02
Oracle Span 10-11:  members => (have-org-role-91 :ARG2 member)
Oracle Span 8-9:  over => over
Oracle Span 12-13:  passengers => passenger
Oracle Span 1-2:  person => person
Oracle Span 7-8:  power => power
Oracle Span 0-1:  This => (person :mod this)

Dependencies:
1	This	_	DT	DT	_	2	det	_	_
2	person	_	NN	NN	_	4	nsubj	_	_
3	will	_	MD	MD	_	4	aux	_	_
4	gain	_	VB	VB	_	0	root	_	_
5	life	_	NN	NN	_	8	nn	_	_
6	and	_	CC	CC	_	5	cc	_	_
7	death	_	NN	NN	_	5	conj	_	_
8	power	_	NN	NN	_	4	dobj	_	_
9	over	_	IN	IN	_	4	prep	_	_
10	crew	_	NN	NN	_	11	nn	_	_
11	members	_	NNS	NNS	_	9	pobj	_	_
12	and	_	CC	CC	_	11	cc	_	_
13	passengers	_	NNS	NNS	_	11	conj	_	_
14	of	_	IN	IN	_	11	prep	_	_
15	irregular	_	NN	NN	_	16	nn	_	_
16	flights	_	NNS	NNS	_	14	pobj	_	_
17	.	_	.	.	_	4	punct	_	_

Oracle:
(a2 / and, op, p3 / person)
(a2 / and, op, p4 / passenger)
(g / gain-02, ARG0, p / person)
(g / gain-02, ARG1, p5 / power)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, c / crew)
(h / have-org-role-91, ARG2, m / member)
(o / over, op, a2 / and)
(p / person, mod, t / this)
(p5 / power, mod, d2 / die-01)
(p5 / power, mod, o / over)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),passengers,passenger,false), Span(0,1,List(1),This,this,false), Span(11,12,List(2),and,and,false), Span(10,11,List(4, 3),members,(have-org-role-91 :ARG2 member),false), Span(6,7,List(5),death,detach-01,false), Span(15,16,List(6),flights.,flight,false), Span(3,4,List(7),gain,gain-02,false), Span(9,10,List(8),crew,crew,false), Span(5,6,List(9),and,and,false), Span(4,5,List(10),life,life,false), Span(7,8,List(11),power,power,false), Span(1,2,List(13, 12),person,(person :ARG0-of oppose-01),false)),Map(2 -> and, 5 -> detach-01, 12 -> person, 8 -> crew, 7 -> gain-02, 1 -> this, 4 -> member, 11 -> power, 6 -> flight, 0 -> passenger, 9 -> and, 3 -> have-org-role-91, 10 -> life, 13 -> oppose-01),Map(h -> have-org-role-91, t -> this, p2 -> power, m -> member, d -> detach-01, p -> passenger, g -> gain-02, a -> and, a2 -> and, c -> crew, l -> life, f -> flight, o -> oppose-01, p3 -> person))),[Ljava.lang.String;@429bd074,Annotation([Ljava.lang.String;@6fcc510,[Ljava.lang.String;@3516b31b,[Ljava.lang.String;@7b8f647),Annotation([Ljava.lang.String;@1b3c9eb4,[Ljava.lang.String;@7b081c86,[Ledu.cmu.lti.nlp.amr.Dependency;@7b06f697),Annotation([Ljava.lang.String;@3bcc2d7e,[Ljava.lang.String;@447add8d,[Ljava.lang.String;@7fad15a8),Annotation([Ljava.lang.String;@33d3e684,[Ljava.lang.String;@692e8a5d,[Ledu.cmu.lti.nlp.amr.Entity;@7b2ab440))
AMR:
(a / and, op, p / passenger)
(a2 / and, op, l / life)
(a2 / and, op, p3 / person)
(d / detach-01, ARG1, a / and)
(g / gain-02, ARG0, p3 / person)
(g / gain-02, ARG1, p2 / power)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, f / flight)
(h / have-org-role-91, ARG2, m / member)
(m / member, mod, c / crew)
(o / oppose-01, ARG0, p3 / person)
(p2 / power, mod, d / detach-01)
(p3 / person, mod, t / this)

Decoded in 1,067,296 microseconds
Sentence: In 2002 Brazil inaugurated the 1.4 billion dollar SIVAM radar system allowing the government to monitor air activity throughout the expansive Amazon region for the first time.

Oracle Span 1:  2002 => (date-entity :year 2002)
Oracle Span 2:  activity => activity
Oracle Span 3:  air => air
Oracle Span 4:  allowing => allow-01
Oracle Span 5:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 6:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 7:  dollar => (monetary-quantity :unit dollar)
Oracle Span 8:  expansive => expansive
Oracle Span 9:  government => (government-organization :ARG0-of govern-01)
Oracle Span 10:  inaugurated => inaugurate-02
Oracle Span 11:  monitor => monitor-01
Oracle Span 12:  radar => radar
Oracle Span 13:  SIVAM => (name :op "SIVAM")
Oracle Span 14:  system => system
Oracle Span 15:  throughout => throughout
NER Entity: (country :name (name :op "Brazil"))
NER Entity: (country :name (name :op "Amazon"))
Spans:
Span 17-18:  activity => activity
Span 16-17:  air => air
Span 11-12:  allowing => allow-01
Span 2-3:  Brazil => (country :name (name :op "Brazil"))
Span 7-8:  dollar => (monetary-quantity :unit dollar)
Span 0-2:  In 2002 => (date-entity :year 2002)
Span 0-26:  In 2002 Brazil inaugurated the 1.4 billion dollar SIVAM radar system allowing the government to monitor air activity throughout the expansive Amazon region for the first => (ordinal-entity :value 1)
Span 3-4:  inaugurated => inaugurate-01
Span 15-16:  monitor => monitor-01
Span 9-10:  radar => radar
Span 10-11:  system => system

Langrangian relaxation converged after 62 iterations. Delta = 0.0
Oracle Span 1-2:  2002 => (date-entity :year 2002)
Oracle Span 17-18:  activity => activity
Oracle Span 16-17:  air => air
Oracle Span 11-12:  allowing => allow-01
Oracle Span 21-22:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 2-3:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 7-8:  dollar => (monetary-quantity :unit dollar)
Oracle Span 20-21:  expansive => expansive
Oracle Span 13-14:  government => (government-organization :ARG0-of govern-01)
Oracle Span 3-4:  inaugurated => inaugurate-02
Oracle Span 15-16:  monitor => monitor-01
Oracle Span 9-10:  radar => radar
Oracle Span 8-9:  SIVAM => (name :op "SIVAM")
Oracle Span 10-11:  system => system
Oracle Span 18-19:  throughout => throughout

Dependencies:
1	In	_	IN	IN	_	4	prep	_	_
2	2002	_	CD	CD	_	1	pobj	_	_
3	Brazil	_	NNP	NNP	_	4	nsubj	_	_
4	inaugurated	_	VBZ	VBZ	_	0	root	_	_
5	the	_	DT	DT	_	11	det	_	_
6	1.4	_	CD	CD	_	7	number	_	_
7	billion	_	CD	CD	_	8	dep	_	_
8	dollar	_	NN	NN	_	11	dep	_	_
9	SIVAM	_	NNP	NNP	_	11	nn	_	_
10	radar	_	NN	NN	_	11	nn	_	_
11	system	_	NN	NN	_	4	dobj	_	_
12	allowing	_	VBG	VBG	_	11	vmod	_	_
13	the	_	DT	DT	_	14	det	_	_
14	government	_	NN	NN	_	12	dobj	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	monitor	_	VB	VB	_	14	vmod	_	_
17	air	_	NN	NN	_	18	nn	_	_
18	activity	_	NN	NN	_	16	dobj	_	_
19	throughout	_	IN	IN	_	16	prep	_	_
20	the	_	DT	DT	_	23	det	_	_
21	expansive	_	JJ	JJ	_	23	amod	_	_
22	Amazon	_	NNP	NNP	_	23	nn	_	_
23	region	_	NN	NN	_	19	pobj	_	_
24	for	_	IN	IN	_	23	prep	_	_
25	the	_	DT	DT	_	27	det	_	_
26	first	_	JJ	JJ	_	27	amod	_	_
27	time	_	NN	NN	_	24	pobj	_	_
28	.	_	.	.	_	4	punct	_	_

Oracle:
(a / allow-01, ARG0, s / system)
(a / allow-01, ARG1, m2 / monitor-01)
(a2 / activity, mod, a3 / air)
(c / country, name, n / name)
(d / date-entity, year, 2002)
(g2 / govern-01, ARG0, g / government-organization)
(i / inaugurate-02, ARG0, c / country)
(i / inaugurate-02, ARG1, s / system)
(i / inaugurate-02, time, d / date-entity)
(m / monetary-quantity, unit, d2 / dollar)
(m2 / monitor-01, ARG0, g / government-organization)
(m2 / monitor-01, ARG1, a2 / activity)
(m2 / monitor-01, location, w / world-region)
(n / name, op, "Brazil")
(n2 / name, op, "SIVAM")
(n3 / name, op, "Amazon")
(s / system, mod, r / radar)
(s / system, name, n2 / name)
(w / world-region, extent, t / throughout)
(w / world-region, mod, e / expansive)
(w / world-region, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(0,2,List(1, 0),In 2002,(date-entity :year 2002),false), Span(0,26,List(3, 2),In 2002 Brazil inaugurated the 1.4 billion dollar SIVAM radar system allowing the government to monitor air activity throughout the expansive Amazon region for the first,(ordinal-entity :value 1),false), Span(10,11,List(4),system,system,false), Span(15,16,List(5),monitor,monitor-01,false), Span(17,18,List(6),activity,activity,false), Span(11,12,List(7),allowing,allow-01,false), Span(16,17,List(8),air,air,false), Span(9,10,List(9),radar,radar,false), Span(7,8,List(11, 10),dollar,(monetary-quantity :unit dollar),false), Span(2,3,List(14, 13, 12),Brazil,(country :name (name :op "Brazil")),false), Span(3,4,List(15),inaugurated,inaugurate-01,false)),Map(2 -> ordinal-entity, 5 -> monitor-01, 12 -> country, 15 -> inaugurate-01, 8 -> air, 7 -> allow-01, 1 -> 2002, 4 -> system, 11 -> dollar, 14 -> "Brazil", 6 -> activity, 0 -> date-entity, 9 -> radar, 3 -> 1, 10 -> monetary-quantity, 13 -> name),Map(n -> name, 2 -> 2002, m2 -> monetary-quantity, a3 -> air, s -> system, d -> date-entity, m -> monitor-01, 1 -> 1, a -> activity, d2 -> dollar, i -> inaugurate-01, a2 -> allow-01, r -> radar, c -> country, o -> ordinal-entity))),[Ljava.lang.String;@629baed1,Annotation([Ljava.lang.String;@153f28f1,[Ljava.lang.String;@45b291a7,[Ljava.lang.String;@2cba1d9e),Annotation([Ljava.lang.String;@13e8d3fe,[Ljava.lang.String;@7ffc19d2,[Ledu.cmu.lti.nlp.amr.Dependency;@2e929023),Annotation([Ljava.lang.String;@52383e82,[Ljava.lang.String;@79a6018,[Ljava.lang.String;@18b7cbb0),Annotation([Ljava.lang.String;@229e430d,[Ljava.lang.String;@31c1b5f2,[Ledu.cmu.lti.nlp.amr.Entity;@650f8972))
AMR:
(a / activity, mod, a3 / air)
(a2 / allow-01, ARG0, s / system)
(a2 / allow-01, ARG1, m / monitor-01)
(c / country, name, n / name)
(d / date-entity, mod, o / ordinal-entity)
(d / date-entity, year, 2 / 2002)
(i / inaugurate-01, ARG0, c / country)
(i / inaugurate-01, ARG1, s / system)
(i / inaugurate-01, ARG6, d / date-entity)
(m / monitor-01, ARG0, m2 / monetary-quantity)
(m / monitor-01, ARG1, a / activity)
(m2 / monetary-quantity, unit, d2 / dollar)
(n / name, op, "Brazil")
(o / ordinal-entity, value, 1 / 1)
(s / system, mod, r / radar)

Decoded in 2,255,144 microseconds
Sentence: The system uses American technology.

Oracle Span 1:  system => system
Oracle Span 2:  technology => technology
Oracle Span 3:  uses => use-01
Spans:
Span 1-2:  system => system
Span 4-5:  technology. => technology
Span 2-3:  uses => use-01

Langrangian relaxation converged after 3 iterations. Delta = 0.0
Oracle Span 1-2:  system => system
Oracle Span 4-5:  technology => technology
Oracle Span 2-3:  uses => use-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	system	_	NN	NN	_	3	nsubj	_	_
3	uses	_	VBZ	VBZ	_	0	root	_	_
4	American	_	JJ	JJ	_	5	amod	_	_
5	technology	_	NN	NN	_	3	dobj	_	_
6	.	_	.	.	_	3	punct	_	_

Oracle:
(u / use-01, ARG0, s / system)
(u / use-01, ARG1, t / technology)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),uses,use-01,false), Span(4,5,List(1),technology.,technology,false), Span(1,2,List(2),system,system,false)),Map(2 -> system, 1 -> technology, 0 -> use-01),Map(t -> technology, s -> system, u -> use-01))),[Ljava.lang.String;@9da603,Annotation([Ljava.lang.String;@3f444691,[Ljava.lang.String;@56950819,[Ljava.lang.String;@3b65bcc2),Annotation([Ljava.lang.String;@56a5a813,[Ljava.lang.String;@4bc81c98,[Ledu.cmu.lti.nlp.amr.Dependency;@35630038),Annotation([Ljava.lang.String;@23f629fa,[Ljava.lang.String;@5868f8a7,[Ljava.lang.String;@534f03ee),Annotation([Ljava.lang.String;@7e00ab7f,[Ljava.lang.String;@6c2be4bc,[Ledu.cmu.lti.nlp.amr.Entity;@7399945e))
AMR:
(u / use-01, ARG0, s / system)
(u / use-01, ARG1, t / technology)

Decoded in 103,323 microseconds
Sentence: Illegal Flights initially declined 30 percent due to trafficker's concerns about improved tracking capabilities but subsequently reaccelerated.

Oracle Span 1:  30 => 30
Oracle Span 2:  but => contrast-01
Oracle Span 3:  capabilities => capable-41
Oracle Span 4:  concerns => concern-01
Oracle Span 5:  declined => decline-01
Oracle Span 6:  Illegal => law
Oracle Span 7:  improved => improve-01
Oracle Span 8:  initially => initial
Oracle Span 9:  percent => percentage-entity
Oracle Span 10:  reaccelerated => reaccelerate-00
Oracle Span 11:  subsequently => subsequent
Oracle Span 12:  tracking => track-01
Oracle Span 13:  trafficker => (person :ARG0-of traffic-00)
Spans:
Span 4-5:  30 => 30
Span 10-11:  about => concern-01
Span 14-15:  but => capacitate-01
Span 13-14:  capabilities => track-01
Span 3-4:  declined => decline-01
Span 0-1:  Illegal => (law :polarity -)
Span 2-3:  initially => initial
Span 5-6:  percent => percentage-entity
Span 16-17:  reaccelerated. => subsequent
Span 15-16:  subsequently => bunt-01
Span 12-13:  tracking => improve-01
Span 8-9:  trafficker's => (person :ARG0-of traffic-00)

Langrangian relaxation converged after 44 iterations. Delta = 0.0
Oracle Span 4-5:  30 => 30
Oracle Span 15-16:  but => contrast-01
Oracle Span 14-15:  capabilities => capable-41
Oracle Span 10-11:  concerns => concern-01
Oracle Span 3-4:  declined => decline-01
Oracle Span 0-1:  Illegal => law
Oracle Span 12-13:  improved => improve-01
Oracle Span 2-3:  initially => initial
Oracle Span 5-6:  percent => percentage-entity
Oracle Span 17-18:  reaccelerated => reaccelerate-00
Oracle Span 16-17:  subsequently => subsequent
Oracle Span 13-14:  tracking => track-01
Oracle Span 8-9:  trafficker => (person :ARG0-of traffic-00)

Dependencies:
1	Illegal	_	JJ	JJ	_	2	amod	_	_
2	Flights	_	NNS	NNS	_	4	nsubj	_	_
3	initially	_	RB	RB	_	4	advmod	_	_
4	declined	_	VBD	VBD	_	0	root	_	_
5	30	_	CD	CD	_	6	num	_	_
6	percent	_	NN	NN	_	4	dobj	_	_
7	due	_	JJ	JJ	_	6	amod	_	_
8	to	_	TO	TO	_	7	prep	_	_
9	trafficker	_	NN	NN	_	11	poss	_	_
10	's	_	POS	POS	_	9	possessive	_	_
11	concerns	_	NNS	NNS	_	8	pobj	_	_
12	about	_	IN	IN	_	4	prep	_	_
13	improved	_	VBN	VBN	_	15	amod	_	_
14	tracking	_	NN	NN	_	15	nn	_	_
15	capabilities	_	NNS	NNS	_	12	pobj	_	_
16	but	_	CC	CC	_	4	cc	_	_
17	subsequently	_	RB	RB	_	18	advmod	_	_
18	reaccelerated	_	VBD	VBD	_	4	conj	_	_
19	.	_	.	.	_	4	punct	_	_

Oracle:
(c2 / contrast-01, ARG1, d / decline-01)
(c2 / contrast-01, ARG2, r / reaccelerate-00)
(c3 / concern-01, ARG0, c4 / capable-41)
(c3 / concern-01, ARG1, p2 / person)
(c4 / capable-41, ARG1, t2 / track-01)
(d / decline-01, ARG2, p / percentage-entity)
(d / decline-01, time, i2 / initial)
(i / improve-01, ARG1, c4 / capable-41)
(p / percentage-entity, value, 3 / 30)
(r / reaccelerate-00, time, s / subsequent)
(t / traffic-00, ARG0, p2 / person)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(1, 0),trafficker's,(person :ARG0-of traffic-00),false), Span(14,15,List(2),but,capacitate-01,false), Span(4,5,List(3),30,30,false), Span(10,11,List(4),about,concern-01,false), Span(15,16,List(5),subsequently,bunt-01,false), Span(0,1,List(7, 6),Illegal,(law :polarity -),false), Span(5,6,List(8),percent,percentage-entity,false), Span(3,4,List(9),declined,decline-01,false), Span(16,17,List(10),reaccelerated.,subsequent,false), Span(12,13,List(11),tracking,improve-01,false), Span(13,14,List(12),capabilities,track-01,false), Span(2,3,List(13),initially,initial,false)),Map(2 -> capacitate-01, 5 -> bunt-01, 12 -> track-01, 8 -> percentage-entity, 7 -> -, 1 -> traffic-00, 4 -> concern-01, 11 -> improve-01, 6 -> law, 0 -> person, 9 -> decline-01, 3 -> 30, 10 -> subsequent, 13 -> initial),Map(t -> traffic-00, b -> bunt-01, p2 -> percentage-entity, s -> subsequent, d -> decline-01, p -> person, t2 -> track-01, i2 -> initial, i -> improve-01, c -> capacitate-01, l -> law, 3 -> 30, c2 -> concern-01))),[Ljava.lang.String;@28845687,Annotation([Ljava.lang.String;@56952e9b,[Ljava.lang.String;@6685b512,[Ljava.lang.String;@2f1dd55e),Annotation([Ljava.lang.String;@25279e54,[Ljava.lang.String;@5ab99d9d,[Ledu.cmu.lti.nlp.amr.Dependency;@11df8efd),Annotation([Ljava.lang.String;@50290ebd,[Ljava.lang.String;@4965ffd2,[Ljava.lang.String;@5f26d616),Annotation([Ljava.lang.String;@32e31369,[Ljava.lang.String;@2a27af6e,[Ledu.cmu.lti.nlp.amr.Entity;@4cda4e97))
AMR:
(b / bunt-01, ARG1, p2 / percentage-entity)
(c / capacitate-01, ARG1, t2 / track-01)
(c2 / concern-01, ARG1, p / person)
(c2 / concern-01, ARG2, i / improve-01)
(d / decline-01, ARG1, b / bunt-01)
(d / decline-01, ARG2, c / capacitate-01)
(d / decline-01, time, i2 / initial)
(i / improve-01, ARG1, c / capacitate-01)
(l / law, polarity, -)
(p2 / percentage-entity, value, 3 / 30)
(t / traffic-00, ARG0, p / person)
(t / traffic-00, ARG1, s / subsequent)
(t2 / track-01, ARG1, l / law)

Decoded in 1,181,665 microseconds
Sentence: Brazil recorded 4128 unauthorized flights in 2003.

Oracle Span 1:  2003 => (date-entity :year 2003)
Oracle Span 2:  4128 => 4128
Oracle Span 3:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 4:  recorded => record-01
Oracle Span 5:  unauthorized => (authorize-01 :polarity -)
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Span 0-3:  Brazil recorded 4128 => (date-entity :time 4128)
Span 0-7:  Brazil recorded 4128 unauthorized flights in 2003. => (date-entity :year 2003)
Span 4-5:  flights => flight
Span 1-2:  recorded => record-01

Langrangian relaxation converged after 19 iterations. Delta = 0.0
Oracle Span 6-7:  2003 => (date-entity :year 2003)
Oracle Span 2-3:  4128 => 4128
Oracle Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 1-2:  recorded => record-01
Oracle Span 3-4:  unauthorized => (authorize-01 :polarity -)

Dependencies:
1	Brazil	_	NNP	NNP	_	2	nsubj	_	_
2	recorded	_	VBD	VBD	_	0	root	_	_
3	4128	_	CD	CD	_	5	num	_	_
4	unauthorized	_	JJ	JJ	_	5	amod	_	_
5	flights	_	NNS	NNS	_	2	dobj	_	_
6	in	_	IN	IN	_	2	prep	_	_
7	2003	_	CD	CD	_	6	pobj	_	_
8	.	_	.	.	_	2	punct	_	_

Oracle:
(a / authorize-01, polarity, -)
(c / country, name, n / name)
(d2 / date-entity, year, 2003)
(n / name, op, "Brazil")
(r / record-01, ARG0, c / country)
(r / record-01, time, d2 / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),recorded,record-01,false), Span(0,7,List(2, 1),Brazil recorded 4128 unauthorized flights in 2003.,(date-entity :year 2003),false), Span(0,1,List(5, 4, 3),Brazil,(country :name (name :op "Brazil")),false), Span(0,3,List(7, 6),Brazil recorded 4128,(date-entity :time 4128),false), Span(4,5,List(8),flights,flight,false)),Map(2 -> 2003, 5 -> "Brazil", 8 -> flight, 7 -> 4128, 1 -> date-entity, 4 -> name, 6 -> date-entity, 0 -> record-01, 3 -> country),Map(n -> name, 2 -> 2003, d -> date-entity, 4 -> 4128, d2 -> date-entity, r -> record-01, c -> country, f -> flight))),[Ljava.lang.String;@57fd2166,Annotation([Ljava.lang.String;@668053d9,[Ljava.lang.String;@47551e76,[Ljava.lang.String;@1e0252ac),Annotation([Ljava.lang.String;@204aa61b,[Ljava.lang.String;@44b02750,[Ledu.cmu.lti.nlp.amr.Dependency;@2bf9371e),Annotation([Ljava.lang.String;@27e297ff,[Ljava.lang.String;@52ed8766,[Ljava.lang.String;@1722b0cc),Annotation([Ljava.lang.String;@758124f1,[Ljava.lang.String;@466f18d1,[Ledu.cmu.lti.nlp.amr.Entity;@780761cd))
AMR:
(c / country, name, n / name)
(d / date-entity, year, 2 / 2003)
(d2 / date-entity, calendar, f / flight)
(d2 / date-entity, time, 4 / 4128)
(n / name, op, "Brazil")
(r / record-01, ARG0, c / country)
(r / record-01, ARG1, f / flight)
(r / record-01, ARG6, d / date-entity)

Decoded in 297,485 microseconds
Sentence: Some of these flights were innocent violations by ranchers in the Amazon flying between plantations.

Oracle Span 1:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 2:  between => between
Oracle Span 3:  flying => fly-01
Oracle Span 4:  innocent => innocent-41
Oracle Span 5:  of => include-91
Oracle Span 6:  plantations => plantation
Oracle Span 7:  ranchers => (person :ARG0-of ranch-01)
Oracle Span 8:  Some => some
Oracle Span 9:  violations => violate-01
NER Entity: (country :name (name :op "Amazon"))
Spans:
Span 3-4:  flights => flight
Span 12-13:  flying => fly-01
Span 5-6:  innocent => (person :ARG1-of innocent-41)
Span 14-15:  plantations. => plantation
Span 8-9:  ranchers => rancher
Span 0-1:  Some => some
Span 2-3:  these => this
Span 6-7:  violations => violate-01

Langrangian relaxation converged after 84 iterations. Delta = 0.0
Oracle Span 11-12:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 13-14:  between => between
Oracle Span 12-13:  flying => fly-01
Oracle Span 5-6:  innocent => innocent-41
Oracle Span 1-2:  of => include-91
Oracle Span 14-15:  plantations => plantation
Oracle Span 8-9:  ranchers => (person :ARG0-of ranch-01)
Oracle Span 0-1:  Some => some
Oracle Span 6-7:  violations => violate-01

Dependencies:
1	Some	_	DT	DT	_	7	nsubj	_	_
2	of	_	IN	IN	_	1	prep	_	_
3	these	_	DT	DT	_	4	det	_	_
4	flights	_	NNS	NNS	_	2	pobj	_	_
5	were	_	VBD	VBD	_	7	cop	_	_
6	innocent	_	JJ	JJ	_	7	amod	_	_
7	violations	_	NNS	NNS	_	0	root	_	_
8	by	_	IN	IN	_	7	prep	_	_
9	ranchers	_	NNS	NNS	_	13	nsubj	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	12	det	_	_
12	Amazon	_	NNP	NNP	_	10	pobj	_	_
13	flying	_	VBG	VBG	_	8	pcomp	_	_
14	between	_	IN	IN	_	13	prep	_	_
15	plantations	_	NNS	NNS	_	14	pobj	_	_
16	.	_	.	.	_	7	punct	_	_

Oracle:
(b / between, op, p3 / plantation)
(f2 / fly-01, mod, s / some)
(i / innocent-41, ARG1, v2 / violate-01)
(i2 / include-91, ARG1, f2 / fly-01)
(n / name, op, "Amazon")
(p / person, location, w / world-region)
(r / ranch-01, ARG0, p / person)
(v2 / violate-01, ARG0, p / person)
(v2 / violate-01, ARG1, f2 / fly-01)
(w / world-region, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),plantations.,plantation,false), Span(2,3,List(1),these,this,false), Span(5,6,List(3, 2),innocent,(person :ARG1-of innocent-41),false), Span(12,13,List(4),flying,fly-01,false), Span(0,1,List(5),Some,some,false), Span(3,4,List(6),flights,flight,false), Span(6,7,List(7),violations,violate-01,false), Span(8,9,List(8),ranchers,rancher,false)),Map(2 -> person, 5 -> some, 8 -> rancher, 7 -> violate-01, 1 -> this, 4 -> fly-01, 6 -> flight, 0 -> plantation, 3 -> innocent-41),Map(t -> this, p2 -> person, s -> some, v -> violate-01, p -> plantation, r -> rancher, i -> innocent-41, f2 -> flight, f -> fly-01))),[Ljava.lang.String;@5ce8e52,Annotation([Ljava.lang.String;@12e2c3c2,[Ljava.lang.String;@7d684f0a,[Ljava.lang.String;@ad20387),Annotation([Ljava.lang.String;@7b1fb091,[Ljava.lang.String;@7fe780e3,[Ledu.cmu.lti.nlp.amr.Dependency;@4048900a),Annotation([Ljava.lang.String;@5a9c6dbf,[Ljava.lang.String;@5c01c545,[Ljava.lang.String;@1f22b6be),Annotation([Ljava.lang.String;@1beead90,[Ljava.lang.String;@22a6dac7,[Ledu.cmu.lti.nlp.amr.Entity;@70df183b))
AMR:
(f / fly-01, ARG1, p / plantation)
(f / fly-01, mod, s / some)
(f2 / flight, mod, s / some)
(f2 / flight, mod, t / this)
(i / innocent-41, ARG1, p2 / person)
(i / innocent-41, ARG2, v / violate-01)
(v / violate-01, ARG0, r / rancher)
(v / violate-01, ARG1, f / fly-01)

Decoded in 1,104,179 microseconds
Sentence: Viegas stated that there was a significant increase in deliberate violations of Brazilian airspace, apparently by drug smugglers realizing that the government was incapable of retaliation.

Oracle Span 1:  airspace => airspace
Oracle Span 2:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 3:  deliberate => deliberate
Oracle Span 4:  drug => drug
Oracle Span 5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6:  incapable => (capable-41 :polarity -)
Oracle Span 7:  increase => increase-01
Oracle Span 8:  realizing => realize-01
Oracle Span 9:  retaliation => retaliate-01
Oracle Span 10:  significant => significant
Oracle Span 11:  smugglers => (person :ARG0-of smuggle-01)
Oracle Span 12:  stated => state-01
Oracle Span 13:  Viegas => (person :name (name :op "Viegas"))
Oracle Span 14:  violations => violate-01
NER Entity: (person :name (name :op "Viegas"))
NER Entity: (thing :name (name :op "Brazilian"))
Spans:
Span 26-27:   => retrain-01
Span 13-14:  airspace, => airspace
Span 7-8:  increase => increase-01
Span 18-19:  realizing => (person :ARG0-of smuggle-01)
Span 6-7:  significant => significant
Span 17-18:  smugglers => drug
Span 1-2:  stated => state-01
Span 19-20:  that => realize-02
Span 0-1:  Viegas => (person :name (name :op "Viegas"))
Span 10-11:  violations => violate-01

Langrangian relaxation converged after 7 iterations. Delta = 0.0
Oracle Span 13-14:  airspace => airspace
Oracle Span 12-13:  Brazilian => (country :name (name :op "Brazil"))
Oracle Span 9-10:  deliberate => deliberate
Oracle Span 17-18:  drug => drug
Oracle Span 22-23:  government => (government-organization :ARG0-of govern-01)
Oracle Span 24-25:  incapable => (capable-41 :polarity -)
Oracle Span 7-8:  increase => increase-01
Oracle Span 19-20:  realizing => realize-01
Oracle Span 26-27:  retaliation => retaliate-01
Oracle Span 6-7:  significant => significant
Oracle Span 18-19:  smugglers => (person :ARG0-of smuggle-01)
Oracle Span 1-2:  stated => state-01
Oracle Span 0-1:  Viegas => (person :name (name :op "Viegas"))
Oracle Span 10-11:  violations => violate-01

Dependencies:
1	Viegas	_	NNS	NNS	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	5	mark	_	_
4	there	_	EX	EX	_	5	expl	_	_
5	was	_	VBD	VBD	_	2	ccomp	_	_
6	a	_	DT	DT	_	8	det	_	_
7	significant	_	JJ	JJ	_	8	amod	_	_
8	increase	_	NN	NN	_	5	nsubj	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	deliberate	_	JJ	JJ	_	11	amod	_	_
11	violations	_	NNS	NNS	_	9	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	Brazilian	_	JJ	JJ	_	14	amod	_	_
14	airspace	_	NN	NN	_	12	pobj	_	_
15	,	_	,	,	_	5	punct	_	_
16	apparently	_	RB	RB	_	17	advmod	_	_
17	by	_	IN	IN	_	5	prep	_	_
18	drug	_	NN	NN	_	19	nn	_	_
19	smugglers	_	NNS	NNS	_	20	nsubj	_	_
20	realizing	_	VBG	VBG	_	17	pcomp	_	_
21	that	_	IN	IN	_	25	mark	_	_
22	the	_	DT	DT	_	23	det	_	_
23	government	_	NN	NN	_	25	nsubj	_	_
24	was	_	VBD	VBD	_	25	cop	_	_
25	incapable	_	JJ	JJ	_	20	ccomp	_	_
26	of	_	IN	IN	_	17	prep	_	_
27	retaliation	_	NN	NN	_	26	pobj	_	_
28	.	_	.	.	_	2	punct	_	_

Oracle:
(a / airspace, mod, c / country)
(c / country, name, n2 / name)
(c2 / capable-41, ARG1, g / government-organization)
(c2 / capable-41, ARG2, r2 / retaliate-01)
(c2 / capable-41, polarity, -)
(g2 / govern-01, ARG0, g / government-organization)
(i / increase-01, ARG1, v / violate-01)
(i / increase-01, ARG2, s2 / significant)
(n / name, op, "Viegas")
(n2 / name, op, "Brazil")
(p / person, name, n / name)
(r / realize-01, ARG0, p2 / person)
(r / realize-01, ARG1, c2 / capable-41)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, i / increase-01)
(s3 / smuggle-01, ARG0, p2 / person)
(s3 / smuggle-01, ARG1, d2 / drug)
(v / violate-01, ARG0, p2 / person)
(v / violate-01, ARG1, a / airspace)
(v / violate-01, mod, d / deliberate)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(13,14,List(1),airspace,,airspace,false), Span(19,20,List(2),that,realize-02,false), Span(10,11,List(3),violations,violate-01,false), Span(26,27,List(4),,retrain-01,false), Span(0,1,List(7, 6, 5),Viegas,(person :name (name :op "Viegas")),false), Span(6,7,List(8),significant,significant,false), Span(17,18,List(9),smugglers,drug,false), Span(7,8,List(10),increase,increase-01,false), Span(18,19,List(12, 11),realizing,(person :ARG0-of smuggle-01),false)),Map(2 -> realize-02, 5 -> person, 12 -> smuggle-01, 8 -> significant, 7 -> "Viegas", 1 -> airspace, 4 -> retrain-01, 11 -> person, 6 -> name, 0 -> state-01, 9 -> drug, 3 -> violate-01, 10 -> increase-01),Map(n -> name, s2 -> significant, p2 -> person, s -> state-01, d -> drug, v -> violate-01, p -> person, r2 -> retrain-01, a -> airspace, i -> increase-01, r -> realize-02, s3 -> smuggle-01))),[Ljava.lang.String;@69696a0b,Annotation([Ljava.lang.String;@1146108f,[Ljava.lang.String;@21f79b63,[Ljava.lang.String;@37e5e93b),Annotation([Ljava.lang.String;@15fee4fe,[Ljava.lang.String;@341d4ca6,[Ledu.cmu.lti.nlp.amr.Dependency;@292ce5c5),Annotation([Ljava.lang.String;@31987dea,[Ljava.lang.String;@53a3b633,[Ljava.lang.String;@d05a89d),Annotation([Ljava.lang.String;@43496635,[Ljava.lang.String;@31cc349b,[Ledu.cmu.lti.nlp.amr.Entity;@7f101ebf))
AMR:
(i / increase-01, ARG1, v / violate-01)
(i / increase-01, ARG2, s2 / significant)
(n / name, op, "Viegas")
(p / person, name, n / name)
(r / realize-02, ARG0, p2 / person)
(r2 / retrain-01, ARG1, d / drug)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, i / increase-01)
(s3 / smuggle-01, ARG0, p2 / person)
(s3 / smuggle-01, ARG1, d / drug)
(v / violate-01, ARG0, p2 / person)
(v / violate-01, ARG1, a / airspace)

Decoded in 991,023 microseconds
Sentence: 20010400 Rio de Janeiro's most notorious drug boss, Fernandinho Beira-Mar, was captured in Colombia in a guns-for drugs pipeline involving left-wing guerrillas.

Oracle Span 1:  20010400 => 2001
Oracle Span 2:  boss => (have-org-role-91 :ARG2 boss)
Oracle Span 3:  captured => capture-01
Oracle Span 4:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 5:  drug => drug
Oracle Span 6:  drugs => drug
Oracle Span 7:  Fernandinho Beira - Mar => (person :name (name :op "Beira-Mar" :op "Fernandinho"))
Oracle Span 8:  guerrillas => guerrilla
Oracle Span 9:  guns => gun
Oracle Span 10:  involving => involve-01
Oracle Span 11:  left => left
Oracle Span 12:  most => most
Oracle Span 13:  notorious => notorious-41
Oracle Span 14:  pipeline => pipeline
Oracle Span 15:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 16:  wing => wing
NER Entity: (person :name (name :op "Fernandinho" :op "Beira" :op "-" :op "Mar"))
NER Entity: (country :name (name :op "Rio" :op "de" :op "Janeiro"))
NER Entity: (country :name (name :op "Colombia"))
mkDayMonthYear(20010400,00,04,2001)
Spans:
Span 24-25:   => guerrilla
Span 22-23:   => involve-01
Span 0-1:  20010400 => 1
Span 7-8:  boss, => drug
Span 6-7:  drug => notorious
Span 8-9:  Fernandinho => boss
Span 16-17:  guns-for => (country :name (name :op "Colombia"))
Span 14-15:  in => capture-01
Span 20-21:  left-wing => drug
Span 5-6:  notorious => most
Span 10-12:  was captured => (person :name (name :op "Fernandinho" :op "Beira-Mar"))

Langrangian relaxation converged after 25 iterations. Delta = 0.0
Oracle Span 0-1:  20010400 => 2001
Oracle Span 8-9:  boss => (have-org-role-91 :ARG2 boss)
Oracle Span 16-17:  captured => capture-01
Oracle Span 18-19:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 7-8:  drug => drug
Oracle Span 24-25:  drugs => drug
Oracle Span 10-14:  Fernandinho Beira - Mar => (person :name (name :op "Beira-Mar" :op "Fernandinho"))
Oracle Span 30-31:  guerrillas => guerrilla
Oracle Span 21-22:  guns => gun
Oracle Span 26-27:  involving => involve-01
Oracle Span 27-28:  left => left
Oracle Span 5-6:  most => most
Oracle Span 6-7:  notorious => notorious-41
Oracle Span 25-26:  pipeline => pipeline
Oracle Span 1-4:  Rio de Janeiro => (city :name (name :op "Janeiro" :op "de" :op "Rio"))
Oracle Span 29-30:  wing => wing

Dependencies:
1	20010400	_	NNP	NNP	_	4	nn	_	_
2	Rio	_	NNP	NNP	_	4	nn	_	_
3	de	_	NNP	NNP	_	4	nn	_	_
4	Janeiro	_	NNP	NNP	_	9	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	most	_	JJS	JJS	_	9	amod	_	_
7	notorious	_	JJ	JJ	_	9	amod	_	_
8	drug	_	NN	NN	_	9	nn	_	_
9	boss	_	NN	NN	_	15	nsubjpass	_	_
10	,	_	,	,	_	9	punct	_	_
11	Fernandinho	_	NNP	NNP	_	12	nn	_	_
12	Beira-Mar	_	NNP	NNP	_	9	appos	_	_
13	,	_	,	,	_	9	punct	_	_
14	was	_	VBD	VBD	_	15	auxpass	_	_
15	captured	_	VBN	VBN	_	0	root	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	Colombia	_	NNP	NNP	_	16	pobj	_	_
18	in	_	IN	IN	_	15	prep	_	_
19	a	_	DT	DT	_	22	det	_	_
20	guns-for	_	JJ	JJ	_	22	amod	_	_
21	drugs	_	NNS	NNS	_	22	nn	_	_
22	pipeline	_	NN	NN	_	18	pobj	_	_
23	involving	_	VBG	VBG	_	22	vmod	_	_
24	left-wing	_	JJ	JJ	_	25	amod	_	_
25	guerrillas	_	NNS	NNS	_	23	dobj	_	_
26	.	_	.	.	_	15	punct	_	_

Oracle:
(c / capture-01, ARG1, p2 / person)
(c / capture-01, location, c3 / country)
(c / capture-01, location, p / pipeline)
(c2 / city, name, n3 / name)
(c3 / country, name, n4 / name)
(g / gun, prep-for, d3 / drug)
(g2 / guerrilla, mod, w / wing)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG2, b / boss)
(i / involve-01, ARG1, g2 / guerrilla)
(i / involve-01, ARG2, p / pipeline)
(n / name, op, "Beira-Mar")
(n / name, op, "Fernandinho")
(n2 / notorious-41, ARG1, p2 / person)
(n2 / notorious-41, degree, m / most)
(n3 / name, op, "Janeiro")
(n3 / name, op, "Rio")
(n3 / name, op, "de")
(n4 / name, op, "Colombia")
(p / pipeline, mod, g / gun)
(p2 / person, mod, c2 / city)
(p2 / person, name, n / name)
(w / wing, mod, l / left)

Input(Some(Graph(null,ArrayBuffer(Span(24,25,List(0),,guerrilla,false), Span(0,1,List(1),20010400,1,false), Span(16,17,List(4, 3, 2),guns-for,(country :name (name :op "Colombia")),false), Span(10,12,List(8, 7, 6, 5),was captured,(person :name (name :op "Fernandinho" :op "Beira-Mar")),false), Span(6,7,List(9),drug,notorious,false), Span(14,15,List(10),in,capture-01,false), Span(22,23,List(11),,involve-01,false), Span(20,21,List(12),left-wing,drug,false), Span(5,6,List(13),notorious,most,false), Span(8,9,List(14),Fernandinho,boss,false), Span(7,8,List(15),boss,,drug,false)),Map(2 -> country, 5 -> person, 12 -> drug, 15 -> drug, 8 -> "Beira-Mar", 7 -> "Fernandinho", 1 -> 1, 4 -> "Colombia", 11 -> involve-01, 14 -> boss, 6 -> name, 0 -> guerrilla, 9 -> notorious, 3 -> name, 10 -> capture-01, 13 -> most),Map(n -> name, b -> boss, d -> drug, m -> most, 1 -> 1, g -> guerrilla, p -> person, n3 -> notorious, d2 -> drug, i -> involve-01, c -> country, n2 -> name, c2 -> capture-01))),[Ljava.lang.String;@b07742e,Annotation([Ljava.lang.String;@6c9700dc,[Ljava.lang.String;@38b2aabe,[Ljava.lang.String;@4da5632),Annotation([Ljava.lang.String;@344ce483,[Ljava.lang.String;@60098336,[Ledu.cmu.lti.nlp.amr.Dependency;@4dc332d3),Annotation([Ljava.lang.String;@1bfe969f,[Ljava.lang.String;@4845019f,[Ljava.lang.String;@64793b92),Annotation([Ljava.lang.String;@3078d864,[Ljava.lang.String;@5fddea9a,[Ledu.cmu.lti.nlp.amr.Entity;@3f745107))
AMR:
(1 / 1, op, i / involve-01)
(b / boss, location, p / person)
(b / boss, mod, g / guerrilla)
(c / country, name, n / name)
(c / country, poss, b / boss)
(c2 / capture-01, ARG0, d / drug)
(c2 / capture-01, ARG1, p / person)
(c2 / capture-01, ARG6, n3 / notorious)
(i / involve-01, ARG0, d2 / drug)
(i / involve-01, ARG1, p / person)
(n / name, op, "Colombia")
(n2 / name, op, "Beira-Mar")
(n2 / name, op, "Fernandinho")
(n3 / notorious, degree, m / most)
(p / person, name, n2 / name)

Decoded in 1,288,322 microseconds
Sentence: Brazil's northern Amazon corridor has become an increasingly busy and essential route in the global drug trade and is used for smuggling arms, gold and diamonds.

Oracle Span 1:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 2:  and => and
Oracle Span 3:  and => and
Oracle Span 4:  arms => arm
Oracle Span 5:  become => become-01
Oracle Span 6:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 7:  busy => busy
Oracle Span 8:  corridor => corridor
Oracle Span 9:  diamonds => diamond
Oracle Span 10:  drug => drug
Oracle Span 11:  essential => essential
Oracle Span 12:  global => globe
Oracle Span 13:  gold => gold
Oracle Span 14:  increasingly => increase-01
Oracle Span 15:  northern => north
Oracle Span 16:  route => route
Oracle Span 17:  smuggling => smuggle-01
Oracle Span 18:  trade => trade-01
Oracle Span 19:  used => use-01
NER Entity: (country :name (name :op "Amazon"))
NER Entity: (country :name (name :op "Brazil"))
Spans:
Span 26-27:   => and
Span 27-28:   => diamond
Span 2-3:  Amazon => north
Span 6-7:  an => become-01
Span 9-10:  and => busy
Span 17-18:  and => trade-01
Span 22-23:  arms, => smuggle-01
Span 0-1:  Brazil's => (country :name (name :op "Brazil"))
Span 8-9:  busy => increase-01
Span 25-26:  diamonds. => gold
Span 15-16:  drug => globe
Span 10-11:  essential => and
Span 20-21:  for => use-01
Span 23-24:  gold => arm
Span 12-13:  in => route
Span 18-19:  is => and
Span 11-12:  route => essential
Span 16-17:  trade => drug

Langrangian relaxation converged after 62 iterations. Delta = 0.0
Oracle Span 3-4:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 10-11:  and => and
Oracle Span 18-19:  and => and
Oracle Span 23-24:  arms => arm
Oracle Span 6-7:  become => become-01
Oracle Span 0-1:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 9-10:  busy => busy
Oracle Span 4-5:  corridor => corridor
Oracle Span 27-28:  diamonds => diamond
Oracle Span 16-17:  drug => drug
Oracle Span 11-12:  essential => essential
Oracle Span 15-16:  global => globe
Oracle Span 25-26:  gold => gold
Oracle Span 8-9:  increasingly => increase-01
Oracle Span 2-3:  northern => north
Oracle Span 12-13:  route => route
Oracle Span 22-23:  smuggling => smuggle-01
Oracle Span 17-18:  trade => trade-01
Oracle Span 20-21:  used => use-01

Dependencies:
1	Brazil	_	NNP	NNP	_	5	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	northern	_	JJ	JJ	_	5	amod	_	_
4	Amazon	_	NNP	NNP	_	5	nn	_	_
5	corridor	_	NN	NN	_	7	nsubj	_	_
6	has	_	VBZ	VBZ	_	7	aux	_	_
7	become	_	VBN	VBN	_	0	root	_	_
8	an	_	DT	DT	_	13	det	_	_
9	increasingly	_	RB	RB	_	10	advmod	_	_
10	busy	_	JJ	JJ	_	13	amod	_	_
11	and	_	CC	CC	_	10	cc	_	_
12	essential	_	JJ	JJ	_	10	conj	_	_
13	route	_	NN	NN	_	7	xcomp	_	_
14	in	_	IN	IN	_	13	prep	_	_
15	the	_	DT	DT	_	18	det	_	_
16	global	_	JJ	JJ	_	18	amod	_	_
17	drug	_	NN	NN	_	18	nn	_	_
18	trade	_	NN	NN	_	14	pobj	_	_
19	and	_	CC	CC	_	7	cc	_	_
20	is	_	VBZ	VBZ	_	21	auxpass	_	_
21	used	_	VBN	VBN	_	7	conj	_	_
22	for	_	IN	IN	_	21	prep	_	_
23	smuggling	_	NN	NN	_	24	nn	_	_
24	arms	_	NNS	NNS	_	22	pobj	_	_
25	,	_	,	,	_	24	punct	_	_
26	gold	_	NN	NN	_	24	conj	_	_
27	and	_	CC	CC	_	24	cc	_	_
28	diamonds	_	NNS	NNS	_	24	conj	_	_
29	.	_	.	.	_	7	punct	_	_

Oracle:
(a / and, op, b / become-01)
(a / and, op, u / use-01)
(a2 / and, op, a3 / arm)
(a2 / and, op, d2 / diamond)
(a2 / and, op, g2 / gold)
(b / become-01, ARG1, c / corridor)
(b / become-01, ARG2, r2 / route)
(c / corridor, mod, n2 / north)
(c / corridor, mod, w / world-region)
(c2 / country, name, n3 / name)
(c2 / country, part, c / corridor)
(i / increase-01, ARG1, b2 / busy)
(i / increase-01, ARG1, e / essential)
(n / name, op, "Amazon")
(n3 / name, op, "Brazil")
(r2 / route, mod, b2 / busy)
(r2 / route, mod, e / essential)
(s / smuggle-01, ARG1, a2 / and)
(t / trade-01, ARG1, d / drug)
(t / trade-01, mod, g / globe)
(t / trade-01, path, r2 / route)
(u / use-01, ARG1, c / corridor)
(u / use-01, ARG2, s / smuggle-01)
(w / world-region, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(23,24,List(0),gold,arm,false), Span(9,10,List(1),and,busy,false), Span(16,17,List(2),trade,drug,false), Span(2,3,List(3),Amazon,north,false), Span(8,9,List(4),busy,increase-01,false), Span(22,23,List(5),arms,,smuggle-01,false), Span(0,1,List(8, 7, 6),Brazil's,(country :name (name :op "Brazil")),false), Span(10,11,List(9),essential,and,false), Span(26,27,List(10),,and,false), Span(25,26,List(11),diamonds.,gold,false), Span(11,12,List(12),route,essential,false), Span(20,21,List(13),for,use-01,false), Span(6,7,List(14),an,become-01,false), Span(17,18,List(15),and,trade-01,false), Span(15,16,List(16),drug,globe,false), Span(12,13,List(17),in,route,false), Span(27,28,List(18),,diamond,false), Span(18,19,List(19),is,and,false)),Map(2 -> drug, 5 -> smuggle-01, 12 -> essential, 15 -> trade-01, 8 -> "Brazil", 18 -> diamond, 7 -> name, 17 -> route, 1 -> busy, 4 -> increase-01, 11 -> gold, 14 -> become-01, 6 -> country, 0 -> arm, 9 -> and, 16 -> globe, 19 -> and, 3 -> north, 10 -> and, 13 -> use-01),Map(e -> essential, n -> north, t -> trade-01, b -> busy, b2 -> become-01, a3 -> and, s -> smuggle-01, d -> drug, g2 -> globe, g -> gold, a -> arm, d2 -> diamond, r -> route, i -> increase-01, a2 -> and, c -> country, u -> use-01, n2 -> name, a4 -> and))),[Ljava.lang.String;@1cf5cad9,Annotation([Ljava.lang.String;@782a46,[Ljava.lang.String;@4a5b4958,[Ljava.lang.String;@23a18d36),Annotation([Ljava.lang.String;@11302899,[Ljava.lang.String;@50db1ae3,[Ledu.cmu.lti.nlp.amr.Dependency;@405a9829),Annotation([Ljava.lang.String;@6fbd6529,[Ljava.lang.String;@7f59fca7,[Ljava.lang.String;@775dedad),Annotation([Ljava.lang.String;@6352b8bf,[Ljava.lang.String;@67420dd1,[Ledu.cmu.lti.nlp.amr.Entity;@57ce695a))
AMR:
(a2 / and, op, u / use-01)
(a4 / and, op, b2 / become-01)
(a4 / and, op, d2 / diamond)
(a4 / and, op, g / gold)
(a4 / and, poss, c / country)
(b2 / become-01, ARG1, r / route)
(c / country, name, n2 / name)
(i / increase-01, ARG1, e / essential)
(n2 / name, op, "Brazil")
(r / route, mod, b / busy)
(r / route, mod, e / essential)
(s / smuggle-01, ARG0, n / north)
(s / smuggle-01, ARG1, a4 / and)
(t / trade-01, ARG1, d / drug)
(t / trade-01, location, g2 / globe)
(t / trade-01, path, r / route)
(u / use-01, ARG0, a3 / and)
(u / use-01, ARG1, a / arm)
(u / use-01, ARG2, s / smuggle-01)

Decoded in 2,771,226 microseconds
Sentence: Reportedly one of the most important drug- and gun-smuggling routes in supplying Europe with cocaine runs from Colombia across the northern tier of the Amazon to Suriname.

Oracle Span 1:  across => across
Oracle Span 2:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 3:  and => and
Oracle Span 4:  cocaine => cocaine
Oracle Span 5:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 6:  drug => drug
Oracle Span 7:  Europe => (continent :name (name :op "Europe"))
Oracle Span 8:  gun => gun
Oracle Span 9:  important => important
Oracle Span 10:  most => most
Oracle Span 11:  northern => north
Oracle Span 12:  of => include-91
Oracle Span 13:  Reportedly => report-01
Oracle Span 14:  routes => route
Oracle Span 15:  runs => run-04
Oracle Span 16:  smuggling => smuggle-01
Oracle Span 17:  supplying => supply-01
Oracle Span 18:  Suriname => (country :name (name :op "Suriname"))
Oracle Span 19:  tier => tier
NER Entity: (country :name (name :op "Amazon"))
NER Entity: (country :name (name :op "Europe"))
NER Entity: (country :name (name :op "Colombia"))
Spans:
Span 18-19:  across => (country :name (name :op "Colombia"))
Span 6-7:  drug- => drug
Span 12-13:  Europe => supply-01
Span 16-17:  from => run-01
Span 8-9:  gun-smuggling => and
Span 5-6:  important => important
Span 10-11:  in => route
Span 4-5:  most => most
Span 22-23:  of => tier
Span 0-1:  Reportedly => 1
Span 15-16:  runs => cocaine
Span 19-20:  the => across
Span 21-22:  tier => north
Span 13-14:  with => (continent :name (name :op "Europe"))

Langrangian relaxation converged after 16 iterations. Delta = 0.0
Oracle Span 21-22:  across => across
Oracle Span 27-28:  Amazon => (world-region :name (name :op "Amazon"))
Oracle Span 8-9:  and => and
Oracle Span 17-18:  cocaine => cocaine
Oracle Span 20-21:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 6-7:  drug => drug
Oracle Span 15-16:  Europe => (continent :name (name :op "Europe"))
Oracle Span 9-10:  gun => gun
Oracle Span 5-6:  important => important
Oracle Span 4-5:  most => most
Oracle Span 23-24:  northern => north
Oracle Span 2-3:  of => include-91
Oracle Span 0-1:  Reportedly => report-01
Oracle Span 12-13:  routes => route
Oracle Span 18-19:  runs => run-04
Oracle Span 11-12:  smuggling => smuggle-01
Oracle Span 14-15:  supplying => supply-01
Oracle Span 29-30:  Suriname => (country :name (name :op "Suriname"))
Oracle Span 24-25:  tier => tier

Dependencies:
1	Reportedly	_	NNP	NNP	_	17	nsubj	_	_
2	one	_	CD	CD	_	1	num	_	_
3	of	_	IN	IN	_	1	prep	_	_
4	the	_	DT	DT	_	7	det	_	_
5	most	_	RBS	RBS	_	6	advmod	_	_
6	important	_	JJ	JJ	_	7	amod	_	_
7	drug	_	NN	NN	_	3	pobj	_	_
8	-	_	:	:	_	1	punct	_	_
9	and	_	CC	CC	_	1	cc	_	_
10	gun-smuggling	_	JJ	JJ	_	11	amod	_	_
11	routes	_	NNS	NNS	_	1	conj	_	_
12	in	_	IN	IN	_	11	prep	_	_
13	supplying	_	VBG	VBG	_	12	pcomp	_	_
14	Europe	_	NNP	NNP	_	13	dobj	_	_
15	with	_	IN	IN	_	14	prep	_	_
16	cocaine	_	NN	NN	_	15	pobj	_	_
17	runs	_	VBZ	VBZ	_	0	root	_	_
18	from	_	IN	IN	_	17	prep	_	_
19	Colombia	_	NNP	NNP	_	18	pobj	_	_
20	across	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	23	det	_	_
22	northern	_	JJ	JJ	_	23	amod	_	_
23	tier	_	NN	NN	_	20	pobj	_	_
24	of	_	IN	IN	_	23	prep	_	_
25	the	_	DT	DT	_	26	det	_	_
26	Amazon	_	NNP	NNP	_	24	pobj	_	_
27	to	_	TO	TO	_	17	prep	_	_
28	Suriname	_	NNP	NNP	_	27	pobj	_	_
29	.	_	.	.	_	17	punct	_	_

Oracle:
(a / and, op, d / drug)
(a / and, op, g / gun)
(a2 / across, location, t / tier)
(c2 / continent, name, n / name)
(c3 / country, name, n2 / name)
(c4 / country, name, n3 / name)
(i / include-91, ARG1, r2 / route)
(i2 / important, degree, m / most)
(i2 / important, purpose, s2 / supply-01)
(n / name, op, "Europe")
(n2 / name, op, "Colombia")
(n3 / name, op, "Suriname")
(n5 / name, op, "Amazon")
(r / run-04, ARG1, r2 / route)
(r / run-04, ARG3, c3 / country)
(r / run-04, ARG4, c4 / country)
(r / run-04, path, a2 / across)
(r5 / report-01, ARG1, r / run-04)
(s / smuggle-01, ARG1, a / and)
(s2 / supply-01, ARG1, c / cocaine)
(s2 / supply-01, ARG2, c2 / continent)
(t / tier, mod, n4 / north)
(w / world-region, name, n5 / name)
(w / world-region, part, t / tier)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),most,most,false), Span(6,7,List(1),drug-,drug,false), Span(15,16,List(2),runs,cocaine,false), Span(19,20,List(3),the,across,false), Span(0,1,List(4),Reportedly,1,false), Span(16,17,List(5),from,run-01,false), Span(5,6,List(6),important,important,false), Span(12,13,List(7),Europe,supply-01,false), Span(21,22,List(8),tier,north,false), Span(22,23,List(9),of,tier,false), Span(13,14,List(12, 11, 10),with,(continent :name (name :op "Europe")),false), Span(8,9,List(13),gun-smuggling,and,false), Span(10,11,List(14),in,route,false), Span(18,19,List(17, 16, 15),across,(country :name (name :op "Colombia")),false)),Map(2 -> cocaine, 5 -> run-01, 12 -> "Europe", 15 -> country, 8 -> north, 7 -> supply-01, 17 -> "Colombia", 1 -> drug, 4 -> 1, 11 -> name, 14 -> route, 6 -> important, 0 -> most, 9 -> tier, 16 -> name, 3 -> across, 10 -> continent, 13 -> and),Map(n -> north, t -> tier, s -> supply-01, m -> most, d -> drug, 1 -> 1, r2 -> route, n3 -> name, c3 -> country, a -> across, r -> run-01, i -> important, a2 -> and, c -> cocaine, c2 -> continent, n2 -> name))),[Ljava.lang.String;@774ae1de,Annotation([Ljava.lang.String;@2c0244b2,[Ljava.lang.String;@180c02fd,[Ljava.lang.String;@41a8e768),Annotation([Ljava.lang.String;@614cba92,[Ljava.lang.String;@5f5555dd,[Ledu.cmu.lti.nlp.amr.Dependency;@27b6bf20),Annotation([Ljava.lang.String;@21238f19,[Ljava.lang.String;@253f3985,[Ljava.lang.String;@50b16b42),Annotation([Ljava.lang.String;@426c81cb,[Ljava.lang.String;@7f0a95d8,[Ledu.cmu.lti.nlp.amr.Entity;@23a578ad))
AMR:
(1 / 1, name, c3 / country)
(a2 / and, location, c2 / continent)
(a2 / and, op, c3 / country)
(a2 / and, op, d / drug)
(a2 / and, op, s / supply-01)
(c2 / continent, name, n2 / name)
(c3 / country, location, a / across)
(c3 / country, name, n3 / name)
(c3 / country, path, n / north)
(d / drug, mod, i / important)
(i / important, degree, m / most)
(n2 / name, op, "Europe")
(n3 / name, op, "Colombia")
(r / run-01, ARG0, r2 / route)
(r / run-01, ARG1, c / cocaine)
(s / supply-01, ARG1, c / cocaine)
(t / tier, calendar, n / north)

Decoded in 993,220 microseconds
Sentence: Colombia is the only country that currently has a policy of targeting drug trafficking aircraft.

Oracle Span 1:  aircraft => aircraft
Oracle Span 2:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 3:  country => country
Oracle Span 4:  currently => current
Oracle Span 5:  drug => drug
Oracle Span 6:  has => have-03
Oracle Span 7:  only => only
Oracle Span 8:  policy => policy
Oracle Span 9:  targeting => target-01
Oracle Span 10:  trafficking => traffic-00
NER Entity: (country :name (name :op "Colombia"))
Spans:
Span 14-15:  aircraft. => aircraft
Span 0-1:  Colombia => (country :name (name :op "Colombia"))
Span 0-7:  Colombia is the only country that currently => (date-entity :time currently)
Span 4-5:  country => country
Span 12-13:  drug => drug
Span 3-4:  only => only
Span 9-10:  policy => policy
Span 11-12:  targeting => target-01
Span 13-14:  trafficking => track-01

Langrangian relaxation converged after 26 iterations. Delta = 0.0
Oracle Span 14-15:  aircraft => aircraft
Oracle Span 0-1:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 4-5:  country => country
Oracle Span 6-7:  currently => current
Oracle Span 12-13:  drug => drug
Oracle Span 7-8:  has => have-03
Oracle Span 3-4:  only => only
Oracle Span 9-10:  policy => policy
Oracle Span 11-12:  targeting => target-01
Oracle Span 13-14:  trafficking => traffic-00

Dependencies:
1	Colombia	_	NNP	NNP	_	5	nsubj	_	_
2	is	_	VBZ	VBZ	_	5	cop	_	_
3	the	_	DT	DT	_	5	det	_	_
4	only	_	JJ	JJ	_	5	amod	_	_
5	country	_	NN	NN	_	0	root	_	_
6	that	_	WDT	WDT	_	8	nsubj	_	_
7	currently	_	RB	RB	_	8	advmod	_	_
8	has	_	VBZ	VBZ	_	5	rcmod	_	_
9	a	_	DT	DT	_	10	det	_	_
10	policy	_	NN	NN	_	8	dobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	targeting	_	VBG	VBG	_	15	amod	_	_
13	drug	_	NN	NN	_	15	nn	_	_
14	trafficking	_	NN	NN	_	15	nn	_	_
15	aircraft	_	NN	NN	_	11	pobj	_	_
16	.	_	.	.	_	5	punct	_	_

Oracle:
(c / country, domain, c2 / country)
(c / country, mod, o / only)
(c2 / country, name, n / name)
(h / have-03, ARG0, c / country)
(h / have-03, ARG1, p / policy)
(h / have-03, time, c3 / current)
(n / name, op, "Colombia")
(t / target-01, ARG1, a / aircraft)
(t / target-01, consist, p / policy)
(t2 / traffic-00, ARG0, a / aircraft)
(t2 / traffic-00, ARG1, d / drug)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Colombia,(country :name (name :op "Colombia")),false), Span(11,12,List(3),targeting,target-01,false), Span(13,14,List(4),trafficking,track-01,false), Span(12,13,List(5),drug,drug,false), Span(0,7,List(7, 6),Colombia is the only country that currently,(date-entity :time currently),false), Span(3,4,List(8),only,only,false), Span(4,5,List(9),country,country,false), Span(9,10,List(10),policy,policy,false), Span(14,15,List(11),aircraft.,aircraft,false)),Map(2 -> "Colombia", 5 -> drug, 8 -> only, 7 -> currently, 1 -> name, 11 -> aircraft, 4 -> track-01, 6 -> date-entity, 9 -> country, 0 -> country, 10 -> policy, 3 -> target-01),Map(n -> name, t -> target-01, d -> drug, p -> policy, a -> aircraft, c3 -> country, d2 -> date-entity, t2 -> track-01, c -> country, o -> only, c2 -> currently))),[Ljava.lang.String;@222395db,Annotation([Ljava.lang.String;@42f6f90,[Ljava.lang.String;@67bcd4b3,[Ljava.lang.String;@1e0fe78d),Annotation([Ljava.lang.String;@203c24da,[Ljava.lang.String;@5f908ca2,[Ledu.cmu.lti.nlp.amr.Dependency;@5e08d2af),Annotation([Ljava.lang.String;@3f5a756c,[Ljava.lang.String;@7e018ca9,[Ljava.lang.String;@252ffa57),Annotation([Ljava.lang.String;@3d2ac9f7,[Ljava.lang.String;@51b73a2b,[Ledu.cmu.lti.nlp.amr.Entity;@23218070))
AMR:
(c / country, name, n / name)
(c3 / country, domain, c / country)
(c3 / country, mod, o / only)
(d2 / date-entity, time, c2 / currently)
(n / name, op, "Colombia")
(p / policy, poss, c3 / country)
(t / target-01, ARG0, d2 / date-entity)
(t / target-01, ARG1, a / aircraft)
(t / target-01, consist, p / policy)
(t2 / track-01, ARG0, a / aircraft)
(t2 / track-01, ARG1, d / drug)

Decoded in 558,791 microseconds
Sentence: Colombia is the source of much of the cocaine and heroin sold in the United States.

Oracle Span 1:  and => and
Oracle Span 2:  cocaine => cocaine
Oracle Span 3:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 4:  heroin => heroin
Oracle Span 5:  much => much
Oracle Span 6:  of => include-91
Oracle Span 7:  sold => sell-01
Oracle Span 8:  source => source-02
Oracle Span 9:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (country :name (name :op "Colombia"))
NER Entity: (country :name (name :op "United" :op "States"))
Spans:
Span 9-10:  and => and
Span 8-9:  cocaine => cocaine
Span 0-1:  Colombia => (country :name (name :op "Colombia"))
Span 10-11:  heroin => heroin
Span 5-6:  much => much
Span 3-4:  source => source-01
Span 14-16:  United States. => (country :name (name :op "United" :op "States"))

Langrangian relaxation converged after 20 iterations. Delta = 0.0
Oracle Span 9-10:  and => and
Oracle Span 8-9:  cocaine => cocaine
Oracle Span 0-1:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 10-11:  heroin => heroin
Oracle Span 5-6:  much => much
Oracle Span 4-5:  of => include-91
Oracle Span 11-12:  sold => sell-01
Oracle Span 3-4:  source => source-02
Oracle Span 14-16:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	Colombia	_	NNP	NNP	_	4	nsubj	_	_
2	is	_	VBZ	VBZ	_	4	cop	_	_
3	the	_	DT	DT	_	4	det	_	_
4	source	_	NN	NN	_	0	root	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	much	_	RB	RB	_	5	pobj	_	_
7	of	_	IN	IN	_	4	prep	_	_
8	the	_	DT	DT	_	9	det	_	_
9	cocaine	_	NN	NN	_	7	pobj	_	_
10	and	_	CC	CC	_	9	cc	_	_
11	heroin	_	NN	NN	_	9	conj	_	_
12	sold	_	VBN	VBN	_	9	vmod	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	the	_	DT	DT	_	16	det	_	_
15	United	_	NNP	NNP	_	16	nn	_	_
16	States	_	NNPS	NNPS	_	13	pobj	_	_
17	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, quant, m / much)
(c3 / country, name, n / name)
(c4 / country, name, n2 / name)
(i / include-91, ARG1, a / and)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "Colombia")
(s / source-02, ARG0, c4 / country)
(s / source-02, ARG1, a / and)
(s2 / sell-01, location, c3 / country)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),source,source-01,false), Span(8,9,List(1),cocaine,cocaine,false), Span(5,6,List(2),much,much,false), Span(0,1,List(5, 4, 3),Colombia,(country :name (name :op "Colombia")),false), Span(14,16,List(9, 8, 7, 6),United States.,(country :name (name :op "United" :op "States")),false), Span(9,10,List(10),and,and,false), Span(10,11,List(11),heroin,heroin,false)),Map(2 -> much, 5 -> "Colombia", 8 -> "United", 7 -> name, 1 -> cocaine, 11 -> heroin, 4 -> name, 6 -> country, 9 -> "States", 0 -> source-01, 10 -> and, 3 -> country),Map(n -> name, h -> heroin, s -> source-01, m -> much, a -> and, c3 -> country, c -> cocaine, n2 -> name, c2 -> country))),[Ljava.lang.String;@21ddb13f,Annotation([Ljava.lang.String;@12a38e8,[Ljava.lang.String;@3ef1043d,[Ljava.lang.String;@6abf34c1),Annotation([Ljava.lang.String;@26a724e0,[Ljava.lang.String;@769ab5a4,[Ledu.cmu.lti.nlp.amr.Dependency;@407c97a6),Annotation([Ljava.lang.String;@53f6aa54,[Ljava.lang.String;@4c6904ee,[Ljava.lang.String;@6f7daf52),Annotation([Ljava.lang.String;@4b98c4bc,[Ljava.lang.String;@2dda6391,[Ledu.cmu.lti.nlp.amr.Entity;@29904cb0))
AMR:
(a / and, op, c / cocaine)
(a / and, op, h / heroin)
(a / and, quant, m / much)
(c2 / country, name, n / name)
(c3 / country, name, n2 / name)
(c3 / country, part, h / heroin)
(n / name, op, "Colombia")
(n2 / name, op, "States")
(n2 / name, op, "United")
(s / source-01, ARG0, c2 / country)
(s / source-01, ARG1, a / and)

Decoded in 404,767 microseconds
Sentence: 2005-07-16

Oracle Span 1:  2005-07-16 => (date-entity :day 16 :month 7 :year 2005)
mkDayMonthYear(2005-07-16,16,07,2005)
Spans:
Span 0-1:  2005-07-16 => (date-entity :year 2005 :month 7 :day 16)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2005-07-16 => (date-entity :day 16 :month 7 :year 2005)

Dependencies:
1	2005-07-16	_	NNP	NNP	_	0	root	_	_

Oracle:
(d2 / date-entity, day, 16)
(d2 / date-entity, month, 7)
(d2 / date-entity, year, 2005)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2005-07-16,(date-entity :year 2005 :month 7 :day 16),false)),Map(2 -> 7, 1 -> 2005, 0 -> date-entity, 3 -> 16),Map(2 -> 2005, 7 -> 7, d -> date-entity, 1 -> 16))),[Ljava.lang.String;@14167193,Annotation([Ljava.lang.String;@285c2a4f,[Ljava.lang.String;@2615bb70,[Ljava.lang.String;@a103985),Annotation([Ljava.lang.String;@2dad5bbd,[Ljava.lang.String;@64ea1215,[Ledu.cmu.lti.nlp.amr.Dependency;@6f2ffbc3),Annotation([Ljava.lang.String;@64f82bb2,[Ljava.lang.String;@234ff423,[Ljava.lang.String;@178130e5),Annotation([Ljava.lang.String;@7e03035,[Ljava.lang.String;@22602ec0,[Ledu.cmu.lti.nlp.amr.Entity;@7ed22843))
AMR:
(d / date-entity, day, 1 / 16)
(d / date-entity, month, 7 / 7)
(d / date-entity, year, 2 / 2005)

Decoded in 17,025 microseconds
Sentence: Venezuela (VE)

Oracle Span 1:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 0-1:  Venezuela => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Venezuela	_	NNP	NNP	_	0	root	_	_
2	(	_	(	(	_	3	punct	_	_
3	VE	_	NNP	NNP	_	1	appos	_	_
4	)	_	)	)	_	3	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Venezuela")

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(2, 1, 0),Venezuela,(country :name (name :op "Venezuela")),false)),Map(2 -> "Venezuela", 1 -> name, 0 -> country),Map(n -> name, c -> country))),[Ljava.lang.String;@6c495865,Annotation([Ljava.lang.String;@2970e9ef,[Ljava.lang.String;@185ccdbd,[Ljava.lang.String;@42a4469b),Annotation([Ljava.lang.String;@6408a4da,[Ljava.lang.String;@4a191625,[Ledu.cmu.lti.nlp.amr.Dependency;@34d61bfe),Annotation([Ljava.lang.String;@54a61361,[Ljava.lang.String;@7529535b,[Ljava.lang.String;@7783cbe5),Annotation([Ljava.lang.String;@730e2700,[Ljava.lang.String;@17d71f1b,[Ledu.cmu.lti.nlp.amr.Entity;@285b2531))
AMR:
(c / country, name, n / name)
(n / name, op, "Venezuela")

Decoded in 41,980 microseconds
Sentence: International; weapons; leader; military

Oracle Span 1:  ; => and
Oracle Span 2:  International => international
Oracle Span 3:  leader => (person :ARG0-of lead-02)
Oracle Span 4:  military => military
Oracle Span 5:  weapons => weapon
Spans:
Span 6-7:   => military
Span 4-5:   => (person :ARG0-of lead-02)
Span 0-1:  International; => international
Span 2-3:  leader; => weapon
Span 1-2:  weapons; => and

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 0-1:  International => international
Oracle Span 4-5:  leader => (person :ARG0-of lead-02)
Oracle Span 6-7:  military => military
Oracle Span 2-3:  weapons => weapon

Dependencies:
1	International	_	NNP	NNP	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	weapons	_	NNS	NNS	_	1	dep	_	_
4	;	_	:	:	_	3	punct	_	_
5	leader	_	NN	NN	_	3	dep	_	_
6	;	_	:	:	_	5	punct	_	_
7	military	_	NN	NN	_	5	dep	_	_

Oracle:
(a / and, op, i / international)
(a / and, op, m / military)
(a / and, op, p / person)
(a / and, op, w / weapon)
(l / lead-02, ARG0, p / person)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),leader;,weapon,false), Span(6,7,List(1),,military,false), Span(0,1,List(2),International;,international,false), Span(4,5,List(4, 3),,(person :ARG0-of lead-02),false), Span(1,2,List(5),weapons;,and,false)),Map(2 -> international, 5 -> and, 1 -> military, 4 -> lead-02, 0 -> weapon, 3 -> person),Map(w -> weapon, m -> military, p -> person, a -> and, i -> international, l -> lead-02))),[Ljava.lang.String;@6bfa22a5,Annotation([Ljava.lang.String;@4146ea5e,[Ljava.lang.String;@568193c6,[Ljava.lang.String;@576f31ea),Annotation([Ljava.lang.String;@6dbacea8,[Ljava.lang.String;@1bd8dd5b,[Ledu.cmu.lti.nlp.amr.Dependency;@419d7245),Annotation([Ljava.lang.String;@6fd3ebfd,[Ljava.lang.String;@5427a721,[Ljava.lang.String;@9489afb),Annotation([Ljava.lang.String;@236dcecd,[Ljava.lang.String;@5311455e,[Ledu.cmu.lti.nlp.amr.Entity;@3a66eeb2))
AMR:
(a / and, op, i / international)
(a / and, op, m / military)
(a / and, op, p / person)
(a / and, op, w / weapon)
(l / lead-02, ARG0, p / person)

Decoded in 67,262 microseconds
Sentence: The Venezuelan president's weapons deals with Russia, curbs on military cooperation with the United States, and his plans to train as many as 2 million Venezuelan civilians to repel a possible invasion by superpowers have the US and his domestic critics worried.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  civilians => civilian
Oracle Span 4:  cooperation => cooperate-01
Oracle Span 5:  critics => (person :ARG0-of criticize-01)
Oracle Span 6:  curbs => curb-01
Oracle Span 7:  deals => deal-01
Oracle Span 8:  domestic => domestic
Oracle Span 9:  have => (person :ARG0-of have-org-role-91)
Oracle Span 10:  invasion => invade-01
Oracle Span 11:  military => military
Oracle Span 12:  plans => plan-01
Oracle Span 13:  possible => possible
Oracle Span 14:  president => president
Oracle Span 15:  repel => repel-01
Oracle Span 16:  Russia => (country :name (name :op "Russia"))
Oracle Span 17:  superpowers => superpower
Oracle Span 18:  train => train-01
Oracle Span 19:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 20:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 21:  weapons => weapon
Oracle Span 22:  worried => worry-01
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (thing :name (name :op "Venezuelan"))
Spans:
Span 44-45:   => worry-01
Span 42-43:   => domestic
Span 43-44:   => (person :ARG0-of criticize-01)
Span 23-24:  2 => as-well
Span 29-30:  a => civilian
Span 37-38:  and => have-03
Span 15-17:  and his => (country :name (name :op "United" :op "States"))
Span 22-23:  as => train-01
Span 20-21:  as => plan-01
Span 40-41:  critics => and
Span 7-8:  curbs => (country :name (name :op "Russia"))
Span 4-5:  deals => weapon
Span 39-40:  domestic => (country :name (name :op "US"))
Span 34-35:  have => invade-01
Span 31-32:  invasion => repel-01
Span 9-10:  military => curb-01
Span 24-25:  million => many
Span 2-3:  president's => (have-org-role-91 :ARG2 president)
Span 33-34:  superpowers => possible
Span 12-13:  the => cooperate-01
Span 18-19:  to => and
Span 36-37:  US => superpower
Span 5-6:  with => deal-01
Span 11-12:  with => military

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 18-19:  and => and
Oracle Span 40-41:  and => and
Oracle Span 29-30:  civilians => civilian
Oracle Span 12-13:  cooperation => cooperate-01
Oracle Span 43-44:  critics => (person :ARG0-of criticize-01)
Oracle Span 9-10:  curbs => curb-01
Oracle Span 5-6:  deals => deal-01
Oracle Span 42-43:  domestic => domestic
Oracle Span 37-38:  have => (person :ARG0-of have-org-role-91)
Oracle Span 34-35:  invasion => invade-01
Oracle Span 11-12:  military => military
Oracle Span 20-21:  plans => plan-01
Oracle Span 33-34:  possible => possible
Oracle Span 2-3:  president => president
Oracle Span 31-32:  repel => repel-01
Oracle Span 7-8:  Russia => (country :name (name :op "Russia"))
Oracle Span 36-37:  superpowers => superpower
Oracle Span 22-23:  train => train-01
Oracle Span 15-17:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 1-2:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 4-5:  weapons => weapon
Oracle Span 44-45:  worried => worry-01

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	Venezuelan	_	JJ	JJ	_	3	amod	_	_
3	president	_	NN	NN	_	5	poss	_	_
4	's	_	POS	POS	_	3	possessive	_	_
5	weapons	_	NNS	NNS	_	6	nsubj	_	_
6	deals	_	VBZ	VBZ	_	0	root	_	_
7	with	_	IN	IN	_	6	prep	_	_
8	Russia	_	NNP	NNP	_	7	pobj	_	_
9	,	_	,	,	_	8	punct	_	_
10	curbs	_	NNS	NNS	_	8	conj	_	_
11	on	_	IN	IN	_	10	prep	_	_
12	military	_	JJ	JJ	_	13	amod	_	_
13	cooperation	_	NN	NN	_	11	pobj	_	_
14	with	_	IN	IN	_	13	prep	_	_
15	the	_	DT	DT	_	17	det	_	_
16	United	_	NNP	NNP	_	17	nn	_	_
17	States	_	NNPS	NNPS	_	14	pobj	_	_
18	,	_	,	,	_	8	punct	_	_
19	and	_	CC	CC	_	8	cc	_	_
20	his	_	PRP$	PRP$	_	21	poss	_	_
21	plans	_	NNS	NNS	_	8	conj	_	_
22	to	_	TO	TO	_	23	aux	_	_
23	train	_	VB	VB	_	6	xcomp	_	_
24	as	_	RB	RB	_	26	advmod	_	_
25	many	_	JJ	JJ	_	26	advmod	_	_
26	as	_	IN	IN	_	28	quantmod	_	_
27	2	_	CD	CD	_	28	number	_	_
28	million	_	CD	CD	_	30	num	_	_
29	Venezuelan	_	JJ	JJ	_	30	amod	_	_
30	civilians	_	NNS	NNS	_	23	dobj	_	_
31	to	_	TO	TO	_	32	aux	_	_
32	repel	_	VB	VB	_	23	vmod	_	_
33	a	_	DT	DT	_	35	det	_	_
34	possible	_	JJ	JJ	_	35	amod	_	_
35	invasion	_	NN	NN	_	32	dobj	_	_
36	by	_	IN	IN	_	32	prep	_	_
37	superpowers	_	NNS	NNS	_	38	nsubj	_	_
38	have	_	VBP	VBP	_	36	pcomp	_	_
39	the	_	DT	DT	_	40	det	_	_
40	US	_	NNP	NNP	_	38	dobj	_	_
41	and	_	CC	CC	_	38	cc	_	_
42	his	_	PRP$	PRP$	_	44	poss	_	_
43	domestic	_	JJ	JJ	_	44	amod	_	_
44	critics	_	NNS	NNS	_	45	dep	_	_
45	worried	_	JJ	JJ	_	38	conj	_	_
46	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, c3 / curb-01)
(a / and, op, d / deal-01)
(a / and, op, p2 / plan-01)
(a4 / and, op, c5 / country)
(a4 / and, op, p3 / person)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / curb-01, ARG1, c4 / cooperate-01)
(c4 / cooperate-01, ARG0, p / person)
(c4 / cooperate-01, ARG1, c5 / country)
(c4 / cooperate-01, mod, m / military)
(c5 / country, name, n3 / name)
(c6 / civilian, mod, c / country)
(c7 / criticize-01, ARG0, p3 / person)
(c7 / criticize-01, ARG1, p / person)
(d / deal-01, ARG1, w2 / weapon)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, p5 / president)
(i / invade-01, ARG0, s / superpower)
(i / invade-01, mod, p4 / possible)
(n / name, op, "Venezuela")
(n2 / name, op, "Russia")
(n3 / name, op, "States")
(n3 / name, op, "United")
(p2 / plan-01, ARG0, p / person)
(p2 / plan-01, ARG1, t / train-01)
(p3 / person, mod, d2 / domestic)
(r / repel-01, ARG1, i / invade-01)
(t / train-01, ARG1, r / repel-01)
(t / train-01, ARG2, c6 / civilian)
(w / worry-01, ARG0, a / and)
(w / worry-01, ARG1, a4 / and)

Input(Some(Graph(null,ArrayBuffer(Span(34,35,List(0),have,invade-01,false), Span(12,13,List(1),the,cooperate-01,false), Span(29,30,List(2),a,civilian,false), Span(37,38,List(3),and,have-03,false), Span(23,24,List(4),2,as-well,false), Span(44,45,List(5),,worry-01,false), Span(42,43,List(6),,domestic,false), Span(5,6,List(7),with,deal-01,false), Span(7,8,List(10, 9, 8),curbs,(country :name (name :op "Russia")),false), Span(15,17,List(14, 13, 12, 11),and his,(country :name (name :op "United" :op "States")),false), Span(39,40,List(17, 16, 15),domestic,(country :name (name :op "US")),false), Span(43,44,List(19, 18),,(person :ARG0-of criticize-01),false), Span(36,37,List(20),US,superpower,false), Span(9,10,List(21),military,curb-01,false), Span(40,41,List(22),critics,and,false), Span(33,34,List(23),superpowers,possible,false), Span(18,19,List(24),to,and,false), Span(22,23,List(25),as,train-01,false), Span(31,32,List(26),invasion,repel-01,false), Span(20,21,List(27),as,plan-01,false), Span(2,3,List(29, 28),president's,(have-org-role-91 :ARG2 president),false), Span(4,5,List(30),deals,weapon,false), Span(11,12,List(31),with,military,false), Span(24,25,List(32),million,many,false)),Map(30 -> weapon, 2 -> civilian, 5 -> worry-01, 27 -> plan-01, 12 -> name, 8 -> country, 15 -> country, 21 -> curb-01, 18 -> person, 24 -> and, 7 -> deal-01, 1 -> cooperate-01, 17 -> "US", 23 -> possible, 26 -> repel-01, 4 -> as-well, 11 -> country, 32 -> many, 14 -> "States", 29 -> president, 20 -> superpower, 28 -> have-org-role-91, 6 -> domestic, 9 -> name, 0 -> invade-01, 22 -> and, 16 -> name, 19 -> criticize-01, 10 -> "Russia", 3 -> have-03, 31 -> military, 25 -> train-01, 13 -> "United"),Map(n -> name, w -> worry-01, h -> have-03, h2 -> have-org-role-91, t -> train-01, m2 -> many, c7 -> curb-01, p2 -> possible, c4 -> country, a3 -> and, s -> superpower, m -> military, d -> domestic, p -> person, c3 -> country, a -> as-well, n3 -> name, p4 -> president, d2 -> deal-01, c6 -> criticize-01, w2 -> weapon, i -> invade-01, a2 -> and, r -> repel-01, c -> cooperate-01, p3 -> plan-01, n2 -> name, c2 -> civilian, c5 -> country))),[Ljava.lang.String;@78f501d2,Annotation([Ljava.lang.String;@11d25b47,[Ljava.lang.String;@4e9d54ec,[Ljava.lang.String;@70bf2ec1),Annotation([Ljava.lang.String;@20944a95,[Ljava.lang.String;@239f35a3,[Ledu.cmu.lti.nlp.amr.Dependency;@7012f08),Annotation([Ljava.lang.String;@e41c00f,[Ljava.lang.String;@c83f3b0,[Ljava.lang.String;@56ebfdae),Annotation([Ljava.lang.String;@589cf114,[Ljava.lang.String;@585d13b0,[Ledu.cmu.lti.nlp.amr.Entity;@4bd07578))
AMR:
(a2 / and, op, c7 / curb-01)
(a2 / and, op, d2 / deal-01)
(a2 / and, op, h / have-03)
(a2 / and, op, p3 / plan-01)
(c / cooperate-01, ARG0, c4 / country)
(c / cooperate-01, ARG1, m / military)
(c3 / country, name, n / name)
(c4 / country, name, n2 / name)
(c5 / country, name, n3 / name)
(c6 / criticize-01, ARG0, p / person)
(c6 / criticize-01, ARG1, h / have-03)
(c7 / curb-01, ARG1, c / cooperate-01)
(d2 / deal-01, ARG1, w2 / weapon)
(h / have-03, ARG0, s / superpower)
(h / have-03, ARG1, c5 / country)
(h / have-03, ARG2, h2 / have-org-role-91)
(h2 / have-org-role-91, ARG1, c3 / country)
(h2 / have-org-role-91, ARG2, p4 / president)
(i / invade-01, ARG0, s / superpower)
(i / invade-01, ARG1, a / as-well)
(i / invade-01, mod, p2 / possible)
(n / name, op, "Russia")
(n2 / name, op, "States")
(n2 / name, op, "United")
(n3 / name, op, "US")
(p / person, mod, d / domestic)
(p3 / plan-01, ARG1, t / train-01)
(r / repel-01, ARG1, i / invade-01)
(t / train-01, ARG1, m2 / many)
(t / train-01, ARG2, c2 / civilian)
(w / worry-01, ARG0, a2 / and)
(w / worry-01, ARG1, a3 / and)

Decoded in 4,524,032 microseconds
Sentence: Venezuelan president Hugo Chavez's weapons deals with Russia, curbs on military cooperation with the United States, and plans to train as many as 2 million Venezuelan civilians to repel a possible invasion by imperialist superpowers have the United States and Chavez's domestic critics worried about what the leftist former military officer is planning.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  civilians => civilian
Oracle Span 5:  cooperation => cooperate-01
Oracle Span 6:  critics => (person :ARG0-of criticize-01)
Oracle Span 7:  curbs => curb-01
Oracle Span 8:  deals => deal-01
Oracle Span 9:  domestic => domestic
Oracle Span 10:  former => former
Oracle Span 11:  have => (person :ARG0-of have-org-role-91)
Oracle Span 12:  Hugo Chavez => (person :name (name :op "Chavez" :op "Hugo"))
Oracle Span 13:  imperialist => imperialism
Oracle Span 14:  invasion => invade-01
Oracle Span 15:  leftist => leftist
Oracle Span 16:  military => military
Oracle Span 17:  military => military
Oracle Span 18:  officer => officer
Oracle Span 19:  planning => plan-01
Oracle Span 20:  plans => (thing :ARG1-of plan-01)
Oracle Span 21:  possible => possible
Oracle Span 22:  president => (have-org-role-91 :ARG2 president)
Oracle Span 23:  repel => repel-01
Oracle Span 24:  Russia => (country :name (name :op "Russia"))
Oracle Span 25:  superpowers => superpower
Oracle Span 26:  train => train-01
Oracle Span 27:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 28:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 29:  weapons => weapon
Oracle Span 30:  worried => worry-01
NER Entity: (person :name (name :op "Hugo" :op "Chavez"))
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (thing :name (name :op "Venezuelan"))
Spans:
Span 54-55:   => (person :ARG0-of (have-org-role-91 :ARG2 officer))
Span 53-54:   => military
Span 56-57:   => plan-01
Span 23-24:  2 => as-well
Span 29-30:  a => civilian
Span 16-18:  and plans => (country :name (name :op "United" :op "States"))
Span 20-21:  as => plan-01
Span 22-23:  as => train-01
Span 40-42:  Chavez's domestic => (country :name (name :op "United" :op "States"))
Span 42-43:  critics => and
Span 8-9:  curbs => (country :name (name :op "Russia"))
Span 5-6:  deals => weapon
Span 2-4:  Hugo Chavez's => (person :name (name :op "Hugo" :op "Chavez"))
Span 33-34:  imperialist => possible
Span 31-32:  invasion => repel-01
Span 51-52:  is => leftist
Span 47-48:  leftist => worry-01
Span 10-11:  military => curb-01
Span 24-25:  million => many
Span 52-53:  planning. => former
Span 1-2:  president => (have-org-role-91 :ARG2 president)
Span 38-39:  States => have-03
Span 34-35:  superpowers => invade-01
Span 46-47:  the => (person :ARG0-of criticize-01)
Span 36-37:  the => imperialist
Span 13-14:  the => cooperate-01
Span 19-20:  train => and
Span 37-38:  United => superpower
Span 45-46:  what => domestic
Span 6-7:  with => deal-01
Span 12-13:  with => military
Span 43-44:  worried => (person :name (name :op "Chavez"))

Langrangian relaxation converged after 53 iterations. Delta = 0.0
Oracle Span 19-20:  and => and
Oracle Span 42-43:  and => and
Oracle Span 43-44:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 29-30:  civilians => civilian
Oracle Span 13-14:  cooperation => cooperate-01
Oracle Span 46-47:  critics => (person :ARG0-of criticize-01)
Oracle Span 10-11:  curbs => curb-01
Oracle Span 6-7:  deals => deal-01
Oracle Span 45-46:  domestic => domestic
Oracle Span 52-53:  former => former
Oracle Span 38-39:  have => (person :ARG0-of have-org-role-91)
Oracle Span 2-4:  Hugo Chavez => (person :name (name :op "Chavez" :op "Hugo"))
Oracle Span 36-37:  imperialist => imperialism
Oracle Span 34-35:  invasion => invade-01
Oracle Span 51-52:  leftist => leftist
Oracle Span 12-13:  military => military
Oracle Span 53-54:  military => military
Oracle Span 54-55:  officer => officer
Oracle Span 56-57:  planning => plan-01
Oracle Span 20-21:  plans => (thing :ARG1-of plan-01)
Oracle Span 33-34:  possible => possible
Oracle Span 1-2:  president => (have-org-role-91 :ARG2 president)
Oracle Span 31-32:  repel => repel-01
Oracle Span 8-9:  Russia => (country :name (name :op "Russia"))
Oracle Span 37-38:  superpowers => superpower
Oracle Span 22-23:  train => train-01
Oracle Span 16-18:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 0-1:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 5-6:  weapons => weapon
Oracle Span 47-48:  worried => worry-01

Dependencies:
1	Venezuelan	_	JJ	JJ	_	2	amod	_	_
2	president	_	NN	NN	_	39	nsubj	_	_
3	Hugo	_	NNP	NNP	_	4	nn	_	_
4	Chavez	_	NNP	NNP	_	6	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	weapons	_	NNS	NNS	_	7	nsubj	_	_
7	deals	_	VBZ	VBZ	_	2	rcmod	_	_
8	with	_	IN	IN	_	7	prep	_	_
9	Russia	_	NNP	NNP	_	8	pobj	_	_
10	,	_	,	,	_	9	punct	_	_
11	curbs	_	NNS	NNS	_	9	appos	_	_
12	on	_	IN	IN	_	11	prep	_	_
13	military	_	JJ	JJ	_	14	amod	_	_
14	cooperation	_	NN	NN	_	12	pobj	_	_
15	with	_	IN	IN	_	7	prep	_	_
16	the	_	DT	DT	_	18	det	_	_
17	United	_	NNP	NNP	_	18	nn	_	_
18	States	_	NNPS	NNPS	_	15	pobj	_	_
19	,	_	,	,	_	7	punct	_	_
20	and	_	CC	CC	_	7	cc	_	_
21	plans	_	VBZ	VBZ	_	7	conj	_	_
22	to	_	TO	TO	_	23	aux	_	_
23	train	_	VB	VB	_	21	xcomp	_	_
24	as	_	RB	RB	_	26	advmod	_	_
25	many	_	JJ	JJ	_	26	advmod	_	_
26	as	_	IN	IN	_	28	quantmod	_	_
27	2	_	CD	CD	_	28	number	_	_
28	million	_	CD	CD	_	30	num	_	_
29	Venezuelan	_	JJ	JJ	_	30	amod	_	_
30	civilians	_	NNS	NNS	_	23	dobj	_	_
31	to	_	TO	TO	_	32	aux	_	_
32	repel	_	VB	VB	_	23	vmod	_	_
33	a	_	DT	DT	_	35	det	_	_
34	possible	_	JJ	JJ	_	35	amod	_	_
35	invasion	_	NN	NN	_	32	dobj	_	_
36	by	_	IN	IN	_	32	prep	_	_
37	imperialist	_	JJ	JJ	_	38	amod	_	_
38	superpowers	_	NNS	NNS	_	36	pobj	_	_
39	have	_	VBP	VBP	_	0	root	_	_
40	the	_	DT	DT	_	42	det	_	_
41	United	_	NNP	NNP	_	42	nn	_	_
42	States	_	NNPS	NNPS	_	39	dobj	_	_
43	and	_	CC	CC	_	42	cc	_	_
44	Chavez	_	NNP	NNP	_	47	poss	_	_
45	's	_	POS	POS	_	44	possessive	_	_
46	domestic	_	JJ	JJ	_	47	amod	_	_
47	critics	_	NNS	NNS	_	42	conj	_	_
48	worried	_	VBN	VBN	_	47	vmod	_	_
49	about	_	IN	IN	_	48	prep	_	_
50	what	_	WP	WP	_	57	dobj	_	_
51	the	_	DT	DT	_	55	det	_	_
52	leftist	_	JJ	JJ	_	55	amod	_	_
53	former	_	JJ	JJ	_	55	amod	_	_
54	military	_	JJ	JJ	_	55	amod	_	_
55	officer	_	NN	NN	_	57	nsubj	_	_
56	is	_	VBZ	VBZ	_	57	aux	_	_
57	planning	_	VBG	VBG	_	49	pcomp	_	_
58	.	_	.	.	_	39	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, p2 / person)
(a2 / and, op, c5 / curb-01)
(a2 / and, op, d2 / deal-01)
(a2 / and, op, p6 / plan-01)
(c / country, name, n / name)
(c2 / criticize-01, ARG0, p2 / person)
(c2 / criticize-01, ARG1, p3 / person)
(c3 / country, name, n4 / name)
(c4 / country, name, n5 / name)
(c5 / curb-01, ARG0, p4 / person)
(c5 / curb-01, ARG1, c6 / cooperate-01)
(c6 / cooperate-01, ARG0, p4 / person)
(c6 / cooperate-01, ARG1, c / country)
(c6 / cooperate-01, mod, m2 / military)
(d2 / deal-01, ARG1, w2 / weapon)
(h / have-org-role-91, ARG0, p4 / person)
(h / have-org-role-91, ARG1, c3 / country)
(h / have-org-role-91, ARG2, p5 / president)
(h2 / have-org-role-91, ARG0, p8 / person)
(h2 / have-org-role-91, ARG1, m / military)
(h2 / have-org-role-91, ARG2, o / officer)
(h2 / have-org-role-91, mod, f / former)
(i / invade-01, ARG0, s / superpower)
(i / invade-01, mod, p7 / possible)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "Chavez")
(n3 / name, op, "Chavez")
(n3 / name, op, "Hugo")
(n4 / name, op, "Venezuela")
(n5 / name, op, "Russia")
(p / plan-01, ARG0, p8 / person)
(p / plan-01, ARG1, t / thing)
(p2 / person, mod, d / domestic)
(p3 / person, name, n2 / name)
(p4 / person, name, n3 / name)
(p6 / plan-01, ARG0, p4 / person)
(p6 / plan-01, ARG1, t2 / train-01)
(p8 / person, mod, l / leftist)
(r / repel-01, ARG0, c7 / civilian)
(r / repel-01, ARG1, i / invade-01)
(s / superpower, mod, i2 / imperialism)
(t2 / train-01, ARG1, r / repel-01)
(t2 / train-01, ARG2, c7 / civilian)
(w / worry-01, ARG0, a2 / and)
(w / worry-01, ARG1, a / and)
(w / worry-01, ARG2, t / thing)

Input(Some(Graph(null,ArrayBuffer(Span(34,35,List(0),superpowers,invade-01,false), Span(54,55,List(3, 2, 1),,(person :ARG0-of (have-org-role-91 :ARG2 officer)),false), Span(40,42,List(7, 6, 5, 4),Chavez's domestic,(country :name (name :op "United" :op "States")),false), Span(29,30,List(8),a,civilian,false), Span(38,39,List(9),States,have-03,false), Span(37,38,List(10),United,superpower,false), Span(6,7,List(11),with,deal-01,false), Span(5,6,List(12),deals,weapon,false), Span(12,13,List(13),with,military,false), Span(31,32,List(14),invasion,repel-01,false), Span(52,53,List(15),planning.,former,false), Span(20,21,List(16),as,plan-01,false), Span(45,46,List(17),what,domestic,false), Span(43,44,List(20, 19, 18),worried,(person :name (name :op "Chavez")),false), Span(53,54,List(21),,military,false), Span(46,47,List(23, 22),the,(person :ARG0-of criticize-01),false), Span(36,37,List(24),the,imperialist,false), Span(13,14,List(25),the,cooperate-01,false), Span(51,52,List(26),is,leftist,false), Span(42,43,List(27),critics,and,false), Span(23,24,List(28),2,as-well,false), Span(10,11,List(29),military,curb-01,false), Span(19,20,List(30),train,and,false), Span(2,4,List(34, 33, 32, 31),Hugo Chavez's,(person :name (name :op "Hugo" :op "Chavez")),false), Span(33,34,List(35),imperialist,possible,false), Span(22,23,List(36),as,train-01,false), Span(8,9,List(39, 38, 37),curbs,(country :name (name :op "Russia")),false), Span(16,18,List(43, 42, 41, 40),and plans,(country :name (name :op "United" :op "States")),false), Span(47,48,List(44),leftist,worry-01,false), Span(1,2,List(46, 45),president,(have-org-role-91 :ARG2 president),false), Span(56,57,List(47),,plan-01,false), Span(24,25,List(48),million,many,false)),Map(30 -> and, 39 -> "Russia", 45 -> have-org-role-91, 2 -> have-org-role-91, 5 -> name, 48 -> many, 33 -> "Hugo", 27 -> and, 12 -> weapon, 8 -> civilian, 15 -> former, 42 -> "United", 36 -> train-01, 21 -> military, 18 -> person, 24 -> imperialist, 35 -> possible, 41 -> name, 7 -> "States", 17 -> domestic, 1 -> person, 44 -> worry-01, 23 -> criticize-01, 38 -> name, 47 -> plan-01, 4 -> country, 26 -> leftist, 11 -> deal-01, 32 -> name, 14 -> repel-01, 20 -> "Chavez", 29 -> curb-01, 46 -> president, 34 -> "Chavez", 6 -> "United", 28 -> as-well, 40 -> country, 0 -> invade-01, 9 -> have-03, 43 -> "States", 22 -> person, 16 -> plan-01, 37 -> country, 19 -> name, 3 -> officer, 10 -> superpower, 25 -> cooperate-01, 31 -> person, 13 -> military),Map(m3 -> many, w -> weapon, n -> name, h -> have-org-role-91, p5 -> person, h2 -> have-03, t -> train-01, p8 -> plan-01, m2 -> military, c7 -> country, p2 -> plan-01, n4 -> name, a3 -> and, c4 -> cooperate-01, s -> superpower, m -> military, d -> deal-01, p -> person, n3 -> name, c3 -> criticize-01, a -> and, p4 -> person, d2 -> domestic, p7 -> president, c6 -> country, i2 -> imperialist, w2 -> worry-01, a2 -> as-well, r -> repel-01, i -> invade-01, h3 -> have-org-role-91, c -> country, p6 -> possible, l -> leftist, f -> former, o -> officer, p3 -> person, c2 -> civilian, n2 -> name, n5 -> name, c5 -> curb-01))),[Ljava.lang.String;@5fb607cd,Annotation([Ljava.lang.String;@4bc65018,[Ljava.lang.String;@5e6dab5d,[Ljava.lang.String;@9f5e5f6),Annotation([Ljava.lang.String;@6612036a,[Ljava.lang.String;@1f2dd920,[Ledu.cmu.lti.nlp.amr.Dependency;@2c29aedb),Annotation([Ljava.lang.String;@a5524fd,[Ljava.lang.String;@7caa6f8e,[Ljava.lang.String;@d3f5de2),Annotation([Ljava.lang.String;@6c0175e8,[Ljava.lang.String;@4f50c659,[Ledu.cmu.lti.nlp.amr.Entity;@60a90622))
AMR:
(a / and, op, c5 / curb-01)
(a / and, op, d / deal-01)
(a3 / and, op, c7 / country)
(a3 / and, op, p2 / plan-01)
(a3 / and, op, p4 / person)
(c / country, name, n / name)
(c3 / criticize-01, ARG0, p4 / person)
(c3 / criticize-01, ARG1, p3 / person)
(c4 / cooperate-01, ARG0, p5 / person)
(c4 / cooperate-01, ARG1, m / military)
(c5 / curb-01, ARG1, c4 / cooperate-01)
(c6 / country, name, n4 / name)
(c7 / country, name, n5 / name)
(d / deal-01, ARG1, w / weapon)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, m2 / military)
(h / have-org-role-91, ARG2, o / officer)
(h2 / have-03, ARG1, c / country)
(h2 / have-03, mod, f / former)
(h2 / have-03, mod, l / leftist)
(h3 / have-org-role-91, ARG0, p5 / person)
(h3 / have-org-role-91, ARG1, c6 / country)
(h3 / have-org-role-91, ARG2, p7 / president)
(i / invade-01, ARG0, s / superpower)
(i / invade-01, ARG1, a2 / as-well)
(i / invade-01, mod, p6 / possible)
(m3 / many, mod, a2 / as-well)
(n / name, op, "States")
(n / name, op, "United")
(n2 / name, op, "Chavez")
(n3 / name, op, "Chavez")
(n3 / name, op, "Hugo")
(n4 / name, op, "Russia")
(n5 / name, op, "States")
(n5 / name, op, "United")
(p2 / plan-01, ARG0, h2 / have-03)
(p2 / plan-01, ARG1, t / train-01)
(p3 / person, name, n2 / name)
(p4 / person, mod, d2 / domestic)
(p5 / person, name, n3 / name)
(p8 / plan-01, ARG0, p / person)
(p8 / plan-01, ARG1, t / train-01)
(r / repel-01, ARG1, i / invade-01)
(s / superpower, mod, i2 / imperialist)
(t / train-01, ARG1, r / repel-01)
(t / train-01, ARG2, c2 / civilian)
(w2 / worry-01, ARG0, a / and)
(w2 / worry-01, ARG1, a3 / and)

Decoded in 10,582,569 microseconds
Sentence: Chavez insists that the moves are purely defensive and born of an overdue need to update obsolete military hardware and protect Venezuela from nations that might want to take control of Venezuela.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  born => bear-02
Oracle Span 4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5:  control => control-01
Oracle Span 6:  defensive => defensive
Oracle Span 7:  hardware => hardware
Oracle Span 8:  insists => insist-01
Oracle Span 9:  military => military
Oracle Span 10:  moves => move-02
Oracle Span 11:  nations => nation
Oracle Span 12:  need => need-01
Oracle Span 13:  obsolete => obsolete
Oracle Span 14:  overdue => overdue
Oracle Span 15:  protect => protect-01
Oracle Span 16:  purely => pure
Oracle Span 17:  update => update-01
Oracle Span 18:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 19:  want => want-01
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 19-20:  and => and
Span 8-9:  and => and
Span 9-10:  born => bear-01
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 29-30:  control => control-01
Span 7-8:  defensive => defensive
Span 18-19:  hardware => hardware
Span 1-2:  insists => insist-01
Span 17-18:  military => military
Span 4-5:  moves => move-01
Span 23-24:  nations => nation
Span 13-14:  need => need-01
Span 16-17:  obsolete => obsolete
Span 20-21:  protect => protect-01
Span 6-7:  purely => pure
Span 28-29:  take => take-01
Span 15-16:  update => update-01
Span 21-22:  Venezuela => (country :name (name :op "Venezuela"))
Span 31-32:  Venezuela. => (country :name (name :op "Venezuela"))
Span 26-27:  want => want-01

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 8-9:  and => and
Oracle Span 19-20:  and => and
Oracle Span 9-10:  born => bear-02
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 29-30:  control => control-01
Oracle Span 7-8:  defensive => defensive
Oracle Span 18-19:  hardware => hardware
Oracle Span 1-2:  insists => insist-01
Oracle Span 17-18:  military => military
Oracle Span 4-5:  moves => move-02
Oracle Span 23-24:  nations => nation
Oracle Span 13-14:  need => need-01
Oracle Span 16-17:  obsolete => obsolete
Oracle Span 12-13:  overdue => overdue
Oracle Span 20-21:  protect => protect-01
Oracle Span 6-7:  purely => pure
Oracle Span 15-16:  update => update-01
Oracle Span 21-22:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 26-27:  want => want-01

Dependencies:
1	Chavez	_	NNP	NNP	_	2	nsubj	_	_
2	insists	_	VBZ	VBZ	_	0	root	_	_
3	that	_	IN	IN	_	8	mark	_	_
4	the	_	DT	DT	_	5	det	_	_
5	moves	_	NNS	NNS	_	8	nsubjpass	_	_
6	are	_	VBP	VBP	_	8	auxpass	_	_
7	purely	_	RB	RB	_	8	advmod	_	_
8	defensive	_	JJ	JJ	_	2	ccomp	_	_
9	and	_	CC	CC	_	8	cc	_	_
10	born	_	VBN	VBN	_	8	conj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	an	_	DT	DT	_	14	det	_	_
13	overdue	_	JJ	JJ	_	14	amod	_	_
14	need	_	NN	NN	_	11	pobj	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	update	_	VB	VB	_	10	xcomp	_	_
17	obsolete	_	JJ	JJ	_	19	amod	_	_
18	military	_	JJ	JJ	_	19	amod	_	_
19	hardware	_	NN	NN	_	16	dobj	_	_
20	and	_	CC	CC	_	16	cc	_	_
21	protect	_	VB	VB	_	16	conj	_	_
22	Venezuela	_	NNP	NNP	_	21	dobj	_	_
23	from	_	IN	IN	_	21	prep	_	_
24	nations	_	NNS	NNS	_	23	pobj	_	_
25	that	_	WDT	WDT	_	27	nsubj	_	_
26	might	_	MD	MD	_	27	aux	_	_
27	want	_	VB	VB	_	24	rcmod	_	_
28	to	_	TO	TO	_	29	aux	_	_
29	take	_	VB	VB	_	27	xcomp	_	_
30	control	_	NN	NN	_	29	dobj	_	_
31	of	_	IN	IN	_	30	prep	_	_
32	Venezuela	_	NNP	NNP	_	31	pobj	_	_
33	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, b / bear-02)
(a / and, op, d / defensive)
(a2 / and, op, p3 / protect-01)
(a2 / and, op, u / update-01)
(b / bear-02, ARG0, n2 / need-01)
(b / bear-02, ARG1, m / move-02)
(c / country, name, n3 / name)
(c2 / control-01, ARG0, n4 / nation)
(c2 / control-01, ARG1, c / country)
(d / defensive, domain, m / move-02)
(d / defensive, mod, p2 / pure)
(h / hardware, mod, m2 / military)
(h / hardware, mod, o2 / obsolete)
(i / insist-01, ARG0, p / person)
(i / insist-01, ARG1, a / and)
(n / name, op, "Chavez")
(n2 / need-01, ARG1, a2 / and)
(n2 / need-01, mod, o / overdue)
(n3 / name, op, "Venezuela")
(p / person, name, n / name)
(p3 / protect-01, ARG1, c / country)
(p3 / protect-01, ARG2, n4 / nation)
(u / update-01, ARG1, h / hardware)
(w / want-01, ARG0, n4 / nation)
(w / want-01, ARG1, c2 / control-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),moves,move-01,false), Span(20,21,List(1),protect,protect-01,false), Span(21,22,List(4, 3, 2),Venezuela,(country :name (name :op "Venezuela")),false), Span(29,30,List(5),control,control-01,false), Span(31,32,List(8, 7, 6),Venezuela.,(country :name (name :op "Venezuela")),false), Span(15,16,List(9),update,update-01,false), Span(16,17,List(10),obsolete,obsolete,false), Span(1,2,List(11),insists,insist-01,false), Span(26,27,List(12),want,want-01,false), Span(7,8,List(13),defensive,defensive,false), Span(19,20,List(14),and,and,false), Span(23,24,List(15),nations,nation,false), Span(8,9,List(16),and,and,false), Span(28,29,List(17),take,take-01,false), Span(9,10,List(18),born,bear-01,false), Span(17,18,List(19),military,military,false), Span(0,1,List(22, 21, 20),Chavez,(person :name (name :op "Chavez")),false), Span(18,19,List(23),hardware,hardware,false), Span(6,7,List(24),purely,pure,false), Span(13,14,List(25),need,need-01,false)),Map(2 -> country, 5 -> control-01, 12 -> want-01, 8 -> "Venezuela", 15 -> nation, 21 -> name, 18 -> bear-01, 24 -> pure, 7 -> name, 1 -> protect-01, 17 -> take-01, 23 -> hardware, 4 -> "Venezuela", 11 -> insist-01, 14 -> and, 20 -> person, 6 -> country, 9 -> update-01, 0 -> move-01, 22 -> "Chavez", 16 -> and, 19 -> military, 10 -> obsolete, 3 -> name, 25 -> need-01, 13 -> defensive),Map(n -> name, w -> want-01, h -> hardware, b -> bear-01, t -> take-01, m2 -> military, p2 -> person, n4 -> name, m -> move-01, d -> defensive, p -> protect-01, n3 -> nation, c3 -> country, a -> and, a2 -> and, i -> insist-01, c -> country, u -> update-01, o -> obsolete, p3 -> pure, c2 -> control-01, n2 -> name, n5 -> need-01))),[Ljava.lang.String;@d31c98f,Annotation([Ljava.lang.String;@30f870fb,[Ljava.lang.String;@4369dab3,[Ljava.lang.String;@3a4888c7),Annotation([Ljava.lang.String;@393643b0,[Ljava.lang.String;@4a3a93c5,[Ledu.cmu.lti.nlp.amr.Dependency;@478b6473),Annotation([Ljava.lang.String;@39fbd2f5,[Ljava.lang.String;@325b3db9,[Ljava.lang.String;@2c61348c),Annotation([Ljava.lang.String;@30d5658f,[Ljava.lang.String;@575e751a,[Ledu.cmu.lti.nlp.amr.Entity;@3c832cbd))
AMR:
(a / and, op, p / protect-01)
(a / and, op, u / update-01)
(a2 / and, op, b / bear-01)
(b / bear-01, ARG0, n5 / need-01)
(b / bear-01, ARG1, m / move-01)
(c / country, name, n / name)
(c2 / control-01, ARG0, n3 / nation)
(c2 / control-01, ARG1, c / country)
(c3 / country, name, n2 / name)
(d / defensive, domain, m / move-01)
(d / defensive, mod, p3 / pure)
(h / hardware, mod, m2 / military)
(h / hardware, mod, o / obsolete)
(i / insist-01, ARG0, p2 / person)
(i / insist-01, ARG1, a2 / and)
(m / move-01, ARG1, c3 / country)
(n / name, op, "Venezuela")
(n2 / name, op, "Venezuela")
(n4 / name, op, "Chavez")
(n5 / need-01, ARG1, a / and)
(p / protect-01, ARG1, c / country)
(p2 / person, name, n4 / name)
(t / take-01, ARG1, c2 / control-01)
(u / update-01, ARG1, h / hardware)
(w / want-01, ARG0, n3 / nation)
(w / want-01, ARG1, c2 / control-01)

Decoded in 2,646,187 microseconds
Sentence: Venezuela is South America's largest petroleum-producing state.

Oracle Span 1:  petroleum => petroleum
Oracle Span 2:  producing => produce-01
Oracle Span 3:  South America => (continent :name (name :op "America" :op "South"))
Oracle Span 4:  state => state
Oracle Span 5:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "South" :op "America"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 7-8:   => state
Span 5-6:  petroleum-producing => (large :degree most)
Span 2-4:  South America's => (continent :name (name :op "South" :op "America"))
Span 0-1:  Venezuela => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  petroleum => petroleum
Oracle Span 8-9:  producing => produce-01
Oracle Span 2-4:  South America => (continent :name (name :op "America" :op "South"))
Oracle Span 9-10:  state => state
Oracle Span 0-1:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Venezuela	_	NNP	NNP	_	8	nsubj	_	_
2	is	_	VBZ	VBZ	_	8	cop	_	_
3	South	_	NNP	NNP	_	4	nn	_	_
4	America	_	NNP	NNP	_	8	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	largest	_	JJS	JJS	_	8	amod	_	_
7	petroleum-producing	_	JJ	JJ	_	8	amod	_	_
8	state	_	NN	NN	_	0	root	_	_
9	.	_	.	.	_	8	punct	_	_

Oracle:
(c3 / continent, name, n3 / name)
(c4 / country, name, n4 / name)
(n3 / name, op, "America")
(n3 / name, op, "South")
(n4 / name, op, "Venezuela")
(p3 / produce-01, ARG0, s / state)
(p3 / produce-01, ARG1, p4 / petroleum)
(p3 / produce-01, compared-to, c3 / continent)
(s / state, domain, c4 / country)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(1, 0),petroleum-producing,(large :degree most),false), Span(7,8,List(2),,state,false), Span(0,1,List(5, 4, 3),Venezuela,(country :name (name :op "Venezuela")),false), Span(2,4,List(9, 8, 7, 6),South America's,(continent :name (name :op "South" :op "America")),false)),Map(2 -> state, 5 -> "Venezuela", 8 -> "South", 7 -> name, 1 -> most, 4 -> name, 6 -> continent, 9 -> "America", 0 -> large, 3 -> country),Map(n -> name, s -> state, m -> most, c -> country, l -> large, n2 -> name, c2 -> continent))),[Ljava.lang.String;@67bea457,Annotation([Ljava.lang.String;@88cc874,[Ljava.lang.String;@56d5844b,[Ljava.lang.String;@50aad34b),Annotation([Ljava.lang.String;@42245915,[Ljava.lang.String;@2c85f64d,[Ledu.cmu.lti.nlp.amr.Dependency;@5608d84a),Annotation([Ljava.lang.String;@503e694b,[Ljava.lang.String;@30b27ea8,[Ljava.lang.String;@3386d16d),Annotation([Ljava.lang.String;@235c95df,[Ljava.lang.String;@8bd4ce,[Ledu.cmu.lti.nlp.amr.Entity;@236fbd49))
AMR:
(c / country, mod, l / large)
(c / country, name, n / name)
(c2 / continent, name, n2 / name)
(l / large, calendar, c2 / continent)
(l / large, degree, m / most)
(n / name, op, "Venezuela")
(n2 / name, op, "America")
(n2 / name, op, "South")
(s / state, compared-to, c2 / continent)

Decoded in 161,954 microseconds
Sentence: Chavez's domestic opponents scoff at the idea that the US would ever invade Venezuela and charge that Chavez's true intention is to arm a huge cadre of loyal reservists who would protect Chavez against any internal uprising and to pose as a militarized counterweight to US influence in Latin America.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  any => any
Oracle Span 4:  arm => arm-01
Oracle Span 5:  cadre => cadre
Oracle Span 6:  charge => charge-06
Oracle Span 7:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 8:  counterweight => counterweight
Oracle Span 9:  domestic => domestic
Oracle Span 10:  ever => ever
Oracle Span 11:  huge => huge
Oracle Span 12:  idea => idea
Oracle Span 13:  influence => influence-01
Oracle Span 14:  intention => intend-01
Oracle Span 15:  internal => internal
Oracle Span 16:  invade => invade-01
Oracle Span 17:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 18:  loyal => loyal-41
Oracle Span 19:  militarized => militarize-00
Oracle Span 20:  opponents => (person :ARG0-of oppose-01)
Oracle Span 21:  pose => pose-01
Oracle Span 22:  protect => protect-01
Oracle Span 23:  reservists => reservist
Oracle Span 24:  scoff => scoff-01
Oracle Span 25:  true => true
Oracle Span 26:  uprising => uprise-00
Oracle Span 27:  US => (country :name (name :op "US"))
Oracle Span 28:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 50-52:   => (world-region :name (name :op "America" :op "Latin"))
Span 41-42:  a => pose-01
Span 33-34:  against => protect-01
Span 37-38:  and => internal
Span 14-15:  and => (country :name (name :op "Venezuela"))
Span 34-35:  any => (person :name (name :op "Chavez"))
Span 15-16:  charge => and
Span 0-1:  Chavez's => (person :name (name :op "Chavez"))
Span 24-25:  huge => arm-01
Span 47-48:  in => (country :name (name :op "US"))
Span 12-13:  invade => ever
Span 20-21:  is => true
Span 48-49:  Latin => influence-01
Span 27-28:  loyal => care-01
Span 26-27:  of => huge
Span 2-3:  opponents => domestic
Span 39-40:  pose => and
Span 3-4:  scoff => opponent
Span 7-8:  that => idea
Span 16-17:  that => charge-01
Span 21-22:  to => interlink-01
Span 18-19:  true => (person :name (name :op "Chavez"))
Span 36-37:  uprising => any
Span 13-14:  Venezuela => invade-01
Span 30-31:  would => reservist
Span 10-11:  would => (country :name (name :op "US"))

Langrangian relaxation converged after 41 iterations. Delta = 0.0
Oracle Span 15-16:  and => and
Oracle Span 39-40:  and => and
Oracle Span 36-37:  any => any
Oracle Span 24-25:  arm => arm-01
Oracle Span 27-28:  cadre => cadre
Oracle Span 16-17:  charge => charge-06
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 45-46:  counterweight => counterweight
Oracle Span 2-3:  domestic => domestic
Oracle Span 12-13:  ever => ever
Oracle Span 26-27:  huge => huge
Oracle Span 7-8:  idea => idea
Oracle Span 48-49:  influence => influence-01
Oracle Span 21-22:  intention => intend-01
Oracle Span 37-38:  internal => internal
Oracle Span 13-14:  invade => invade-01
Oracle Span 50-52:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 29-30:  loyal => loyal-41
Oracle Span 44-45:  militarized => militarize-00
Oracle Span 3-4:  opponents => (person :ARG0-of oppose-01)
Oracle Span 41-42:  pose => pose-01
Oracle Span 33-34:  protect => protect-01
Oracle Span 30-31:  reservists => reservist
Oracle Span 4-5:  scoff => scoff-01
Oracle Span 20-21:  true => true
Oracle Span 38-39:  uprising => uprise-00
Oracle Span 10-11:  US => (country :name (name :op "US"))
Oracle Span 14-15:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Chavez	_	NNP	NNP	_	4	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	domestic	_	JJ	JJ	_	4	amod	_	_
4	opponents	_	NNS	NNS	_	5	nsubj	_	_
5	scoff	_	VBP	VBP	_	0	root	_	_
6	at	_	IN	IN	_	5	prep	_	_
7	the	_	DT	DT	_	8	det	_	_
8	idea	_	NN	NN	_	6	pobj	_	_
9	that	_	IN	IN	_	14	mark	_	_
10	the	_	DT	DT	_	11	det	_	_
11	US	_	NNP	NNP	_	14	nsubj	_	_
12	would	_	MD	MD	_	14	aux	_	_
13	ever	_	RB	RB	_	14	advmod	_	_
14	invade	_	VB	VB	_	5	ccomp	_	_
15	Venezuela	_	NNP	NNP	_	14	dobj	_	_
16	and	_	CC	CC	_	14	cc	_	_
17	charge	_	VB	VB	_	14	conj	_	_
18	that	_	IN	IN	_	23	mark	_	_
19	Chavez	_	NNP	NNP	_	22	poss	_	_
20	's	_	POS	POS	_	19	possessive	_	_
21	true	_	JJ	JJ	_	22	amod	_	_
22	intention	_	NN	NN	_	23	nsubj	_	_
23	is	_	VBZ	VBZ	_	17	ccomp	_	_
24	to	_	TO	TO	_	25	aux	_	_
25	arm	_	VB	VB	_	23	ccomp	_	_
26	a	_	DT	DT	_	28	det	_	_
27	huge	_	JJ	JJ	_	28	amod	_	_
28	cadre	_	NN	NN	_	25	dobj	_	_
29	of	_	IN	IN	_	28	prep	_	_
30	loyal	_	JJ	JJ	_	31	amod	_	_
31	reservists	_	NNS	NNS	_	29	pobj	_	_
32	who	_	WP	WP	_	34	nsubj	_	_
33	would	_	MD	MD	_	34	aux	_	_
34	protect	_	VB	VB	_	28	rcmod	_	_
35	Chavez	_	NNP	NNP	_	34	dobj	_	_
36	against	_	IN	IN	_	35	prep	_	_
37	any	_	DT	DT	_	39	det	_	_
38	internal	_	JJ	JJ	_	39	amod	_	_
39	uprising	_	NN	NN	_	36	pobj	_	_
40	and	_	CC	CC	_	25	cc	_	_
41	to	_	TO	TO	_	42	aux	_	_
42	pose	_	VB	VB	_	25	conj	_	_
43	as	_	IN	IN	_	42	prep	_	_
44	a	_	DT	DT	_	46	det	_	_
45	militarized	_	JJ	JJ	_	46	amod	_	_
46	counterweight	_	NN	NN	_	43	pobj	_	_
47	to	_	TO	TO	_	46	prep	_	_
48	US	_	NNP	NNP	_	49	nn	_	_
49	influence	_	NN	NN	_	47	pobj	_	_
50	in	_	IN	IN	_	42	prep	_	_
51	Latin	_	NNP	NNP	_	52	nn	_	_
52	America	_	NNP	NNP	_	50	pobj	_	_
53	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, op, c / charge-06)
(a / and, op, s / scoff-01)
(a2 / and, op, a4 / arm-01)
(a2 / and, op, p4 / pose-01)
(a4 / arm-01, ARG0, p2 / person)
(a4 / arm-01, ARG1, c4 / cadre)
(c / charge-06, ARG0, p / person)
(c / charge-06, ARG1, i3 / intend-01)
(c2 / country, name, n / name)
(c3 / country, name, n2 / name)
(c4 / cadre, mod, h / huge)
(c5 / counterweight, prep-to, i5 / influence-01)
(i / idea, topic, i2 / invade-01)
(i2 / invade-01, ARG0, c2 / country)
(i2 / invade-01, ARG1, c3 / country)
(i2 / invade-01, time, e / ever)
(i3 / intend-01, ARG0, p2 / person)
(i3 / intend-01, ARG1, a2 / and)
(i3 / intend-01, mod, t / true)
(i5 / influence-01, ARG0, c2 / country)
(i5 / influence-01, location, w / world-region)
(l / loyal-41, ARG1, r / reservist)
(m / militarize-00, ARG1, c5 / counterweight)
(n / name, op, "US")
(n2 / name, op, "Venezuela")
(n3 / name, op, "Chavez")
(n4 / name, op, "America")
(n4 / name, op, "Latin")
(o / oppose-01, ARG0, p / person)
(o / oppose-01, ARG1, p2 / person)
(p / person, mod, d / domestic)
(p2 / person, name, n3 / name)
(p3 / protect-01, ARG0, c4 / cadre)
(p3 / protect-01, ARG1, p2 / person)
(p3 / protect-01, ARG2, u / uprise-00)
(p4 / pose-01, ARG0, p2 / person)
(p4 / pose-01, ARG1, c5 / counterweight)
(r / reservist, consist, c4 / cadre)
(s / scoff-01, ARG0, p / person)
(s / scoff-01, ARG1, i / idea)
(u / uprise-00, mod, a3 / any)
(u / uprise-00, mod, i4 / internal)
(w / world-region, name, n4 / name)

Input(Some(Graph(null,ArrayBuffer(Span(50,52,List(3, 2, 1, 0),,(world-region :name (name :op "America" :op "Latin")),false), Span(41,42,List(4),a,pose-01,false), Span(36,37,List(5),uprising,any,false), Span(48,49,List(6),Latin,influence-01,false), Span(37,38,List(7),and,internal,false), Span(30,31,List(8),would,reservist,false), Span(7,8,List(9),that,idea,false), Span(20,21,List(10),is,true,false), Span(26,27,List(11),of,huge,false), Span(18,19,List(14, 13, 12),true,(person :name (name :op "Chavez")),false), Span(14,15,List(17, 16, 15),and,(country :name (name :op "Venezuela")),false), Span(33,34,List(18),against,protect-01,false), Span(47,48,List(21, 20, 19),in,(country :name (name :op "US")),false), Span(13,14,List(22),Venezuela,invade-01,false), Span(24,25,List(23),huge,arm-01,false), Span(21,22,List(24),to,interlink-01,false), Span(15,16,List(25),charge,and,false), Span(27,28,List(26),loyal,care-01,false), Span(16,17,List(27),that,charge-01,false), Span(34,35,List(30, 29, 28),any,(person :name (name :op "Chavez")),false), Span(0,1,List(33, 32, 31),Chavez's,(person :name (name :op "Chavez")),false), Span(12,13,List(34),invade,ever,false), Span(10,11,List(37, 36, 35),would,(country :name (name :op "US")),false), Span(39,40,List(38),pose,and,false), Span(3,4,List(39),scoff,opponent,false), Span(2,3,List(40),opponents,domestic,false)),Map(39 -> opponent, 30 -> "Chavez", 2 -> "America", 5 -> any, 33 -> "Chavez", 27 -> charge-01, 12 -> person, 8 -> reservist, 15 -> country, 36 -> name, 21 -> "US", 18 -> protect-01, 24 -> interlink-01, 35 -> country, 7 -> internal, 1 -> name, 17 -> "Venezuela", 23 -> arm-01, 38 -> and, 26 -> care-01, 4 -> pose-01, 11 -> huge, 32 -> name, 14 -> "Chavez", 29 -> name, 20 -> name, 34 -> ever, 28 -> person, 6 -> influence-01, 40 -> domestic, 9 -> idea, 0 -> world-region, 22 -> invade-01, 16 -> name, 37 -> "US", 19 -> country, 10 -> true, 3 -> "Latin", 31 -> person, 25 -> and, 13 -> name),Map(e -> ever, n -> name, w -> world-region, h -> huge, i4 -> invade-01, p5 -> person, t -> true, n7 -> name, p2 -> person, n4 -> name, a3 -> and, c4 -> charge-01, d -> domestic, i3 -> idea, p -> pose-01, a -> any, n3 -> name, c3 -> care-01, p4 -> person, n6 -> name, i2 -> internal, r -> reservist, i -> influence-01, a2 -> arm-01, i5 -> interlink-01, c -> country, o -> opponent, p3 -> protect-01, n2 -> name, c2 -> country, a4 -> and, c5 -> country, n5 -> name))),[Ljava.lang.String;@2f695cae,Annotation([Ljava.lang.String;@65c8f27c,[Ljava.lang.String;@75cb080c,[Ljava.lang.String;@d5b44a),Annotation([Ljava.lang.String;@653c14d2,[Ljava.lang.String;@4745511b,[Ledu.cmu.lti.nlp.amr.Dependency;@6a63ba97),Annotation([Ljava.lang.String;@47b93475,[Ljava.lang.String;@42a622d4,[Ljava.lang.String;@2f067e12),Annotation([Ljava.lang.String;@5846de67,[Ljava.lang.String;@56d25386,[Ledu.cmu.lti.nlp.amr.Entity;@25917b0a))
AMR:
(a2 / arm-01, ARG0, p5 / person)
(a2 / arm-01, ARG1, c3 / care-01)
(a3 / and, op, c4 / charge-01)
(a3 / and, op, i4 / invade-01)
(a4 / and, op, a2 / arm-01)
(a4 / and, op, p / pose-01)
(c / country, name, n3 / name)
(c2 / country, name, n4 / name)
(c3 / care-01, ARG1, r / reservist)
(c3 / care-01, mod, h / huge)
(c4 / charge-01, ARG0, o / opponent)
(c4 / charge-01, ARG1, i5 / interlink-01)
(c5 / country, name, n7 / name)
(i / influence-01, ARG0, c5 / country)
(i / influence-01, ARG1, c2 / country)
(i / influence-01, location, w / world-region)
(i2 / internal, op, p / pose-01)
(i3 / idea, topic, i4 / invade-01)
(i4 / invade-01, ARG0, c5 / country)
(i4 / invade-01, ARG1, c / country)
(i4 / invade-01, time, e / ever)
(i5 / interlink-01, ARG0, p5 / person)
(i5 / interlink-01, ARG1, p2 / person)
(i5 / interlink-01, mod, t / true)
(n / name, op, "America")
(n / name, op, "Latin")
(n2 / name, op, "Chavez")
(n3 / name, op, "Venezuela")
(n4 / name, op, "US")
(n5 / name, op, "Chavez")
(n6 / name, op, "Chavez")
(n7 / name, op, "US")
(o / opponent, mod, d / domestic)
(p / pose-01, ARG1, a / any)
(p2 / person, name, n2 / name)
(p3 / protect-01, ARG0, c3 / care-01)
(p3 / protect-01, ARG1, p4 / person)
(p4 / person, name, n5 / name)
(p5 / person, name, n6 / name)
(w / world-region, name, n / name)

Decoded in 6,735,320 microseconds
Sentence: Cuban leader Fidel Castro is Chavez's his major ally and Chavez is growing closer to Castro.

Oracle Span 1:  ally => ally-01
Oracle Span 2:  and => and
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  closer => close-41
Oracle Span 5:  Cuban => (country :name (name :op "Cuba"))
Oracle Span 6:  Fidel Castro => (person :name (name :op "Castro" :op "Fidel"))
Oracle Span 7:  growing => grow-02
Oracle Span 8:  leader => lead-02
Oracle Span 9:  major => major
NER Entity: (person :name (name :op "Fidel" :op "Castro"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (thing :name (name :op "Cuban"))
Spans:
Span 16-17:   => (person :name (name :op "Castro"))
Span 8-9:  ally => major
Span 9-10:  and => ally-01
Span 10-11:  Chavez => and
Span 5-6:  Chavez's => (person :name (name :op "Chavez"))
Span 13-14:  closer => grow-01
Span 2-4:  Fidel Castro => (person :name (name :op "Fidel" :op "Castro"))
Span 11-12:  is => (person :name (name :op "Chavez"))
Span 14-15:  to => (close :degree more)

Langrangian relaxation converged after 17 iterations. Delta = 0.0
Oracle Span 9-10:  ally => ally-01
Oracle Span 10-11:  and => and
Oracle Span 5-6:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 14-15:  closer => close-41
Oracle Span 0-1:  Cuban => (country :name (name :op "Cuba"))
Oracle Span 2-4:  Fidel Castro => (person :name (name :op "Castro" :op "Fidel"))
Oracle Span 13-14:  growing => grow-02
Oracle Span 1-2:  leader => lead-02
Oracle Span 8-9:  major => major

Dependencies:
1	Cuban	_	JJ	JJ	_	4	amod	_	_
2	leader	_	NN	NN	_	4	nn	_	_
3	Fidel	_	NNP	NNP	_	4	nn	_	_
4	Castro	_	NNP	NNP	_	6	nsubj	_	_
5	is	_	VBZ	VBZ	_	6	cop	_	_
6	Chavez	_	NNP	NNP	_	0	root	_	_
7	's	_	POS	POS	_	6	possessive	_	_
8	his	_	PRP$	PRP$	_	10	poss	_	_
9	major	_	JJ	JJ	_	10	amod	_	_
10	ally	_	NN	NN	_	6	dep	_	_
11	and	_	CC	CC	_	6	cc	_	_
12	Chavez	_	NNP	NNP	_	14	nsubj	_	_
13	is	_	VBZ	VBZ	_	14	aux	_	_
14	growing	_	VBG	VBG	_	6	conj	_	_
15	closer	_	RBR	RBR	_	14	advmod	_	_
16	to	_	TO	TO	_	14	prep	_	_
17	Castro	_	NNP	NNP	_	16	pobj	_	_
18	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, a2 / ally-01)
(a / and, op, g / grow-02)
(a2 / ally-01, ARG1, p / person)
(a2 / ally-01, ARG2, p2 / person)
(a2 / ally-01, mod, m / major)
(c / country, name, n2 / name)
(c2 / close-41, ARG1, p2 / person)
(c2 / close-41, ARG2, p / person)
(g / grow-02, ARG1, p2 / person)
(g / grow-02, ARG2, c2 / close-41)
(l / lead-02, ARG0, p / person)
(l / lead-02, ARG1, c / country)
(n / name, op, "Castro")
(n / name, op, "Fidel")
(n2 / name, op, "Cuba")
(n3 / name, op, "Chavez")
(p / person, name, n / name)
(p2 / person, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(13,14,List(0),closer,grow-01,false), Span(14,15,List(2, 1),to,(close :degree more),false), Span(9,10,List(3),and,ally-01,false), Span(5,6,List(6, 5, 4),Chavez's,(person :name (name :op "Chavez")),false), Span(10,11,List(7),Chavez,and,false), Span(8,9,List(8),ally,major,false), Span(11,12,List(11, 10, 9),is,(person :name (name :op "Chavez")),false), Span(2,4,List(15, 14, 13, 12),Fidel Castro,(person :name (name :op "Fidel" :op "Castro")),false), Span(16,17,List(18, 17, 16),,(person :name (name :op "Castro")),false)),Map(2 -> more, 5 -> name, 12 -> person, 15 -> "Castro", 8 -> major, 18 -> "Castro", 7 -> and, 17 -> name, 1 -> close, 4 -> person, 11 -> "Chavez", 14 -> "Fidel", 6 -> "Chavez", 0 -> grow-01, 9 -> person, 16 -> person, 3 -> ally-01, 10 -> name, 13 -> name),Map(n -> name, m2 -> major, p2 -> person, n4 -> name, m -> more, g -> grow-01, p -> person, a -> ally-01, n3 -> name, p4 -> person, a2 -> and, c -> close, p3 -> person, n2 -> name))),[Ljava.lang.String;@7917fba2,Annotation([Ljava.lang.String;@3b54ebc9,[Ljava.lang.String;@7336be30,[Ljava.lang.String;@7fdefc7e),Annotation([Ljava.lang.String;@39d2d2cc,[Ljava.lang.String;@25c46c9c,[Ledu.cmu.lti.nlp.amr.Dependency;@63c5812a),Annotation([Ljava.lang.String;@6b70bc20,[Ljava.lang.String;@441b5730,[Ljava.lang.String;@423d63a3),Annotation([Ljava.lang.String;@dbe761f,[Ljava.lang.String;@63415a34,[Ledu.cmu.lti.nlp.amr.Entity;@7dfd23bb))
AMR:
(a / ally-01, ARG1, p3 / person)
(a / ally-01, ARG2, p / person)
(a / ally-01, mod, m2 / major)
(a2 / and, op, g / grow-01)
(c / close, degree, m / more)
(g / grow-01, ARG0, p2 / person)
(g / grow-01, ARG1, p / person)
(g / grow-01, ARG2, c / close)
(g / grow-01, ARG6, p4 / person)
(n / name, op, "Chavez")
(n2 / name, op, "Chavez")
(n3 / name, op, "Castro")
(n3 / name, op, "Fidel")
(n4 / name, op, "Castro")
(p / person, name, n / name)
(p2 / person, name, n2 / name)
(p3 / person, name, n3 / name)
(p4 / person, name, n4 / name)

Decoded in 754,996 microseconds
Sentence: Chavez's detractors in the US government say that it is even more troubling that Chavez's arms purchases and indoctrination of civilian militias could be part of a strategy to restructure Venezuelan democracy in the image of Cuban-style militarized socialism and foment leftist revolutions throughout South America.

Oracle Span 1:  and => and
Oracle Span 2:  arms => arm
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  civilian => civilian
Oracle Span 5:  could => possible
Oracle Span 6:  Cuban => (country :name (name :op "Cuba"))
Oracle Span 7:  democracy => democracy
Oracle Span 8:  detractors => (person :ARG0-of detract-01)
Oracle Span 9:  even => even
Oracle Span 10:  foment => foment-01
Oracle Span 11:  government => (government-organization :ARG0-of govern-01)
Oracle Span 12:  image => image
Oracle Span 13:  indoctrination => indoctrinate-01
Oracle Span 14:  leftist => leftist
Oracle Span 15:  militarized => militarize-00
Oracle Span 16:  militias => militia
Oracle Span 17:  more => more
Oracle Span 18:  purchases => purchase-01
Oracle Span 19:  restructure => restructure-01
Oracle Span 20:  revolutions => revolution
Oracle Span 21:  say => say-01
Oracle Span 22:  socialism => socialism
Oracle Span 23:  South America => (continent :name (name :op "America" :op "South"))
Oracle Span 24:  strategy => strategy
Oracle Span 25:  style => style
Oracle Span 26:  throughout => throughout
Oracle Span 27:  troubling => trouble-01
Oracle Span 28:  US => (country :name (name :op "US"))
Oracle Span 29:  Venezuelan => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "US"))
NER Entity: (thing :name (name :op "Venezuelan"))
NER Entity: (thing :name (name :op "Cuban" :op "-" :op "style"))
NER Entity: (country :name (name :op "South" :op "America"))
Spans:
Span 46-48:   => (continent :name (name :op "South" :op "America"))
Span 17-18:  and => arm
Span 15-16:  arms => (person :name (name :op "Chavez"))
Span 23-24:  be => militia
Span 0-1:  Chavez's => (person :name (name :op "Chavez"))
Span 22-23:  could => civilian
Span 36-37:  Cuban-style => image
Span 31-32:  democracy => restructure-01
Span 40-41:  foment => socialism
Span 5-6:  government => (country :name (name :op "US"))
Span 18-19:  indoctrination => purchase-01
Span 41-42:  leftist => and
Span 11-12:  more => even
Span 19-20:  of => and
Span 24-25:  part => possible
Span 29-30:  restructure => strategy
Span 6-7:  say => (government-organization :ARG0-of govern-01)
Span 44-45:  South => revolution
Span 13-14:  that => trouble-01
Span 7-8:  that => say-01
Span 33-34:  the => democracy
Span 43-44:  throughout => leftist
Span 12-13:  troubling => more

Langrangian relaxation converged after 39 iterations. Delta = 0.0
Oracle Span 19-20:  and => and
Oracle Span 17-18:  arms => arm
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 22-23:  civilian => civilian
Oracle Span 24-25:  could => possible
Oracle Span 38-39:  Cuban => (country :name (name :op "Cuba"))
Oracle Span 33-34:  democracy => democracy
Oracle Span 2-3:  detractors => (person :ARG0-of detract-01)
Oracle Span 11-12:  even => even
Oracle Span 44-45:  foment => foment-01
Oracle Span 6-7:  government => (government-organization :ARG0-of govern-01)
Oracle Span 36-37:  image => image
Oracle Span 20-21:  indoctrination => indoctrinate-01
Oracle Span 45-46:  leftist => leftist
Oracle Span 41-42:  militarized => militarize-00
Oracle Span 23-24:  militias => militia
Oracle Span 12-13:  more => more
Oracle Span 18-19:  purchases => purchase-01
Oracle Span 31-32:  restructure => restructure-01
Oracle Span 46-47:  revolutions => revolution
Oracle Span 7-8:  say => say-01
Oracle Span 42-43:  socialism => socialism
Oracle Span 48-50:  South America => (continent :name (name :op "America" :op "South"))
Oracle Span 29-30:  strategy => strategy
Oracle Span 40-41:  style => style
Oracle Span 47-48:  throughout => throughout
Oracle Span 13-14:  troubling => trouble-01
Oracle Span 5-6:  US => (country :name (name :op "US"))
Oracle Span 32-33:  Venezuelan => (country :name (name :op "Venezuela"))

Dependencies:
1	Chavez	_	NNP	NNP	_	3	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	detractors	_	NNS	NNS	_	8	nsubj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	the	_	DT	DT	_	7	det	_	_
6	US	_	NNP	NNP	_	7	nn	_	_
7	government	_	NN	NN	_	4	pobj	_	_
8	say	_	VBP	VBP	_	0	root	_	_
9	that	_	IN	IN	_	14	mark	_	_
10	it	_	PRP	PRP	_	14	nsubj	_	_
11	is	_	VBZ	VBZ	_	14	cop	_	_
12	even	_	RB	RB	_	14	advmod	_	_
13	more	_	RBR	RBR	_	14	advmod	_	_
14	troubling	_	JJ	JJ	_	8	ccomp	_	_
15	that	_	IN	IN	_	27	mark	_	_
16	Chavez	_	NNP	NNP	_	19	poss	_	_
17	's	_	POS	POS	_	16	possessive	_	_
18	arms	_	NNS	NNS	_	19	nn	_	_
19	purchases	_	NNS	NNS	_	27	nsubj	_	_
20	and	_	CC	CC	_	19	cc	_	_
21	indoctrination	_	NN	NN	_	19	conj	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	civilian	_	JJ	JJ	_	24	amod	_	_
24	militias	_	NNS	NNS	_	22	pobj	_	_
25	could	_	MD	MD	_	27	aux	_	_
26	be	_	VB	VB	_	27	cop	_	_
27	part	_	NN	NN	_	14	ccomp	_	_
28	of	_	IN	IN	_	27	prep	_	_
29	a	_	DT	DT	_	30	det	_	_
30	strategy	_	NN	NN	_	28	pobj	_	_
31	to	_	TO	TO	_	32	aux	_	_
32	restructure	_	VB	VB	_	30	vmod	_	_
33	Venezuelan	_	JJ	JJ	_	34	amod	_	_
34	democracy	_	NN	NN	_	32	dobj	_	_
35	in	_	IN	IN	_	32	prep	_	_
36	the	_	DT	DT	_	37	det	_	_
37	image	_	NN	NN	_	35	pobj	_	_
38	of	_	IN	IN	_	37	prep	_	_
39	Cuban-style	_	JJ	JJ	_	41	amod	_	_
40	militarized	_	JJ	JJ	_	41	amod	_	_
41	socialism	_	NN	NN	_	38	pobj	_	_
42	and	_	CC	CC	_	32	cc	_	_
43	foment	_	VB	VB	_	32	conj	_	_
44	leftist	_	JJ	JJ	_	45	amod	_	_
45	revolutions	_	NNS	NNS	_	43	dobj	_	_
46	throughout	_	IN	IN	_	43	prep	_	_
47	South	_	NNP	NNP	_	48	nn	_	_
48	America	_	NNP	NNP	_	46	pobj	_	_
49	.	_	.	.	_	8	punct	_	_

Oracle:
(a / and, op, i / indoctrinate-01)
(a / and, op, p3 / purchase-01)
(c / country, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / continent, name, n6 / name)
(d / detract-01, ARG0, p / person)
(d / detract-01, ARG1, p2 / person)
(d2 / democracy, mod, c3 / country)
(f / foment-01, ARG0, s2 / strategy)
(f / foment-01, ARG1, r2 / revolution)
(f / foment-01, path, t2 / throughout)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(i / indoctrinate-01, ARG1, m / militia)
(i2 / image, mod, s3 / socialism)
(m / militia, mod, c2 / civilian)
(m2 / militarize-00, ARG1, s3 / socialism)
(m3 / more, mod, e / even)
(n / name, op, "Chavez")
(n2 / name, op, "US")
(n3 / name, op, "Venezuela")
(n4 / name, op, "Cuba")
(n6 / name, op, "America")
(n6 / name, op, "South")
(p / person, location, g / government-organization)
(p2 / person, name, n / name)
(p3 / purchase-01, ARG0, p2 / person)
(p3 / purchase-01, ARG1, a2 / arm)
(r / restructure-01, ARG0, s2 / strategy)
(r / restructure-01, ARG1, d2 / democracy)
(r / restructure-01, manner, i2 / image)
(r2 / revolution, mod, l / leftist)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, t / trouble-01)
(s3 / socialism, mod, s4 / style)
(s4 / style, mod, c4 / country)
(t / trouble-01, degree, m3 / more)
(t2 / throughout, location, c5 / continent)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),could,civilian,false), Span(31,32,List(1),democracy,restructure-01,false), Span(15,16,List(4, 3, 2),arms,(person :name (name :op "Chavez")),false), Span(17,18,List(5),and,arm,false), Span(12,13,List(6),troubling,more,false), Span(13,14,List(7),that,trouble-01,false), Span(41,42,List(8),leftist,and,false), Span(24,25,List(9),part,possible,false), Span(18,19,List(10),indoctrination,purchase-01,false), Span(19,20,List(11),of,and,false), Span(36,37,List(12),Cuban-style,image,false), Span(29,30,List(13),restructure,strategy,false), Span(44,45,List(14),South,revolution,false), Span(46,48,List(18, 17, 16, 15),,(continent :name (name :op "South" :op "America")),false), Span(43,44,List(19),throughout,leftist,false), Span(6,7,List(21, 20),say,(government-organization :ARG0-of govern-01),false), Span(11,12,List(22),more,even,false), Span(23,24,List(23),be,militia,false), Span(33,34,List(24),the,democracy,false), Span(5,6,List(27, 26, 25),government,(country :name (name :op "US")),false), Span(7,8,List(28),that,say-01,false), Span(0,1,List(31, 30, 29),Chavez's,(person :name (name :op "Chavez")),false), Span(40,41,List(32),foment,socialism,false)),Map(30 -> name, 2 -> person, 5 -> arm, 27 -> "US", 12 -> image, 8 -> and, 15 -> continent, 21 -> govern-01, 18 -> "America", 24 -> democracy, 7 -> trouble-01, 1 -> restructure-01, 17 -> "South", 23 -> militia, 26 -> name, 4 -> "Chavez", 11 -> and, 32 -> socialism, 14 -> revolution, 29 -> person, 20 -> government-organization, 28 -> say-01, 6 -> more, 9 -> possible, 0 -> civilian, 22 -> even, 16 -> name, 19 -> leftist, 10 -> purchase-01, 3 -> name, 31 -> "Chavez", 25 -> country, 13 -> strategy),Map(e -> even, n -> name, s2 -> say-01, t -> trouble-01, m2 -> militia, p2 -> possible, n4 -> name, a3 -> and, s -> strategy, m -> more, d -> democracy, g2 -> govern-01, r2 -> revolution, p -> person, g -> government-organization, a -> arm, c3 -> country, n3 -> name, p4 -> person, i -> image, a2 -> and, r -> restructure-01, c -> civilian, s3 -> socialism, l -> leftist, p3 -> purchase-01, c2 -> continent, n2 -> name))),[Ljava.lang.String;@3e246fbe,Annotation([Ljava.lang.String;@109afc52,[Ljava.lang.String;@41b0e4aa,[Ljava.lang.String;@561f9eb0),Annotation([Ljava.lang.String;@4bdb5252,[Ljava.lang.String;@ce45f17,[Ledu.cmu.lti.nlp.amr.Dependency;@4ab76f95),Annotation([Ljava.lang.String;@60f7926d,[Ljava.lang.String;@71af05e3,[Ljava.lang.String;@5f1de026),Annotation([Ljava.lang.String;@2e27e797,[Ljava.lang.String;@721f6cc4,[Ledu.cmu.lti.nlp.amr.Entity;@7b16ef79))
AMR:
(a / arm, mod, c / civilian)
(a2 / and, op, a3 / and)
(a2 / and, op, p2 / possible)
(a3 / and, op, p3 / purchase-01)
(c2 / continent, name, n2 / name)
(c3 / country, name, n3 / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c3 / country)
(l / leftist, op, r / restructure-01)
(l / leftist, op, r2 / revolution)
(m / more, mod, e / even)
(m2 / militia, mod, c / civilian)
(n / name, op, "Chavez")
(n2 / name, op, "America")
(n2 / name, op, "South")
(n3 / name, op, "US")
(n4 / name, op, "Chavez")
(p / person, name, n / name)
(p3 / purchase-01, ARG0, p / person)
(p3 / purchase-01, ARG1, a / arm)
(p3 / purchase-01, ARG6, t / trouble-01)
(p3 / purchase-01, location, p4 / person)
(p4 / person, name, n4 / name)
(r / restructure-01, ARG0, s / strategy)
(r / restructure-01, ARG1, d / democracy)
(r / restructure-01, manner, i / image)
(r / restructure-01, time, s3 / socialism)
(r2 / revolution, calendar, c2 / continent)
(s2 / say-01, ARG0, g / government-organization)
(s2 / say-01, ARG1, t / trouble-01)
(t / trouble-01, ARG1, i / image)
(t / trouble-01, degree, m / more)

Decoded in 4,585,132 microseconds
Sentence: US military strategists say they are increasingly concerned that radical movements inspired by Chavez could foment such revolution.

Oracle Span 1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 2:  concerned => concern-01
Oracle Span 3:  could => possible
Oracle Span 4:  foment => foment-01
Oracle Span 5:  increasingly => increase-01
Oracle Span 6:  inspired => inspire-01
Oracle Span 7:  military => (have-org-role-91 :ARG1 military)
Oracle Span 8:  movements => move-02
Oracle Span 9:  radical => radical
Oracle Span 10:  revolution => revolution
Oracle Span 11:  say => say-01
Oracle Span 12:  strategists => strategize-01
Oracle Span 13:  such => such
Oracle Span 14:  US => (country :name (name :op "US"))
NER Entity: (country :name (name :op "US"))
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 13-14:  Chavez => (person :name (name :op "Chavez"))
Span 7-8:  concerned => concern-01
Span 15-16:  foment => foment-01
Span 6-7:  increasingly => increase-01
Span 11-12:  inspired => inspire-01
Span 1-2:  military => military
Span 10-11:  movements => movement
Span 9-10:  radical => radical
Span 17-18:  revolution. => revolution
Span 3-4:  say => say-01
Span 16-17:  such => such
Span 0-1:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 40 iterations. Delta = 0.0
Oracle Span 13-14:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 7-8:  concerned => concern-01
Oracle Span 14-15:  could => possible
Oracle Span 15-16:  foment => foment-01
Oracle Span 6-7:  increasingly => increase-01
Oracle Span 11-12:  inspired => inspire-01
Oracle Span 1-2:  military => (have-org-role-91 :ARG1 military)
Oracle Span 10-11:  movements => move-02
Oracle Span 9-10:  radical => radical
Oracle Span 17-18:  revolution => revolution
Oracle Span 3-4:  say => say-01
Oracle Span 2-3:  strategists => strategize-01
Oracle Span 16-17:  such => such
Oracle Span 0-1:  US => (country :name (name :op "US"))

Dependencies:
1	US	_	NNP	NNP	_	3	nn	_	_
2	military	_	JJ	JJ	_	3	amod	_	_
3	strategists	_	NNS	NNS	_	4	nsubj	_	_
4	say	_	VBP	VBP	_	0	root	_	_
5	they	_	PRP	PRP	_	8	nsubj	_	_
6	are	_	VBP	VBP	_	8	cop	_	_
7	increasingly	_	RB	RB	_	8	advmod	_	_
8	concerned	_	JJ	JJ	_	4	ccomp	_	_
9	that	_	IN	IN	_	16	mark	_	_
10	radical	_	JJ	JJ	_	11	amod	_	_
11	movements	_	NNS	NNS	_	16	nsubj	_	_
12	inspired	_	VBN	VBN	_	11	vmod	_	_
13	by	_	IN	IN	_	12	prep	_	_
14	Chavez	_	NNP	NNP	_	13	pobj	_	_
15	could	_	MD	MD	_	16	aux	_	_
16	foment	_	VB	VB	_	8	ccomp	_	_
17	such	_	JJ	JJ	_	18	amod	_	_
18	revolution	_	NN	NN	_	16	dobj	_	_
19	.	_	.	.	_	4	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / concern-01, ARG0, f / foment-01)
(f / foment-01, ARG0, m2 / move-02)
(f / foment-01, ARG1, r2 / revolution)
(f / foment-01, mod, p3 / possible)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG3, s2 / strategize-01)
(i / inspire-01, ARG0, p2 / person)
(i / inspire-01, ARG2, m2 / move-02)
(i2 / increase-01, ARG1, c2 / concern-01)
(m / military, mod, c / country)
(m2 / move-02, mod, r / radical)
(n / name, op, "US")
(n2 / name, op, "Chavez")
(p2 / person, name, n2 / name)
(r2 / revolution, mod, s3 / such)
(s / say-01, ARG1, c2 / concern-01)

Input(Some(Graph(null,ArrayBuffer(Span(3,4,List(0),say,say-01,false), Span(15,16,List(1),foment,foment-01,false), Span(16,17,List(2),such,such,false), Span(10,11,List(3),movements,movement,false), Span(13,14,List(6, 5, 4),Chavez,(person :name (name :op "Chavez")),false), Span(7,8,List(7),concerned,concern-01,false), Span(17,18,List(8),revolution.,revolution,false), Span(11,12,List(9),inspired,inspire-01,false), Span(6,7,List(10),increasingly,increase-01,false), Span(1,2,List(11),military,military,false), Span(9,10,List(12),radical,radical,false), Span(0,1,List(15, 14, 13),US,(country :name (name :op "US")),false)),Map(2 -> such, 5 -> name, 12 -> radical, 15 -> "US", 8 -> revolution, 7 -> concern-01, 1 -> foment-01, 4 -> person, 11 -> military, 14 -> name, 6 -> "Chavez", 0 -> say-01, 9 -> inspire-01, 3 -> movement, 10 -> increase-01, 13 -> country),Map(n -> name, s2 -> such, m2 -> military, s -> say-01, m -> movement, p -> person, r2 -> radical, i2 -> increase-01, r -> revolution, i -> inspire-01, c -> concern-01, f -> foment-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@51e233,Annotation([Ljava.lang.String;@3a366c3c,[Ljava.lang.String;@5b008f97,[Ljava.lang.String;@5c56208),Annotation([Ljava.lang.String;@a8a48f9,[Ljava.lang.String;@3d48218,[Ledu.cmu.lti.nlp.amr.Dependency;@5c77d9c2),Annotation([Ljava.lang.String;@720c2566,[Ljava.lang.String;@2a19765e,[Ljava.lang.String;@dfaf547),Annotation([Ljava.lang.String;@6fa184f3,[Ljava.lang.String;@7c15ab74,[Ledu.cmu.lti.nlp.amr.Entity;@1d5f892e))
AMR:
(c / concern-01, ARG0, f / foment-01)
(c / concern-01, ARG1, m2 / military)
(c2 / country, name, n2 / name)
(f / foment-01, ARG0, m / movement)
(f / foment-01, ARG1, r / revolution)
(i / inspire-01, ARG0, p / person)
(i / inspire-01, ARG1, m / movement)
(i2 / increase-01, ARG1, c / concern-01)
(m / movement, mod, r2 / radical)
(m2 / military, mod, c2 / country)
(n / name, op, "Chavez")
(n2 / name, op, "US")
(p / person, name, n / name)
(r / revolution, mod, s2 / such)
(s / say-01, ARG1, c / concern-01)

Decoded in 1,250,180 microseconds
Sentence: The political mainstream in Latin America has shifted leftward since the late 1990s.

Oracle Span 1:  1990s => 1990
Oracle Span 2:  late => late
Oracle Span 3:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 4:  leftward => leftward
Oracle Span 5:  mainstream => mainstream
Oracle Span 6:  political => politics
Oracle Span 7:  shifted => shift-01
Oracle Span 8:  since => since
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 4-6:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Span 2-3:  mainstream => mainstream
Span 1-2:  political => politics
Span 7-8:  shifted => shift-01
Span 9-10:  since => since
Span 0-12:  The political mainstream in Latin America has shifted leftward since the late => (date-entity :time late :time 1990)

Langrangian relaxation converged after 33 iterations. Delta = 0.0
Oracle Span 12-13:  1990s => 1990
Oracle Span 11-12:  late => late
Oracle Span 4-6:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 8-9:  leftward => leftward
Oracle Span 2-3:  mainstream => mainstream
Oracle Span 1-2:  political => politics
Oracle Span 7-8:  shifted => shift-01
Oracle Span 9-10:  since => since

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	political	_	JJ	JJ	_	3	amod	_	_
3	mainstream	_	NN	NN	_	8	nsubj	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	Latin	_	NNP	NNP	_	6	nn	_	_
6	America	_	NNP	NNP	_	4	pobj	_	_
7	has	_	VBZ	VBZ	_	8	aux	_	_
8	shifted	_	VBN	VBN	_	0	root	_	_
9	leftward	_	VBN	VBN	_	8	dep	_	_
10	since	_	IN	IN	_	9	prep	_	_
11	the	_	DT	DT	_	13	det	_	_
12	late	_	JJ	JJ	_	13	amod	_	_
13	1990s	_	NNS	NNS	_	10	pobj	_	_
14	.	_	.	.	_	8	punct	_	_

Oracle:
(m / mainstream, location, w / world-region)
(m / mainstream, mod, p / politics)
(n / name, op, "America")
(n / name, op, "Latin")
(s / shift-01, ARG1, m / mainstream)
(s / shift-01, ARG2, l2 / leftward)
(s / shift-01, time, s2 / since)
(s2 / since, op, l3 / late)
(w / world-region, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(4,6,List(3, 2, 1, 0),Latin America,(world-region :name (name :op "America" :op "Latin")),false), Span(9,10,List(4),since,since,false), Span(1,2,List(5),political,politics,false), Span(2,3,List(6),mainstream,mainstream,false), Span(7,8,List(7),shifted,shift-01,false), Span(0,12,List(10, 9, 8),The political mainstream in Latin America has shifted leftward since the late,(date-entity :time late :time 1990),false)),Map(2 -> "America", 5 -> politics, 8 -> date-entity, 7 -> shift-01, 1 -> name, 4 -> since, 6 -> mainstream, 9 -> late, 0 -> world-region, 10 -> 1990, 3 -> "Latin"),Map(n -> name, w -> world-region, s2 -> shift-01, s -> since, d -> date-entity, m -> mainstream, 1 -> 1990, p -> politics, l -> late))),[Ljava.lang.String;@4d9ec29a,Annotation([Ljava.lang.String;@5c7fe5d,[Ljava.lang.String;@7ab908ea,[Ljava.lang.String;@4ba94c9a),Annotation([Ljava.lang.String;@7018dd67,[Ljava.lang.String;@4a97f02f,[Ledu.cmu.lti.nlp.amr.Dependency;@78db4fcf),Annotation([Ljava.lang.String;@791711d2,[Ljava.lang.String;@4f520872,[Ljava.lang.String;@3a318f3f),Annotation([Ljava.lang.String;@18360a81,[Ljava.lang.String;@596e11d4,[Ledu.cmu.lti.nlp.amr.Entity;@6208313))
AMR:
(d / date-entity, time, 1 / 1990)
(d / date-entity, time, l / late)
(m / mainstream, location, w / world-region)
(m / mainstream, mod, p / politics)
(n / name, op, "America")
(n / name, op, "Latin")
(s2 / shift-01, ARG1, m / mainstream)
(s2 / shift-01, ARG6, d / date-entity)
(s2 / shift-01, time, s / since)
(w / world-region, name, n / name)

Decoded in 790,819 microseconds
Sentence: This leftward shift is largely in reaction to the perceived failure of free-market economics.

Oracle Span 1:  economics => economics
Oracle Span 2:  failure => fail-01
Oracle Span 3:  free => free
Oracle Span 4:  largely => large
Oracle Span 5:  leftward => leftward
Oracle Span 6:  market => market
Oracle Span 7:  perceived => perceive-01
Oracle Span 8:  reaction => react-01
Oracle Span 9:  shift => shift-01
Oracle Span 10:  This => this
Spans:
Span 13-14:  economics. => economics
Span 10-11:  failure => allure-01
Span 4-5:  largely => large
Span 9-10:  perceived => perceive-01
Span 6-7:  reaction => retract-01
Span 2-3:  shift => shift-01
Span 0-1:  This => this

Langrangian relaxation converged after 27 iterations. Delta = 0.0
Oracle Span 15-16:  economics => economics
Oracle Span 10-11:  failure => fail-01
Oracle Span 12-13:  free => free
Oracle Span 4-5:  largely => large
Oracle Span 1-2:  leftward => leftward
Oracle Span 14-15:  market => market
Oracle Span 9-10:  perceived => perceive-01
Oracle Span 6-7:  reaction => react-01
Oracle Span 2-3:  shift => shift-01
Oracle Span 0-1:  This => this

Dependencies:
1	This	_	DT	DT	_	3	det	_	_
2	leftward	_	JJ	JJ	_	3	amod	_	_
3	shift	_	NN	NN	_	4	nsubj	_	_
4	is	_	VBZ	VBZ	_	0	root	_	_
5	largely	_	RB	RB	_	4	advmod	_	_
6	in	_	IN	IN	_	4	prep	_	_
7	reaction	_	NN	NN	_	6	pobj	_	_
8	to	_	TO	TO	_	4	prep	_	_
9	the	_	DT	DT	_	11	det	_	_
10	perceived	_	VBN	VBN	_	11	amod	_	_
11	failure	_	NN	NN	_	8	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	free-market	_	JJ	JJ	_	14	amod	_	_
14	economics	_	NNS	NNS	_	12	pobj	_	_
15	.	_	.	.	_	4	punct	_	_

Oracle:
(e / economics, mod, m / market)
(f / fail-01, ARG1, e / economics)
(m / market, mod, f2 / free)
(p / perceive-01, ARG1, f / fail-01)
(r / react-01, ARG1, f / fail-01)
(r / react-01, ARG2, s / shift-01)
(r / react-01, manner, l2 / large)
(s / shift-01, ARG2, l / leftward)
(s / shift-01, mod, t / this)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),reaction,retract-01,false), Span(0,1,List(1),This,this,false), Span(13,14,List(2),economics.,economics,false), Span(9,10,List(3),perceived,perceive-01,false), Span(4,5,List(4),largely,large,false), Span(10,11,List(5),failure,allure-01,false), Span(2,3,List(6),shift,shift-01,false)),Map(2 -> economics, 5 -> allure-01, 1 -> this, 4 -> large, 6 -> shift-01, 0 -> retract-01, 3 -> perceive-01),Map(e -> economics, t -> this, s -> shift-01, p -> perceive-01, a -> allure-01, r -> retract-01, l -> large))),[Ljava.lang.String;@7c190de6,Annotation([Ljava.lang.String;@55e91357,[Ljava.lang.String;@4b6130dc,[Ljava.lang.String;@3187a17),Annotation([Ljava.lang.String;@37da31af,[Ljava.lang.String;@2a34ffa8,[Ledu.cmu.lti.nlp.amr.Dependency;@6891cde2),Annotation([Ljava.lang.String;@2899ca25,[Ljava.lang.String;@4ea8c1d0,[Ljava.lang.String;@43ecae12),Annotation([Ljava.lang.String;@25f48550,[Ljava.lang.String;@435abb29,[Ledu.cmu.lti.nlp.amr.Entity;@4b7444d3))
AMR:
(p / perceive-01, ARG1, a / allure-01)
(r / retract-01, ARG1, a / allure-01)
(r / retract-01, ARG2, s / shift-01)
(r / retract-01, manner, l / large)
(s / shift-01, ARG1, e / economics)
(s / shift-01, mod, t / this)

Decoded in 369,186 microseconds
Sentence: Leftists have been elected to lead Brazil, Argentina, Chile, Uruguay, Ecuador and Venezuela.

Oracle Span 1:  and => and
Oracle Span 2:  Argentina => (country :name (name :op "Argentina"))
Oracle Span 3:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 4:  Chile => (country :name (name :op "Chile"))
Oracle Span 5:  Ecuador => (country :name (name :op "Ecuador"))
Oracle Span 6:  elected => elect-01
Oracle Span 7:  lead => lead-02
Oracle Span 8:  Leftists => leftist
Oracle Span 9:  Uruguay => (country :name (name :op "Uruguay"))
Oracle Span 10:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "Brazil"))
NER Entity: (country :name (name :op "Argentina"))
NER Entity: (country :name (name :op "Chile"))
NER Entity: (country :name (name :op "Uruguay"))
NER Entity: (country :name (name :op "Ecuador"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 14-15:   => (country :name (name :op "Ecuador"))
Span 15-16:   => and
Span 16-17:   => (country :name (name :op "Venezuela"))
Span 6-7:  Brazil, => (country :name (name :op "Brazil"))
Span 8-9:  Chile, => (country :name (name :op "Argentina"))
Span 10-11:  Ecuador => (aircraft-type :name (name :op "ALH"))
Span 3-4:  elected => elect-01
Span 5-6:  lead => lead-01
Span 0-1:  Leftists => leftist

Langrangian relaxation converged after 15 iterations. Delta = 0.0
Oracle Span 15-16:  and => and
Oracle Span 8-9:  Argentina => (country :name (name :op "Argentina"))
Oracle Span 6-7:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 10-11:  Chile => (country :name (name :op "Chile"))
Oracle Span 14-15:  Ecuador => (country :name (name :op "Ecuador"))
Oracle Span 3-4:  elected => elect-01
Oracle Span 5-6:  lead => lead-02
Oracle Span 0-1:  Leftists => leftist
Oracle Span 12-13:  Uruguay => (country :name (name :op "Uruguay"))
Oracle Span 16-17:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Leftists	_	NNS	NNS	_	4	nsubjpass	_	_
2	have	_	VBP	VBP	_	4	aux	_	_
3	been	_	VBN	VBN	_	4	auxpass	_	_
4	elected	_	VBN	VBN	_	0	root	_	_
5	to	_	TO	TO	_	4	prep	_	_
6	lead	_	JJ	JJ	_	7	amod	_	_
7	Brazil	_	NNP	NNP	_	5	pobj	_	_
8	,	_	,	,	_	7	punct	_	_
9	Argentina	_	NNP	NNP	_	7	conj	_	_
10	,	_	,	,	_	7	punct	_	_
11	Chile	_	NNP	NNP	_	7	conj	_	_
12	,	_	,	,	_	7	punct	_	_
13	Uruguay	_	NNP	NNP	_	7	conj	_	_
14	,	_	,	,	_	7	punct	_	_
15	Ecuador	_	NNP	NNP	_	7	conj	_	_
16	and	_	CC	CC	_	7	cc	_	_
17	Venezuela	_	NNP	NNP	_	7	conj	_	_
18	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, c / country)
(a / and, op, c2 / country)
(a / and, op, c3 / country)
(a / and, op, c4 / country)
(a / and, op, c5 / country)
(a / and, op, c6 / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, name, n4 / name)
(c5 / country, name, n5 / name)
(c6 / country, name, n6 / name)
(e / elect-01, ARG1, l / leftist)
(e / elect-01, ARG2, l2 / lead-02)
(l2 / lead-02, ARG0, l / leftist)
(l2 / lead-02, ARG1, a / and)
(n / name, op, "Brazil")
(n2 / name, op, "Argentina")
(n3 / name, op, "Chile")
(n4 / name, op, "Uruguay")
(n5 / name, op, "Ecuador")
(n6 / name, op, "Venezuela")

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(2, 1, 0),Chile,,(country :name (name :op "Argentina")),false), Span(10,11,List(5, 4, 3),Ecuador,(aircraft-type :name (name :op "ALH")),false), Span(0,1,List(6),Leftists,leftist,false), Span(14,15,List(9, 8, 7),,(country :name (name :op "Ecuador")),false), Span(6,7,List(12, 11, 10),Brazil,,(country :name (name :op "Brazil")),false), Span(5,6,List(13),lead,lead-01,false), Span(15,16,List(14),,and,false), Span(3,4,List(15),elected,elect-01,false), Span(16,17,List(18, 17, 16),,(country :name (name :op "Venezuela")),false)),Map(2 -> "Argentina", 5 -> "ALH", 12 -> "Brazil", 15 -> elect-01, 8 -> name, 18 -> "Venezuela", 7 -> country, 17 -> name, 1 -> name, 4 -> name, 11 -> name, 14 -> and, 6 -> leftist, 0 -> country, 9 -> "Ecuador", 16 -> country, 3 -> aircraft-type, 10 -> country, 13 -> lead-01),Map(e -> elect-01, n -> name, n4 -> name, c4 -> country, a -> aircraft-type, n3 -> name, c3 -> country, l2 -> lead-01, a2 -> and, c -> country, l -> leftist, n2 -> name, c2 -> country, n5 -> name))),[Ljava.lang.String;@5f13bb0e,Annotation([Ljava.lang.String;@54714da6,[Ljava.lang.String;@452d7c4b,[Ljava.lang.String;@41575ff2),Annotation([Ljava.lang.String;@35e471d,[Ljava.lang.String;@5d9c26ad,[Ledu.cmu.lti.nlp.amr.Dependency;@73fdd671),Annotation([Ljava.lang.String;@82ebf33,[Ljava.lang.String;@79b97784,[Ljava.lang.String;@452c8f50),Annotation([Ljava.lang.String;@58ff87da,[Ljava.lang.String;@25557cd1,[Ledu.cmu.lti.nlp.amr.Entity;@17622aa8))
AMR:
(a / aircraft-type, name, n2 / name)
(a2 / and, op, a / aircraft-type)
(a2 / and, op, c / country)
(a2 / and, op, c2 / country)
(a2 / and, op, c3 / country)
(a2 / and, op, c4 / country)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(c4 / country, name, n5 / name)
(e / elect-01, ARG1, l / leftist)
(l2 / lead-01, ARG0, l / leftist)
(l2 / lead-01, ARG1, a2 / and)
(n / name, op, "Argentina")
(n2 / name, op, "ALH")
(n3 / name, op, "Ecuador")
(n4 / name, op, "Brazil")
(n5 / name, op, "Venezuela")

Decoded in 875,062 microseconds
Sentence: Chavez's supporters at home counter that the United States has a century-long history of open as well as covert armed intervention in Latin America's domestic politics and say that it has no right to question Venezuela's defense preparations.

Oracle Span 1:  and => and
Oracle Span 2:  armed => arm-01
Oracle Span 3:  century => (temporal-quantity :unit century)
Oracle Span 4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5:  counter => counter-01
Oracle Span 6:  covert => covert
Oracle Span 7:  defense => defend-01
Oracle Span 8:  domestic => domestic
Oracle Span 9:  has => have-03
Oracle Span 10:  history => history
Oracle Span 11:  home => home
Oracle Span 12:  intervention => intervene-01
Oracle Span 13:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 14:  no => -
Oracle Span 15:  open => open
Oracle Span 16:  politics => politics
Oracle Span 17:  preparations => prepare-02
Oracle Span 18:  question => question-01
Oracle Span 19:  say => say-01
Oracle Span 20:  supporters => (person :ARG0-of support-01)
Oracle Span 21:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 22:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 39-40:   => descend-01
Span 40-41:   => predominate-01
Span 23-25:  America's domestic => (world-region :name (name :op "America" :op "Latin"))
Span 26-27:  and => domestic
Span 19-20:  armed => covert
Span 15-16:  as => open-01
Span 2-3:  at => (person :ARG0-of support-01)
Span 0-1:  Chavez's => (person :name (name :op "Chavez"))
Span 4-5:  counter => home
Span 36-37:  defense => question-01
Span 21-22:  in => intervene-01
Span 20-21:  intervention => arm
Span 29-30:  it => say-01
Span 13-14:  of => history
Span 37-38:  preparations. => (country :name (name :op "Venezuela"))
Span 27-28:  say => politics
Span 8-10:  States has => (country :name (name :op "United" :op "States"))
Span 5-6:  that => counter-01
Span 28-29:  that => and

Langrangian relaxation converged after 41 iterations. Delta = 0.0
Oracle Span 30-31:  and => and
Oracle Span 22-23:  armed => arm-01
Oracle Span 12-13:  century => (temporal-quantity :unit century)
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5-6:  counter => counter-01
Oracle Span 21-22:  covert => covert
Oracle Span 41-42:  defense => defend-01
Oracle Span 28-29:  domestic => domestic
Oracle Span 10-11:  has => have-03
Oracle Span 15-16:  history => history
Oracle Span 4-5:  home => home
Oracle Span 23-24:  intervention => intervene-01
Oracle Span 25-27:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 35-36:  no => -
Oracle Span 17-18:  open => open
Oracle Span 29-30:  politics => politics
Oracle Span 42-43:  preparations => prepare-02
Oracle Span 38-39:  question => question-01
Oracle Span 31-32:  say => say-01
Oracle Span 2-3:  supporters => (person :ARG0-of support-01)
Oracle Span 8-10:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 39-40:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Chavez	_	NNP	NNP	_	3	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	supporters	_	NNS	NNS	_	6	nsubj	_	_
4	at	_	IN	IN	_	6	advmod	_	_
5	home	_	NN	NN	_	4	dep	_	_
6	counter	_	VBP	VBP	_	0	root	_	_
7	that	_	IN	IN	_	11	mark	_	_
8	the	_	DT	DT	_	10	det	_	_
9	United	_	NNP	NNP	_	10	nn	_	_
10	States	_	NNPS	NNPS	_	11	nsubj	_	_
11	has	_	VBZ	VBZ	_	6	ccomp	_	_
12	a	_	DT	DT	_	14	det	_	_
13	century-long	_	JJ	JJ	_	14	amod	_	_
14	history	_	NN	NN	_	11	dobj	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	open	_	JJ	JJ	_	15	pobj	_	_
17	as	_	RB	RB	_	18	advmod	_	_
18	well	_	RB	RB	_	14	cc	_	_
19	as	_	IN	IN	_	18	mwe	_	_
20	covert	_	JJ	JJ	_	22	amod	_	_
21	armed	_	JJ	JJ	_	22	amod	_	_
22	intervention	_	NN	NN	_	14	conj	_	_
23	in	_	IN	IN	_	22	prep	_	_
24	Latin	_	NNP	NNP	_	25	nn	_	_
25	America	_	NNP	NNP	_	28	poss	_	_
26	's	_	POS	POS	_	25	possessive	_	_
27	domestic	_	JJ	JJ	_	28	amod	_	_
28	politics	_	NNS	NNS	_	23	pobj	_	_
29	and	_	CC	CC	_	11	cc	_	_
30	say	_	VBP	VBP	_	11	conj	_	_
31	that	_	IN	IN	_	33	mark	_	_
32	it	_	PRP	PRP	_	33	nsubj	_	_
33	has	_	VBZ	VBZ	_	30	ccomp	_	_
34	no	_	RB	RB	_	35	neg	_	_
35	right	_	RB	RB	_	33	advmod	_	_
36	to	_	TO	TO	_	37	aux	_	_
37	question	_	VB	VB	_	33	xcomp	_	_
38	Venezuela	_	NNP	NNP	_	41	poss	_	_
39	's	_	POS	POS	_	38	possessive	_	_
40	defense	_	NN	NN	_	41	nn	_	_
41	preparations	_	NNS	NNS	_	37	dobj	_	_
42	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, c / counter-01)
(a / and, op, s / say-01)
(a3 / arm-01, ARG1, i / intervene-01)
(c / counter-01, ARG0, p / person)
(c / counter-01, ARG2, h2 / have-03)
(c2 / country, name, n2 / name)
(c4 / country, name, n4 / name)
(h2 / have-03, ARG0, c2 / country)
(h2 / have-03, ARG1, h3 / history)
(h3 / history, duration, t / temporal-quantity)
(i / intervene-01, ARG0, c2 / country)
(i / intervene-01, ARG1, p3 / politics)
(i / intervene-01, mod, o / open)
(n / name, op, "Chavez")
(n2 / name, op, "States")
(n2 / name, op, "United")
(n3 / name, op, "America")
(n3 / name, op, "Latin")
(n4 / name, op, "Venezuela")
(p / person, location, h / home)
(p2 / person, name, n / name)
(p3 / politics, mod, d / domestic)
(p3 / politics, poss, w / world-region)
(p4 / prepare-02, ARG0, c4 / country)
(p4 / prepare-02, ARG2, d2 / defend-01)
(q / question-01, ARG0, c2 / country)
(q / question-01, ARG1, p4 / prepare-02)
(s / say-01, ARG0, p / person)
(s2 / support-01, ARG0, p / person)
(s2 / support-01, ARG1, p2 / person)
(t / temporal-quantity, unit, c5 / century)
(w / world-region, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(37,38,List(2, 1, 0),preparations.,(country :name (name :op "Venezuela")),false), Span(5,6,List(3),that,counter-01,false), Span(39,40,List(4),,descend-01,false), Span(23,25,List(8, 7, 6, 5),America's domestic,(world-region :name (name :op "America" :op "Latin")),false), Span(8,10,List(12, 11, 10, 9),States has,(country :name (name :op "United" :op "States")),false), Span(4,5,List(13),counter,home,false), Span(26,27,List(14),and,domestic,false), Span(27,28,List(15),say,politics,false), Span(15,16,List(16),as,open-01,false), Span(19,20,List(17),armed,covert,false), Span(20,21,List(18),intervention,arm,false), Span(2,3,List(20, 19),at,(person :ARG0-of support-01),false), Span(13,14,List(21),of,history,false), Span(40,41,List(22),,predominate-01,false), Span(0,1,List(25, 24, 23),Chavez's,(person :name (name :op "Chavez")),false), Span(28,29,List(26),that,and,false), Span(29,30,List(27),it,say-01,false), Span(21,22,List(28),in,intervene-01,false), Span(36,37,List(29),defense,question-01,false)),Map(2 -> "Venezuela", 5 -> world-region, 27 -> say-01, 12 -> "States", 8 -> "Latin", 15 -> politics, 21 -> history, 18 -> arm, 24 -> name, 7 -> "America", 1 -> name, 17 -> covert, 23 -> person, 26 -> and, 4 -> descend-01, 11 -> "United", 14 -> domestic, 29 -> question-01, 20 -> support-01, 28 -> intervene-01, 6 -> name, 9 -> country, 0 -> country, 22 -> predominate-01, 16 -> open-01, 19 -> person, 10 -> name, 3 -> counter-01, 25 -> "Chavez", 13 -> home),Map(n -> name, w -> world-region, h -> home, q -> question-01, s2 -> say-01, h2 -> history, p2 -> person, n4 -> name, c4 -> covert, s -> support-01, d -> descend-01, p -> politics, a -> arm, c3 -> country, n3 -> name, p4 -> person, d2 -> domestic, i -> intervene-01, a2 -> and, c -> country, o -> open-01, p3 -> predominate-01, c2 -> counter-01, n2 -> name))),[Ljava.lang.String;@4582c29f,Annotation([Ljava.lang.String;@5c6a08f9,[Ljava.lang.String;@1620084e,[Ljava.lang.String;@625d271c),Annotation([Ljava.lang.String;@319887f2,[Ljava.lang.String;@3db96cf8,[Ledu.cmu.lti.nlp.amr.Dependency;@2bcd7179),Annotation([Ljava.lang.String;@2023d6db,[Ljava.lang.String;@5571723a,[Ljava.lang.String;@23590ac0),Annotation([Ljava.lang.String;@635fe16b,[Ljava.lang.String;@5d7466d5,[Ledu.cmu.lti.nlp.amr.Entity;@34a2fe3))
AMR:
(a / arm, mod, c4 / covert)
(c / country, name, n / name)
(c2 / counter-01, ARG0, p2 / person)
(c2 / counter-01, ARG1, o / open-01)
(c3 / country, name, n3 / name)
(d / descend-01, ARG1, c / country)
(i / intervene-01, ARG0, c / country)
(i / intervene-01, ARG1, w / world-region)
(i / intervene-01, ARG6, a / arm)
(n / name, op, "Venezuela")
(n2 / name, op, "America")
(n2 / name, op, "Latin")
(n3 / name, op, "States")
(n3 / name, op, "United")
(n4 / name, op, "Chavez")
(o / open-01, ARG0, c3 / country)
(o / open-01, ARG1, c4 / covert)
(o / open-01, mod, h2 / history)
(p2 / person, location, h / home)
(p3 / predominate-01, ARG1, d / descend-01)
(p4 / person, name, n4 / name)
(q / question-01, ARG1, o / open-01)
(s / support-01, ARG0, p2 / person)
(s / support-01, ARG1, p4 / person)
(s2 / say-01, ARG0, d2 / domestic)
(s2 / say-01, ARG6, p / politics)
(s2 / say-01, mod, a2 / and)
(w / world-region, name, n2 / name)
(w / world-region, op, s2 / say-01)

Decoded in 3,681,665 microseconds
Sentence: Carlos Roque Espinoza Leon said that Venezuelans never ask what the US Marines are doing.

Oracle Span 1:  ask => ask-01
Oracle Span 2:  Carlos Roque Espinoza Leon => (person :name (name :op "Leon" :op "Espinoza" :op "Roque" :op "Carlos"))
Oracle Span 3:  doing => (thing :ARG1-of do-02)
Oracle Span 4:  Marines => (have-org-role-91 :ARG2 marine)
Oracle Span 5:  said => say-01
Oracle Span 6:  US => (country :name (name :op "US"))
Oracle Span 7:  Venezuelans => (person :mod (country :name (name :op "Venezuela")))
NER Entity: (person :name (name :op "Carlos" :op "Roque" :op "Espinoza" :op "Leon"))
NER Entity: (organization :name (name :op "US" :op "Marines"))
NER Entity: (thing :name (name :op "Venezuelans"))
Spans:
Span 8-9:  ask => ask-01
Span 0-4:  Carlos Roque Espinoza Leon => (person :name (name :op "Carlos" :op "Roque" :op "Espinoza" :op "Leon"))
Span 14-15:  doing. => do-02
Span 12-13:  Marines => (military :name (name :op "Marines"))
Span 4-5:  said => say-01
Span 11-12:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 8-9:  ask => ask-01
Oracle Span 0-4:  Carlos Roque Espinoza Leon => (person :name (name :op "Leon" :op "Espinoza" :op "Roque" :op "Carlos"))
Oracle Span 14-15:  doing => (thing :ARG1-of do-02)
Oracle Span 12-13:  Marines => (have-org-role-91 :ARG2 marine)
Oracle Span 4-5:  said => say-01
Oracle Span 11-12:  US => (country :name (name :op "US"))
Oracle Span 6-7:  Venezuelans => (person :mod (country :name (name :op "Venezuela")))

Dependencies:
1	Carlos	_	NNP	NNP	_	4	nn	_	_
2	Roque	_	NNP	NNP	_	4	nn	_	_
3	Espinoza	_	NNP	NNP	_	4	nn	_	_
4	Leon	_	NNP	NNP	_	5	nsubj	_	_
5	said	_	VBD	VBD	_	0	root	_	_
6	that	_	IN	IN	_	9	mark	_	_
7	Venezuelans	_	NNP	NNP	_	9	nsubj	_	_
8	never	_	RB	RB	_	9	neg	_	_
9	ask	_	VBP	VBP	_	5	ccomp	_	_
10	what	_	WP	WP	_	15	dobj	_	_
11	the	_	DT	DT	_	13	det	_	_
12	US	_	NNP	NNP	_	13	nn	_	_
13	Marines	_	NNPS	NNPS	_	15	nsubj	_	_
14	are	_	VBP	VBP	_	15	aux	_	_
15	doing	_	VBG	VBG	_	9	ccomp	_	_
16	.	_	.	.	_	5	punct	_	_

Oracle:
(a / ask-01, ARG0, p2 / person)
(a / ask-01, ARG1, t / thing)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(d / do-02, ARG1, t / thing)
(h / have-org-role-91, ARG1, c2 / country)
(h / have-org-role-91, ARG2, m / marine)
(n / name, op, "Carlos")
(n / name, op, "Espinoza")
(n / name, op, "Leon")
(n / name, op, "Roque")
(n2 / name, op, "Venezuela")
(n3 / name, op, "US")
(p / person, name, n / name)
(p2 / person, mod, c / country)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a / ask-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),doing.,do-02,false), Span(0,4,List(6, 5, 4, 3, 2, 1),Carlos Roque Espinoza Leon,(person :name (name :op "Carlos" :op "Roque" :op "Espinoza" :op "Leon")),false), Span(12,13,List(9, 8, 7),Marines,(military :name (name :op "Marines")),false), Span(4,5,List(10),said,say-01,false), Span(8,9,List(11),ask,ask-01,false), Span(11,12,List(14, 13, 12),US,(country :name (name :op "US")),false)),Map(2 -> name, 5 -> "Espinoza", 12 -> country, 8 -> name, 7 -> military, 1 -> person, 4 -> "Roque", 11 -> ask-01, 14 -> "US", 6 -> "Leon", 0 -> do-02, 9 -> "Marines", 3 -> "Carlos", 10 -> say-01, 13 -> name),Map(n -> name, s -> say-01, m -> military, d -> do-02, p -> person, n3 -> name, a -> ask-01, c -> country, n2 -> name))),[Ljava.lang.String;@7ee43ca,Annotation([Ljava.lang.String;@6a2f656d,[Ljava.lang.String;@a2cedc0,[Ljava.lang.String;@641f4fd5),Annotation([Ljava.lang.String;@111aa08f,[Ljava.lang.String;@fbbcc,[Ledu.cmu.lti.nlp.amr.Dependency;@6da004e0),Annotation([Ljava.lang.String;@735f8f66,[Ljava.lang.String;@3705575a,[Ljava.lang.String;@4a294bad),Annotation([Ljava.lang.String;@27c3c10c,[Ljava.lang.String;@28e85e2d,[Ledu.cmu.lti.nlp.amr.Entity;@35ca63ed))
AMR:
(a / ask-01, ARG1, d / do-02)
(c / country, name, n3 / name)
(d / do-02, ARG1, m / military)
(m / military, mod, c / country)
(m / military, name, n2 / name)
(n / name, op, "Carlos")
(n / name, op, "Espinoza")
(n / name, op, "Leon")
(n / name, op, "Roque")
(n2 / name, op, "Marines")
(n3 / name, op, "US")
(p / person, name, n / name)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a / ask-01)

Decoded in 225,590 microseconds
Sentence: Espinoza Leon is a pro-Chavez defense specialist who serves in Venezuela's National Assembly.

Oracle Span 1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 2:  defense => defend-01
Oracle Span 3:  Espinoza Leon => (person :name (name :op "Leon" :op "Espinoza"))
Oracle Span 4:  National Assembly => (have-org-role-91 :ARG1 (government-organization :name (name :op "Assembly" :op "National")))
Oracle Span 5:  serves => serve-01
Oracle Span 6:  specialist => specialize-01
Oracle Span 7:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Espinoza" :op "Leon"))
NER Entity: (organization :name (name :op "National" :op "Assembly"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 12-13:  Assembly. => "National"
Span 5-6:  defense => defense
Span 0-2:  Espinoza Leon => (person :name (name :op "Espinoza" :op "Leon"))
Span 8-9:  serves => serve-01
Span 6-7:  specialist => specialize-01
Span 10-11:  Venezuela's => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 29 iterations. Delta = 0.0
Oracle Span 6-7:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 7-8:  defense => defend-01
Oracle Span 0-2:  Espinoza Leon => (person :name (name :op "Leon" :op "Espinoza"))
Oracle Span 14-16:  National Assembly => (have-org-role-91 :ARG1 (government-organization :name (name :op "Assembly" :op "National")))
Oracle Span 10-11:  serves => serve-01
Oracle Span 8-9:  specialist => specialize-01
Oracle Span 12-13:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Espinoza	_	NNP	NNP	_	2	nn	_	_
2	Leon	_	NNP	NNP	_	7	nsubj	_	_
3	is	_	VBZ	VBZ	_	7	cop	_	_
4	a	_	DT	DT	_	7	det	_	_
5	pro-Chavez	_	JJ	JJ	_	7	amod	_	_
6	defense	_	NN	NN	_	7	nn	_	_
7	specialist	_	NN	NN	_	0	root	_	_
8	who	_	WP	WP	_	9	nsubj	_	_
9	serves	_	VBZ	VBZ	_	7	rcmod	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	Venezuela	_	NNP	NNP	_	14	poss	_	_
12	's	_	POS	POS	_	11	possessive	_	_
13	National	_	NNP	NNP	_	14	nn	_	_
14	Assembly	_	NNP	NNP	_	10	pobj	_	_
15	.	_	.	.	_	7	punct	_	_

Oracle:
(c / country, name, n4 / name)
(g / government-organization, name, n3 / name)
(g / government-organization, poss, c / country)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, g / government-organization)
(h / have-org-role-91, ARG3, s / specialize-01)
(n / name, op, "Chavez")
(n2 / name, op, "Espinoza")
(n2 / name, op, "Leon")
(n3 / name, op, "Assembly")
(n3 / name, op, "National")
(n4 / name, op, "Venezuela")
(p2 / person, name, n / name)
(p3 / person, name, n2 / name)
(s / specialize-01, ARG1, d / defend-01)
(s2 / serve-01, ARG2, g / government-organization)

Input(Some(Graph(null,ArrayBuffer(Span(0,2,List(3, 2, 1, 0),Espinoza Leon,(person :name (name :op "Espinoza" :op "Leon")),false), Span(10,11,List(6, 5, 4),Venezuela's,(country :name (name :op "Venezuela")),false), Span(6,7,List(7),specialist,specialize-01,false), Span(5,6,List(8),defense,defense,false), Span(12,13,List(9),Assembly.,"National",false), Span(8,9,List(10),serves,serve-01,false)),Map(2 -> "Espinoza", 5 -> name, 8 -> defense, 7 -> specialize-01, 1 -> name, 4 -> country, 6 -> "Venezuela", 9 -> "National", 0 -> person, 10 -> serve-01, 3 -> "Leon"),Map(n -> name, s2 -> serve-01, s -> specialize-01, d -> defense, p -> person, N -> "National", c -> country, n2 -> name))),[Ljava.lang.String;@15c0716d,Annotation([Ljava.lang.String;@5b97da34,[Ljava.lang.String;@461e5ed,[Ljava.lang.String;@32fcf5c5),Annotation([Ljava.lang.String;@24a1b1ee,[Ljava.lang.String;@41029934,[Ledu.cmu.lti.nlp.amr.Dependency;@4ac75274),Annotation([Ljava.lang.String;@1fc0c434,[Ljava.lang.String;@364738e3,[Ljava.lang.String;@63d9cc26),Annotation([Ljava.lang.String;@137d66db,[Ljava.lang.String;@a05f1e4,[Ledu.cmu.lti.nlp.amr.Entity;@58a5067))
AMR:
(c / country, name, n2 / name)
(n / name, op, "Espinoza")
(n / name, op, "Leon")
(n2 / name, op, "Venezuela")
(p / person, name, n / name)
(s / specialize-01, ARG0, p / person)
(s / specialize-01, ARG1, s2 / serve-01)
(s / specialize-01, ARG2, d / defense)
(s / specialize-01, ARG6, c / country)
(s2 / serve-01, ARG1, N / "National")

Decoded in 462,554 microseconds
Sentence: Espinoza said that Peru has 500000 rifles and no one says anything.

Oracle Span 1:  500000 => 500000
Oracle Span 2:  and => and
Oracle Span 3:  anything => anything
Oracle Span 4:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 5:  has => have-03
Oracle Span 6:  Peru => (country :name (name :op "Peru"))
Oracle Span 7:  rifles => rifle
Oracle Span 8:  said => say-01
Oracle Span 9:  says => say-01
NER Entity: (person :name (name :op "Espinoza"))
NER Entity: (country :name (name :op "Peru"))
mkDayMonthYear(500000,00,00,50)
Spans:
Span 7-8:  and => and
Span 11-12:  anything. => anything
Span 0-1:  Espinoza => 1
Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Span 8-9:  no => -
Span 3-4:  Peru => (country :name (name :op "Peru"))
Span 6-7:  rifles => rifle
Span 1-2:  said => say-01
Span 10-11:  says => say-01

Langrangian relaxation converged after 48 iterations. Delta = 0.0
Oracle Span 5-6:  500000 => 500000
Oracle Span 7-8:  and => and
Oracle Span 11-12:  anything => anything
Oracle Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 4-5:  has => have-03
Oracle Span 3-4:  Peru => (country :name (name :op "Peru"))
Oracle Span 6-7:  rifles => rifle
Oracle Span 1-2:  said => say-01
Oracle Span 10-11:  says => say-01

Dependencies:
1	Espinoza	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	5	mark	_	_
4	Peru	_	NNP	NNP	_	5	nsubj	_	_
5	has	_	VBZ	VBZ	_	2	ccomp	_	_
6	500000	_	CD	CD	_	7	num	_	_
7	rifles	_	NNS	NNS	_	5	dobj	_	_
8	and	_	CC	CC	_	5	cc	_	_
9	no	_	RB	RB	_	11	advmod	_	_
10	one	_	CD	CD	_	9	pobj	_	_
11	says	_	VBZ	VBZ	_	5	conj	_	_
12	anything	_	NN	NN	_	11	dobj	_	_
13	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, h / have-03)
(a / and, op, s2 / say-01)
(c / country, name, n2 / name)
(h / have-03, ARG0, c / country)
(h / have-03, ARG1, r / rifle)
(n / name, op, "Espinoza")
(n2 / name, op, "Peru")
(p / person, name, n / name)
(r / rifle, quant, 5 / 500000)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a / and)
(s2 / say-01, ARG1, a2 / anything)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Espinoza,1,false), Span(6,7,List(1),rifles,rifle,false), Span(1,2,List(2),said,say-01,false), Span(0,1,List(5, 4, 3),Espinoza,(person :name (name :op "Espinoza")),false), Span(11,12,List(6),anything.,anything,false), Span(3,4,List(9, 8, 7),Peru,(country :name (name :op "Peru")),false), Span(7,8,List(10),and,and,false), Span(8,9,List(11),no,-,false), Span(10,11,List(12),says,say-01,false)),Map(2 -> say-01, 5 -> "Espinoza", 12 -> say-01, 8 -> name, 7 -> country, 1 -> rifle, 4 -> name, 11 -> -, 6 -> anything, 0 -> 1, 9 -> "Peru", 3 -> person, 10 -> and),Map(n -> name, s2 -> say-01, s -> say-01, p -> person, 1 -> 1, a -> anything, a2 -> and, r -> rifle, - -> -, c -> country, n2 -> name))),[Ljava.lang.String;@73dd0c27,Annotation([Ljava.lang.String;@1f811654,[Ljava.lang.String;@2eba6c34,[Ljava.lang.String;@52c70366),Annotation([Ljava.lang.String;@49e0912d,[Ljava.lang.String;@5e441df3,[Ledu.cmu.lti.nlp.amr.Dependency;@23e211c3),Annotation([Ljava.lang.String;@49d4eaea,[Ljava.lang.String;@4f07304,[Ljava.lang.String;@7aa55dec),Annotation([Ljava.lang.String;@497a2772,[Ljava.lang.String;@2717170d,[Ledu.cmu.lti.nlp.amr.Entity;@20f838b8))
AMR:
(a2 / and, op, r / rifle)
(a2 / and, op, s2 / say-01)
(c / country, name, n2 / name)
(n / name, op, "Espinoza")
(n2 / name, op, "Peru")
(p / person, name, n / name)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a2 / and)
(s / say-01, ARG6, 1 / 1)
(s2 / say-01, ARG0, c / country)
(s2 / say-01, ARG1, a / anything)
(s2 / say-01, ARG6, - / -)

Decoded in 806,953 microseconds
Sentence: Espinoza said no one complains that Colombia is the most militarized country in Latin America.

Oracle Span 1:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 2:  complains => complain-01
Oracle Span 3:  country => country
Oracle Span 4:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 5:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 6:  militarized => militarize-00
Oracle Span 7:  most => most
Oracle Span 8:  said => say-01
NER Entity: (person :name (name :op "Espinoza"))
NER Entity: (country :name (name :op "Latin" :op "America"))
NER Entity: (country :name (name :op "Colombia"))
Spans:
Span 4-5:  complains => complain-01
Span 11-12:  country => country
Span 0-1:  Espinoza => 1
Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Span 13-15:  Latin America. => (world-region :name (name :op "America" :op "Latin"))
Span 9-10:  most => most
Span 2-3:  no => -
Span 1-2:  said => say-01

Langrangian relaxation converged after 49 iterations. Delta = 0.0
Oracle Span 6-7:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 4-5:  complains => complain-01
Oracle Span 11-12:  country => country
Oracle Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 13-15:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 10-11:  militarized => militarize-00
Oracle Span 9-10:  most => most
Oracle Span 1-2:  said => say-01

Dependencies:
1	Espinoza	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	no	_	DT	DT	_	4	neg	_	_
4	one	_	NN	NN	_	5	nsubj	_	_
5	complains	_	VBZ	VBZ	_	2	ccomp	_	_
6	that	_	IN	IN	_	12	mark	_	_
7	Colombia	_	NNP	NNP	_	12	nsubj	_	_
8	is	_	VBZ	VBZ	_	12	cop	_	_
9	the	_	DT	DT	_	12	det	_	_
10	most	_	RBS	RBS	_	11	advmod	_	_
11	militarized	_	JJ	JJ	_	12	amod	_	_
12	country	_	NN	NN	_	5	ccomp	_	_
13	in	_	IN	IN	_	12	prep	_	_
14	Latin	_	NNP	NNP	_	15	nn	_	_
15	America	_	NNP	NNP	_	13	pobj	_	_
16	.	_	.	.	_	2	punct	_	_

Oracle:
(c / complain-01, ARG1, c2 / country)
(c2 / country, domain, c3 / country)
(c2 / country, location, w / world-region)
(c3 / country, name, n4 / name)
(m / militarize-00, ARG1, c2 / country)
(m / militarize-00, degree, m2 / most)
(n / name, op, "Espinoza")
(n3 / name, op, "America")
(n3 / name, op, "Latin")
(n4 / name, op, "Colombia")
(p / person, name, n / name)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, c / complain-01)
(w / world-region, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Espinoza,1,false), Span(13,15,List(4, 3, 2, 1),Latin America.,(world-region :name (name :op "America" :op "Latin")),false), Span(11,12,List(5),country,country,false), Span(1,2,List(6),said,say-01,false), Span(4,5,List(7),complains,complain-01,false), Span(0,1,List(10, 9, 8),Espinoza,(person :name (name :op "Espinoza")),false), Span(9,10,List(11),most,most,false), Span(2,3,List(12),no,-,false)),Map(2 -> name, 5 -> country, 12 -> -, 8 -> person, 7 -> complain-01, 1 -> world-region, 4 -> "Latin", 11 -> most, 6 -> say-01, 0 -> 1, 9 -> name, 3 -> "America", 10 -> "Espinoza"),Map(n -> name, w -> world-region, s -> say-01, m -> most, p -> person, 1 -> 1, - -> -, c -> country, n2 -> name, c2 -> complain-01))),[Ljava.lang.String;@4b191f2b,Annotation([Ljava.lang.String;@12e8fec1,[Ljava.lang.String;@34f64d85,[Ljava.lang.String;@43395fdf),Annotation([Ljava.lang.String;@40daf0d4,[Ljava.lang.String;@151110f8,[Ledu.cmu.lti.nlp.amr.Dependency;@130dfdba),Annotation([Ljava.lang.String;@1a439fa3,[Ljava.lang.String;@d88806f,[Ljava.lang.String;@1003c7f6),Annotation([Ljava.lang.String;@6c9f0861,[Ljava.lang.String;@6aa73cd6,[Ledu.cmu.lti.nlp.amr.Entity;@23655215))
AMR:
(c / country, location, w / world-region)
(c2 / complain-01, ARG1, c / country)
(c2 / complain-01, ARG6, - / -)
(m / most, calendar, c / country)
(n / name, op, "America")
(n / name, op, "Latin")
(n2 / name, op, "Espinoza")
(p / person, name, n2 / name)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, c2 / complain-01)
(s / say-01, ARG6, 1 / 1)
(w / world-region, name, n / name)

Decoded in 1,014,578 microseconds
Sentence: Espinoza said US history is full of aggression in Latin America.

Oracle Span 1:  aggression => aggression
Oracle Span 2:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 3:  history => history
Oracle Span 4:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 5:  said => say-01
Oracle Span 6:  US => (country :name (name :op "US"))
NER Entity: (person :name (name :op "Espinoza"))
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 7-8:  aggression => aggrieve-01
Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Span 5-6:  full => full
Span 3-4:  history => history
Span 9-11:  Latin America. => (world-region :name (name :op "America" :op "Latin"))
Span 1-2:  said => say-01
Span 2-3:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 13 iterations. Delta = 0.0
Oracle Span 7-8:  aggression => aggression
Oracle Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 3-4:  history => history
Oracle Span 9-11:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 1-2:  said => say-01
Oracle Span 2-3:  US => (country :name (name :op "US"))

Dependencies:
1	Espinoza	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	US	_	NNP	NNP	_	4	nn	_	_
4	history	_	NN	NN	_	6	nsubj	_	_
5	is	_	VBZ	VBZ	_	6	cop	_	_
6	full	_	JJ	JJ	_	2	ccomp	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	aggression	_	NN	NN	_	7	pobj	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	Latin	_	NNP	NNP	_	11	nn	_	_
11	America	_	NNP	NNP	_	9	pobj	_	_
12	.	_	.	.	_	2	punct	_	_

Oracle:
(a / aggression, location, w / world-region)
(c / country, name, n2 / name)
(h / history, mod, c / country)
(n / name, op, "Espinoza")
(n2 / name, op, "US")
(n3 / name, op, "America")
(n3 / name, op, "Latin")
(p / person, name, n / name)
(s / say-01, ARG0, p / person)
(w / world-region, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(0),full,full,false), Span(1,2,List(1),said,say-01,false), Span(0,1,List(4, 3, 2),Espinoza,(person :name (name :op "Espinoza")),false), Span(3,4,List(5),history,history,false), Span(7,8,List(6),aggression,aggrieve-01,false), Span(2,3,List(9, 8, 7),US,(country :name (name :op "US")),false), Span(9,11,List(13, 12, 11, 10),Latin America.,(world-region :name (name :op "America" :op "Latin")),false)),Map(2 -> person, 5 -> history, 12 -> "America", 8 -> name, 7 -> country, 1 -> say-01, 4 -> "Espinoza", 11 -> name, 6 -> aggrieve-01, 0 -> full, 9 -> "US", 3 -> name, 10 -> world-region, 13 -> "Latin"),Map(w -> world-region, n -> name, h -> history, s -> say-01, p -> person, n3 -> name, a -> aggrieve-01, c -> country, f -> full, n2 -> name))),[Ljava.lang.String;@2a0b178e,Annotation([Ljava.lang.String;@57178147,[Ljava.lang.String;@1f6fc220,[Ljava.lang.String;@31ae4469),Annotation([Ljava.lang.String;@436b92b5,[Ljava.lang.String;@289d3e26,[Ledu.cmu.lti.nlp.amr.Dependency;@490297d7),Annotation([Ljava.lang.String;@acc1f92,[Ljava.lang.String;@152dda44,[Ljava.lang.String;@5400bac9),Annotation([Ljava.lang.String;@9e123b1,[Ljava.lang.String;@63bb9d90,[Ledu.cmu.lti.nlp.amr.Entity;@183f9459))
AMR:
(a / aggrieve-01, ARG1, f / full)
(a / aggrieve-01, location, w / world-region)
(c / country, name, n2 / name)
(f / full, domain, h / history)
(h / history, mod, c / country)
(n / name, op, "Espinoza")
(n2 / name, op, "US")
(n3 / name, op, "America")
(n3 / name, op, "Latin")
(p / person, name, n / name)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, f / full)
(w / world-region, name, n3 / name)

Decoded in 399,212 microseconds
Sentence: Espinoza said Venezuelans have to do whatever is necessary to protect Venezuela.

Oracle Span 1:  do => do-02
Oracle Span 2:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 3:  protect => protect-01
Oracle Span 4:  said => say-01
Oracle Span 5:  Venezuela => (person :mod (country :name (name :op "Venezuela")))
Oracle Span 6:  whatever => whatever
NER Entity: (person :name (name :op "Espinoza"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 5-6:  do => do-02
Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Span 3-4:  have => have-02
Span 8-9:  necessary => necessitate-01
Span 10-11:  protect => protect-01
Span 1-2:  said => say-01
Span 11-12:  Venezuela. => (country :name (name :op "Venezuela"))
Span 6-7:  whatever => whatever

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  do => do-02
Oracle Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 10-11:  protect => protect-01
Oracle Span 1-2:  said => say-01
Oracle Span 11-12:  Venezuela => (person :mod (country :name (name :op "Venezuela")))
Oracle Span 6-7:  whatever => whatever

Dependencies:
1	Espinoza	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	Venezuelans	_	NNP	NNP	_	4	nsubj	_	_
4	have	_	VBP	VBP	_	2	ccomp	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	do	_	VB	VB	_	4	xcomp	_	_
7	whatever	_	WDT	WDT	_	9	nsubj	_	_
8	is	_	VBZ	VBZ	_	9	cop	_	_
9	necessary	_	JJ	JJ	_	6	ccomp	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	protect	_	VB	VB	_	9	xcomp	_	_
12	Venezuela	_	NNP	NNP	_	11	dobj	_	_
13	.	_	.	.	_	2	punct	_	_

Oracle:
(c / country, name, n2 / name)
(d / do-02, ARG0, p2 / person)
(d / do-02, ARG1, w / whatever)
(n / name, op, "Espinoza")
(n2 / name, op, "Venezuela")
(p / person, name, n / name)
(p2 / person, mod, c / country)
(p3 / protect-01, ARG1, c / country)
(s / say-01, ARG0, p / person)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),protect,protect-01,false), Span(1,2,List(1),said,say-01,false), Span(0,1,List(4, 3, 2),Espinoza,(person :name (name :op "Espinoza")),false), Span(5,6,List(5),do,do-02,false), Span(8,9,List(6),necessary,necessitate-01,false), Span(6,7,List(7),whatever,whatever,false), Span(11,12,List(10, 9, 8),Venezuela.,(country :name (name :op "Venezuela")),false), Span(3,4,List(11),have,have-02,false)),Map(2 -> person, 5 -> do-02, 8 -> country, 7 -> whatever, 1 -> say-01, 11 -> have-02, 4 -> "Espinoza", 6 -> necessitate-01, 9 -> name, 0 -> protect-01, 10 -> "Venezuela", 3 -> name),Map(w -> whatever, n -> name, h -> have-02, p2 -> person, s -> say-01, d -> do-02, p -> protect-01, n3 -> name, c -> country, n2 -> necessitate-01))),[Ljava.lang.String;@49e7d5a1,Annotation([Ljava.lang.String;@5029cb4c,[Ljava.lang.String;@7feb1823,[Ljava.lang.String;@4f36dfd1),Annotation([Ljava.lang.String;@388b414b,[Ljava.lang.String;@26e68ebd,[Ledu.cmu.lti.nlp.amr.Dependency;@1ebb042),Annotation([Ljava.lang.String;@78da3ff9,[Ljava.lang.String;@1ab9a8b0,[Ljava.lang.String;@8b84e3c),Annotation([Ljava.lang.String;@540d86c9,[Ljava.lang.String;@7d814e46,[Ledu.cmu.lti.nlp.amr.Entity;@2a2a956e))
AMR:
(c / country, name, n3 / name)
(d / do-02, ARG0, c / country)
(d / do-02, ARG1, w / whatever)
(h / have-02, ARG1, d / do-02)
(n / name, op, "Espinoza")
(n2 / necessitate-01, ARG1, p / protect-01)
(n3 / name, op, "Venezuela")
(p / protect-01, ARG1, c / country)
(p2 / person, name, n / name)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, h / have-02)

Decoded in 278,376 microseconds
Sentence: Chavez has famously said that the Venezuelan so-called Bolivarian revolution is peaceful but not unarmed.

Oracle Span 1:  Bolivarian revolution => (event :name (name :op "Revolution" :op "Bolivarian"))
Oracle Span 2:  but => contrast-01
Oracle Span 3:  called => call-01
Oracle Span 4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5:  famously => famous
Oracle Span 6:  peaceful => peaceful
Oracle Span 7:  said => say-01
Oracle Span 8:  so => so
Oracle Span 9:  Venezuelan => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (thing :name (name :op "Venezuelan"))
Spans:
Span 12-13:  but => bunt-01
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 2-3:  famously => famous
Span 11-12:  peaceful => peaceful
Span 9-10:  revolution => revolution
Span 3-4:  said => say-01
Span 7-8:  so-called => (call-01 :mod so)
Span 14-15:  unarmed. => unarmed

Langrangian relaxation converged after 56 iterations. Delta = 0.0
Oracle Span 10-12:  Bolivarian revolution => (event :name (name :op "Revolution" :op "Bolivarian"))
Oracle Span 14-15:  but => contrast-01
Oracle Span 9-10:  called => call-01
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 2-3:  famously => famous
Oracle Span 13-14:  peaceful => peaceful
Oracle Span 3-4:  said => say-01
Oracle Span 7-8:  so => so
Oracle Span 6-7:  Venezuelan => (country :name (name :op "Venezuela"))

Dependencies:
1	Chavez	_	NNP	NNP	_	4	nsubj	_	_
2	has	_	VBZ	VBZ	_	4	aux	_	_
3	famously	_	RB	RB	_	4	advmod	_	_
4	said	_	VBN	VBN	_	0	root	_	_
5	that	_	IN	IN	_	15	mark	_	_
6	the	_	DT	DT	_	10	det	_	_
7	Venezuelan	_	JJ	JJ	_	10	amod	_	_
8	so-called	_	JJ	JJ	_	10	amod	_	_
9	Bolivarian	_	NN	NN	_	10	nn	_	_
10	revolution	_	NN	NN	_	15	nsubj	_	_
11	is	_	VBZ	VBZ	_	15	cop	_	_
12	peaceful	_	JJ	JJ	_	15	dep	_	_
13	but	_	CC	CC	_	15	cc	_	_
14	not	_	RB	RB	_	15	conj	_	_
15	unarmed	_	JJ	JJ	_	4	ccomp	_	_
16	.	_	.	.	_	4	punct	_	_

Oracle:
(c / contrast-01, ARG1, p2 / peaceful)
(c2 / country, name, n2 / name)
(c3 / call-01, ARG1, e / event)
(c3 / call-01, ARG2, s2 / so)
(e / event, mod, c2 / country)
(e / event, name, n3 / name)
(n / name, op, "Chavez")
(n2 / name, op, "Venezuela")
(n3 / name, op, "Bolivarian")
(n3 / name, op, "Revolution")
(p / person, name, n / name)
(p2 / peaceful, domain, e / event)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, c / contrast-01)
(s / say-01, manner, f / famous)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),but,bunt-01,false), Span(3,4,List(1),said,say-01,false), Span(9,10,List(2),revolution,revolution,false), Span(0,1,List(5, 4, 3),Chavez,(person :name (name :op "Chavez")),false), Span(2,3,List(6),famously,famous,false), Span(7,8,List(8, 7),so-called,(call-01 :mod so),false), Span(11,12,List(9),peaceful,peaceful,false), Span(14,15,List(10),unarmed.,unarmed,false)),Map(2 -> revolution, 5 -> "Chavez", 8 -> so, 7 -> call-01, 1 -> say-01, 4 -> name, 6 -> famous, 9 -> peaceful, 0 -> bunt-01, 10 -> unarmed, 3 -> person),Map(n -> name, s2 -> so, b -> bunt-01, p2 -> peaceful, s -> say-01, p -> person, r -> revolution, u -> unarmed, c -> call-01, f -> famous))),[Ljava.lang.String;@7d863702,Annotation([Ljava.lang.String;@2e29bbda,[Ljava.lang.String;@754968f3,[Ljava.lang.String;@14f8acb7),Annotation([Ljava.lang.String;@580aa70d,[Ljava.lang.String;@3b1e30bd,[Ledu.cmu.lti.nlp.amr.Dependency;@5aed9dd),Annotation([Ljava.lang.String;@546250cb,[Ljava.lang.String;@595da785,[Ljava.lang.String;@138cefcb),Annotation([Ljava.lang.String;@609fbc56,[Ljava.lang.String;@263d5c86,[Ledu.cmu.lti.nlp.amr.Entity;@12e8b64b))
AMR:
(b / bunt-01, ARG1, p2 / peaceful)
(b / bunt-01, ARG6, u / unarmed)
(c / call-01, ARG1, p2 / peaceful)
(c / call-01, mod, s2 / so)
(n / name, op, "Chavez")
(p / person, name, n / name)
(p2 / peaceful, mod, r / revolution)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, u / unarmed)
(s / say-01, manner, f / famous)

Decoded in 887,471 microseconds
Sentence: Chavez was first elected in 980000 and has a popularity rating of 71 percent in an independent poll by polling firm Datanalisis.

Oracle Span 1:  71 => 71
Oracle Span 2:  980000 => (date-entity :year 1998)
Oracle Span 3:  and => and
Oracle Span 4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5:  Datanalisis => (name :op "Datanalisis")
Oracle Span 6:  elected => elect-01
Oracle Span 7:  firm => firm
Oracle Span 8:  first => first
Oracle Span 9:  independent => (depend-01 :polarity -)
Oracle Span 10:  percent => percentage-entity
Oracle Span 11:  poll => poll-01
Oracle Span 12:  popularity => popularity
Oracle Span 13:  rating => rate-01
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (organization :name (name :op "Datanalisis"))
mkDayMonthYear(980000,00,00,98)
Spans:
Span 12-13:  71 => 71
Span 15-16:  an => (person :ARG0-of have-org-role-91)
Span 6-7:  and => and
Span 0-1:  Chavez => 1
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 0-3:  Chavez was first => (ordinal-entity :value 1)
Span 7-8:  has => have-03
Span 13-14:  percent => percentage-entity
Span 17-18:  poll => pool-01
Span 9-10:  popularity => popularity
Span 10-11:  rating => ration-01

Langrangian relaxation converged after 29 iterations. Delta = 0.0
Oracle Span 12-13:  71 => 71
Oracle Span 5-6:  980000 => (date-entity :year 1998)
Oracle Span 6-7:  and => and
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 21-22:  Datanalisis => (name :op "Datanalisis")
Oracle Span 3-4:  elected => elect-01
Oracle Span 20-21:  firm => firm
Oracle Span 2-3:  first => first
Oracle Span 16-17:  independent => (depend-01 :polarity -)
Oracle Span 13-14:  percent => percentage-entity
Oracle Span 17-18:  poll => poll-01
Oracle Span 9-10:  popularity => popularity
Oracle Span 10-11:  rating => rate-01

Dependencies:
1	Chavez	_	NNP	NNP	_	4	nsubjpass	_	_
2	was	_	VBD	VBD	_	4	auxpass	_	_
3	first	_	RB	RB	_	4	advmod	_	_
4	elected	_	VBN	VBN	_	0	root	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	980000	_	CD	CD	_	5	pobj	_	_
7	and	_	CC	CC	_	4	cc	_	_
8	has	_	VBZ	VBZ	_	4	conj	_	_
9	a	_	DT	DT	_	11	det	_	_
10	popularity	_	NN	NN	_	11	nn	_	_
11	rating	_	NN	NN	_	8	dobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	71	_	CD	CD	_	14	num	_	_
14	percent	_	NN	NN	_	12	pobj	_	_
15	in	_	IN	IN	_	14	prep	_	_
16	an	_	DT	DT	_	18	det	_	_
17	independent	_	JJ	JJ	_	18	amod	_	_
18	poll	_	NN	NN	_	15	pobj	_	_
19	by	_	IN	IN	_	18	prep	_	_
20	polling	_	NN	NN	_	22	nn	_	_
21	firm	_	NN	NN	_	22	nn	_	_
22	Datanalisis	_	NNS	NNS	_	19	pobj	_	_
23	.	_	.	.	_	4	punct	_	_

Oracle:
(a / and, op, e / elect-01)
(a / and, op, r / rate-01)
(d2 / date-entity, year, 1998)
(d3 / depend-01, ARG0, p5 / poll-01)
(d3 / depend-01, polarity, -)
(e / elect-01, ARG1, p2 / person)
(e / elect-01, time, d2 / date-entity)
(e / elect-01, time, f / first)
(f2 / firm, name, n2 / name)
(n / name, op, "Chavez")
(n2 / name, op, "Datanalisis")
(p2 / person, name, n / name)
(p3 / popularity, poss, p2 / person)
(p4 / percentage-entity, value, 7 / 71)
(p5 / poll-01, ARG0, f2 / firm)
(r / rate-01, ARG0, p5 / poll-01)
(r / rate-01, ARG1, p3 / popularity)
(r / rate-01, ARG2, p4 / percentage-entity)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Chavez,1,false), Span(6,7,List(1),and,and,false), Span(12,13,List(2),71,71,false), Span(15,16,List(4, 3),an,(person :ARG0-of have-org-role-91),false), Span(9,10,List(5),popularity,popularity,false), Span(10,11,List(6),rating,ration-01,false), Span(13,14,List(7),percent,percentage-entity,false), Span(7,8,List(8),has,have-03,false), Span(0,1,List(11, 10, 9),Chavez,(person :name (name :op "Chavez")),false), Span(0,3,List(13, 12),Chavez was first,(ordinal-entity :value 1),false), Span(17,18,List(14),poll,pool-01,false)),Map(2 -> 71, 5 -> popularity, 12 -> ordinal-entity, 8 -> have-03, 7 -> percentage-entity, 1 -> and, 4 -> have-org-role-91, 11 -> "Chavez", 14 -> pool-01, 6 -> ration-01, 0 -> 1, 9 -> person, 3 -> person, 10 -> name, 13 -> 1),Map(n -> name, h -> have-org-role-91, p5 -> pool-01, h2 -> have-03, 12 -> 1, p2 -> popularity, 7 -> 71, 1 -> 1, p -> person, a -> and, p4 -> person, r -> ration-01, o -> ordinal-entity, p3 -> percentage-entity))),[Ljava.lang.String;@553146c9,Annotation([Ljava.lang.String;@44883da0,[Ljava.lang.String;@5be2cc7c,[Ljava.lang.String;@4f5be76f),Annotation([Ljava.lang.String;@1003e743,[Ljava.lang.String;@15e3bdde,[Ledu.cmu.lti.nlp.amr.Dependency;@582f0232),Annotation([Ljava.lang.String;@48dfe6c7,[Ljava.lang.String;@47e92960,[Ljava.lang.String;@4f6c610e),Annotation([Ljava.lang.String;@6ff2d443,[Ljava.lang.String;@58aceea4,[Ledu.cmu.lti.nlp.amr.Entity;@56007ef8))
AMR:
(a / and, op, h2 / have-03)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, p3 / percentage-entity)
(h2 / have-03, ARG0, p4 / person)
(h2 / have-03, ARG1, o / ordinal-entity)
(n / name, op, "Chavez")
(o / ordinal-entity, value, 12 / 1)
(p2 / popularity, poss, 1 / 1)
(p2 / popularity, poss, p4 / person)
(p3 / percentage-entity, value, 7 / 71)
(p4 / person, name, n / name)
(r / ration-01, ARG0, p5 / pool-01)
(r / ration-01, ARG1, p2 / popularity)
(r / ration-01, ARG2, p3 / percentage-entity)

Decoded in 1,124,784 microseconds
Sentence: Venezuelan military analyst Alberto Garrido said Chavez is looking for allies in Russia, China, and Iran in order to promote a multi-polar world which will counteract US dominance and encourage grassroots Movements in Latin America to throw off US governmental influence.

Oracle Span 1:  Alberto Garrido => (person :name (name :op "Garrido" :op "Alberto"))
Oracle Span 2:  allies => (person :ARG1-of ally-01)
Oracle Span 3:  analyst => analyze-01
Oracle Span 4:  and => and
Oracle Span 5:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 6:  China => (country :name (name :op "China"))
Oracle Span 7:  counteract => counteract-01
Oracle Span 8:  dominance => dominate-01
Oracle Span 9:  encourage => encourage-01
Oracle Span 10:  governmental => (government-organization :ARG0-of govern-01)
Oracle Span 11:  grassroots => grassroot
Oracle Span 12:  influence => influence-01
Oracle Span 13:  Iran => (country :name (name :op "Iran"))
Oracle Span 14:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 15:  looking => look-01
Oracle Span 16:  military => military
Oracle Span 17:  Movements => move-02
Oracle Span 18:  multi => multiple
Oracle Span 19:  polar => polar
Oracle Span 20:  promote => promote-02
Oracle Span 21:  Russia => (country :name (name :op "Russia"))
Oracle Span 22:  said => say-01
Oracle Span 23:  throw => throw-01
Oracle Span 24:  US => (country :name (name :op "US"))
Oracle Span 25:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 26:  world => world
NER Entity: (person :name (name :op "Alberto" :op "Garrido"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "Russia"))
NER Entity: (country :name (name :op "China"))
NER Entity: (country :name (name :op "Iran"))
NER Entity: (thing :name (name :op "Venezuelan"))
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 41-42:   => (government-organization :ARG0-of govern-01)
Span 42-43:   => influence-01
Span 3-5:  Alberto Garrido => (person :name (name :op "Alberto" :op "Garrido"))
Span 10-11:  allies => ally
Span 14-15:  and => (country :name (name :op "China"))
Span 28-29:  and => (country :name (name :op "US"))
Span 6-7:  Chavez => (person :name (name :op "Chavez"))
Span 27-28:  dominance => counteract-01
Span 29-30:  encourage => dominate-01
Span 30-31:  grassroots => and
Span 16-17:  in => and
Span 32-33:  in => grassroot
Span 33-34:  Latin => movement
Span 8-9:  looking => look-01
Span 1-2:  military => military
Span 31-32:  Movements => encourage-02
Span 21-22:  multi-polar => promote-02
Span 17-18:  order => (country :name (name :op "Iran"))
Span 12-13:  Russia, => (country :name (name :op "Russia"))
Span 5-6:  said => say-01
Span 35-37:  to throw => (world-region :name (name :op "America" :op "Latin"))
Span 38-39:  US => throw-01
Span 24-25:  will => world

Langrangian relaxation converged after 70 iterations. Delta = 0.0
Oracle Span 3-5:  Alberto Garrido => (person :name (name :op "Garrido" :op "Alberto"))
Oracle Span 10-11:  allies => (person :ARG1-of ally-01)
Oracle Span 2-3:  analyst => analyze-01
Oracle Span 16-17:  and => and
Oracle Span 6-7:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 14-15:  China => (country :name (name :op "China"))
Oracle Span 29-30:  counteract => counteract-01
Oracle Span 31-32:  dominance => dominate-01
Oracle Span 33-34:  encourage => encourage-01
Oracle Span 43-44:  governmental => (government-organization :ARG0-of govern-01)
Oracle Span 34-35:  grassroots => grassroot
Oracle Span 44-45:  influence => influence-01
Oracle Span 17-18:  Iran => (country :name (name :op "Iran"))
Oracle Span 37-39:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 8-9:  looking => look-01
Oracle Span 1-2:  military => military
Oracle Span 35-36:  Movements => move-02
Oracle Span 23-24:  multi => multiple
Oracle Span 25-26:  polar => polar
Oracle Span 21-22:  promote => promote-02
Oracle Span 12-13:  Russia => (country :name (name :op "Russia"))
Oracle Span 5-6:  said => say-01
Oracle Span 40-41:  throw => throw-01
Oracle Span 30-31:  US => (country :name (name :op "US"))
Oracle Span 0-1:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 26-27:  world => world

Dependencies:
1	Venezuelan	_	JJ	JJ	_	5	amod	_	_
2	military	_	JJ	JJ	_	5	amod	_	_
3	analyst	_	NN	NN	_	5	nn	_	_
4	Alberto	_	NNP	NNP	_	5	nn	_	_
5	Garrido	_	NNP	NNP	_	6	nsubj	_	_
6	said	_	VBD	VBD	_	0	root	_	_
7	Chavez	_	NNP	NNP	_	9	nsubj	_	_
8	is	_	VBZ	VBZ	_	9	aux	_	_
9	looking	_	VBG	VBG	_	6	ccomp	_	_
10	for	_	IN	IN	_	9	prep	_	_
11	allies	_	NNS	NNS	_	10	pobj	_	_
12	in	_	IN	IN	_	11	prep	_	_
13	Russia	_	NNP	NNP	_	12	pobj	_	_
14	,	_	,	,	_	13	punct	_	_
15	China	_	NNP	NNP	_	13	conj	_	_
16	,	_	,	,	_	13	punct	_	_
17	and	_	CC	CC	_	13	cc	_	_
18	Iran	_	NNP	NNP	_	13	conj	_	_
19	in	_	IN	IN	_	22	mark	_	_
20	order	_	NN	NN	_	22	dep	_	_
21	to	_	TO	TO	_	22	aux	_	_
22	promote	_	VB	VB	_	9	advcl	_	_
23	a	_	DT	DT	_	25	det	_	_
24	multi-polar	_	JJ	JJ	_	25	amod	_	_
25	world	_	NN	NN	_	22	dobj	_	_
26	which	_	WDT	WDT	_	28	nsubj	_	_
27	will	_	MD	MD	_	28	aux	_	_
28	counteract	_	VB	VB	_	25	rcmod	_	_
29	US	_	NNP	NNP	_	30	nn	_	_
30	dominance	_	NN	NN	_	28	dobj	_	_
31	and	_	CC	CC	_	28	cc	_	_
32	encourage	_	VB	VB	_	28	conj	_	_
33	grassroots	_	NNP	NNP	_	34	nn	_	_
34	Movements	_	NNP	NNP	_	32	dobj	_	_
35	in	_	IN	IN	_	34	prep	_	_
36	Latin	_	NNP	NNP	_	37	nn	_	_
37	America	_	NNP	NNP	_	35	pobj	_	_
38	to	_	TO	TO	_	39	aux	_	_
39	throw	_	VB	VB	_	32	xcomp	_	_
40	off	_	RP	RP	_	39	prt	_	_
41	US	_	NNP	NNP	_	43	nn	_	_
42	governmental	_	JJ	JJ	_	43	amod	_	_
43	influence	_	NN	NN	_	39	dobj	_	_
44	.	_	.	.	_	6	punct	_	_

Oracle:
(a / analyze-01, ARG0, p / person)
(a / analyze-01, ARG1, m / military)
(a2 / ally-01, ARG1, p5 / person)
(a2 / ally-01, ARG2, p2 / person)
(a3 / and, op, c2 / country)
(a3 / and, op, c3 / country)
(a3 / and, op, c4 / country)
(c / country, name, n2 / name)
(c2 / country, name, n4 / name)
(c3 / country, name, n5 / name)
(c4 / country, name, n6 / name)
(c5 / counteract-01, ARG0, w / world)
(c5 / counteract-01, ARG1, d / dominate-01)
(c6 / country, name, n7 / name)
(d / dominate-01, ARG0, c6 / country)
(e / encourage-01, ARG0, w / world)
(e / encourage-01, ARG1, m3 / move-02)
(e / encourage-01, ARG2, t / throw-01)
(g3 / govern-01, ARG0, g2 / government-organization)
(g3 / govern-01, ARG1, c6 / country)
(i / influence-01, ARG0, g2 / government-organization)
(l / look-01, ARG0, p2 / person)
(l / look-01, ARG1, p5 / person)
(l / look-01, location, a3 / and)
(l / look-01, purpose, p3 / promote-02)
(m3 / move-02, location, w2 / world-region)
(m3 / move-02, mod, g / grassroot)
(n / name, op, "Alberto")
(n / name, op, "Garrido")
(n2 / name, op, "Venezuela")
(n3 / name, op, "Chavez")
(n4 / name, op, "Russia")
(n5 / name, op, "China")
(n6 / name, op, "Iran")
(n7 / name, op, "US")
(n8 / name, op, "America")
(n8 / name, op, "Latin")
(p / person, mod, c / country)
(p / person, name, n / name)
(p2 / person, name, n3 / name)
(p3 / promote-02, ARG0, p / person)
(p3 / promote-02, ARG1, w / world)
(p4 / polar, mod, m2 / multiple)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, l / look-01)
(t / throw-01, ARG0, m3 / move-02)
(t / throw-01, ARG1, i / influence-01)
(w / world, mod, p4 / polar)
(w2 / world-region, name, n8 / name)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),allies,ally,false), Span(31,32,List(1),Movements,encourage-02,false), Span(16,17,List(2),in,and,false), Span(14,15,List(5, 4, 3),and,(country :name (name :op "China")),false), Span(24,25,List(6),will,world,false), Span(41,42,List(8, 7),,(government-organization :ARG0-of govern-01),false), Span(33,34,List(9),Latin,movement,false), Span(5,6,List(10),said,say-01,false), Span(29,30,List(11),encourage,dominate-01,false), Span(21,22,List(12),multi-polar,promote-02,false), Span(30,31,List(13),grassroots,and,false), Span(12,13,List(16, 15, 14),Russia,,(country :name (name :op "Russia")),false), Span(17,18,List(19, 18, 17),order,(country :name (name :op "Iran")),false), Span(3,5,List(23, 22, 21, 20),Alberto Garrido,(person :name (name :op "Alberto" :op "Garrido")),false), Span(32,33,List(24),in,grassroot,false), Span(38,39,List(25),US,throw-01,false), Span(28,29,List(28, 27, 26),and,(country :name (name :op "US")),false), Span(8,9,List(29),looking,look-01,false), Span(1,2,List(30),military,military,false), Span(6,7,List(33, 32, 31),Chavez,(person :name (name :op "Chavez")),false), Span(42,43,List(34),,influence-01,false), Span(35,37,List(38, 37, 36, 35),to throw,(world-region :name (name :op "America" :op "Latin")),false), Span(27,28,List(39),dominance,counteract-01,false)),Map(39 -> counteract-01, 30 -> military, 2 -> and, 5 -> "China", 33 -> "Chavez", 27 -> name, 12 -> promote-02, 8 -> govern-01, 15 -> name, 36 -> name, 21 -> name, 18 -> name, 24 -> grassroot, 35 -> world-region, 7 -> government-organization, 1 -> encourage-02, 17 -> country, 23 -> "Garrido", 38 -> "Latin", 26 -> country, 4 -> name, 11 -> dominate-01, 32 -> name, 14 -> country, 29 -> look-01, 20 -> person, 34 -> influence-01, 28 -> "US", 6 -> world, 9 -> movement, 0 -> ally, 22 -> "Alberto", 16 -> "Russia", 37 -> "America", 19 -> "Iran", 10 -> say-01, 3 -> country, 31 -> person, 25 -> throw-01, 13 -> and),Map(e -> encourage-02, w -> world, n -> name, g3 -> grassroot, t -> throw-01, m2 -> military, n7 -> name, p2 -> person, a3 -> and, n4 -> name, c4 -> country, s -> say-01, d -> dominate-01, m -> movement, g2 -> govern-01, p -> promote-02, g -> government-organization, a -> ally, c3 -> country, n3 -> name, n6 -> name, w2 -> world-region, i -> influence-01, a2 -> and, c -> country, l -> look-01, p3 -> person, c2 -> country, n2 -> name, c5 -> counteract-01, n5 -> name))),[Ljava.lang.String;@18246142,Annotation([Ljava.lang.String;@51754d89,[Ljava.lang.String;@148d7de4,[Ljava.lang.String;@4eccd3d9),Annotation([Ljava.lang.String;@75598533,[Ljava.lang.String;@ebb8714,[Ledu.cmu.lti.nlp.amr.Dependency;@71a6b97a),Annotation([Ljava.lang.String;@59dcfe8c,[Ljava.lang.String;@60959899,[Ljava.lang.String;@32c430b8),Annotation([Ljava.lang.String;@76ed22f3,[Ljava.lang.String;@487b8a3c,[Ledu.cmu.lti.nlp.amr.Entity;@4e682fa))
AMR:
(a2 / and, op, c / country)
(a2 / and, op, c2 / country)
(a2 / and, op, c3 / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(c4 / country, domain, d / dominate-01)
(c4 / country, name, n5 / name)
(c5 / counteract-01, ARG0, w / world)
(c5 / counteract-01, ARG1, c4 / country)
(d / dominate-01, ARG0, g3 / grassroot)
(d / dominate-01, ARG1, e / encourage-02)
(e / encourage-02, ARG1, a3 / and)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c3 / country)
(g3 / grassroot, op, m / movement)
(g3 / grassroot, op, p / promote-02)
(i / influence-01, ARG1, g / government-organization)
(l / look-01, ARG0, p3 / person)
(l / look-01, ARG1, a / ally)
(l / look-01, location, a2 / and)
(m / movement, calendar, w2 / world-region)
(n / name, op, "China")
(n2 / name, op, "Russia")
(n3 / name, op, "Iran")
(n4 / name, op, "Alberto")
(n4 / name, op, "Garrido")
(n5 / name, op, "US")
(n6 / name, op, "Chavez")
(n7 / name, op, "America")
(n7 / name, op, "Latin")
(p / promote-02, ARG0, p2 / person)
(p2 / person, mod, m2 / military)
(p2 / person, name, n4 / name)
(p3 / person, name, n6 / name)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, l / look-01)
(t / throw-01, ARG1, w2 / world-region)
(w2 / world-region, name, n7 / name)

Decoded in 7,688,525 microseconds
Sentence: Lorenzo Campos is a farmer in Anzoategui state in northern Venezuela and is training as a reservist.

Oracle Span 1:  and => and
Oracle Span 2:  Anzoategui => (name :op "Anzoategui")
Oracle Span 3:  farmer => farm-01
Oracle Span 4:  Lorenzo Campos => (person :name (name :op "Campos" :op "Lorenzo"))
Oracle Span 5:  northern => north
Oracle Span 6:  reservist => reservist
Oracle Span 7:  state => state
Oracle Span 8:  training => train-01
Oracle Span 9:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Lorenzo" :op "Campos"))
NER Entity: (country :name (name :op "Anzoategui"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 11-12:  and => and
Span 4-5:  farmer => (person :ARG0-of farm-01)
Span 0-2:  Lorenzo Campos => (person :name (name :op "Lorenzo" :op "Campos"))
Span 9-10:  northern => north
Span 7-8:  state => state
Span 13-14:  training => train-01
Span 10-11:  Venezuela => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 14 iterations. Delta = 0.0
Oracle Span 11-12:  and => and
Oracle Span 6-7:  Anzoategui => (name :op "Anzoategui")
Oracle Span 4-5:  farmer => farm-01
Oracle Span 0-2:  Lorenzo Campos => (person :name (name :op "Campos" :op "Lorenzo"))
Oracle Span 9-10:  northern => north
Oracle Span 16-17:  reservist => reservist
Oracle Span 7-8:  state => state
Oracle Span 13-14:  training => train-01
Oracle Span 10-11:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Lorenzo	_	NNP	NNP	_	2	nn	_	_
2	Campos	_	NNP	NNP	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	a	_	DT	DT	_	5	det	_	_
5	farmer	_	NN	NN	_	0	root	_	_
6	in	_	IN	IN	_	5	prep	_	_
7	Anzoategui	_	NNP	NNP	_	8	nn	_	_
8	state	_	NN	NN	_	6	pobj	_	_
9	in	_	IN	IN	_	5	prep	_	_
10	northern	_	JJ	JJ	_	11	amod	_	_
11	Venezuela	_	NNP	NNP	_	9	pobj	_	_
12	and	_	CC	CC	_	5	cc	_	_
13	is	_	VBZ	VBZ	_	14	aux	_	_
14	training	_	VBG	VBG	_	5	conj	_	_
15	as	_	IN	IN	_	14	prep	_	_
16	a	_	DT	DT	_	17	det	_	_
17	reservist	_	NN	NN	_	15	pobj	_	_
18	.	_	.	.	_	5	punct	_	_

Oracle:
(a / and, op, p / person)
(a / and, op, t / train-01)
(c / country, name, n4 / name)
(c / country, part, n3 / north)
(f / farm-01, ARG0, p / person)
(n / name, op, "Campos")
(n / name, op, "Lorenzo")
(n2 / name, op, "Anzoategui")
(n4 / name, op, "Venezuela")
(p / person, location, s / state)
(p / person, name, n / name)
(s / state, location, n3 / north)
(s / state, name, n2 / name)
(t / train-01, ARG1, r / reservist)
(t / train-01, ARG2, p / person)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(1, 0),farmer,(person :ARG0-of farm-01),false), Span(10,11,List(4, 3, 2),Venezuela,(country :name (name :op "Venezuela")),false), Span(11,12,List(5),and,and,false), Span(13,14,List(6),training,train-01,false), Span(9,10,List(7),northern,north,false), Span(0,2,List(11, 10, 9, 8),Lorenzo Campos,(person :name (name :op "Lorenzo" :op "Campos")),false), Span(7,8,List(12),state,state,false)),Map(2 -> country, 5 -> and, 12 -> state, 8 -> person, 7 -> north, 1 -> farm-01, 4 -> "Venezuela", 11 -> "Campos", 6 -> train-01, 0 -> person, 9 -> name, 3 -> name, 10 -> "Lorenzo"),Map(n -> name, t -> train-01, p2 -> person, s -> state, p -> person, n3 -> name, a -> and, c -> country, f -> farm-01, n2 -> north))),[Ljava.lang.String;@295b8b5b,Annotation([Ljava.lang.String;@3a9e6e1f,[Ljava.lang.String;@57a38043,[Ljava.lang.String;@11796ab7),Annotation([Ljava.lang.String;@640d2a90,[Ljava.lang.String;@2d2a4e98,[Ledu.cmu.lti.nlp.amr.Dependency;@66c072e6),Annotation([Ljava.lang.String;@3cb6805b,[Ljava.lang.String;@316274f7,[Ljava.lang.String;@4e43b2cd),Annotation([Ljava.lang.String;@2b71bea1,[Ljava.lang.String;@234d47cc,[Ledu.cmu.lti.nlp.amr.Entity;@12a4a9e))
AMR:
(a / and, op, p2 / person)
(a / and, op, t / train-01)
(c / country, name, n / name)
(c / country, part, n2 / north)
(f / farm-01, ARG0, p / person)
(f / farm-01, ARG1, a / and)
(n / name, op, "Venezuela")
(n3 / name, op, "Campos")
(n3 / name, op, "Lorenzo")
(p2 / person, location, s / state)
(p2 / person, name, n3 / name)
(t / train-01, ARG1, c / country)
(t / train-01, ARG2, p2 / person)

Decoded in 586,710 microseconds
Sentence: Campos said Venezuelans want the world to know that Venezuelans are not preparing to attack anyone and that the mission is to protect Venezuela.

Oracle Span 1:  and => and
Oracle Span 2:  anyone => anyone
Oracle Span 3:  attack => attack-01
Oracle Span 4:  Campos => (person :name (name :op "Campos"))
Oracle Span 5:  know => know-01
Oracle Span 6:  mission => mission
Oracle Span 7:  preparing => prepare-01
Oracle Span 8:  protect => protect-01
Oracle Span 9:  said => say-01
Oracle Span 10:  Venezuela => (person :mod (country :name (name :op "Venezuela")))
Oracle Span 11:  want => want-01
Oracle Span 12:  world => world
NER Entity: (person :name (name :op "Campos"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 16-17:  and => and
Span 15-16:  anyone => anyone
Span 14-15:  attack => attack-01
Span 0-1:  Campos => (person :name (name :op "Campos"))
Span 7-8:  know => know-01
Span 19-20:  mission => mission
Span 12-13:  preparing => prepare-02
Span 22-23:  protect => protect-01
Span 1-2:  said => say-01
Span 4-5:  the => (country :name (name :op "North"))
Span 23-24:  Venezuela. => (country :name (name :op "Venezuela"))
Span 3-4:  want => want-01
Span 5-6:  world => world

Langrangian relaxation converged after 38 iterations. Delta = 0.0
Oracle Span 16-17:  and => and
Oracle Span 15-16:  anyone => anyone
Oracle Span 14-15:  attack => attack-01
Oracle Span 0-1:  Campos => (person :name (name :op "Campos"))
Oracle Span 7-8:  know => know-01
Oracle Span 19-20:  mission => mission
Oracle Span 12-13:  preparing => prepare-01
Oracle Span 22-23:  protect => protect-01
Oracle Span 1-2:  said => say-01
Oracle Span 23-24:  Venezuela => (person :mod (country :name (name :op "Venezuela")))
Oracle Span 3-4:  want => want-01
Oracle Span 5-6:  world => world

Dependencies:
1	Campos	_	NNS	NNS	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	Venezuelans	_	NNP	NNP	_	4	nsubj	_	_
4	want	_	VBP	VBP	_	2	ccomp	_	_
5	the	_	DT	DT	_	6	det	_	_
6	world	_	NN	NN	_	4	dobj	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	know	_	VB	VB	_	4	xcomp	_	_
9	that	_	IN	IN	_	13	mark	_	_
10	Venezuelans	_	NNP	NNP	_	13	nsubj	_	_
11	are	_	VBP	VBP	_	13	aux	_	_
12	not	_	RB	RB	_	13	neg	_	_
13	preparing	_	VBG	VBG	_	8	ccomp	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	attack	_	VB	VB	_	13	xcomp	_	_
16	anyone	_	NN	NN	_	15	dobj	_	_
17	and	_	CC	CC	_	13	cc	_	_
18	that	_	IN	IN	_	21	mark	_	_
19	the	_	DT	DT	_	20	det	_	_
20	mission	_	NN	NN	_	21	nsubj	_	_
21	is	_	VBZ	VBZ	_	13	conj	_	_
22	to	_	TO	TO	_	23	aux	_	_
23	protect	_	VB	VB	_	21	xcomp	_	_
24	Venezuela	_	NNP	NNP	_	23	dobj	_	_
25	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, p3 / prepare-01)
(a / and, op, p4 / protect-01)
(a2 / attack-01, ARG0, p2 / person)
(a2 / attack-01, ARG1, a3 / anyone)
(c / country, name, n2 / name)
(k / know-01, ARG0, w2 / world)
(k / know-01, ARG1, a / and)
(m / mission, purpose, p4 / protect-01)
(n / name, op, "Campos")
(n2 / name, op, "Venezuela")
(p / person, name, n / name)
(p2 / person, mod, c / country)
(p3 / prepare-01, ARG0, p2 / person)
(p3 / prepare-01, ARG1, a2 / attack-01)
(p4 / protect-01, ARG1, c / country)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, w / want-01)
(w / want-01, ARG0, p2 / person)
(w / want-01, ARG1, k / know-01)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),attack,attack-01,false), Span(16,17,List(1),and,and,false), Span(0,1,List(4, 3, 2),Campos,(person :name (name :op "Campos")),false), Span(15,16,List(5),anyone,anyone,false), Span(7,8,List(6),know,know-01,false), Span(4,5,List(9, 8, 7),the,(country :name (name :op "North")),false), Span(12,13,List(10),preparing,prepare-02,false), Span(23,24,List(13, 12, 11),Venezuela.,(country :name (name :op "Venezuela")),false), Span(1,2,List(14),said,say-01,false), Span(19,20,List(15),mission,mission,false), Span(5,6,List(16),world,world,false), Span(22,23,List(17),protect,protect-01,false), Span(3,4,List(18),want,want-01,false)),Map(2 -> person, 5 -> anyone, 12 -> name, 15 -> mission, 8 -> name, 18 -> want-01, 7 -> country, 17 -> protect-01, 1 -> and, 4 -> "Campos", 11 -> country, 14 -> say-01, 6 -> know-01, 0 -> attack-01, 9 -> "North", 16 -> world, 3 -> name, 10 -> prepare-02, 13 -> "Venezuela"),Map(w -> world, n -> name, k -> know-01, p2 -> prepare-02, a3 -> anyone, s -> say-01, m -> mission, p -> person, a -> attack-01, n3 -> name, w2 -> want-01, a2 -> and, c -> country, p3 -> protect-01, n2 -> name, c2 -> country))),[Ljava.lang.String;@16c2edbd,Annotation([Ljava.lang.String;@f62768b,[Ljava.lang.String;@2388f0b5,[Ljava.lang.String;@16716c87),Annotation([Ljava.lang.String;@17dfc4f1,[Ljava.lang.String;@b953eaf,[Ledu.cmu.lti.nlp.amr.Dependency;@6ffc7a30),Annotation([Ljava.lang.String;@7274261c,[Ljava.lang.String;@1b659cef,[Ljava.lang.String;@3927a96a),Annotation([Ljava.lang.String;@35066984,[Ljava.lang.String;@6691fdfe,[Ledu.cmu.lti.nlp.amr.Entity;@51a49727))
AMR:
(a / attack-01, ARG0, c2 / country)
(a / attack-01, ARG1, a3 / anyone)
(a2 / and, op, p2 / prepare-02)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(k / know-01, ARG1, a2 / and)
(m / mission, purpose, p3 / protect-01)
(n / name, op, "Campos")
(n2 / name, op, "North")
(n3 / name, op, "Venezuela")
(p / person, name, n / name)
(p2 / prepare-02, ARG0, c / country)
(p2 / prepare-02, ARG1, a / attack-01)
(p3 / protect-01, ARG1, c2 / country)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, w2 / want-01)
(w2 / want-01, ARG0, c2 / country)
(w2 / want-01, ARG1, w / world)

Decoded in 1,430,772 microseconds
Sentence: In May, Chavez's government announced details in 050500 of an $18.6 million deal with a Russian firm to purchase 100000 AK-103 assault rifles with 30 rounds of ammunition each and the technology transfer for Venezuela to manufacture the rifles.

Oracle Span 1:  050500 => (date-entity :month 5 :year 2005)
Oracle Span 2:  100000 => 100000
Oracle Span 3:  30 => 30
Oracle Span 4:  AK => (name :op "AK-103")
Oracle Span 5:  ammunition => ammunition
Oracle Span 6:  and => and
Oracle Span 7:  announced => announce-01
Oracle Span 8:  assault => assault-01
Oracle Span 9:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 10:  deal => deal-01
Oracle Span 11:  details => detail-01
Oracle Span 12:  each => each
Oracle Span 13:  firm => firm
Oracle Span 14:  government => (government-organization :ARG0-of govern-01)
Oracle Span 15:  manufacture => manufacture-01
Oracle Span 16:  purchase => purchase-01
Oracle Span 17:  rifles => rifle
Oracle Span 18:  rounds => round
Oracle Span 19:  Russian => (country :name (name :op "Russia"))
Oracle Span 20:  technology => technology
Oracle Span 21:  transfer => transfer-01
Oracle Span 22:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Chavez"))
mkDayMonthYear(050500,00,05,05)
NER Entity: (country :name (name :op "Venezuela"))
NER Entity: (thing :name (name :op "AK" :op "-" :op "103"))
mkDayMonthYear(100000,00,00,10)
Spans:
Span 41-42:   => rifle
Span 39-40:   => manufacture-01
Span 7-8:  050500 => detail-01
Span 19-20:  100000 => firm
Span 24-25:  30 => assault-01
Span 21-22:  assault => purchase-01
Span 5-6:  details => (government-organization :ARG0-of govern-01)
Span 28-29:  each => round
Span 3-4:  government => (person :name (name :op "Chavez"))
Span 6-7:  in => announce-01
Span 0-1:  In => 1
Span 0-2:  In May, => (date-entity :month 5)
Span 18-19:  purchase => (country :name (name :op "Russia"))
Span 25-26:  rounds => rifle
Span 15-16:  Russian => deal-01
Span 31-32:  technology => each
Span 37-38:  the => (country :name (name :op "Venezuela"))
Span 30-31:  the => ammunition
Span 35-36:  to => transfer-01
Span 32-33:  transfer => and
Span 34-35:  Venezuela => technology

Langrangian relaxation converged after 56 iterations. Delta = 0.0
Oracle Span 9-10:  050500 => (date-entity :month 5 :year 2005)
Oracle Span 22-23:  100000 => 100000
Oracle Span 29-30:  30 => 30
Oracle Span 23-24:  AK => (name :op "AK-103")
Oracle Span 32-33:  ammunition => ammunition
Oracle Span 34-35:  and => and
Oracle Span 6-7:  announced => announce-01
Oracle Span 26-27:  assault => assault-01
Oracle Span 3-4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 15-16:  deal => deal-01
Oracle Span 7-8:  details => detail-01
Oracle Span 33-34:  each => each
Oracle Span 19-20:  firm => firm
Oracle Span 5-6:  government => (government-organization :ARG0-of govern-01)
Oracle Span 41-42:  manufacture => manufacture-01
Oracle Span 21-22:  purchase => purchase-01
Oracle Span 27-28:  rifles => rifle
Oracle Span 30-31:  rounds => round
Oracle Span 18-19:  Russian => (country :name (name :op "Russia"))
Oracle Span 36-37:  technology => technology
Oracle Span 37-38:  transfer => transfer-01
Oracle Span 39-40:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	In	_	IN	IN	_	7	prep	_	_
2	May	_	NNP	NNP	_	1	pobj	_	_
3	,	_	,	,	_	7	punct	_	_
4	Chavez	_	NNP	NNP	_	6	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	government	_	NN	NN	_	7	nsubj	_	_
7	announced	_	VBD	VBD	_	0	root	_	_
8	details	_	NNS	NNS	_	7	dobj	_	_
9	in	_	IN	IN	_	7	prep	_	_
10	050500	_	CD	CD	_	9	pobj	_	_
11	of	_	IN	IN	_	10	prep	_	_
12	an	_	DT	DT	_	16	det	_	_
13	$	_	$	$	_	16	amod	_	_
14	18.6	_	CD	CD	_	15	number	_	_
15	million	_	CD	CD	_	13	num	_	_
16	deal	_	NN	NN	_	11	pobj	_	_
17	with	_	IN	IN	_	16	prep	_	_
18	a	_	DT	DT	_	20	det	_	_
19	Russian	_	JJ	JJ	_	20	amod	_	_
20	firm	_	NN	NN	_	17	pobj	_	_
21	to	_	TO	TO	_	22	aux	_	_
22	purchase	_	VB	VB	_	7	vmod	_	_
23	100000	_	CD	CD	_	26	num	_	_
24	AK-103	_	NN	NN	_	26	nn	_	_
25	assault	_	NN	NN	_	26	nn	_	_
26	rifles	_	NNS	NNS	_	22	dobj	_	_
27	with	_	IN	IN	_	22	prep	_	_
28	30	_	CD	CD	_	29	num	_	_
29	rounds	_	NNS	NNS	_	27	pobj	_	_
30	of	_	IN	IN	_	29	prep	_	_
31	ammunition	_	NN	NN	_	30	pobj	_	_
32	each	_	DT	DT	_	31	dep	_	_
33	and	_	CC	CC	_	31	cc	_	_
34	the	_	DT	DT	_	36	det	_	_
35	technology	_	NN	NN	_	36	nn	_	_
36	transfer	_	NN	NN	_	31	conj	_	_
37	for	_	IN	IN	_	36	prep	_	_
38	Venezuela	_	NNP	NNP	_	37	pobj	_	_
39	to	_	TO	TO	_	40	aux	_	_
40	manufacture	_	VB	VB	_	22	vmod	_	_
41	the	_	DT	DT	_	42	det	_	_
42	rifles	_	NNS	NNS	_	40	dobj	_	_
43	.	_	.	.	_	7	punct	_	_

Oracle:
(a / announce-01, ARG0, g / government-organization)
(a / announce-01, ARG1, a2 / and)
(a / announce-01, time, d / date-entity)
(a2 / and, op, d5 / detail-01)
(a2 / and, op, t / transfer-01)
(a4 / assault-01, instrument, r / rifle)
(a5 / ammunition, consist, r2 / round)
(c / country, name, n2 / name)
(c2 / country, name, n4 / name)
(d / date-entity, month, 5)
(d / date-entity, year, 2005)
(d5 / detail-01, ARG1, d6 / deal-01)
(d6 / deal-01, ARG1, p2 / purchase-01)
(f / firm, mod, c / country)
(g / government-organization, poss, p / person)
(g2 / govern-01, ARG0, g / government-organization)
(m3 / manufacture-01, ARG0, c2 / country)
(m3 / manufacture-01, ARG1, r / rifle)
(n / name, op, "Chavez")
(n2 / name, op, "Russia")
(n3 / name, op, "AK-103")
(n4 / name, op, "Venezuela")
(p / person, name, n / name)
(p2 / purchase-01, ARG0, g / government-organization)
(p2 / purchase-01, ARG1, r / rifle)
(r / rifle, accompanier, r2 / round)
(r / rifle, mod, e / each)
(r / rifle, name, n3 / name)
(r / rifle, quant, 1 / 100000)
(r2 / round, quant, 3 / 30)
(t / transfer-01, ARG1, t2 / technology)
(t / transfer-01, ARG2, c2 / country)
(t / transfer-01, purpose, m3 / manufacture-01)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),assault,purchase-01,false), Span(37,38,List(3, 2, 1),the,(country :name (name :op "Venezuela")),false), Span(7,8,List(4),050500,detail-01,false), Span(15,16,List(5),Russian,deal-01,false), Span(25,26,List(6),rounds,rifle,false), Span(41,42,List(7),,rifle,false), Span(32,33,List(8),transfer,and,false), Span(3,4,List(11, 10, 9),government,(person :name (name :op "Chavez")),false), Span(24,25,List(12),30,assault-01,false), Span(35,36,List(13),to,transfer-01,false), Span(6,7,List(14),in,announce-01,false), Span(30,31,List(15),the,ammunition,false), Span(0,1,List(16),In,1,false), Span(5,6,List(18, 17),details,(government-organization :ARG0-of govern-01),false), Span(28,29,List(19),each,round,false), Span(31,32,List(20),technology,each,false), Span(39,40,List(21),,manufacture-01,false), Span(18,19,List(24, 23, 22),purchase,(country :name (name :op "Russia")),false), Span(19,20,List(25),100000,firm,false), Span(34,35,List(26),Venezuela,technology,false), Span(0,2,List(28, 27),In May,,(date-entity :month 5),false)),Map(2 -> name, 5 -> deal-01, 27 -> date-entity, 12 -> assault-01, 8 -> and, 15 -> ammunition, 21 -> manufacture-01, 18 -> govern-01, 24 -> "Russia", 7 -> rifle, 1 -> country, 17 -> government-organization, 23 -> name, 26 -> technology, 4 -> detail-01, 11 -> "Chavez", 14 -> announce-01, 20 -> each, 28 -> 5, 6 -> rifle, 9 -> person, 0 -> purchase-01, 22 -> country, 16 -> 1, 19 -> round, 10 -> name, 3 -> "Venezuela", 25 -> firm, 13 -> transfer-01),Map(e -> each, n -> name, r3 -> round, 5 -> 5, t -> transfer-01, d3 -> date-entity, p2 -> person, a3 -> announce-01, d -> detail-01, m -> manufacture-01, 1 -> 1, g2 -> govern-01, r2 -> rifle, p -> purchase-01, g -> government-organization, a -> and, n3 -> name, d2 -> deal-01, t2 -> technology, a2 -> assault-01, r -> rifle, c -> country, f -> firm, n2 -> name, c2 -> country, a4 -> ammunition))),[Ljava.lang.String;@1bf17140,Annotation([Ljava.lang.String;@79523c19,[Ljava.lang.String;@65fa2d4a,[Ljava.lang.String;@46d5597d),Annotation([Ljava.lang.String;@563e5b96,[Ljava.lang.String;@3ee407bc,[Ledu.cmu.lti.nlp.amr.Dependency;@a40fd57),Annotation([Ljava.lang.String;@66b243d3,[Ljava.lang.String;@42744678,[Ljava.lang.String;@5c33706d),Annotation([Ljava.lang.String;@511484f9,[Ljava.lang.String;@254cf9d3,[Ledu.cmu.lti.nlp.amr.Entity;@45eb2c84))
AMR:
(a / and, quant, a4 / ammunition)
(a2 / assault-01, ARG0, g / government-organization)
(a2 / assault-01, ARG1, r / rifle)
(a3 / announce-01, ARG0, g / government-organization)
(a3 / announce-01, ARG1, t2 / technology)
(a3 / announce-01, time, 1 / 1)
(a3 / announce-01, time, d3 / date-entity)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(d / detail-01, ARG1, d2 / deal-01)
(d2 / deal-01, ARG1, p / purchase-01)
(d3 / date-entity, month, 5 / 5)
(e / each, op, a / and)
(f / firm, mod, c2 / country)
(g / government-organization, poss, p2 / person)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(m / manufacture-01, ARG1, r2 / rifle)
(n / name, op, "Venezuela")
(n2 / name, op, "Chavez")
(n3 / name, op, "Russia")
(p / purchase-01, ARG0, f / firm)
(p / purchase-01, ARG1, r2 / rifle)
(p / purchase-01, time, r3 / round)
(p2 / person, name, n2 / name)
(t / transfer-01, ARG1, a / and)
(t / transfer-01, ARG6, t2 / technology)
(t2 / technology, op, d / detail-01)

Decoded in 4,763,522 microseconds
Sentence: The deal works out to $186.22 per rifle.

Oracle Span 1:  186.22 => 186.22
Oracle Span 2:  deal => deal-01
Oracle Span 3:  rifle => rifle
Oracle Span 4:  works => work-05
Spans:
Span 8-9:   => rifle-01
Span 1-2:  deal => deal
Span 6-7:  per => x
Span 2-3:  works => work-05

Langrangian relaxation converged after 24 iterations. Delta = 0.0
Oracle Span 6-7:  186.22 => 186.22
Oracle Span 1-2:  deal => deal-01
Oracle Span 8-9:  rifle => rifle
Oracle Span 2-3:  works => work-05

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	deal	_	NN	NN	_	3	nsubj	_	_
3	works	_	VBZ	VBZ	_	0	root	_	_
4	out	_	RP	RP	_	3	prt	_	_
5	to	_	TO	TO	_	3	prep	_	_
6	$	_	$	$	_	5	pobj	_	_
7	186.22	_	CD	CD	_	6	num	_	_
8	per	_	IN	IN	_	6	prep	_	_
9	rifle	_	NN	NN	_	8	pobj	_	_
10	.	_	.	.	_	3	punct	_	_

Oracle:
(w / work-05, ARG1, d2 / deal-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),per,x,false), Span(1,2,List(1),deal,deal,false), Span(2,3,List(2),works,work-05,false), Span(8,9,List(3),,rifle-01,false)),Map(2 -> work-05, 1 -> deal, 0 -> x, 3 -> rifle-01),Map(w -> work-05, d -> deal, x -> x, r -> rifle-01))),[Ljava.lang.String;@50a443c7,Annotation([Ljava.lang.String;@5cb94074,[Ljava.lang.String;@10308397,[Ljava.lang.String;@1201bed6),Annotation([Ljava.lang.String;@60497d2a,[Ljava.lang.String;@76e53bb7,[Ledu.cmu.lti.nlp.amr.Dependency;@625d32c7),Annotation([Ljava.lang.String;@7db5c754,[Ljava.lang.String;@56be45e5,[Ljava.lang.String;@959e406),Annotation([Ljava.lang.String;@21924e0,[Ljava.lang.String;@5145dc90,[Ledu.cmu.lti.nlp.amr.Entity;@75f02a30))
AMR:
(r / rifle-01, ARG1, d / deal)
(r / rifle-01, ARG6, x / x)
(w / work-05, ARG1, d / deal)

Decoded in 183,101 microseconds
Sentence: This price is considerably less costly than the US mail-order price of $825 to $850 for the same weapon.

Oracle Span 1:  825 => 825
Oracle Span 2:  850 => 850
Oracle Span 3:  considerably => considerable
Oracle Span 4:  costly => cost-01
Oracle Span 5:  less => less
Oracle Span 6:  mail => mail
Oracle Span 7:  order => order-02
Oracle Span 8:  price => (thing :ARG2-of price-01)
Oracle Span 9:  price => price-01
Oracle Span 10:  same => same-41
Oracle Span 11:  This => this
Oracle Span 12:  US => (country :name (name :op "US"))
Oracle Span 13:  weapon => weapon
NER Entity: (country :name (name :op "US"))
Spans:
Span 19-20:   => shame-01
Span 20-21:   => weapon
Span 3-4:  considerably => considerable
Span 5-6:  costly => costly
Span 4-5:  less => less
Span 10-11:  price => (thing :ARG2-of price-01)
Span 1-2:  price => (thing :ARG2-of price-01)
Span 16-17:  the => 850
Span 0-1:  This => this
Span 13-14:  to => 825
Span 8-9:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 15-16:  825 => 825
Oracle Span 18-19:  850 => 850
Oracle Span 3-4:  considerably => considerable
Oracle Span 5-6:  costly => cost-01
Oracle Span 4-5:  less => less
Oracle Span 9-10:  mail => mail
Oracle Span 11-12:  order => order-02
Oracle Span 1-2:  price => (thing :ARG2-of price-01)
Oracle Span 12-13:  price => price-01
Oracle Span 21-22:  same => same-41
Oracle Span 0-1:  This => this
Oracle Span 8-9:  US => (country :name (name :op "US"))
Oracle Span 22-23:  weapon => weapon

Dependencies:
1	This	_	DT	DT	_	2	det	_	_
2	price	_	NN	NN	_	6	nsubj	_	_
3	is	_	VBZ	VBZ	_	6	cop	_	_
4	considerably	_	RB	RB	_	6	advmod	_	_
5	less	_	RBR	RBR	_	6	advmod	_	_
6	costly	_	JJ	JJ	_	0	root	_	_
7	than	_	IN	IN	_	6	prep	_	_
8	the	_	DT	DT	_	11	det	_	_
9	US	_	NNP	NNP	_	11	nn	_	_
10	mail-order	_	NN	NN	_	11	nn	_	_
11	price	_	NN	NN	_	7	pobj	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	$	_	$	$	_	16	dep	_	_
14	825	_	CD	CD	_	16	number	_	_
15	to	_	TO	TO	_	16	dep	_	_
16	$	_	$	$	_	12	pobj	_	_
17	850	_	CD	CD	_	16	num	_	_
18	for	_	IN	IN	_	16	prep	_	_
19	the	_	DT	DT	_	21	det	_	_
20	same	_	JJ	JJ	_	21	amod	_	_
21	weapon	_	NN	NN	_	18	pobj	_	_
22	.	_	.	.	_	6	punct	_	_

Oracle:
(c / cost-01, ARG1, t / thing)
(c / cost-01, degree, l / less)
(c3 / country, name, n / name)
(l / less, manner, c2 / considerable)
(m3 / mail, mod, c3 / country)
(n / name, op, "US")
(o / order-02, ARG1, w / weapon)
(o / order-02, medium, m3 / mail)
(p / price-01, ARG2, t / thing)
(p2 / price-01, ARG1, w / weapon)
(s / same-41, ARG1, w / weapon)
(t / thing, mod, t2 / this)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),This,this,false), Span(5,6,List(1),costly,costly,false), Span(4,5,List(2),less,less,false), Span(10,11,List(4, 3),price,(thing :ARG2-of price-01),false), Span(13,14,List(5),to,825,false), Span(19,20,List(6),,shame-01,false), Span(3,4,List(7),considerably,considerable,false), Span(16,17,List(8),the,850,false), Span(20,21,List(9),,weapon,false), Span(1,2,List(11, 10),price,(thing :ARG2-of price-01),false), Span(8,9,List(14, 13, 12),US,(country :name (name :op "US")),false)),Map(2 -> less, 5 -> 825, 12 -> country, 8 -> 850, 7 -> considerable, 1 -> costly, 4 -> price-01, 11 -> price-01, 14 -> "US", 6 -> shame-01, 0 -> this, 9 -> weapon, 3 -> thing, 10 -> thing, 13 -> name),Map(n -> name, w -> weapon, t -> this, 8 -> 825, p2 -> price-01, s -> shame-01, t3 -> thing, p -> price-01, c3 -> country, 82 -> 850, t2 -> thing, c -> costly, l -> less, c2 -> considerable))),[Ljava.lang.String;@4d34e1b,Annotation([Ljava.lang.String;@305083c1,[Ljava.lang.String;@5c275991,[Ljava.lang.String;@161bb292),Annotation([Ljava.lang.String;@8a695dc,[Ljava.lang.String;@3c5c4182,[Ledu.cmu.lti.nlp.amr.Dependency;@5a517c49),Annotation([Ljava.lang.String;@1195cab3,[Ljava.lang.String;@2d21a528,[Ljava.lang.String;@73afa15f),Annotation([Ljava.lang.String;@224d3857,[Ljava.lang.String;@1db2beff,[Ledu.cmu.lti.nlp.amr.Entity;@3d9a4084))
AMR:
(c / costly, domain, t3 / thing)
(c3 / country, name, n / name)
(l / less, manner, c2 / considerable)
(n / name, op, "US")
(p / price-01, ARG1, c3 / country)
(p / price-01, ARG2, t2 / thing)
(p2 / price-01, ARG1, l / less)
(p2 / price-01, ARG2, t3 / thing)
(s / shame-01, ARG0, 8 / 825)
(s / shame-01, ARG1, 82 / 850)
(s / shame-01, ARG6, w / weapon)
(t2 / thing, mod, t / this)
(t3 / thing, mod, t / this)
(t3 / thing, op, s / shame-01)

Decoded in 1,245,130 microseconds
Sentence: The Government of Venezuela also intends to buy 10 Russian helicopters, 10 Spanish transport planes, and 6 Spanish naval craft.

Oracle Span 1:  10 => 10
Oracle Span 2:  10 => 10
Oracle Span 3:  6 => 6
Oracle Span 4:  also => also
Oracle Span 5:  and => and
Oracle Span 6:  buy => buy-01
Oracle Span 7:  craft => craft
Oracle Span 8:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 9:  helicopters => helicopter
Oracle Span 10:  intends => intend-01
Oracle Span 11:  planes => plane
Oracle Span 12:  Russian => (country :name (name :op "Russia"))
Oracle Span 13:  transport => transport-01
Oracle Span 14:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "Venezuela"))
NER Entity: (thing :name (name :op "Russian"))
Spans:
Span 20-21:   => navy
Span 21-22:   => craft
Span 4-5:  also => also
Span 15-16:  and => plane
Span 7-8:  buy => buy-01
Span 1-2:  Government => (government-organization :ARG0-of govern-01)
Span 10-11:  helicopters, => helicopter
Span 5-6:  intends => intend-01
Span 14-15:  planes, => transport-01
Span 9-10:  Russian => (country :name (name :op "Russia"))
Span 17-18:  Spanish => and
Span 0-1:  The => 1
Span 3-4:  Venezuela => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 45 iterations. Delta = 0.0
Oracle Span 8-9:  10 => 10
Oracle Span 12-13:  10 => 10
Oracle Span 18-19:  6 => 6
Oracle Span 4-5:  also => also
Oracle Span 17-18:  and => and
Oracle Span 7-8:  buy => buy-01
Oracle Span 21-22:  craft => craft
Oracle Span 1-2:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 10-11:  helicopters => helicopter
Oracle Span 5-6:  intends => intend-01
Oracle Span 15-16:  planes => plane
Oracle Span 9-10:  Russian => (country :name (name :op "Russia"))
Oracle Span 14-15:  transport => transport-01
Oracle Span 3-4:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	Government	_	NN	NN	_	6	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	Venezuela	_	NNP	NNP	_	3	pobj	_	_
5	also	_	RB	RB	_	6	advmod	_	_
6	intends	_	VBZ	VBZ	_	0	root	_	_
7	to	_	TO	TO	_	8	aux	_	_
8	buy	_	VB	VB	_	6	xcomp	_	_
9	10	_	CD	CD	_	11	num	_	_
10	Russian	_	JJ	JJ	_	11	amod	_	_
11	helicopters	_	NNS	NNS	_	8	dobj	_	_
12	,	_	,	,	_	11	punct	_	_
13	10	_	CD	CD	_	16	num	_	_
14	Spanish	_	JJ	JJ	_	16	amod	_	_
15	transport	_	NN	NN	_	16	nn	_	_
16	planes	_	NNS	NNS	_	11	conj	_	_
17	,	_	,	,	_	11	punct	_	_
18	and	_	CC	CC	_	11	cc	_	_
19	6	_	CD	CD	_	22	num	_	_
20	Spanish	_	JJ	JJ	_	22	amod	_	_
21	naval	_	JJ	JJ	_	22	amod	_	_
22	craft	_	NN	NN	_	11	conj	_	_
23	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, c4 / craft)
(a / and, op, h / helicopter)
(a / and, op, p / plane)
(b / buy-01, ARG0, g / government-organization)
(b / buy-01, ARG1, a / and)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c4 / craft, quant, 6 / 6)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(h / helicopter, quant, 12 / 10)
(h / helicopter, source, c2 / country)
(i / intend-01, ARG0, g / government-organization)
(i / intend-01, ARG1, b / buy-01)
(i / intend-01, mod, a2 / also)
(n / name, op, "Venezuela")
(n2 / name, op, "Russia")
(p / plane, mod, t / transport-01)
(p / plane, quant, 1 / 10)

Input(Some(Graph(null,ArrayBuffer(Span(20,21,List(0),,navy,false), Span(10,11,List(1),helicopters,,helicopter,false), Span(7,8,List(2),buy,buy-01,false), Span(21,22,List(3),,craft,false), Span(5,6,List(4),intends,intend-01,false), Span(0,1,List(5),The,1,false), Span(14,15,List(6),planes,,transport-01,false), Span(4,5,List(7),also,also,false), Span(15,16,List(8),and,plane,false), Span(1,2,List(10, 9),Government,(government-organization :ARG0-of govern-01),false), Span(3,4,List(13, 12, 11),Venezuela,(country :name (name :op "Venezuela")),false), Span(9,10,List(16, 15, 14),Russian,(country :name (name :op "Russia")),false), Span(17,18,List(17),Spanish,and,false)),Map(2 -> buy-01, 5 -> 1, 12 -> name, 15 -> name, 8 -> plane, 7 -> also, 17 -> and, 1 -> helicopter, 4 -> intend-01, 11 -> country, 14 -> country, 6 -> transport-01, 0 -> navy, 9 -> government-organization, 16 -> "Russia", 3 -> craft, 10 -> govern-01, 13 -> "Venezuela"),Map(n -> navy, h -> helicopter, b -> buy-01, t -> transport-01, 1 -> 1, g2 -> govern-01, p -> plane, g -> government-organization, n3 -> name, c3 -> country, a -> also, a2 -> and, i -> intend-01, c -> craft, c2 -> country, n2 -> name))),[Ljava.lang.String;@14718e92,Annotation([Ljava.lang.String;@4d7d7b8f,[Ljava.lang.String;@31337065,[Ljava.lang.String;@35a4877b),Annotation([Ljava.lang.String;@2db99a43,[Ljava.lang.String;@bbe3d78,[Ledu.cmu.lti.nlp.amr.Dependency;@21a4c432),Annotation([Ljava.lang.String;@302a0022,[Ljava.lang.String;@51a0efe6,[Ljava.lang.String;@2b8f5d57),Annotation([Ljava.lang.String;@2c0d9940,[Ljava.lang.String;@4c46b7f3,[Ledu.cmu.lti.nlp.amr.Entity;@1a4fae42))
AMR:
(a2 / and, op, c / craft)
(a2 / and, op, h / helicopter)
(a2 / and, op, p / plane)
(b / buy-01, ARG0, g / government-organization)
(b / buy-01, ARG1, a2 / and)
(c / craft, mod, n / navy)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c2 / country)
(h / helicopter, source, c3 / country)
(i / intend-01, ARG0, g / government-organization)
(i / intend-01, ARG1, b / buy-01)
(i / intend-01, mod, a / also)
(n2 / name, op, "Venezuela")
(n3 / name, op, "Russia")
(p / plane, mod, t / transport-01)
(t / transport-01, ARG1, 1 / 1)

Decoded in 1,827,622 microseconds
Sentence: Venezuelan officials say the government is negotiating with Brazil to buy around 24 air support and training planes.

Oracle Span 1:  24 => 24
Oracle Span 2:  air => air
Oracle Span 3:  and => and
Oracle Span 4:  around => around
Oracle Span 5:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 6:  buy => buy-01
Oracle Span 7:  government => (government-organization :ARG0-of govern-01)
Oracle Span 8:  negotiating => negotiate-01
Oracle Span 9:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 10:  planes => plane
Oracle Span 11:  say => say-01
Oracle Span 12:  support => support-01
Oracle Span 13:  training => train-01
Oracle Span 14:  Venezuelan => (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "Brazil"))
NER Entity: (thing :name (name :op "Venezuelan"))
Spans:
Span 13-14:  air => air
Span 15-16:  and => and
Span 11-12:  around => around
Span 8-9:  Brazil => (country :name (name :op "Brazil"))
Span 10-11:  buy => buy-01
Span 4-5:  government => (government-organization :ARG0-of govern-01)
Span 6-7:  negotiating => negotiate-01
Span 1-2:  officials => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 17-18:  planes. => plane
Span 2-3:  say => say-01
Span 14-15:  support => support-01
Span 16-17:  training => train-01
Span 0-1:  Venezuelan => 1

Langrangian relaxation converged after 31 iterations. Delta = 0.0
Oracle Span 12-13:  24 => 24
Oracle Span 13-14:  air => air
Oracle Span 15-16:  and => and
Oracle Span 11-12:  around => around
Oracle Span 8-9:  Brazil => (country :name (name :op "Brazil"))
Oracle Span 10-11:  buy => buy-01
Oracle Span 4-5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6-7:  negotiating => negotiate-01
Oracle Span 1-2:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 17-18:  planes => plane
Oracle Span 2-3:  say => say-01
Oracle Span 14-15:  support => support-01
Oracle Span 16-17:  training => train-01
Oracle Span 0-1:  Venezuelan => (country :name (name :op "Venezuela"))

Dependencies:
1	Venezuelan	_	JJ	JJ	_	2	amod	_	_
2	officials	_	NNS	NNS	_	3	nsubj	_	_
3	say	_	VBP	VBP	_	0	root	_	_
4	the	_	DT	DT	_	5	det	_	_
5	government	_	NN	NN	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	aux	_	_
7	negotiating	_	VBG	VBG	_	3	ccomp	_	_
8	with	_	IN	IN	_	7	prep	_	_
9	Brazil	_	NNP	NNP	_	8	pobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	buy	_	VB	VB	_	7	xcomp	_	_
12	around	_	RB	RB	_	13	quantmod	_	_
13	24	_	CD	CD	_	15	num	_	_
14	air	_	NN	NN	_	15	nn	_	_
15	support	_	NN	NN	_	11	dobj	_	_
16	and	_	CC	CC	_	15	cc	_	_
17	training	_	NN	NN	_	18	nn	_	_
18	planes	_	NNS	NNS	_	15	conj	_	_
19	.	_	.	.	_	3	punct	_	_

Oracle:
(a / around, op, 2 / 24)
(a4 / and, op, p3 / plane)
(a4 / and, quant, a / around)
(b / buy-01, ARG0, g / government-organization)
(b / buy-01, ARG1, a4 / and)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(g2 / govern-01, ARG0, g / government-organization)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(n / name, op, "Venezuela")
(n2 / negotiate-01, ARG0, g / government-organization)
(n2 / negotiate-01, ARG1, c2 / country)
(n2 / negotiate-01, ARG2, b / buy-01)
(n3 / name, op, "Brazil")
(p3 / plane, purpose, t / train-01)
(s / say-01, ARG1, n2 / negotiate-01)
(s2 / support-01, ARG1, a3 / air)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(2, 1, 0),officials,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(11,12,List(3),around,around,false), Span(6,7,List(4),negotiating,negotiate-01,false), Span(16,17,List(5),training,train-01,false), Span(13,14,List(6),air,air,false), Span(15,16,List(7),and,and,false), Span(0,1,List(8),Venezuelan,1,false), Span(4,5,List(10, 9),government,(government-organization :ARG0-of govern-01),false), Span(14,15,List(11),support,support-01,false), Span(17,18,List(12),planes.,plane,false), Span(8,9,List(15, 14, 13),Brazil,(country :name (name :op "Brazil")),false), Span(10,11,List(16),buy,buy-01,false), Span(2,3,List(17),say,say-01,false)),Map(2 -> official, 5 -> train-01, 12 -> plane, 15 -> "Brazil", 8 -> 1, 7 -> and, 17 -> say-01, 1 -> have-org-role-91, 4 -> negotiate-01, 11 -> support-01, 14 -> name, 6 -> air, 0 -> person, 9 -> government-organization, 16 -> buy-01, 3 -> around, 10 -> govern-01, 13 -> country),Map(n -> negotiate-01, h -> have-org-role-91, s2 -> say-01, b -> buy-01, t -> train-01, p2 -> plane, a3 -> and, s -> support-01, 1 -> 1, g2 -> govern-01, p -> person, g -> government-organization, a -> around, a2 -> air, c -> country, o -> official, n2 -> name))),[Ljava.lang.String;@5e899c22,Annotation([Ljava.lang.String;@1395ec47,[Ljava.lang.String;@61d9a080,[Ljava.lang.String;@4ec08f45),Annotation([Ljava.lang.String;@5cba7233,[Ljava.lang.String;@60f14a37,[Ledu.cmu.lti.nlp.amr.Dependency;@4c003b09),Annotation([Ljava.lang.String;@6702f6b,[Ljava.lang.String;@954fe7c,[Ljava.lang.String;@631ebd93),Annotation([Ljava.lang.String;@2e8b1a8a,[Ljava.lang.String;@29876347,[Ledu.cmu.lti.nlp.amr.Entity;@70edf15))
AMR:
(a3 / and, op, p2 / plane)
(a3 / and, op, s / support-01)
(a3 / and, quant, a / around)
(b / buy-01, ARG0, g / government-organization)
(b / buy-01, ARG1, a3 / and)
(c / country, name, n2 / name)
(g2 / govern-01, ARG0, g / government-organization)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, 1 / 1)
(h / have-org-role-91, ARG2, o / official)
(n / negotiate-01, ARG0, g / government-organization)
(n / negotiate-01, ARG1, c / country)
(n / negotiate-01, ARG2, b / buy-01)
(n2 / name, op, "Brazil")
(p2 / plane, purpose, t / train-01)
(s / support-01, ARG1, a2 / air)
(s2 / say-01, ARG0, p / person)
(s2 / say-01, ARG1, n / negotiate-01)

Decoded in 1,406,191 microseconds
Sentence: Chavez has insisted and even his staunchest retired military Critics here agree that the purchases are essential to update old weaponry such as the military's decades-old Belgian FAL rifles.

Oracle Span 1:  agree => agree-01
Oracle Span 2:  and => and
Oracle Span 3:  Belgian => (country :name (name :op "Belgium"))
Oracle Span 4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5:  Critics => (person :ARG0-of criticize-01)
Oracle Span 6:  decades => (temporal-quantity :unit decade)
Oracle Span 7:  essential => essential
Oracle Span 8:  even => even
Oracle Span 9:  FAL => (name :op "FAL")
Oracle Span 10:  here => here
Oracle Span 11:  insisted => insist-01
Oracle Span 12:  military => military
Oracle Span 13:  military => military
Oracle Span 14:  old => old
Oracle Span 15:  purchases => purchase-01
Oracle Span 16:  retired => retire-01
Oracle Span 17:  rifles => rifle
Oracle Span 18:  staunchest => (staunch :degree most)
Oracle Span 19:  update => update-01
Oracle Span 20:  weaponry => weaponry
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 29-30:   => rifle
Span 11-12:  agree => agree-01
Span 3-4:  and => and
Span 26-27:  Belgian => (multiple :op (temporal-quantity :unit decade))
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 9-10:  Critics => (person :ARG0-of criticize-01)
Span 16-17:  essential => essential
Span 4-5:  even => even
Span 10-11:  here => here
Span 2-3:  insisted => insist-01
Span 8-9:  military => military
Span 24-25:  military's => military
Span 19-20:  old => old
Span 14-15:  purchases => purchase-01
Span 7-8:  retired => retire-01
Span 18-19:  update => update-01
Span 20-21:  weaponry => weaponry

Langrangian relaxation converged after 58 iterations. Delta = 0.0
Oracle Span 11-12:  agree => agree-01
Oracle Span 3-4:  and => and
Oracle Span 29-30:  Belgian => (country :name (name :op "Belgium"))
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 9-10:  Critics => (person :ARG0-of criticize-01)
Oracle Span 26-27:  decades => (temporal-quantity :unit decade)
Oracle Span 16-17:  essential => essential
Oracle Span 4-5:  even => even
Oracle Span 30-31:  FAL => (name :op "FAL")
Oracle Span 10-11:  here => here
Oracle Span 2-3:  insisted => insist-01
Oracle Span 8-9:  military => military
Oracle Span 24-25:  military => military
Oracle Span 19-20:  old => old
Oracle Span 14-15:  purchases => purchase-01
Oracle Span 7-8:  retired => retire-01
Oracle Span 31-32:  rifles => rifle
Oracle Span 6-7:  staunchest => (staunch :degree most)
Oracle Span 18-19:  update => update-01
Oracle Span 20-21:  weaponry => weaponry

Dependencies:
1	Chavez	_	NNP	NNP	_	3	nsubj	_	_
2	has	_	VBZ	VBZ	_	3	aux	_	_
3	insisted	_	VBN	VBN	_	0	root	_	_
4	and	_	CC	CC	_	3	cc	_	_
5	even	_	RB	RB	_	8	advmod	_	_
6	his	_	PRP$	PRP$	_	7	poss	_	_
7	staunchest	_	NN	NN	_	8	nsubj	_	_
8	retired	_	VBD	VBD	_	3	conj	_	_
9	military	_	JJ	JJ	_	10	amod	_	_
10	Critics	_	NNS	NNS	_	12	nsubj	_	_
11	here	_	RB	RB	_	12	advmod	_	_
12	agree	_	VBP	VBP	_	8	ccomp	_	_
13	that	_	IN	IN	_	17	mark	_	_
14	the	_	DT	DT	_	15	det	_	_
15	purchases	_	NNS	NNS	_	17	nsubj	_	_
16	are	_	VBP	VBP	_	17	cop	_	_
17	essential	_	JJ	JJ	_	12	ccomp	_	_
18	to	_	TO	TO	_	19	aux	_	_
19	update	_	VB	VB	_	17	xcomp	_	_
20	old	_	JJ	JJ	_	21	amod	_	_
21	weaponry	_	NN	NN	_	19	dobj	_	_
22	such	_	JJ	JJ	_	23	mwe	_	_
23	as	_	IN	IN	_	21	prep	_	_
24	the	_	DT	DT	_	25	det	_	_
25	military	_	NN	NN	_	30	poss	_	_
26	's	_	POS	POS	_	25	possessive	_	_
27	decades-old	_	JJ	JJ	_	30	amod	_	_
28	Belgian	_	JJ	JJ	_	30	amod	_	_
29	FAL	_	NN	NN	_	30	nn	_	_
30	rifles	_	NNS	NNS	_	23	pobj	_	_
31	.	_	.	.	_	3	punct	_	_

Oracle:
(a / and, op, a2 / agree-01)
(a / and, op, i / insist-01)
(a2 / agree-01, ARG0, p2 / person)
(a2 / agree-01, ARG1, e2 / essential)
(c / criticize-01, ARG0, p2 / person)
(c / criticize-01, ARG1, p / person)
(c2 / country, name, n3 / name)
(e2 / essential, domain, p3 / purchase-01)
(e2 / essential, purpose, u / update-01)
(i / insist-01, ARG0, p / person)
(n / name, op, "Chavez")
(n2 / name, op, "FAL")
(n3 / name, op, "Belgium")
(p / person, name, n / name)
(p2 / person, location, h / here)
(p2 / person, mod, e / even)
(p2 / person, mod, m / military)
(p2 / person, mod, s / staunch)
(r / retire-01, ARG0, p2 / person)
(r2 / rifle, name, n2 / name)
(r2 / rifle, poss, m4 / military)
(r2 / rifle, source, c2 / country)
(s / staunch, degree, m2 / most)
(t / temporal-quantity, unit, d / decade)
(u / update-01, ARG1, w / weaponry)
(w / weaponry, example, r2 / rifle)
(w / weaponry, mod, o / old)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(1, 0),Critics,(person :ARG0-of criticize-01),false), Span(11,12,List(2),agree,agree-01,false), Span(29,30,List(3),,rifle,false), Span(8,9,List(4),military,military,false), Span(24,25,List(5),military's,military,false), Span(18,19,List(6),update,update-01,false), Span(10,11,List(7),here,here,false), Span(3,4,List(8),and,and,false), Span(26,27,List(11, 10, 9),Belgian,(multiple :op (temporal-quantity :unit decade)),false), Span(2,3,List(12),insisted,insist-01,false), Span(16,17,List(13),essential,essential,false), Span(4,5,List(14),even,even,false), Span(19,20,List(15),old,old,false), Span(0,1,List(18, 17, 16),Chavez,(person :name (name :op "Chavez")),false), Span(14,15,List(19),purchases,purchase-01,false), Span(20,21,List(20),weaponry,weaponry,false), Span(7,8,List(21),retired,retire-01,false)),Map(2 -> agree-01, 5 -> military, 12 -> insist-01, 15 -> old, 8 -> and, 21 -> retire-01, 18 -> "Chavez", 7 -> here, 17 -> name, 1 -> criticize-01, 4 -> military, 11 -> decade, 14 -> even, 20 -> weaponry, 6 -> update-01, 0 -> person, 9 -> multiple, 16 -> person, 19 -> purchase-01, 3 -> rifle, 10 -> temporal-quantity, 13 -> essential),Map(e -> essential, m3 -> multiple, w -> weaponry, n -> name, h -> here, t -> temporal-quantity, m2 -> military, p2 -> person, e2 -> even, m -> military, d -> decade, r2 -> retire-01, p -> person, a -> agree-01, r -> rifle, a2 -> and, i -> insist-01, c -> criticize-01, u -> update-01, o -> old, p3 -> purchase-01))),[Ljava.lang.String;@4af0ea49,Annotation([Ljava.lang.String;@78ace060,[Ljava.lang.String;@1e1811c,[Ljava.lang.String;@13ec1e50),Annotation([Ljava.lang.String;@5e831cc6,[Ljava.lang.String;@41b34896,[Ledu.cmu.lti.nlp.amr.Dependency;@4c57c8dd),Annotation([Ljava.lang.String;@3f3a4199,[Ljava.lang.String;@79990f94,[Ljava.lang.String;@22b51fc9),Annotation([Ljava.lang.String;@50562a62,[Ljava.lang.String;@3d8d8f78,[Ledu.cmu.lti.nlp.amr.Entity;@c59c2f2))
AMR:
(a / agree-01, ARG0, p / person)
(a / agree-01, ARG1, e / essential)
(a2 / and, op, i / insist-01)
(c / criticize-01, ARG0, p / person)
(c / criticize-01, ARG1, p2 / person)
(e / essential, domain, p3 / purchase-01)
(e / essential, purpose, u / update-01)
(i / insist-01, ARG0, p2 / person)
(i / insist-01, ARG1, r / rifle)
(m3 / multiple, op, i / insist-01)
(m3 / multiple, op, t / temporal-quantity)
(n / name, op, "Chavez")
(p / person, location, h / here)
(p / person, mod, e2 / even)
(p / person, mod, m2 / military)
(p2 / person, name, n / name)
(p3 / purchase-01, ARG1, m / military)
(r2 / retire-01, ARG0, p / person)
(t / temporal-quantity, unit, d / decade)
(u / update-01, ARG1, w / weaponry)
(w / weaponry, mod, o / old)

Decoded in 2,825,858 microseconds
Sentence: Retired General Fernando OCHOA ANTICH said that it is an exaggeration to say Chavez is engaged in an arms buildup.

Oracle Span 1:  arms => arm
Oracle Span 2:  buildup => build-05
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  engaged => engage-01
Oracle Span 5:  exaggeration => exaggerate-01
Oracle Span 6:  Fernando OCHOA ANTICH => (person :name (name :op "Antich" :op "Ochoa" :op "Fernando"))
Oracle Span 7:  General => (have-org-role-91 :ARG2 general)
Oracle Span 8:  Retired => retire-01
Oracle Span 9:  said => say-01
Oracle Span 10:  say => say-01
NER Entity: (person :name (name :op "Fernando" :op "OCHOA" :op "ANTICH"))
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 18-19:  arms => arm
Span 19-20:  buildup. => build-05
Span 13-14:  Chavez => (person :name (name :op "Chavez"))
Span 15-16:  engaged => engage-01
Span 10-11:  exaggeration => exaggerate-01
Span 2-5:  Fernando OCHOA ANTICH => (person :name (name :op "Fernando" :op "OCHOA" :op "ANTICH"))
Span 0-1:  Retired => retire-01
Span 5-6:  said => say-01
Span 12-13:  say => say-01

Langrangian relaxation converged after 9 iterations. Delta = 0.0
Oracle Span 18-19:  arms => arm
Oracle Span 19-20:  buildup => build-05
Oracle Span 13-14:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 15-16:  engaged => engage-01
Oracle Span 10-11:  exaggeration => exaggerate-01
Oracle Span 2-5:  Fernando OCHOA ANTICH => (person :name (name :op "Antich" :op "Ochoa" :op "Fernando"))
Oracle Span 1-2:  General => (have-org-role-91 :ARG2 general)
Oracle Span 0-1:  Retired => retire-01
Oracle Span 5-6:  said => say-01
Oracle Span 12-13:  say => say-01

Dependencies:
1	Retired	_	NNP	NNP	_	5	nn	_	_
2	General	_	NNP	NNP	_	5	nn	_	_
3	Fernando	_	NNP	NNP	_	5	nn	_	_
4	OCHOA	_	NNP	NNP	_	5	nn	_	_
5	ANTICH	_	NNP	NNP	_	6	nsubj	_	_
6	said	_	VBD	VBD	_	0	root	_	_
7	that	_	IN	IN	_	11	mark	_	_
8	it	_	PRP	PRP	_	11	nsubj	_	_
9	is	_	VBZ	VBZ	_	11	cop	_	_
10	an	_	DT	DT	_	11	det	_	_
11	exaggeration	_	NN	NN	_	6	ccomp	_	_
12	to	_	TO	TO	_	13	aux	_	_
13	say	_	VB	VB	_	11	vmod	_	_
14	Chavez	_	NNP	NNP	_	16	nsubjpass	_	_
15	is	_	VBZ	VBZ	_	16	auxpass	_	_
16	engaged	_	VBN	VBN	_	13	ccomp	_	_
17	in	_	IN	IN	_	16	prep	_	_
18	an	_	DT	DT	_	20	det	_	_
19	arms	_	NNS	NNS	_	20	nn	_	_
20	buildup	_	NN	NN	_	17	pobj	_	_
21	.	_	.	.	_	6	punct	_	_

Oracle:
(b / build-05, ARG1, a / arm)
(e / exaggerate-01, ARG1, s2 / say-01)
(e2 / engage-01, ARG1, p / person)
(e2 / engage-01, ARG2, b / build-05)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG2, g / general)
(n / name, op, "Antich")
(n / name, op, "Fernando")
(n / name, op, "Ochoa")
(n2 / name, op, "Chavez")
(p / person, name, n2 / name)
(p2 / person, name, n / name)
(r / retire-01, ARG0, p2 / person)
(r / retire-01, ARG1, g / general)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, e / exaggerate-01)
(s2 / say-01, ARG1, e2 / engage-01)

Input(Some(Graph(null,ArrayBuffer(Span(10,11,List(0),exaggeration,exaggerate-01,false), Span(0,1,List(1),Retired,retire-01,false), Span(15,16,List(2),engaged,engage-01,false), Span(13,14,List(5, 4, 3),Chavez,(person :name (name :op "Chavez")),false), Span(2,5,List(10, 9, 8, 7, 6),Fernando OCHOA ANTICH,(person :name (name :op "Fernando" :op "OCHOA" :op "ANTICH")),false), Span(12,13,List(11),say,say-01,false), Span(19,20,List(12),buildup.,build-05,false), Span(5,6,List(13),said,say-01,false), Span(18,19,List(14),arms,arm,false)),Map(2 -> engage-01, 5 -> "Chavez", 12 -> build-05, 8 -> "Fernando", 7 -> name, 1 -> retire-01, 4 -> name, 11 -> say-01, 14 -> arm, 6 -> person, 0 -> exaggerate-01, 9 -> "OCHOA", 3 -> person, 10 -> "ANTICH", 13 -> say-01),Map(n -> name, e -> exaggerate-01, s2 -> say-01, b -> build-05, p2 -> person, e2 -> engage-01, s -> say-01, p -> person, a -> arm, r -> retire-01, n2 -> name))),[Ljava.lang.String;@1da36011,Annotation([Ljava.lang.String;@3efb108d,[Ljava.lang.String;@64c9e25b,[Ljava.lang.String;@4804c93),Annotation([Ljava.lang.String;@2a517fa,[Ljava.lang.String;@64bc105b,[Ledu.cmu.lti.nlp.amr.Dependency;@4fccfdad),Annotation([Ljava.lang.String;@49aed413,[Ljava.lang.String;@639e001b,[Ljava.lang.String;@6724fafb),Annotation([Ljava.lang.String;@4fad5227,[Ljava.lang.String;@709c198d,[Ledu.cmu.lti.nlp.amr.Entity;@6391515d))
AMR:
(b / build-05, ARG1, a / arm)
(e / exaggerate-01, ARG1, s / say-01)
(e2 / engage-01, ARG1, p / person)
(e2 / engage-01, ARG2, b / build-05)
(n / name, op, "Chavez")
(n2 / name, op, "ANTICH")
(n2 / name, op, "Fernando")
(n2 / name, op, "OCHOA")
(p / person, name, n / name)
(p2 / person, name, n2 / name)
(r / retire-01, ARG0, p2 / person)
(s / say-01, ARG1, e2 / engage-01)
(s2 / say-01, ARG0, p2 / person)
(s2 / say-01, ARG1, e / exaggerate-01)

Decoded in 548,675 microseconds
Sentence: Ochoa was defense minister in 920000 when then-Lieutenant Colonel Chavez launched a failed coup.

Oracle Span 1:  920000 => (date-entity :year 1992)
Oracle Span 2:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 3:  Colonel => (have-org-role-91 :ARG2 colonel)
Oracle Span 4:  coup => coup
Oracle Span 5:  defense => defense
Oracle Span 6:  failed => fail-01
Oracle Span 7:  launched => launch-01
Oracle Span 8:  Lieutenant => lieutenant
Oracle Span 9:  minister => (have-org-role-91 :ARG2 minister)
Oracle Span 10:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 11:  then => then
NER Entity: (person :name (name :op "Ochoa"))
mkDayMonthYear(920000,00,00,92)
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 9-10:  Chavez => (person :name (name :op "Chavez"))
Span 13-14:  coup. => coup
Span 2-3:  defense => defense
Span 12-13:  failed => fail-01
Span 10-11:  launched => launch-01
Span 3-4:  minister => (have-org-role-91 :ARG2 minister)
Span 0-1:  Ochoa => 1
Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))

Langrangian relaxation converged after 10 iterations. Delta = 0.0
Oracle Span 5-6:  920000 => (date-entity :year 1992)
Oracle Span 11-12:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 10-11:  Colonel => (have-org-role-91 :ARG2 colonel)
Oracle Span 15-16:  coup => coup
Oracle Span 2-3:  defense => defense
Oracle Span 14-15:  failed => fail-01
Oracle Span 12-13:  launched => launch-01
Oracle Span 9-10:  Lieutenant => lieutenant
Oracle Span 3-4:  minister => (have-org-role-91 :ARG2 minister)
Oracle Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 7-8:  then => then

Dependencies:
1	Ochoa	_	NNP	NNP	_	4	nsubj	_	_
2	was	_	VBD	VBD	_	4	cop	_	_
3	defense	_	NN	NN	_	4	nn	_	_
4	minister	_	NN	NN	_	0	root	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	920000	_	CD	CD	_	5	pobj	_	_
7	when	_	WRB	WRB	_	11	advmod	_	_
8	then-Lieutenant	_	JJ	JJ	_	10	amod	_	_
9	Colonel	_	NNP	NNP	_	10	nn	_	_
10	Chavez	_	NNP	NNP	_	11	nsubj	_	_
11	launched	_	VBD	VBD	_	4	rcmod	_	_
12	a	_	DT	DT	_	14	det	_	_
13	failed	_	VBN	VBN	_	14	amod	_	_
14	coup	_	NN	NN	_	11	dobj	_	_
15	.	_	.	.	_	4	punct	_	_

Oracle:
(c / colonel, mod, l2 / lieutenant)
(d / date-entity, year, 1992)
(f / fail-01, ARG1, c2 / coup)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG2, m / minister)
(h / have-org-role-91, time, d / date-entity)
(h / have-org-role-91, time, l / launch-01)
(h2 / have-org-role-91, ARG0, p2 / person)
(h2 / have-org-role-91, ARG2, c / colonel)
(h2 / have-org-role-91, time, t / then)
(l / launch-01, ARG0, p2 / person)
(l / launch-01, ARG1, c2 / coup)
(m / minister, mod, d2 / defense)
(n / name, op, "Ochoa")
(n2 / name, op, "Chavez")
(p / person, name, n / name)
(p2 / person, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(2, 1, 0),Chavez,(person :name (name :op "Chavez")),false), Span(0,1,List(3),Ochoa,1,false), Span(2,3,List(4),defense,defense,false), Span(13,14,List(5),coup.,coup,false), Span(3,4,List(7, 6),minister,(have-org-role-91 :ARG2 minister),false), Span(10,11,List(8),launched,launch-01,false), Span(0,1,List(11, 10, 9),Ochoa,(person :name (name :op "Ochoa")),false), Span(12,13,List(12),failed,fail-01,false)),Map(2 -> "Chavez", 5 -> coup, 12 -> fail-01, 8 -> launch-01, 7 -> minister, 1 -> name, 4 -> defense, 11 -> "Ochoa", 6 -> have-org-role-91, 0 -> person, 9 -> person, 3 -> 1, 10 -> name),Map(n -> name, h -> have-org-role-91, p2 -> person, m -> minister, d -> defense, 1 -> 1, p -> person, l -> launch-01, c -> coup, f -> fail-01, n2 -> name))),[Ljava.lang.String;@220dd9f0,Annotation([Ljava.lang.String;@70317ee2,[Ljava.lang.String;@44c1e491,[Ljava.lang.String;@650a9a09),Annotation([Ljava.lang.String;@29840d01,[Ljava.lang.String;@52b9a0bd,[Ledu.cmu.lti.nlp.amr.Dependency;@19173317),Annotation([Ljava.lang.String;@28fc28ee,[Ljava.lang.String;@2119d4f5,[Ljava.lang.String;@3eba3423),Annotation([Ljava.lang.String;@1e152768,[Ljava.lang.String;@57e7d71c,[Ledu.cmu.lti.nlp.amr.Entity;@38360f69))
AMR:
(f / fail-01, ARG1, 1 / 1)
(h / have-org-role-91, ARG0, p2 / person)
(h / have-org-role-91, ARG1, c / coup)
(h / have-org-role-91, ARG2, m / minister)
(h / have-org-role-91, time, f / fail-01)
(l / launch-01, ARG1, h / have-org-role-91)
(l / launch-01, time, p / person)
(m / minister, mod, d / defense)
(n / name, op, "Chavez")
(n2 / name, op, "Ochoa")
(p / person, name, n / name)
(p2 / person, name, n2 / name)

Decoded in 497,691 microseconds
Sentence: Ochoa stated that Venezuela hasn't purchased arms in 25 years and said and Chavez is not aggressively buying weapons in a way that would threaten his neighbors.

Oracle Span 1:  25 => 25
Oracle Span 2:  aggressively => aggressive
Oracle Span 3:  and => and
Oracle Span 4:  arms => arm
Oracle Span 5:  buying => buy-01
Oracle Span 6:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 7:  neighbors => neighbor
Oracle Span 8:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 9:  purchased => purchase-01
Oracle Span 10:  said => say-01
Oracle Span 11:  stated => state-01
Oracle Span 12:  threaten => threaten-01
Oracle Span 13:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 14:  weapons => weapon
Oracle Span 15:  years => (temporal-quantity :unit year)
NER Entity: (person :name (name :op "Ochoa"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 27-28:   => neighbor
Span 10-11:  and => year
Span 12-13:  and => say-01
Span 6-7:  arms => purchase-01
Span 17-18:  buying => aggressive
Span 13-14:  Chavez => and
Span 25-26:  his => threaten-01
Span 7-8:  in => arm
Span 19-20:  in => weapon
Span 14-15:  is => (person :name (name :op "Chavez"))
Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Span 11-12:  said => and
Span 1-2:  stated => state-01
Span 22-23:  that => way
Span 3-4:  Venezuela => (country :name (name :op "Venezuela"))
Span 18-19:  weapons => buy-01
Span 9-10:  years => 25

Langrangian relaxation converged after 70 iterations. Delta = 0.0
Oracle Span 9-10:  25 => 25
Oracle Span 17-18:  aggressively => aggressive
Oracle Span 11-12:  and => and
Oracle Span 7-8:  arms => arm
Oracle Span 18-19:  buying => buy-01
Oracle Span 14-15:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 27-28:  neighbors => neighbor
Oracle Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 6-7:  purchased => purchase-01
Oracle Span 12-13:  said => say-01
Oracle Span 1-2:  stated => state-01
Oracle Span 25-26:  threaten => threaten-01
Oracle Span 3-4:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 19-20:  weapons => weapon
Oracle Span 10-11:  years => (temporal-quantity :unit year)

Dependencies:
1	Ochoa	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	7	mark	_	_
4	Venezuela	_	NNP	NNP	_	7	nsubj	_	_
5	has	_	VBZ	VBZ	_	7	aux	_	_
6	n't	_	RB	RB	_	7	neg	_	_
7	purchased	_	VBN	VBN	_	2	ccomp	_	_
8	arms	_	NNS	NNS	_	7	dobj	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	25	_	CD	CD	_	11	num	_	_
11	years	_	NNS	NNS	_	9	pobj	_	_
12	and	_	CC	CC	_	7	cc	_	_
13	said	_	VBD	VBD	_	7	conj	_	_
14	and	_	CC	CC	_	2	cc	_	_
15	Chavez	_	NNP	NNP	_	19	nsubj	_	_
16	is	_	VBZ	VBZ	_	19	aux	_	_
17	not	_	RB	RB	_	19	neg	_	_
18	aggressively	_	RB	RB	_	19	advmod	_	_
19	buying	_	VBG	VBG	_	2	conj	_	_
20	weapons	_	NNS	NNS	_	19	dobj	_	_
21	in	_	IN	IN	_	19	prep	_	_
22	a	_	DT	DT	_	23	det	_	_
23	way	_	NN	NN	_	21	pobj	_	_
24	that	_	WDT	WDT	_	26	nsubj	_	_
25	would	_	MD	MD	_	26	aux	_	_
26	threaten	_	VB	VB	_	23	rcmod	_	_
27	his	_	PRP$	PRP$	_	28	poss	_	_
28	neighbors	_	NNS	NNS	_	26	dobj	_	_
29	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, s / state-01)
(a / and, op, s2 / say-01)
(b / buy-01, ARG0, p3 / person)
(b / buy-01, ARG1, w / weapon)
(b / buy-01, manner, a3 / aggressive)
(b / buy-01, manner, t2 / threaten-01)
(c / country, name, n2 / name)
(n / name, op, "Ochoa")
(n2 / name, op, "Venezuela")
(n3 / name, op, "Chavez")
(n4 / neighbor, poss, p3 / person)
(p / person, name, n / name)
(p2 / purchase-01, ARG0, c / country)
(p2 / purchase-01, ARG1, a2 / arm)
(p3 / person, name, n3 / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, p2 / purchase-01)
(s2 / say-01, ARG0, p / person)
(s2 / say-01, ARG1, b / buy-01)
(t / temporal-quantity, quant, 2 / 25)
(t / temporal-quantity, unit, y / year)
(t2 / threaten-01, ARG2, n4 / neighbor)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),in,arm,false), Span(19,20,List(1),in,weapon,false), Span(11,12,List(2),said,and,false), Span(27,28,List(3),,neighbor,false), Span(6,7,List(4),arms,purchase-01,false), Span(18,19,List(5),weapons,buy-01,false), Span(14,15,List(8, 7, 6),is,(person :name (name :op "Chavez")),false), Span(1,2,List(9),stated,state-01,false), Span(9,10,List(10),years,25,false), Span(22,23,List(11),that,way,false), Span(17,18,List(12),buying,aggressive,false), Span(13,14,List(13),Chavez,and,false), Span(10,11,List(14),and,year,false), Span(0,1,List(17, 16, 15),Ochoa,(person :name (name :op "Ochoa")),false), Span(12,13,List(18),and,say-01,false), Span(3,4,List(21, 20, 19),Venezuela,(country :name (name :op "Venezuela")),false), Span(25,26,List(22),his,threaten-01,false)),Map(2 -> and, 5 -> buy-01, 12 -> aggressive, 15 -> person, 8 -> "Chavez", 21 -> "Venezuela", 18 -> say-01, 7 -> name, 17 -> "Ochoa", 1 -> weapon, 4 -> purchase-01, 11 -> way, 14 -> year, 20 -> name, 6 -> person, 22 -> threaten-01, 0 -> arm, 9 -> state-01, 16 -> name, 19 -> country, 3 -> neighbor, 10 -> 25, 13 -> and),Map(w -> weapon, n -> neighbor, 2 -> 25, s2 -> say-01, t -> threaten-01, b -> buy-01, p2 -> person, n4 -> name, a3 -> aggressive, s -> state-01, y -> year, p -> purchase-01, n3 -> name, a -> arm, w2 -> way, a2 -> and, c -> country, p3 -> person, n2 -> name, a4 -> and))),[Ljava.lang.String;@22c6249c,Annotation([Ljava.lang.String;@5e88c498,[Ljava.lang.String;@4629d470,[Ljava.lang.String;@4f5e8e92),Annotation([Ljava.lang.String;@5c2fb121,[Ljava.lang.String;@441b1238,[Ledu.cmu.lti.nlp.amr.Dependency;@4c99d49f),Annotation([Ljava.lang.String;@7788f980,[Ljava.lang.String;@560ff8e9,[Ljava.lang.String;@4a99bac2),Annotation([Ljava.lang.String;@48a6b222,[Ljava.lang.String;@7852164f,[Ledu.cmu.lti.nlp.amr.Entity;@5133611c))
AMR:
(a2 / and, op, s / state-01)
(a2 / and, op, s2 / say-01)
(a2 / and, op, y / year)
(a4 / and, op, b / buy-01)
(b / buy-01, ARG0, p2 / person)
(b / buy-01, ARG1, w / weapon)
(b / buy-01, manner, a3 / aggressive)
(b / buy-01, prep-in, w2 / way)
(c / country, name, n4 / name)
(n2 / name, op, "Chavez")
(n3 / name, op, "Ochoa")
(n4 / name, op, "Venezuela")
(p / purchase-01, ARG0, c / country)
(p / purchase-01, ARG1, a / arm)
(p2 / person, name, n2 / name)
(p3 / person, name, n3 / name)
(s / state-01, ARG0, p3 / person)
(s / state-01, ARG1, p / purchase-01)
(s2 / say-01, ARG0, p3 / person)
(s2 / say-01, ARG1, b / buy-01)
(t / threaten-01, ARG0, w2 / way)
(t / threaten-01, ARG1, 2 / 25)
(t / threaten-01, ARG2, n / neighbor)

Decoded in 3,527,206 microseconds
Sentence: Ochoa said Venezuela has never bought Russian arms before and suggested Chavez is doing it to become independent from the US.

Oracle Span 1:  and => and
Oracle Span 2:  arms => arm
Oracle Span 3:  become => become-01
Oracle Span 4:  before => before
Oracle Span 5:  bought => buy-01
Oracle Span 6:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 7:  independent => (depend-01 :polarity -)
Oracle Span 8:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 9:  Russian => (country :name (name :op "Russia"))
Oracle Span 10:  said => say-01
Oracle Span 11:  suggested => suggest-01
Oracle Span 12:  US => (country :name (name :op "US"))
Oracle Span 13:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Ochoa"))
NER Entity: (country :name (name :op "Venezuela"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "US"))
NER Entity: (thing :name (name :op "Russian"))
Spans:
Span 9-10:  and => and
Span 7-8:  arms => arm
Span 16-17:  become => become-01
Span 8-9:  before => before
Span 5-6:  bought => buy-01
Span 11-12:  Chavez => (person :name (name :op "Chavez"))
Span 13-14:  doing => do-02
Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Span 6-7:  Russian => (country :name (name :op "Russia"))
Span 1-2:  said => say-01
Span 10-11:  suggested => suggest-01
Span 20-21:  US. => (country :name (name :op "US"))
Span 2-3:  Venezuela => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 104 iterations. Delta = 0.0
Oracle Span 9-10:  and => and
Oracle Span 7-8:  arms => arm
Oracle Span 16-17:  become => become-01
Oracle Span 8-9:  before => before
Oracle Span 5-6:  bought => buy-01
Oracle Span 11-12:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 17-18:  independent => (depend-01 :polarity -)
Oracle Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 6-7:  Russian => (country :name (name :op "Russia"))
Oracle Span 1-2:  said => say-01
Oracle Span 10-11:  suggested => suggest-01
Oracle Span 20-21:  US => (country :name (name :op "US"))
Oracle Span 2-3:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Ochoa	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	Venezuela	_	NNP	NNP	_	6	nsubj	_	_
4	has	_	VBZ	VBZ	_	6	aux	_	_
5	never	_	RB	RB	_	6	neg	_	_
6	bought	_	VBN	VBN	_	2	ccomp	_	_
7	Russian	_	JJ	JJ	_	8	amod	_	_
8	arms	_	NNS	NNS	_	6	dobj	_	_
9	before	_	RB	RB	_	6	advmod	_	_
10	and	_	CC	CC	_	6	cc	_	_
11	suggested	_	VBD	VBD	_	6	conj	_	_
12	Chavez	_	NNP	NNP	_	14	nsubj	_	_
13	is	_	VBZ	VBZ	_	14	aux	_	_
14	doing	_	VBG	VBG	_	11	ccomp	_	_
15	it	_	PRP	PRP	_	14	dobj	_	_
16	to	_	TO	TO	_	17	aux	_	_
17	become	_	VB	VB	_	14	xcomp	_	_
18	independent	_	JJ	JJ	_	17	acomp	_	_
19	from	_	IN	IN	_	17	prep	_	_
20	the	_	DT	DT	_	21	det	_	_
21	US	_	NNP	NNP	_	19	pobj	_	_
22	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, s / say-01)
(a / and, op, s2 / suggest-01)
(a2 / arm, source, c2 / country)
(b3 / become-01, ARG1, p2 / person)
(b3 / become-01, ARG2, d2 / depend-01)
(b4 / buy-01, ARG0, p2 / person)
(b4 / buy-01, ARG1, a2 / arm)
(b4 / buy-01, purpose, b3 / become-01)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n5 / name)
(d2 / depend-01, ARG0, p2 / person)
(d2 / depend-01, ARG1, c3 / country)
(d2 / depend-01, polarity, -)
(n / name, op, "Ochoa")
(n2 / name, op, "Venezuela")
(n3 / name, op, "Russia")
(n4 / name, op, "Chavez")
(n5 / name, op, "US")
(p / person, name, n / name)
(p2 / person, name, n4 / name)
(s / say-01, ARG0, p / person)
(s2 / suggest-01, ARG0, p / person)
(s2 / suggest-01, ARG1, b4 / buy-01)

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),arms,arm,false), Span(8,9,List(1),before,before,false), Span(10,11,List(2),suggested,suggest-01,false), Span(13,14,List(3),doing,do-02,false), Span(20,21,List(6, 5, 4),US.,(country :name (name :op "US")),false), Span(6,7,List(9, 8, 7),Russian,(country :name (name :op "Russia")),false), Span(9,10,List(10),and,and,false), Span(2,3,List(13, 12, 11),Venezuela,(country :name (name :op "Venezuela")),false), Span(5,6,List(14),bought,buy-01,false), Span(1,2,List(15),said,say-01,false), Span(16,17,List(16),become,become-01,false), Span(0,1,List(19, 18, 17),Ochoa,(person :name (name :op "Ochoa")),false), Span(11,12,List(22, 21, 20),Chavez,(person :name (name :op "Chavez")),false)),Map(2 -> suggest-01, 5 -> name, 12 -> name, 15 -> say-01, 8 -> name, 21 -> name, 18 -> name, 7 -> country, 17 -> person, 1 -> before, 4 -> country, 11 -> country, 14 -> buy-01, 20 -> person, 6 -> "US", 22 -> "Chavez", 0 -> arm, 9 -> "Russia", 16 -> become-01, 19 -> "Ochoa", 3 -> do-02, 10 -> and, 13 -> "Venezuela"),Map(b3 -> become-01, n -> name, s2 -> say-01, b -> before, b2 -> buy-01, p2 -> person, n4 -> name, s -> suggest-01, d -> do-02, p -> person, a -> arm, c3 -> country, n3 -> name, a2 -> and, c -> country, c2 -> country, n2 -> name, n5 -> name))),[Ljava.lang.String;@6fa550e,Annotation([Ljava.lang.String;@4b53d55,[Ljava.lang.String;@35a47295,[Ljava.lang.String;@4e7093a1),Annotation([Ljava.lang.String;@1a76fd44,[Ljava.lang.String;@370424ca,[Ledu.cmu.lti.nlp.amr.Dependency;@2122d865),Annotation([Ljava.lang.String;@6b85ba7b,[Ljava.lang.String;@4634e692,[Ljava.lang.String;@5080a8ea),Annotation([Ljava.lang.String;@67d6b36f,[Ljava.lang.String;@21469b8c,[Ledu.cmu.lti.nlp.amr.Entity;@4027e940))
AMR:
(a / arm, source, c2 / country)
(a2 / and, op, s / suggest-01)
(a2 / and, op, s2 / say-01)
(b2 / buy-01, ARG0, p2 / person)
(b2 / buy-01, ARG1, a / arm)
(b3 / become-01, ARG0, p2 / person)
(b3 / become-01, ARG1, c / country)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(d / do-02, ARG0, p2 / person)
(d / do-02, ARG1, b / before)
(n / name, op, "US")
(n2 / name, op, "Russia")
(n3 / name, op, "Venezuela")
(n4 / name, op, "Ochoa")
(n5 / name, op, "Chavez")
(p / person, name, n4 / name)
(p2 / person, name, n5 / name)
(s / suggest-01, ARG0, p / person)
(s / suggest-01, ARG1, b2 / buy-01)
(s2 / say-01, ARG0, p / person)
(s2 / say-01, ARG1, c3 / country)

Decoded in 3,913,005 microseconds
Sentence: Ochoa asked why Chavez is buying a caliber of rifle which is popular among subversive forces in Latin America and stated that the political support Chavez gives to radical leftist movements makes Chavez a continental menace.

Oracle Span 1:  and => and
Oracle Span 2:  asked => ask-01
Oracle Span 3:  buying => buy-01
Oracle Span 4:  caliber => caliber
Oracle Span 5:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 6:  continental => continent
Oracle Span 7:  forces => force
Oracle Span 8:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 9:  leftist => leftist
Oracle Span 10:  makes => make-02
Oracle Span 11:  menace => menace-01
Oracle Span 12:  movements => move-02
Oracle Span 13:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 14:  political => politics
Oracle Span 15:  popular => popular-41
Oracle Span 16:  radical => radical
Oracle Span 17:  rifle => rifle
Oracle Span 18:  stated => state-01
Oracle Span 19:  subversive => subvert-01
Oracle Span 20:  support => support-01
NER Entity: (person :name (name :op "Ochoa"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 19-20:  and => and
Span 1-2:  asked => ask-01
Span 5-6:  buying => buy-01
Span 7-8:  caliber => caliber
Span 25-26:  Chavez => (person :name (name :op "Chavez"))
Span 3-4:  Chavez => (person :name (name :op "Chavez"))
Span 32-33:  Chavez => (person :name (name :op "Chavez"))
Span 15-16:  forces => force
Span 26-27:  gives => give-01
Span 17-19:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Span 29-30:  leftist => leftist
Span 31-32:  makes => make-02
Span 35-36:  menace. => menace
Span 30-31:  movements => movement
Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Span 23-24:  political => politics
Span 12-13:  popular => popularize-01
Span 28-29:  radical => radical
Span 20-21:  stated => state-01
Span 24-25:  support => support-01
Span 2-3:  why => (thing :ARG0-of cause-01)

Langrangian relaxation converged after 36 iterations. Delta = 0.0
Oracle Span 19-20:  and => and
Oracle Span 1-2:  asked => ask-01
Oracle Span 5-6:  buying => buy-01
Oracle Span 7-8:  caliber => caliber
Oracle Span 3-4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 34-35:  continental => continent
Oracle Span 15-16:  forces => force
Oracle Span 17-19:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 29-30:  leftist => leftist
Oracle Span 31-32:  makes => make-02
Oracle Span 35-36:  menace => menace-01
Oracle Span 30-31:  movements => move-02
Oracle Span 0-1:  Ochoa => (person :name (name :op "Ochoa"))
Oracle Span 23-24:  political => politics
Oracle Span 12-13:  popular => popular-41
Oracle Span 28-29:  radical => radical
Oracle Span 9-10:  rifle => rifle
Oracle Span 20-21:  stated => state-01
Oracle Span 14-15:  subversive => subvert-01
Oracle Span 24-25:  support => support-01

Dependencies:
1	Ochoa	_	NNP	NNP	_	2	nsubj	_	_
2	asked	_	VBD	VBD	_	32	dep	_	_
3	why	_	WRB	WRB	_	6	advmod	_	_
4	Chavez	_	NNP	NNP	_	6	nsubj	_	_
5	is	_	VBZ	VBZ	_	6	aux	_	_
6	buying	_	VBG	VBG	_	2	ccomp	_	_
7	a	_	DT	DT	_	8	det	_	_
8	caliber	_	NN	NN	_	6	dobj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	rifle	_	NN	NN	_	9	pobj	_	_
11	which	_	WDT	WDT	_	13	nsubj	_	_
12	is	_	VBZ	VBZ	_	13	cop	_	_
13	popular	_	JJ	JJ	_	8	rcmod	_	_
14	among	_	IN	IN	_	13	prep	_	_
15	subversive	_	JJ	JJ	_	16	amod	_	_
16	forces	_	NNS	NNS	_	14	pobj	_	_
17	in	_	IN	IN	_	16	prep	_	_
18	Latin	_	NNP	NNP	_	19	nn	_	_
19	America	_	NNP	NNP	_	17	pobj	_	_
20	and	_	CC	CC	_	2	cc	_	_
21	stated	_	VBD	VBD	_	2	conj	_	_
22	that	_	IN	IN	_	27	mark	_	_
23	the	_	DT	DT	_	26	det	_	_
24	political	_	JJ	JJ	_	26	amod	_	_
25	support	_	NN	NN	_	26	nn	_	_
26	Chavez	_	NN	NN	_	27	nsubj	_	_
27	gives	_	VBZ	VBZ	_	21	ccomp	_	_
28	to	_	TO	TO	_	27	prep	_	_
29	radical	_	JJ	JJ	_	31	amod	_	_
30	leftist	_	JJ	JJ	_	31	amod	_	_
31	movements	_	NNS	NNS	_	28	pobj	_	_
32	makes	_	VBZ	VBZ	_	0	root	_	_
33	Chavez	_	NNP	NNP	_	32	dobj	_	_
34	a	_	DT	DT	_	36	det	_	_
35	continental	_	JJ	JJ	_	36	amod	_	_
36	menace	_	NN	NN	_	32	nsubj	_	_
37	.	_	.	.	_	32	punct	_	_

Oracle:
(a / and, op, a2 / ask-01)
(a / and, op, s / state-01)
(a2 / ask-01, ARG0, p / person)
(b / buy-01, ARG0, p2 / person)
(b / buy-01, ARG1, c2 / caliber)
(c2 / caliber, mod, r / rifle)
(f / force, location, w / world-region)
(m / move-02, mod, l / leftist)
(m / move-02, mod, r2 / radical)
(m2 / make-02, ARG0, s3 / support-01)
(m2 / make-02, ARG1, m3 / menace-01)
(m3 / menace-01, ARG0, p2 / person)
(m3 / menace-01, mod, c3 / continent)
(n / name, op, "Ochoa")
(n2 / name, op, "Chavez")
(n3 / name, op, "America")
(n3 / name, op, "Latin")
(p / person, name, n / name)
(p2 / person, name, n2 / name)
(p3 / popular-41, ARG1, c2 / caliber)
(p3 / popular-41, ARG2, f / force)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, m2 / make-02)
(s2 / subvert-01, ARG0, f / force)
(s3 / support-01, ARG0, p2 / person)
(s3 / support-01, ARG1, m / move-02)
(s3 / support-01, mod, p4 / politics)
(w / world-region, name, n3 / name)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(2, 1, 0),Chavez,(person :name (name :op "Chavez")),false), Span(15,16,List(3),forces,force,false), Span(26,27,List(4),gives,give-01,false), Span(29,30,List(5),leftist,leftist,false), Span(35,36,List(6),menace.,menace,false), Span(1,2,List(7),asked,ask-01,false), Span(20,21,List(8),stated,state-01,false), Span(2,3,List(10, 9),why,(thing :ARG0-of cause-01),false), Span(23,24,List(11),political,politics,false), Span(7,8,List(12),caliber,caliber,false), Span(17,19,List(16, 15, 14, 13),Latin America,(world-region :name (name :op "America" :op "Latin")),false), Span(3,4,List(19, 18, 17),Chavez,(person :name (name :op "Chavez")),false), Span(28,29,List(20),radical,radical,false), Span(12,13,List(21),popular,popularize-01,false), Span(5,6,List(22),buying,buy-01,false), Span(19,20,List(23),and,and,false), Span(24,25,List(24),support,support-01,false), Span(32,33,List(27, 26, 25),Chavez,(person :name (name :op "Chavez")),false), Span(31,32,List(28),makes,make-02,false), Span(0,1,List(31, 30, 29),Ochoa,(person :name (name :op "Ochoa")),false), Span(30,31,List(32),movements,movement,false)),Map(30 -> name, 2 -> "Chavez", 5 -> leftist, 27 -> "Chavez", 12 -> caliber, 8 -> state-01, 15 -> "America", 21 -> popularize-01, 18 -> name, 24 -> support-01, 7 -> ask-01, 1 -> name, 17 -> person, 23 -> and, 26 -> name, 4 -> give-01, 11 -> politics, 32 -> movement, 14 -> name, 29 -> person, 20 -> radical, 28 -> make-02, 6 -> menace, 9 -> thing, 0 -> person, 22 -> buy-01, 16 -> "Latin", 19 -> "Chavez", 10 -> cause-01, 3 -> force, 31 -> "Ochoa", 25 -> person, 13 -> world-region),Map(m3 -> movement, w -> world-region, n -> name, s2 -> support-01, p5 -> person, t -> thing, b -> buy-01, m2 -> make-02, p2 -> politics, n4 -> name, s -> state-01, m -> menace, g -> give-01, p -> person, a -> ask-01, n3 -> name, p4 -> popularize-01, r -> radical, a2 -> and, c -> cause-01, p6 -> person, l -> leftist, f -> force, p3 -> person, c2 -> caliber, n2 -> name, n5 -> name))),[Ljava.lang.String;@10e602b9,Annotation([Ljava.lang.String;@72e5ec6c,[Ljava.lang.String;@e573e62,[Ljava.lang.String;@1eec18d0),Annotation([Ljava.lang.String;@3ebf227e,[Ljava.lang.String;@63643f49,[Ledu.cmu.lti.nlp.amr.Dependency;@54f7a969),Annotation([Ljava.lang.String;@2aa301bf,[Ljava.lang.String;@6d486a47,[Ljava.lang.String;@2f149ed0),Annotation([Ljava.lang.String;@46c1c6ba,[Ljava.lang.String;@74dd9924,[Ledu.cmu.lti.nlp.amr.Entity;@5a69cfaa))
AMR:
(a / ask-01, ARG0, p6 / person)
(a / ask-01, ARG1, g / give-01)
(a2 / and, op, a / ask-01)
(a2 / and, op, s / state-01)
(b / buy-01, ARG0, p3 / person)
(b / buy-01, ARG1, c2 / caliber)
(c / cause-01, ARG0, t / thing)
(c / cause-01, ARG1, a / ask-01)
(f / force, location, w / world-region)
(g / give-01, ARG0, p / person)
(g / give-01, ARG1, m3 / movement)
(g / give-01, ARG2, r / radical)
(m2 / make-02, ARG0, p5 / person)
(m2 / make-02, ARG1, m / menace)
(m3 / movement, mod, l / leftist)
(n / name, op, "Chavez")
(n2 / name, op, "America")
(n2 / name, op, "Latin")
(n3 / name, op, "Chavez")
(n4 / name, op, "Chavez")
(n5 / name, op, "Ochoa")
(p / person, name, n / name)
(p3 / person, name, n3 / name)
(p4 / popularize-01, ARG1, c2 / caliber)
(p4 / popularize-01, ARG2, f / force)
(p5 / person, name, n4 / name)
(p6 / person, name, n5 / name)
(s / state-01, ARG0, p6 / person)
(s / state-01, ARG1, m2 / make-02)
(s2 / support-01, ARG0, p3 / person)
(s2 / support-01, ARG1, m3 / movement)
(s2 / support-01, mod, p2 / politics)
(w / world-region, name, n2 / name)

Decoded in 3,752,267 microseconds
Sentence: The US Pentagon has openly questioned what Chavez will do with the old FAL rifles and whether Chavez might share weapons or ammunition with guerrilla forces in Latin America.

Oracle Span 1:  ammunition => ammunition
Oracle Span 2:  and => and
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  do => (thing :ARG1-of do-02)
Oracle Span 5:  FAL => (name :op "FAL")
Oracle Span 6:  forces => force
Oracle Span 7:  guerrilla => guerrilla
Oracle Span 8:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 9:  old => old
Oracle Span 10:  openly => open
Oracle Span 11:  or => or
Oracle Span 12:  Pentagon => (government-organization :name (name :op "Pentagon"))
Oracle Span 13:  questioned => question-01
Oracle Span 14:  rifles => rifle
Oracle Span 15:  share => share-01
Oracle Span 16:  US => (country :name (name :op "US"))
Oracle Span 17:  weapons => weapon
NER Entity: (country :name (name :op "US" :op "Pentagon"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (organization :name (name :op "FAL"))
NER Entity: (country :name (name :op "Latin" :op "America"))
Spans:
Span 22-23:  ammunition => ammunition
Span 15-16:  and => and
Span 17-18:  Chavez => (person :name (name :op "Chavez"))
Span 7-8:  Chavez => (person :name (name :op "Chavez"))
Span 9-10:  do => do-02
Span 25-26:  forces => force
Span 24-25:  guerrilla => guerrilla
Span 27-29:  Latin America. => (world-region :name (name :op "America" :op "Latin"))
Span 12-13:  old => old
Span 4-5:  openly => open
Span 21-22:  or => or
Span 2-3:  Pentagon => (government-organization :name (name :op "Pentagon"))
Span 5-6:  questioned => question-01
Span 14-15:  rifles => rifle
Span 19-20:  share => share-01
Span 1-2:  US => (country :name (name :op "US"))
Span 20-21:  weapons => weapon

Langrangian relaxation converged after 27 iterations. Delta = 0.0
Oracle Span 22-23:  ammunition => ammunition
Oracle Span 15-16:  and => and
Oracle Span 7-8:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 9-10:  do => (thing :ARG1-of do-02)
Oracle Span 13-14:  FAL => (name :op "FAL")
Oracle Span 25-26:  forces => force
Oracle Span 24-25:  guerrilla => guerrilla
Oracle Span 27-29:  Latin America => (world-region :name (name :op "America" :op "Latin"))
Oracle Span 12-13:  old => old
Oracle Span 4-5:  openly => open
Oracle Span 21-22:  or => or
Oracle Span 2-3:  Pentagon => (government-organization :name (name :op "Pentagon"))
Oracle Span 5-6:  questioned => question-01
Oracle Span 14-15:  rifles => rifle
Oracle Span 19-20:  share => share-01
Oracle Span 1-2:  US => (country :name (name :op "US"))
Oracle Span 20-21:  weapons => weapon

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	US	_	NNP	NNP	_	3	nn	_	_
3	Pentagon	_	NNP	NNP	_	6	nsubj	_	_
4	has	_	VBZ	VBZ	_	6	aux	_	_
5	openly	_	RB	RB	_	6	advmod	_	_
6	questioned	_	VBN	VBN	_	0	root	_	_
7	what	_	WP	WP	_	10	dobj	_	_
8	Chavez	_	NNP	NNP	_	10	nsubj	_	_
9	will	_	MD	MD	_	10	aux	_	_
10	do	_	VB	VB	_	6	ccomp	_	_
11	with	_	IN	IN	_	10	prep	_	_
12	the	_	DT	DT	_	15	det	_	_
13	old	_	JJ	JJ	_	15	amod	_	_
14	FAL	_	NNP	NNP	_	15	nn	_	_
15	rifles	_	NNS	NNS	_	11	pobj	_	_
16	and	_	CC	CC	_	10	cc	_	_
17	whether	_	IN	IN	_	20	mark	_	_
18	Chavez	_	NNP	NNP	_	20	nsubj	_	_
19	might	_	MD	MD	_	20	aux	_	_
20	share	_	VB	VB	_	10	conj	_	_
21	weapons	_	NNS	NNS	_	20	dobj	_	_
22	or	_	CC	CC	_	21	cc	_	_
23	ammunition	_	NN	NN	_	21	conj	_	_
24	with	_	IN	IN	_	20	prep	_	_
25	guerrilla	_	NN	NN	_	26	nn	_	_
26	forces	_	NNS	NNS	_	24	pobj	_	_
27	in	_	IN	IN	_	26	prep	_	_
28	Latin	_	NNP	NNP	_	29	nn	_	_
29	America	_	NNP	NNP	_	27	pobj	_	_
30	.	_	.	.	_	6	punct	_	_

Oracle:
(a / and, op, s / share-01)
(a / and, op, t / thing)
(c / country, name, n2 / name)
(d / do-02, ARG0, p / person)
(d / do-02, ARG1, t / thing)
(d / do-02, ARG2, r / rifle)
(f / force, location, w2 / world-region)
(f / force, mod, g2 / guerrilla)
(g / government-organization, mod, c / country)
(g / government-organization, name, n / name)
(n / name, op, "Pentagon")
(n2 / name, op, "US")
(n3 / name, op, "Chavez")
(n4 / name, op, "FAL")
(n5 / name, op, "America")
(n5 / name, op, "Latin")
(o2 / or, op, a2 / ammunition)
(o2 / or, op, w / weapon)
(p / person, name, n3 / name)
(q / question-01, ARG0, g / government-organization)
(q / question-01, ARG1, a / and)
(q / question-01, manner, o3 / open)
(r / rifle, mod, o / old)
(r / rifle, name, n4 / name)
(s / share-01, ARG0, p / person)
(s / share-01, ARG1, o2 / or)
(s / share-01, ARG2, f / force)
(w2 / world-region, name, n5 / name)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),ammunition,ammunition,false), Span(14,15,List(1),rifles,rifle,false), Span(19,20,List(2),share,share-01,false), Span(2,3,List(5, 4, 3),Pentagon,(government-organization :name (name :op "Pentagon")),false), Span(15,16,List(6),and,and,false), Span(25,26,List(7),forces,force,false), Span(27,29,List(11, 10, 9, 8),Latin America.,(world-region :name (name :op "America" :op "Latin")),false), Span(17,18,List(14, 13, 12),Chavez,(person :name (name :op "Chavez")),false), Span(24,25,List(15),guerrilla,guerrilla,false), Span(1,2,List(18, 17, 16),US,(country :name (name :op "US")),false), Span(4,5,List(19),openly,open,false), Span(12,13,List(20),old,old,false), Span(7,8,List(23, 22, 21),Chavez,(person :name (name :op "Chavez")),false), Span(5,6,List(24),questioned,question-01,false), Span(20,21,List(25),weapons,weapon,false), Span(9,10,List(26),do,do-02,false), Span(21,22,List(27),or,or,false)),Map(2 -> share-01, 5 -> "Pentagon", 27 -> or, 12 -> person, 8 -> world-region, 15 -> guerrilla, 21 -> person, 18 -> "US", 24 -> question-01, 7 -> force, 1 -> rifle, 17 -> name, 23 -> "Chavez", 26 -> do-02, 4 -> name, 11 -> "Latin", 14 -> "Chavez", 20 -> old, 6 -> and, 9 -> name, 0 -> ammunition, 22 -> name, 16 -> country, 19 -> open, 10 -> "America", 3 -> government-organization, 25 -> weapon, 13 -> name),Map(n -> name, w -> world-region, q -> question-01, o3 -> or, p2 -> person, n4 -> name, s -> share-01, d -> do-02, g2 -> guerrilla, g -> government-organization, p -> person, a -> ammunition, n3 -> name, o2 -> old, w2 -> weapon, r -> rifle, a2 -> and, c -> country, f -> force, o -> open, n2 -> name, n5 -> name))),[Ljava.lang.String;@de0e89f,Annotation([Ljava.lang.String;@378d82f0,[Ljava.lang.String;@6af7e26a,[Ljava.lang.String;@72f460a1),Annotation([Ljava.lang.String;@78daca70,[Ljava.lang.String;@231b5d99,[Ledu.cmu.lti.nlp.amr.Dependency;@76aa0f22),Annotation([Ljava.lang.String;@270a983e,[Ljava.lang.String;@92d5fe5,[Ljava.lang.String;@70232ccc),Annotation([Ljava.lang.String;@56d6eef5,[Ljava.lang.String;@256e4779,[Ledu.cmu.lti.nlp.amr.Entity;@465fe646))
AMR:
(a2 / and, op, d / do-02)
(a2 / and, op, s / share-01)
(c / country, name, n4 / name)
(d / do-02, ARG0, p2 / person)
(d / do-02, ARG1, w2 / weapon)
(d / do-02, ARG2, r / rifle)
(f / force, location, w / world-region)
(f / force, mod, g2 / guerrilla)
(g / government-organization, mod, c / country)
(g / government-organization, name, n / name)
(n / name, op, "Pentagon")
(n2 / name, op, "America")
(n2 / name, op, "Latin")
(n3 / name, op, "Chavez")
(n4 / name, op, "US")
(n5 / name, op, "Chavez")
(o3 / or, op, a / ammunition)
(p / person, name, n3 / name)
(p2 / person, name, n5 / name)
(q / question-01, ARG0, g / government-organization)
(q / question-01, ARG1, a2 / and)
(q / question-01, manner, o / open)
(r / rifle, mod, o2 / old)
(s / share-01, ARG0, p / person)
(s / share-01, ARG1, o3 / or)
(s / share-01, ARG2, f / force)
(w / world-region, name, n2 / name)

Decoded in 1,736,620 microseconds
Sentence: The US government has provided no evidence of Chavez arming or funding leftist insurgencies.

Oracle Span 1:  arming => arm-01
Oracle Span 2:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 3:  evidence => (thing :ARG0-of evidence-01)
Oracle Span 4:  funding => fund-01
Oracle Span 5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6:  insurgencies => insurgency
Oracle Span 7:  leftist => leftist
Oracle Span 8:  no => -
Oracle Span 9:  or => or
Oracle Span 10:  provided => provide-01
Oracle Span 11:  US => (country :name (name :op "US"))
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 9-10:  arming => arm-01
Span 8-9:  Chavez => (person :name (name :op "Chavez"))
Span 6-7:  evidence => evidence-01
Span 11-12:  funding => fund-01
Span 2-3:  government => (government-organization :ARG0-of govern-01)
Span 13-14:  insurgencies. => insurgency
Span 12-13:  leftist => leftist
Span 10-11:  or => or
Span 4-5:  provided => provide-01
Span 1-2:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 9-10:  arming => arm-01
Oracle Span 8-9:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 6-7:  evidence => (thing :ARG0-of evidence-01)
Oracle Span 11-12:  funding => fund-01
Oracle Span 2-3:  government => (government-organization :ARG0-of govern-01)
Oracle Span 13-14:  insurgencies => insurgency
Oracle Span 12-13:  leftist => leftist
Oracle Span 5-6:  no => -
Oracle Span 10-11:  or => or
Oracle Span 4-5:  provided => provide-01
Oracle Span 1-2:  US => (country :name (name :op "US"))

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	US	_	NNP	NNP	_	3	nn	_	_
3	government	_	NN	NN	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	provided	_	VBN	VBN	_	0	root	_	_
6	no	_	DT	DT	_	7	neg	_	_
7	evidence	_	NN	NN	_	5	dobj	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	Chavez	_	NNP	NNP	_	8	pobj	_	_
10	arming	_	VBG	VBG	_	5	xcomp	_	_
11	or	_	CC	CC	_	10	cc	_	_
12	funding	_	VBG	VBG	_	10	conj	_	_
13	leftist	_	JJ	JJ	_	14	amod	_	_
14	insurgencies	_	NNS	NNS	_	10	dobj	_	_
15	.	_	.	.	_	5	punct	_	_

Oracle:
(a / arm-01, ARG0, p2 / person)
(a / arm-01, ARG1, i / insurgency)
(c / country, name, n / name)
(e / evidence-01, ARG0, t / thing)
(e / evidence-01, ARG1, o / or)
(f / fund-01, ARG0, p2 / person)
(f / fund-01, ARG1, i / insurgency)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(i / insurgency, mod, l / leftist)
(n / name, op, "US")
(n2 / name, op, "Chavez")
(o / or, op, a / arm-01)
(o / or, op, f / fund-01)
(p / provide-01, ARG0, g / government-organization)
(p / provide-01, ARG1, t / thing)
(p2 / person, name, n2 / name)
(t / thing, polarity, - / -)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(1, 0),government,(government-organization :ARG0-of govern-01),false), Span(1,2,List(4, 3, 2),US,(country :name (name :op "US")),false), Span(9,10,List(5),arming,arm-01,false), Span(11,12,List(6),funding,fund-01,false), Span(13,14,List(7),insurgencies.,insurgency,false), Span(8,9,List(10, 9, 8),Chavez,(person :name (name :op "Chavez")),false), Span(12,13,List(11),leftist,leftist,false), Span(6,7,List(12),evidence,evidence-01,false), Span(10,11,List(13),or,or,false), Span(4,5,List(14),provided,provide-01,false)),Map(2 -> country, 5 -> arm-01, 12 -> evidence-01, 8 -> person, 7 -> insurgency, 1 -> govern-01, 4 -> "US", 11 -> leftist, 14 -> provide-01, 6 -> fund-01, 0 -> government-organization, 9 -> name, 3 -> name, 10 -> "Chavez", 13 -> or),Map(e -> evidence-01, n -> name, p2 -> provide-01, g2 -> govern-01, g -> government-organization, p -> person, a -> arm-01, i -> insurgency, c -> country, l -> leftist, f -> fund-01, o -> or, n2 -> name))),[Ljava.lang.String;@b32c347,Annotation([Ljava.lang.String;@132eb2d,[Ljava.lang.String;@61d8bb36,[Ljava.lang.String;@46951a71),Annotation([Ljava.lang.String;@5ba0c11f,[Ljava.lang.String;@4d5d22c5,[Ledu.cmu.lti.nlp.amr.Dependency;@69783153),Annotation([Ljava.lang.String;@7d0f89f,[Ljava.lang.String;@5a256943,[Ljava.lang.String;@7e4a23c8),Annotation([Ljava.lang.String;@569077fb,[Ljava.lang.String;@560469b6,[Ledu.cmu.lti.nlp.amr.Entity;@271a6d44))
AMR:
(a / arm-01, ARG0, p / person)
(a / arm-01, ARG1, i / insurgency)
(c / country, name, n / name)
(e / evidence-01, ARG1, o / or)
(f / fund-01, ARG1, i / insurgency)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(i / insurgency, mod, l / leftist)
(n / name, op, "US")
(n2 / name, op, "Chavez")
(o / or, op, a / arm-01)
(o / or, op, f / fund-01)
(p / person, name, n2 / name)
(p2 / provide-01, ARG0, g / government-organization)
(p2 / provide-01, ARG1, e / evidence-01)

Decoded in 324,345 microseconds
Sentence: Military analysts and specialists on the Colombian FARC guerrillas say the rebels have plenty of money for weapons from drug trafficking and would not be interested in old Belgian rifles or in assistance from Chavez.

Oracle Span 1:  analysts => analyze-01
Oracle Span 2:  and => and
Oracle Span 3:  and => and
Oracle Span 4:  assistance => assist-01
Oracle Span 5:  Belgian => (country :name (name :op "Belgium"))
Oracle Span 6:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 7:  Colombian => (country :name (name :op "Colombia"))
Oracle Span 8:  drug => drug
Oracle Span 9:  FARC => (criminal-organization :name (name :op "FARC"))
Oracle Span 10:  guerrillas => (have-org-role-91 :ARG2 guerrilla)
Oracle Span 11:  have => have-03
Oracle Span 12:  interested => interest-01
Oracle Span 13:  Military => (have-org-role-91 :ARG1 military)
Oracle Span 14:  money => money
Oracle Span 15:  old => old
Oracle Span 16:  or => or
Oracle Span 17:  plenty => plenty
Oracle Span 18:  rebels => (person :ARG0-of rebel-01)
Oracle Span 19:  rifles => rifle
Oracle Span 20:  say => say-01
Oracle Span 21:  specialists => specialize-01
Oracle Span 22:  trafficking => traffic-00
Oracle Span 23:  weapons => weapon
NER Entity: (organization :name (name :op "FARC"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (thing :name (name :op "Colombian"))
NER Entity: (thing :name (name :op "Belgian"))
Spans:
Span 1-2:  analysts => (person :ARG0-of analyze-01)
Span 21-22:  and => and
Span 2-3:  and => and
Span 32-33:  assistance => transcribe-01
Span 34-35:  Chavez. => (person :name (name :op "Chavez"))
Span 6-7:  Colombian => (country :name (name :op "Colombia"))
Span 19-20:  drug => drug
Span 7-8:  FARC => (criminal-organization :name (name :op "FARC"))
Span 8-9:  guerrillas => guerrilla
Span 12-13:  have => have-03
Span 25-26:  interested => intersect-01
Span 0-1:  Military => military
Span 15-16:  money => money
Span 27-28:  old => old
Span 30-31:  or => or
Span 13-14:  plenty => plenty
Span 11-12:  rebels => (person :ARG0-of rebel-01)
Span 29-30:  rifles => rifle
Span 9-10:  say => say-01
Span 3-4:  specialists => (person :ARG0-of specialize-01)
Span 20-21:  trafficking => track-01
Span 17-18:  weapons => weapon

Langrangian relaxation converged after 59 iterations. Delta = 0.0
Oracle Span 1-2:  analysts => analyze-01
Oracle Span 2-3:  and => and
Oracle Span 21-22:  and => and
Oracle Span 32-33:  assistance => assist-01
Oracle Span 28-29:  Belgian => (country :name (name :op "Belgium"))
Oracle Span 34-35:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 6-7:  Colombian => (country :name (name :op "Colombia"))
Oracle Span 19-20:  drug => drug
Oracle Span 7-8:  FARC => (criminal-organization :name (name :op "FARC"))
Oracle Span 8-9:  guerrillas => (have-org-role-91 :ARG2 guerrilla)
Oracle Span 12-13:  have => have-03
Oracle Span 25-26:  interested => interest-01
Oracle Span 0-1:  Military => (have-org-role-91 :ARG1 military)
Oracle Span 15-16:  money => money
Oracle Span 27-28:  old => old
Oracle Span 30-31:  or => or
Oracle Span 13-14:  plenty => plenty
Oracle Span 11-12:  rebels => (person :ARG0-of rebel-01)
Oracle Span 29-30:  rifles => rifle
Oracle Span 9-10:  say => say-01
Oracle Span 3-4:  specialists => specialize-01
Oracle Span 20-21:  trafficking => traffic-00
Oracle Span 17-18:  weapons => weapon

Dependencies:
1	Military	_	JJ	JJ	_	2	amod	_	_
2	analysts	_	NNS	NNS	_	10	nsubj	_	_
3	and	_	CC	CC	_	2	cc	_	_
4	specialists	_	NNS	NNS	_	2	conj	_	_
5	on	_	IN	IN	_	2	prep	_	_
6	the	_	DT	DT	_	9	det	_	_
7	Colombian	_	JJ	JJ	_	9	amod	_	_
8	FARC	_	CD	CD	_	9	num	_	_
9	guerrillas	_	NNS	NNS	_	5	pobj	_	_
10	say	_	VBP	VBP	_	0	root	_	_
11	the	_	DT	DT	_	12	det	_	_
12	rebels	_	NNS	NNS	_	13	nsubj	_	_
13	have	_	VBP	VBP	_	10	ccomp	_	_
14	plenty	_	RB	RB	_	13	dobj	_	_
15	of	_	IN	IN	_	14	prep	_	_
16	money	_	NN	NN	_	15	pobj	_	_
17	for	_	IN	IN	_	13	prep	_	_
18	weapons	_	NNS	NNS	_	17	pobj	_	_
19	from	_	IN	IN	_	18	prep	_	_
20	drug	_	NN	NN	_	21	nn	_	_
21	trafficking	_	NN	NN	_	19	pobj	_	_
22	and	_	CC	CC	_	13	cc	_	_
23	would	_	MD	MD	_	26	aux	_	_
24	not	_	RB	RB	_	26	neg	_	_
25	be	_	VB	VB	_	26	auxpass	_	_
26	interested	_	VBN	VBN	_	13	conj	_	_
27	in	_	IN	IN	_	26	prep	_	_
28	old	_	JJ	JJ	_	30	amod	_	_
29	Belgian	_	JJ	JJ	_	30	amod	_	_
30	rifles	_	NNS	NNS	_	27	pobj	_	_
31	or	_	CC	CC	_	27	cc	_	_
32	in	_	IN	IN	_	27	conj	_	_
33	assistance	_	NN	NN	_	32	pobj	_	_
34	from	_	IN	IN	_	26	prep	_	_
35	Chavez	_	NNP	NNP	_	34	pobj	_	_
36	.	_	.	.	_	10	punct	_	_

Oracle:
(a3 / and, op, h / have-03)
(a3 / and, op, i / interest-01)
(a4 / assist-01, ARG0, p5 / person)
(a4 / assist-01, ARG1, p3 / person)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / criminal-organization, mod, c / country)
(c3 / criminal-organization, name, n / name)
(h / have-03, ARG0, p3 / person)
(h / have-03, ARG1, m2 / money)
(h2 / have-org-role-91, ARG1, m3 / military)
(h2 / have-org-role-91, ARG3, a2 / analyze-01)
(h4 / have-org-role-91, ARG1, c3 / criminal-organization)
(h4 / have-org-role-91, ARG2, g2 / guerrilla)
(i / interest-01, ARG0, p3 / person)
(i / interest-01, ARG1, o / or)
(m2 / money, purpose, w / weapon)
(m2 / money, quant, p4 / plenty)
(m2 / money, source, t / traffic-00)
(n / name, op, "FARC")
(n2 / name, op, "Colombia")
(n3 / name, op, "Belgium")
(n4 / name, op, "Chavez")
(o / or, op, a4 / assist-01)
(o / or, op, r2 / rifle)
(p5 / person, name, n4 / name)
(r / rebel-01, ARG0, p3 / person)
(r2 / rifle, mod, o2 / old)
(r2 / rifle, source, c2 / country)
(s / say-01, ARG0, a / and)
(s / say-01, ARG1, a3 / and)
(t / traffic-00, ARG1, d / drug)

Input(Some(Graph(null,ArrayBuffer(Span(25,26,List(0),interested,intersect-01,false), Span(12,13,List(1),have,have-03,false), Span(11,12,List(3, 2),rebels,(person :ARG0-of rebel-01),false), Span(6,7,List(6, 5, 4),Colombian,(country :name (name :op "Colombia")),false), Span(3,4,List(8, 7),specialists,(person :ARG0-of specialize-01),false), Span(9,10,List(9),say,say-01,false), Span(21,22,List(10),and,and,false), Span(27,28,List(11),old,old,false), Span(20,21,List(12),trafficking,track-01,false), Span(29,30,List(13),rifles,rifle,false), Span(17,18,List(14),weapons,weapon,false), Span(8,9,List(15),guerrillas,guerrilla,false), Span(15,16,List(16),money,money,false), Span(7,8,List(19, 18, 17),FARC,(criminal-organization :name (name :op "FARC")),false), Span(30,31,List(20),or,or,false), Span(32,33,List(21),assistance,transcribe-01,false), Span(34,35,List(24, 23, 22),Chavez.,(person :name (name :op "Chavez")),false), Span(19,20,List(25),drug,drug,false), Span(13,14,List(26),plenty,plenty,false), Span(2,3,List(27),and,and,false), Span(1,2,List(29, 28),analysts,(person :ARG0-of analyze-01),false), Span(0,1,List(30),Military,military,false)),Map(30 -> military, 2 -> person, 5 -> name, 27 -> and, 12 -> track-01, 8 -> specialize-01, 15 -> guerrilla, 21 -> transcribe-01, 18 -> name, 24 -> "Chavez", 7 -> person, 1 -> have-03, 17 -> criminal-organization, 23 -> name, 26 -> plenty, 4 -> country, 11 -> old, 14 -> weapon, 29 -> analyze-01, 20 -> or, 28 -> person, 6 -> "Colombia", 9 -> say-01, 0 -> intersect-01, 22 -> person, 16 -> money, 19 -> "FARC", 10 -> and, 3 -> rebel-01, 25 -> drug, 13 -> rifle),Map(n -> name, w -> weapon, h -> have-03, p5 -> person, s2 -> say-01, t -> track-01, m2 -> military, p2 -> person, a3 -> analyze-01, s -> specialize-01, m -> money, d -> drug, r2 -> rifle, p -> person, g -> guerrilla, a -> and, n3 -> name, p4 -> plenty, o2 -> or, t2 -> transcribe-01, r -> rebel-01, i -> intersect-01, a2 -> and, c -> country, o -> old, p3 -> person, c2 -> criminal-organization, n2 -> name))),[Ljava.lang.String;@378aa38d,Annotation([Ljava.lang.String;@17ccd6e6,[Ljava.lang.String;@4438e0d6,[Ljava.lang.String;@42379f5),Annotation([Ljava.lang.String;@66d72437,[Ljava.lang.String;@175db5ed,[Ledu.cmu.lti.nlp.amr.Dependency;@14e0c980),Annotation([Ljava.lang.String;@b13f638,[Ljava.lang.String;@543a9df1,[Ljava.lang.String;@2eb2a846),Annotation([Ljava.lang.String;@3c0cd8d9,[Ljava.lang.String;@283a5b56,[Ledu.cmu.lti.nlp.amr.Entity;@28ef9eb5))
AMR:
(a / and, op, t / track-01)
(a2 / and, op, h / have-03)
(a2 / and, op, i / intersect-01)
(a2 / and, op, p5 / person)
(a3 / analyze-01, ARG0, p5 / person)
(a3 / analyze-01, ARG1, m2 / military)
(c / country, name, n / name)
(c2 / criminal-organization, name, n2 / name)
(g / guerrilla, mod, c / country)
(g / guerrilla, name, c2 / criminal-organization)
(g / guerrilla, poss, p5 / person)
(h / have-03, ARG0, p / person)
(h / have-03, ARG1, m / money)
(i / intersect-01, ARG0, p / person)
(i / intersect-01, ARG1, o2 / or)
(m / money, quant, p4 / plenty)
(n / name, op, "Colombia")
(n2 / name, op, "FARC")
(n3 / name, op, "Chavez")
(o2 / or, op, r2 / rifle)
(p3 / person, name, n3 / name)
(p3 / person, op, p / person)
(r / rebel-01, ARG0, p / person)
(r2 / rifle, mod, o / old)
(s / specialize-01, ARG0, p2 / person)
(s / specialize-01, ARG1, m2 / military)
(s2 / say-01, ARG0, a / and)
(s2 / say-01, ARG1, a2 / and)
(t / track-01, ARG0, w / weapon)
(t / track-01, ARG1, d / drug)
(t2 / transcribe-01, ARG1, p / person)

Decoded in 5,511,017 microseconds
Sentence: A 030000 study published by the US Defense Intelligence Agency reported that more than half of the weapons seized from Colombian guerrillas from 980000 to 010000 that had markings of foreign militaries were of Venezuelan origin.

Oracle Span 1:  010000 => (date-entity :year 2001)
Oracle Span 2:  030000 => (date-entity :year 2003)
Oracle Span 3:  980000 => (date-entity :year 1998)
Oracle Span 4:  Colombian => (country :name (name :op "Colombia"))
Oracle Span 5:  Defense Intelligence Agency => (government-organization :name (name :op "Agency" :op "Intelligence" :op "Defense"))
Oracle Span 6:  foreign => foreign
Oracle Span 7:  guerrillas => guerrilla
Oracle Span 8:  markings => mark-02
Oracle Span 9:  militaries => military
Oracle Span 10:  more => more-than
Oracle Span 11:  of => include-91
Oracle Span 12:  origin => originate-01
Oracle Span 13:  published => publish-01
Oracle Span 14:  reported => report-01
Oracle Span 15:  seized => seize-01
Oracle Span 16:  study => study
Oracle Span 17:  US => (country :name (name :op "US"))
Oracle Span 18:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 19:  weapons => weapon
NER Entity: (organization :name (name :op "US" :op "Defense" :op "Intelligence" :op "Agency"))
NER Entity: (thing :name (name :op "Colombian"))
NER Entity: (thing :name (name :op "Venezuelan"))
mkDayMonthYear(030000,00,00,03)
mkDayMonthYear(980000,00,00,98)
mkDayMonthYear(010000,00,00,01)
Spans:
Span 0-1:  A => 1
Span 20-21:  Colombian => (country :name (name :op "Colombia"))
Span 7-8:  Defense => government-organization
Span 30-31:  foreign => foreign
Span 21-22:  guerrillas => guerrilla
Span 14-15:  half => half
Span 8-9:  Intelligence => (organization :name (name :op "IAEA" :op "Board"))
Span 28-29:  markings => marking
Span 31-32:  militaries => (country :name (name :op "Russia"))
Span 12-13:  more => more-than
Span 35-36:  origin. => orient-01
Span 3-4:  published => publish-01
Span 10-11:  reported => report-01
Span 18-19:  seized => seize-01
Span 2-3:  study => study
Span 17-18:  weapons => weapon

Langrangian relaxation converged after 39 iterations. Delta = 0.0
Oracle Span 25-26:  010000 => (date-entity :year 2001)
Oracle Span 1-2:  030000 => (date-entity :year 2003)
Oracle Span 23-24:  980000 => (date-entity :year 1998)
Oracle Span 20-21:  Colombian => (country :name (name :op "Colombia"))
Oracle Span 7-10:  Defense Intelligence Agency => (government-organization :name (name :op "Agency" :op "Intelligence" :op "Defense"))
Oracle Span 30-31:  foreign => foreign
Oracle Span 21-22:  guerrillas => guerrilla
Oracle Span 28-29:  markings => mark-02
Oracle Span 31-32:  militaries => military
Oracle Span 12-13:  more => more-than
Oracle Span 15-16:  of => include-91
Oracle Span 35-36:  origin => originate-01
Oracle Span 3-4:  published => publish-01
Oracle Span 10-11:  reported => report-01
Oracle Span 18-19:  seized => seize-01
Oracle Span 2-3:  study => study
Oracle Span 6-7:  US => (country :name (name :op "US"))
Oracle Span 34-35:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 17-18:  weapons => weapon

Dependencies:
1	A	_	DT	DT	_	3	det	_	_
2	030000	_	CD	CD	_	3	num	_	_
3	study	_	NN	NN	_	11	nsubj	_	_
4	published	_	VBN	VBN	_	3	vmod	_	_
5	by	_	IN	IN	_	4	prep	_	_
6	the	_	DT	DT	_	10	det	_	_
7	US	_	NNP	NNP	_	10	nn	_	_
8	Defense	_	NNP	NNP	_	10	nn	_	_
9	Intelligence	_	NNP	NNP	_	10	nn	_	_
10	Agency	_	NNP	NNP	_	5	pobj	_	_
11	reported	_	VBD	VBD	_	0	root	_	_
12	that	_	IN	IN	_	33	mark	_	_
13	more	_	JJR	JJR	_	15	quantmod	_	_
14	than	_	IN	IN	_	15	quantmod	_	_
15	half	_	PDT	PDT	_	33	nsubj	_	_
16	of	_	IN	IN	_	15	prep	_	_
17	the	_	DT	DT	_	18	det	_	_
18	weapons	_	NNS	NNS	_	16	pobj	_	_
19	seized	_	VBN	VBN	_	18	vmod	_	_
20	from	_	IN	IN	_	19	prep	_	_
21	Colombian	_	JJ	JJ	_	22	amod	_	_
22	guerrillas	_	NNS	NNS	_	20	pobj	_	_
23	from	_	IN	IN	_	22	prep	_	_
24	980000	_	CD	CD	_	26	number	_	_
25	to	_	TO	TO	_	26	dep	_	_
26	010000	_	CD	CD	_	23	pobj	_	_
27	that	_	WDT	WDT	_	28	nsubj	_	_
28	had	_	VBD	VBD	_	22	rcmod	_	_
29	markings	_	NNS	NNS	_	28	dobj	_	_
30	of	_	IN	IN	_	29	prep	_	_
31	foreign	_	JJ	JJ	_	32	amod	_	_
32	militaries	_	NNS	NNS	_	30	pobj	_	_
33	were	_	VBD	VBD	_	11	ccomp	_	_
34	of	_	IN	IN	_	33	prep	_	_
35	Venezuelan	_	JJ	JJ	_	36	amod	_	_
36	origin	_	NN	NN	_	34	pobj	_	_
37	.	_	.	.	_	11	punct	_	_

Oracle:
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(d / date-entity, year, 1998)
(d2 / date-entity, year, 2001)
(d4 / date-entity, year, 2003)
(g / government-organization, mod, c / country)
(g / government-organization, name, n / name)
(g2 / guerrilla, mod, c2 / country)
(i / include-91, ARG1, w / weapon)
(i / include-91, ARG3, m / more-than)
(m2 / mark-02, ARG0, m3 / military)
(m3 / military, mod, f / foreign)
(n / name, op, "Agency")
(n / name, op, "Defense")
(n / name, op, "Intelligence")
(n2 / name, op, "US")
(n3 / name, op, "Colombia")
(n4 / name, op, "Venezuela")
(o / originate-01, ARG1, w / weapon)
(o / originate-01, ARG2, c3 / country)
(p / publish-01, ARG0, g / government-organization)
(p / publish-01, ARG1, s / study)
(r / report-01, ARG0, s / study)
(r / report-01, ARG1, o / originate-01)
(s / study, time, d4 / date-entity)
(s2 / seize-01, ARG2, g2 / guerrilla)

Input(Some(Graph(null,ArrayBuffer(Span(31,32,List(2, 1, 0),militaries,(country :name (name :op "Russia")),false), Span(8,9,List(6, 5, 4, 3),Intelligence,(organization :name (name :op "IAEA" :op "Board")),false), Span(21,22,List(7),guerrillas,guerrilla,false), Span(7,8,List(8),Defense,government-organization,false), Span(30,31,List(9),foreign,foreign,false), Span(14,15,List(10),half,half,false), Span(35,36,List(11),origin.,orient-01,false), Span(2,3,List(12),study,study,false), Span(17,18,List(13),weapons,weapon,false), Span(20,21,List(16, 15, 14),Colombian,(country :name (name :op "Colombia")),false), Span(0,1,List(17),A,1,false), Span(12,13,List(18),more,more-than,false), Span(18,19,List(19),seized,seize-01,false), Span(3,4,List(20),published,publish-01,false), Span(10,11,List(21),reported,report-01,false), Span(28,29,List(22),markings,marking,false)),Map(2 -> "Russia", 5 -> "IAEA", 12 -> study, 15 -> name, 8 -> government-organization, 21 -> report-01, 18 -> more-than, 7 -> guerrilla, 17 -> 1, 1 -> name, 4 -> name, 11 -> orient-01, 14 -> country, 20 -> publish-01, 6 -> "Board", 22 -> marking, 0 -> country, 9 -> foreign, 16 -> "Colombia", 19 -> seize-01, 3 -> organization, 10 -> half, 13 -> weapon),Map(n -> name, w -> weapon, h -> half, s2 -> seize-01, m2 -> marking, s -> study, m -> more-than, 1 -> 1, g2 -> government-organization, p -> publish-01, g -> guerrilla, n3 -> name, o2 -> orient-01, r -> report-01, c -> country, f -> foreign, o -> organization, n2 -> name, c2 -> country))),[Ljava.lang.String;@36ef819,Annotation([Ljava.lang.String;@2ff10dab,[Ljava.lang.String;@442ffb9a,[Ljava.lang.String;@51831b5),Annotation([Ljava.lang.String;@71c2bf3f,[Ljava.lang.String;@567968f9,[Ledu.cmu.lti.nlp.amr.Dependency;@6db1aa87),Annotation([Ljava.lang.String;@2960bb1d,[Ljava.lang.String;@4dbfd249,[Ljava.lang.String;@509c45a7),Annotation([Ljava.lang.String;@301938a1,[Ljava.lang.String;@1c0dd5ec,[Ledu.cmu.lti.nlp.amr.Entity;@2f9371be))
AMR:
(c / country, mod, f / foreign)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(g / guerrilla, mod, c2 / country)
(h / half, calendar, m / more-than)
(m2 / marking, location, c / country)
(n / name, op, "Russia")
(n2 / name, op, "Board")
(n2 / name, op, "IAEA")
(n3 / name, op, "Colombia")
(o / organization, name, n2 / name)
(o / organization, poss, g2 / government-organization)
(o2 / orient-01, ARG1, w / weapon)
(p / publish-01, ARG1, s / study)
(r / report-01, ARG0, s / study)
(r / report-01, ARG1, o2 / orient-01)
(r / report-01, ARG2, c / country)
(r / report-01, ARG6, h / half)
(s / study, mod, 1 / 1)
(s2 / seize-01, ARG0, g2 / government-organization)
(s2 / seize-01, ARG1, w / weapon)
(s2 / seize-01, ARG2, g / guerrilla)

Decoded in 2,529,667 microseconds
Sentence: The implication was that corrupt or sympathetic members of the Venezuelan military may be aiding guerrillas.

Oracle Span 1:  aiding => aid-01
Oracle Span 2:  corrupt => corrupt-01
Oracle Span 3:  guerrillas => guerrilla
Oracle Span 4:  implication => imply-01
Oracle Span 5:  may => possible
Oracle Span 6:  members => (have-org-role-91 :ARG2 member)
Oracle Span 7:  military => (have-org-role-91 :ARG1 military)
Oracle Span 8:  or => or
Oracle Span 9:  sympathetic => sympathize-01
Oracle Span 10:  Venezuelan => (country :name (name :op "Venezuela"))
NER Entity: (thing :name (name :op "Venezuelan"))
Spans:
Span 14-15:  aiding => aid-01
Span 4-5:  corrupt => corrupt-01
Span 15-16:  guerrillas. => guerrilla
Span 1-2:  implication => (thing :ARG1-of imply-01)
Span 7-8:  members => (have-org-role-91 :ARG2 member)
Span 11-12:  military => military
Span 5-6:  or => or

Langrangian relaxation converged after 17 iterations. Delta = 0.0
Oracle Span 14-15:  aiding => aid-01
Oracle Span 4-5:  corrupt => corrupt-01
Oracle Span 15-16:  guerrillas => guerrilla
Oracle Span 1-2:  implication => imply-01
Oracle Span 12-13:  may => possible
Oracle Span 7-8:  members => (have-org-role-91 :ARG2 member)
Oracle Span 11-12:  military => (have-org-role-91 :ARG1 military)
Oracle Span 5-6:  or => or
Oracle Span 6-7:  sympathetic => sympathize-01
Oracle Span 10-11:  Venezuelan => (country :name (name :op "Venezuela"))

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	implication	_	NN	NN	_	3	nsubj	_	_
3	was	_	VBD	VBD	_	0	root	_	_
4	that	_	IN	IN	_	15	mark	_	_
5	corrupt	_	JJ	JJ	_	8	amod	_	_
6	or	_	CC	CC	_	5	cc	_	_
7	sympathetic	_	JJ	JJ	_	5	conj	_	_
8	members	_	NNS	NNS	_	15	nsubj	_	_
9	of	_	IN	IN	_	8	prep	_	_
10	the	_	DT	DT	_	12	det	_	_
11	Venezuelan	_	JJ	JJ	_	12	amod	_	_
12	military	_	NN	NN	_	9	pobj	_	_
13	may	_	MD	MD	_	15	aux	_	_
14	be	_	VB	VB	_	15	aux	_	_
15	aiding	_	VBG	VBG	_	3	ccomp	_	_
16	guerrillas	_	NNS	NNS	_	15	dobj	_	_
17	.	_	.	.	_	3	punct	_	_

Oracle:
(a / aid-01, ARG0, o / or)
(a / aid-01, ARG2, g / guerrilla)
(c2 / country, name, n / name)
(h / have-org-role-91, ARG1, m3 / military)
(h2 / have-org-role-91, ARG1, m3 / military)
(h2 / have-org-role-91, ARG2, m2 / member)
(i / imply-01, ARG1, p / possible)
(m3 / military, mod, c2 / country)
(n / name, op, "Venezuela")
(p / possible, domain, a / aid-01)

Input(Some(Graph(null,ArrayBuffer(Span(4,5,List(0),corrupt,corrupt-01,false), Span(7,8,List(2, 1),members,(have-org-role-91 :ARG2 member),false), Span(1,2,List(4, 3),implication,(thing :ARG1-of imply-01),false), Span(15,16,List(5),guerrillas.,guerrilla,false), Span(11,12,List(6),military,military,false), Span(5,6,List(7),or,or,false), Span(14,15,List(8),aiding,aid-01,false)),Map(2 -> member, 5 -> guerrilla, 8 -> aid-01, 7 -> or, 1 -> have-org-role-91, 4 -> imply-01, 6 -> military, 0 -> corrupt-01, 3 -> thing),Map(h -> have-org-role-91, t -> thing, m2 -> military, m -> member, g -> guerrilla, a -> aid-01, i -> imply-01, c -> corrupt-01, o -> or))),[Ljava.lang.String;@176f50f2,Annotation([Ljava.lang.String;@3fdb1b2c,[Ljava.lang.String;@af0978d,[Ljava.lang.String;@39bc1951),Annotation([Ljava.lang.String;@54b92654,[Ljava.lang.String;@33dc5594,[Ledu.cmu.lti.nlp.amr.Dependency;@3d9ee09d),Annotation([Ljava.lang.String;@64b100ee,[Ljava.lang.String;@79a701aa,[Ljava.lang.String;@28069bff),Annotation([Ljava.lang.String;@62560c6a,[Ljava.lang.String;@e0cd6be,[Ledu.cmu.lti.nlp.amr.Entity;@4f672c84))
AMR:
(a / aid-01, ARG0, o / or)
(a / aid-01, ARG1, g / guerrilla)
(c / corrupt-01, ARG1, m2 / military)
(g / guerrilla, poss, t / thing)
(h / have-org-role-91, ARG1, m2 / military)
(h / have-org-role-91, ARG2, m / member)
(i / imply-01, ARG1, t / thing)
(o / or, op, h / have-org-role-91)

Decoded in 423,368 microseconds
Sentence: Perhaps more distressing to Chavez's domestic opponents is the ideological training that critics say Chavez has in mind for the military and for new civilian reservists.

Oracle Span 1:  and => and
Oracle Span 2:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 3:  civilian => civilian
Oracle Span 4:  critics => (person :ARG0-of criticize-01)
Oracle Span 5:  distressing => distress-01
Oracle Span 6:  domestic => domestic
Oracle Span 7:  has => have-03
Oracle Span 8:  ideological => ideology
Oracle Span 9:  military => military
Oracle Span 10:  mind => mind
Oracle Span 11:  more => more
Oracle Span 12:  new => new
Oracle Span 13:  opponents => (person :ARG0-of oppose-01)
Oracle Span 14:  reservists => reservist
Oracle Span 15:  say => say-01
Oracle Span 16:  training => train-01
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 26-27:   => reservist
Span 21-22:  and => military
Span 14-15:  Chavez => say-01
Span 4-5:  Chavez's => (person :name (name :op "Chavez"))
Span 24-25:  civilian => new
Span 2-3:  distressing => disintegrate-01
Span 22-23:  for => and
Span 18-19:  for => mind
Span 15-16:  has => (person :name (name :op "Chavez"))
Span 7-8:  is => opponent
Span 1-2:  more => more
Span 6-7:  opponents => domestic
Span 0-1:  Perhaps => possible
Span 25-26:  reservists. => civilian
Span 13-14:  say => (person :ARG0-of criticize-01)
Span 11-12:  that => train-01
Span 10-11:  training => ideological

Langrangian relaxation converged after 49 iterations. Delta = 0.0
Oracle Span 22-23:  and => and
Oracle Span 4-5:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 25-26:  civilian => civilian
Oracle Span 13-14:  critics => (person :ARG0-of criticize-01)
Oracle Span 2-3:  distressing => distress-01
Oracle Span 6-7:  domestic => domestic
Oracle Span 16-17:  has => have-03
Oracle Span 10-11:  ideological => ideology
Oracle Span 21-22:  military => military
Oracle Span 18-19:  mind => mind
Oracle Span 1-2:  more => more
Oracle Span 24-25:  new => new
Oracle Span 7-8:  opponents => (person :ARG0-of oppose-01)
Oracle Span 26-27:  reservists => reservist
Oracle Span 14-15:  say => say-01
Oracle Span 11-12:  training => train-01

Dependencies:
1	Perhaps	_	RB	RB	_	9	advmod	_	_
2	more	_	RBR	RBR	_	3	advmod	_	_
3	distressing	_	JJ	JJ	_	9	dep	_	_
4	to	_	TO	TO	_	3	prep	_	_
5	Chavez	_	NNP	NNP	_	8	poss	_	_
6	's	_	POS	POS	_	5	possessive	_	_
7	domestic	_	JJ	JJ	_	8	amod	_	_
8	opponents	_	NNS	NNS	_	4	pobj	_	_
9	is	_	VBZ	VBZ	_	0	root	_	_
10	the	_	DT	DT	_	12	det	_	_
11	ideological	_	JJ	JJ	_	12	amod	_	_
12	training	_	NN	NN	_	9	nsubj	_	_
13	that	_	IN	IN	_	15	mark	_	_
14	critics	_	NNS	NNS	_	15	nsubj	_	_
15	say	_	VBP	VBP	_	12	dep	_	_
16	Chavez	_	NNP	NNP	_	18	nsubj	_	_
17	has	_	VBZ	VBZ	_	18	aux	_	_
18	in	_	IN	IN	_	15	ccomp	_	_
19	mind	_	NN	NN	_	18	pobj	_	_
20	for	_	IN	IN	_	19	prep	_	_
21	the	_	DT	DT	_	22	det	_	_
22	military	_	NN	NN	_	20	pobj	_	_
23	and	_	CC	CC	_	18	cc	_	_
24	for	_	IN	IN	_	18	conj	_	_
25	new	_	JJ	JJ	_	27	amod	_	_
26	civilian	_	JJ	JJ	_	27	amod	_	_
27	reservists	_	NNS	NNS	_	24	pobj	_	_
28	.	_	.	.	_	9	punct	_	_

Oracle:
(a / and, op, m2 / military)
(a / and, op, r / reservist)
(c2 / criticize-01, ARG0, p3 / person)
(d / distress-01, ARG0, t / train-01)
(d / distress-01, ARG1, p / person)
(d / distress-01, degree, m3 / more)
(h / have-03, ARG0, p2 / person)
(h / have-03, ARG1, t / train-01)
(h / have-03, prep-in, m / mind)
(n / name, op, "Chavez")
(o / oppose-01, ARG0, p / person)
(o / oppose-01, ARG1, p2 / person)
(p / person, mod, d2 / domestic)
(p2 / person, name, n / name)
(r / reservist, mod, c / civilian)
(r / reservist, mod, n2 / new)
(s / say-01, ARG0, p3 / person)
(s / say-01, ARG1, t / train-01)
(t / train-01, ARG2, a / and)
(t / train-01, mod, i / ideology)

Input(Some(Graph(null,ArrayBuffer(Span(21,22,List(0),and,military,false), Span(24,25,List(1),civilian,new,false), Span(22,23,List(2),for,and,false), Span(26,27,List(3),,reservist,false), Span(4,5,List(6, 5, 4),Chavez's,(person :name (name :op "Chavez")),false), Span(0,1,List(7),Perhaps,possible,false), Span(18,19,List(8),for,mind,false), Span(15,16,List(11, 10, 9),has,(person :name (name :op "Chavez")),false), Span(7,8,List(12),is,opponent,false), Span(6,7,List(13),opponents,domestic,false), Span(2,3,List(14),distressing,disintegrate-01,false), Span(14,15,List(15),Chavez,say-01,false), Span(25,26,List(16),reservists.,civilian,false), Span(13,14,List(18, 17),say,(person :ARG0-of criticize-01),false), Span(1,2,List(19),more,more,false), Span(10,11,List(20),training,ideological,false), Span(11,12,List(21),that,train-01,false)),Map(2 -> and, 5 -> name, 12 -> opponent, 15 -> say-01, 8 -> mind, 21 -> train-01, 18 -> criticize-01, 7 -> possible, 17 -> person, 1 -> new, 4 -> person, 11 -> "Chavez", 14 -> disintegrate-01, 20 -> ideological, 6 -> "Chavez", 0 -> military, 9 -> person, 16 -> civilian, 19 -> more, 3 -> reservist, 10 -> name, 13 -> domestic),Map(m3 -> more, n -> new, t -> train-01, m2 -> mind, p2 -> possible, s -> say-01, m -> military, d -> domestic, p -> person, a -> and, n3 -> name, p4 -> person, d2 -> disintegrate-01, i -> ideological, r -> reservist, c -> civilian, o -> opponent, p3 -> person, c2 -> criticize-01, n2 -> name))),[Ljava.lang.String;@330d1307,Annotation([Ljava.lang.String;@17357890,[Ljava.lang.String;@397995b0,[Ljava.lang.String;@4ad42e40),Annotation([Ljava.lang.String;@111a9936,[Ljava.lang.String;@2dd7927d,[Ledu.cmu.lti.nlp.amr.Dependency;@58765662),Annotation([Ljava.lang.String;@333bd502,[Ljava.lang.String;@762d397a,[Ljava.lang.String;@67f809b8),Annotation([Ljava.lang.String;@dd79663,[Ljava.lang.String;@6029c11e,[Ledu.cmu.lti.nlp.amr.Entity;@7fd0c288))
AMR:
(a / and, op, m / military)
(a / and, op, r / reservist)
(c2 / criticize-01, ARG0, p4 / person)
(c2 / criticize-01, ARG1, n / new)
(d2 / disintegrate-01, ARG0, t / train-01)
(d2 / disintegrate-01, ARG1, o / opponent)
(d2 / disintegrate-01, ARG6, p2 / possible)
(d2 / disintegrate-01, degree, m3 / more)
(n2 / name, op, "Chavez")
(n3 / name, op, "Chavez")
(o / opponent, mod, d / domestic)
(o / opponent, poss, p / person)
(p / person, name, n2 / name)
(p3 / person, name, n3 / name)
(r / reservist, mod, c / civilian)
(s / say-01, ARG0, p4 / person)
(s / say-01, ARG1, t / train-01)
(s / say-01, ARG2, m2 / mind)
(s / say-01, ARG6, p3 / person)
(t / train-01, ARG1, i / ideological)
(t / train-01, ARG2, a / and)

Decoded in 2,293,614 microseconds
Sentence: Chavez called earlier in 050000 for so-called Revolutionary units to start preparing the public to resist a superpower aggressor and said the first step would be to train from 100000 to 2 million volunteers in the coming years to back up active-duty armed forces.

Oracle Span 1:  050000 => (date-entity :year 2005)
Oracle Span 2:  100000 => 100000
Oracle Span 3:  active => active
Oracle Span 4:  aggressor => aggressor
Oracle Span 5:  and => and
Oracle Span 6:  armed => arm-01
Oracle Span 7:  back => back-04
Oracle Span 8:  called => call-03
Oracle Span 9:  called => call-01
Oracle Span 10:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 11:  coming => come-01
Oracle Span 12:  duty => duty
Oracle Span 13:  earlier => early
Oracle Span 14:  forces => force
Oracle Span 15:  preparing => prepare-02
Oracle Span 16:  public => public
Oracle Span 17:  resist => resist-01
Oracle Span 18:  Revolutionary => revolutionary
Oracle Span 19:  said => say-01
Oracle Span 20:  so => so
Oracle Span 21:  start => start-01
Oracle Span 22:  step => step-01
Oracle Span 23:  superpower => superpower
Oracle Span 24:  train => train-01
Oracle Span 25:  units => unit
Oracle Span 26:  volunteers => (person :ARG0-of volunteer-01)
Oracle Span 27:  years => year
NER Entity: (person :name (name :op "Chavez"))
mkDayMonthYear(050000,00,00,05)
mkDayMonthYear(100000,00,00,10)
Spans:
Span 19-20:  and => and
Span 42-43:  armed => arm-01
Span 39-40:  back => back-04
Span 1-2:  called => call-03
Span 0-1:  Chavez => 1
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 0-23:  Chavez called earlier in 050000 for so-called Revolutionary units to start preparing the public to resist a superpower aggressor and said the first => (ordinal-entity :value 1)
Span 0-36:  Chavez called earlier in 050000 for so-called Revolutionary units to start preparing the public to resist a superpower aggressor and said the first step would be to train from 100000 to 2 million volunteers in the => (date-entity :time the :time come :time year)
Span 2-3:  earlier => (early :degree more)
Span 43-44:  forces. => force
Span 11-12:  preparing => prepare-01
Span 13-14:  public => public
Span 15-16:  resist => resist-01
Span 7-8:  Revolutionary => revolution
Span 20-21:  said => say-01
Span 6-7:  so-called => (call-01 :mod so)
Span 10-11:  start => start-01
Span 23-24:  step => step
Span 27-28:  train => train-01
Span 8-9:  units => unit
Span 33-34:  volunteers => volunteer

Langrangian relaxation converged after 56 iterations. Delta = 0.0
Oracle Span 4-5:  050000 => (date-entity :year 2005)
Oracle Span 31-32:  100000 => 100000
Oracle Span 43-44:  active => active
Oracle Span 20-21:  aggressor => aggressor
Oracle Span 21-22:  and => and
Oracle Span 46-47:  armed => arm-01
Oracle Span 41-42:  back => back-04
Oracle Span 1-2:  called => call-03
Oracle Span 8-9:  called => call-01
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 38-39:  coming => come-01
Oracle Span 45-46:  duty => duty
Oracle Span 2-3:  earlier => early
Oracle Span 47-48:  forces => force
Oracle Span 13-14:  preparing => prepare-02
Oracle Span 15-16:  public => public
Oracle Span 17-18:  resist => resist-01
Oracle Span 9-10:  Revolutionary => revolutionary
Oracle Span 22-23:  said => say-01
Oracle Span 6-7:  so => so
Oracle Span 12-13:  start => start-01
Oracle Span 25-26:  step => step-01
Oracle Span 19-20:  superpower => superpower
Oracle Span 29-30:  train => train-01
Oracle Span 10-11:  units => unit
Oracle Span 35-36:  volunteers => (person :ARG0-of volunteer-01)
Oracle Span 39-40:  years => year

Dependencies:
1	Chavez	_	NNP	NNP	_	2	nsubj	_	_
2	called	_	VBD	VBD	_	0	root	_	_
3	earlier	_	RBR	RBR	_	2	advmod	_	_
4	in	_	IN	IN	_	3	prep	_	_
5	050000	_	CD	CD	_	4	pobj	_	_
6	for	_	IN	IN	_	5	prep	_	_
7	so-called	_	JJ	JJ	_	9	amod	_	_
8	Revolutionary	_	NNP	NNP	_	9	nn	_	_
9	units	_	NNS	NNS	_	6	pobj	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	start	_	VB	VB	_	2	xcomp	_	_
12	preparing	_	VBG	VBG	_	11	xcomp	_	_
13	the	_	DT	DT	_	14	det	_	_
14	public	_	NN	NN	_	12	dobj	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	resist	_	VB	VB	_	14	vmod	_	_
17	a	_	DT	DT	_	19	det	_	_
18	superpower	_	NN	NN	_	19	nn	_	_
19	aggressor	_	NN	NN	_	16	dobj	_	_
20	and	_	CC	CC	_	2	cc	_	_
21	said	_	VBD	VBD	_	2	conj	_	_
22	the	_	DT	DT	_	24	det	_	_
23	first	_	JJ	JJ	_	24	amod	_	_
24	step	_	NN	NN	_	26	nsubj	_	_
25	would	_	MD	MD	_	26	aux	_	_
26	be	_	VB	VB	_	21	ccomp	_	_
27	to	_	TO	TO	_	28	aux	_	_
28	train	_	VB	VB	_	26	xcomp	_	_
29	from	_	IN	IN	_	28	prep	_	_
30	100000	_	CD	CD	_	33	number	_	_
31	to	_	TO	TO	_	33	dep	_	_
32	2	_	CD	CD	_	33	number	_	_
33	million	_	CD	CD	_	34	num	_	_
34	volunteers	_	NNS	NNS	_	29	pobj	_	_
35	in	_	IN	IN	_	34	prep	_	_
36	the	_	DT	DT	_	38	det	_	_
37	coming	_	JJ	JJ	_	38	amod	_	_
38	years	_	NNS	NNS	_	35	pobj	_	_
39	to	_	TO	TO	_	40	aux	_	_
40	back	_	VB	VB	_	28	xcomp	_	_
41	up	_	RP	RP	_	40	prt	_	_
42	active-duty	_	JJ	JJ	_	44	amod	_	_
43	armed	_	JJ	JJ	_	44	amod	_	_
44	forces	_	NNS	NNS	_	40	dobj	_	_
45	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, c / call-03)
(a / and, op, s2 / say-01)
(a2 / aggressor, mod, s / superpower)
(a3 / arm-01, ARG1, f / force)
(b / back-04, ARG1, f / force)
(c / call-03, ARG0, p / person)
(c / call-03, ARG1, s4 / start-01)
(c / call-03, manner, s5 / so)
(c / call-03, time, e / early)
(c2 / call-01, ARG1, u / unit)
(c2 / call-01, ARG2, r / revolutionary)
(c3 / come-01, ARG1, y / year)
(d / duty, mod, a4 / active)
(d2 / date-entity, year, 2005)
(e / early, op, d2 / date-entity)
(f / force, mod, d / duty)
(n / name, op, "Chavez")
(p / person, name, n / name)
(p2 / prepare-02, ARG0, u / unit)
(p2 / prepare-02, ARG1, p3 / public)
(p2 / prepare-02, ARG2, r2 / resist-01)
(r2 / resist-01, ARG0, p3 / public)
(r2 / resist-01, ARG1, a2 / aggressor)
(s2 / say-01, ARG0, p / person)
(s2 / say-01, ARG1, s3 / step-01)
(s3 / step-01, ARG1, t / train-01)
(s4 / start-01, ARG0, u / unit)
(s4 / start-01, ARG1, p2 / prepare-02)
(t / train-01, ARG1, b / back-04)
(t / train-01, ARG2, p4 / person)
(t / train-01, time, y / year)
(v / volunteer-01, ARG0, p4 / person)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(1, 0),so-called,(call-01 :mod so),false), Span(2,3,List(3, 2),earlier,(early :degree more),false), Span(13,14,List(4),public,public,false), Span(23,24,List(5),step,step,false), Span(0,23,List(7, 6),Chavez called earlier in 050000 for so-called Revolutionary units to start preparing the public to resist a superpower aggressor and said the first,(ordinal-entity :value 1),false), Span(20,21,List(8),said,say-01,false), Span(0,36,List(12, 11, 10, 9),Chavez called earlier in 050000 for so-called Revolutionary units to start preparing the public to resist a superpower aggressor and said the first step would be to train from 100000 to 2 million volunteers in the,(date-entity :time the :time come :time year),false), Span(11,12,List(13),preparing,prepare-01,false), Span(0,1,List(14),Chavez,1,false), Span(19,20,List(15),and,and,false), Span(39,40,List(16),back,back-04,false), Span(42,43,List(17),armed,arm-01,false), Span(7,8,List(18),Revolutionary,revolution,false), Span(10,11,List(19),start,start-01,false), Span(33,34,List(20),volunteers,volunteer,false), Span(43,44,List(21),forces.,force,false), Span(15,16,List(22),resist,resist-01,false), Span(0,1,List(25, 24, 23),Chavez,(person :name (name :op "Chavez")),false), Span(8,9,List(26),units,unit,false), Span(27,28,List(27),train,train-01,false), Span(1,2,List(28),called,call-03,false)),Map(2 -> early, 5 -> step, 27 -> train-01, 12 -> year, 8 -> say-01, 15 -> and, 21 -> force, 18 -> revolution, 24 -> name, 7 -> 1, 1 -> so, 17 -> arm-01, 23 -> person, 26 -> unit, 4 -> public, 11 -> come, 14 -> 1, 20 -> volunteer, 28 -> call-03, 6 -> ordinal-entity, 9 -> date-entity, 0 -> call-01, 22 -> resist-01, 16 -> back-04, 19 -> start-01, 10 -> the, 3 -> more, 25 -> "Chavez", 13 -> prepare-01),Map(e -> early, n -> name, s2 -> step, t -> the, 12 -> 1, b -> back-04, p2 -> prepare-01, s -> so, s4 -> start-01, v -> volunteer, d -> date-entity, m -> more, 1 -> 1, y -> year, r2 -> resist-01, p -> public, c3 -> call-03, a -> and, t2 -> train-01, a2 -> arm-01, r -> revolution, c -> call-01, s3 -> say-01, u -> unit, f -> force, o -> ordinal-entity, p3 -> person, c2 -> come))),[Ljava.lang.String;@3ec12ce6,Annotation([Ljava.lang.String;@7b2df7de,[Ljava.lang.String;@74b3a49,[Ljava.lang.String;@1350581c),Annotation([Ljava.lang.String;@24c1e08c,[Ljava.lang.String;@30c670cd,[Ledu.cmu.lti.nlp.amr.Dependency;@6e018dee),Annotation([Ljava.lang.String;@7f00b88a,[Ljava.lang.String;@54eef266,[Ljava.lang.String;@572da02e),Annotation([Ljava.lang.String;@35a129d8,[Ljava.lang.String;@4f1f030e,[Ledu.cmu.lti.nlp.amr.Entity;@6c41b549))
AMR:
(a / and, quant, s2 / step)
(a2 / arm-01, ARG1, f / force)
(a2 / arm-01, ARG6, d / date-entity)
(b / back-04, ARG1, f / force)
(c / call-01, ARG1, s4 / start-01)
(c / call-01, mod, s / so)
(c / call-01, time, p2 / prepare-01)
(c3 / call-03, ARG0, p3 / person)
(c3 / call-03, ARG1, t2 / train-01)
(c3 / call-03, ARG6, 12 / 1)
(c3 / call-03, manner, c / call-01)
(c3 / call-03, manner, u / unit)
(c3 / call-03, time, e / early)
(d / date-entity, time, c2 / come)
(d / date-entity, time, t / the)
(d / date-entity, time, y / year)
(e / early, degree, m / more)
(n / name, op, "Chavez")
(o / ordinal-entity, calendar, t2 / train-01)
(o / ordinal-entity, value, 1 / 1)
(p2 / prepare-01, ARG1, p / public)
(p3 / person, name, n / name)
(r2 / resist-01, ARG0, p3 / person)
(r2 / resist-01, ARG1, s3 / say-01)
(s3 / say-01, ARG1, a / and)
(s4 / start-01, ARG1, v / volunteer)
(t2 / train-01, ARG1, d / date-entity)
(u / unit, mod, r / revolution)

Decoded in 5,076,811 microseconds
Sentence: Military analysts estimate Venezuela's active-duty armed forces number 83,000.

Oracle Span 1:  active => active
Oracle Span 2:  analysts => (person :ARG0-of analyze-01)
Oracle Span 3:  armed => arm-01
Oracle Span 4:  duty => duty
Oracle Span 5:  estimate => estimate-01
Oracle Span 6:  forces => force
Oracle Span 7:  Military => military
Oracle Span 8:  number => number-01
Oracle Span 9:  Venezuela => (country :name (name :op "Venezuela"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 1-2:  analysts => (person :ARG0-of analyze-01)
Span 2-3:  estimate => estimate-01
Span 6-7:  forces => arm-01
Span 0-1:  Military => 1
Span 0-1:  Military => military
Span 7-8:  number => force
Span 3-4:  Venezuela's => (country :name (name :op "Venezuela"))

Langrangian relaxation converged after 34 iterations. Delta = 0.0
Oracle Span 5-6:  active => active
Oracle Span 1-2:  analysts => (person :ARG0-of analyze-01)
Oracle Span 8-9:  armed => arm-01
Oracle Span 7-8:  duty => duty
Oracle Span 2-3:  estimate => estimate-01
Oracle Span 9-10:  forces => force
Oracle Span 0-1:  Military => military
Oracle Span 10-11:  number => number-01
Oracle Span 3-4:  Venezuela => (country :name (name :op "Venezuela"))

Dependencies:
1	Military	_	JJ	JJ	_	2	amod	_	_
2	analysts	_	NNS	NNS	_	3	nsubj	_	_
3	estimate	_	VBP	VBP	_	0	root	_	_
4	Venezuela	_	NNP	NNP	_	8	poss	_	_
5	's	_	POS	POS	_	4	possessive	_	_
6	active-duty	_	JJ	JJ	_	8	amod	_	_
7	armed	_	JJ	JJ	_	8	amod	_	_
8	forces	_	NNS	NNS	_	3	dobj	_	_
9	number	_	NN	NN	_	8	dep	_	_
10	83,000	_	CD	CD	_	9	num	_	_
11	.	_	.	.	_	3	punct	_	_

Oracle:
(a / analyze-01, ARG0, p / person)
(a / analyze-01, ARG1, m / military)
(a2 / arm-01, ARG1, f / force)
(c / country, name, n2 / name)
(d / duty, mod, a3 / active)
(e / estimate-01, ARG0, p / person)
(e / estimate-01, ARG1, n / number-01)
(f / force, mod, d / duty)
(f / force, poss, c / country)
(n / number-01, ARG1, f / force)
(n2 / name, op, "Venezuela")

Input(Some(Graph(null,ArrayBuffer(Span(7,8,List(0),number,force,false), Span(0,1,List(1),Military,1,false), Span(6,7,List(2),forces,arm-01,false), Span(2,3,List(3),estimate,estimate-01,false), Span(1,2,List(5, 4),analysts,(person :ARG0-of analyze-01),false), Span(3,4,List(8, 7, 6),Venezuela's,(country :name (name :op "Venezuela")),false), Span(0,1,List(9),Military,military,false)),Map(2 -> arm-01, 5 -> analyze-01, 8 -> "Venezuela", 7 -> name, 1 -> 1, 4 -> person, 6 -> country, 9 -> military, 0 -> force, 3 -> estimate-01),Map(n -> name, e -> estimate-01, m -> military, p -> person, 1 -> 1, a -> arm-01, a2 -> analyze-01, c -> country, f -> force))),[Ljava.lang.String;@74aa3060,Annotation([Ljava.lang.String;@3971915e,[Ljava.lang.String;@105b2a1f,[Ljava.lang.String;@35f1abb2),Annotation([Ljava.lang.String;@10fda45c,[Ljava.lang.String;@25332c7c,[Ledu.cmu.lti.nlp.amr.Dependency;@6c71e117),Annotation([Ljava.lang.String;@54e56b10,[Ljava.lang.String;@2947ea94,[Ljava.lang.String;@152b630c),Annotation([Ljava.lang.String;@763151e7,[Ljava.lang.String;@97319da,[Ledu.cmu.lti.nlp.amr.Entity;@1ff6412a))
AMR:
(a / arm-01, ARG0, c / country)
(a / arm-01, ARG1, f / force)
(a2 / analyze-01, ARG0, p / person)
(a2 / analyze-01, ARG1, m / military)
(c / country, name, n / name)
(e / estimate-01, ARG0, p / person)
(e / estimate-01, ARG1, a / arm-01)
(m / military, mod, 1 / 1)
(n / name, op, "Venezuela")

Decoded in 374,319 microseconds
Sentence: People's defense units would be created in neighborhoods, State companies, and the Free University established under Chavez and would report directly to the president.

Oracle Span 1:  and => and
Oracle Span 2:  and => and
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  companies => company
Oracle Span 5:  created => create-01
Oracle Span 6:  defense => defend-01
Oracle Span 7:  directly => direct
Oracle Span 8:  established => establish-01
Oracle Span 9:  Free University => (university :name (name :op "University" :op "Free"))
Oracle Span 10:  neighborhoods => neighborhood
Oracle Span 11:  president => (have-org-role-91 :ARG2 president)
Oracle Span 12:  report => report-01
Oracle Span 13:  State => state
Oracle Span 14:  units => unit
NER Entity: (organization :name (name :op "Free" :op "University"))
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 26-27:   => (have-org-role-91 :ARG2 president)
Span 17-18:  and => establish-01
Span 10-11:  and => state
Span 20-21:  directly => and
Span 6-7:  in => create-01
Span 23-24:  president. => direct
Span 19-20:  report => (person :name (name :op "Chavez"))
Span 11-12:  the => company
Span 22-23:  the => report-01
Span 15-16:  under => free-of-charge
Span 2-3:  units => descend-01
Span 13-14:  University => and
Span 3-4:  would => unit

Langrangian relaxation converged after 7 iterations. Delta = 0.0
Oracle Span 13-14:  and => and
Oracle Span 20-21:  and => and
Oracle Span 19-20:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 11-12:  companies => company
Oracle Span 6-7:  created => create-01
Oracle Span 2-3:  defense => defend-01
Oracle Span 23-24:  directly => direct
Oracle Span 17-18:  established => establish-01
Oracle Span 15-17:  Free University => (university :name (name :op "University" :op "Free"))
Oracle Span 8-9:  neighborhoods => neighborhood
Oracle Span 26-27:  president => (have-org-role-91 :ARG2 president)
Oracle Span 22-23:  report => report-01
Oracle Span 10-11:  State => state
Oracle Span 3-4:  units => unit

Dependencies:
1	People	_	NNS	NNS	_	4	poss	_	_
2	's	_	POS	POS	_	1	possessive	_	_
3	defense	_	NN	NN	_	4	nn	_	_
4	units	_	NNS	NNS	_	7	nsubjpass	_	_
5	would	_	MD	MD	_	7	aux	_	_
6	be	_	VB	VB	_	7	auxpass	_	_
7	created	_	VBN	VBN	_	0	root	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	neighborhoods	_	NNS	NNS	_	8	pobj	_	_
10	,	_	,	,	_	9	punct	_	_
11	State	_	NNP	NNP	_	12	nn	_	_
12	companies	_	NNS	NNS	_	9	appos	_	_
13	,	_	,	,	_	7	punct	_	_
14	and	_	CC	CC	_	7	cc	_	_
15	the	_	DT	DT	_	17	det	_	_
16	Free	_	NNP	NNP	_	17	nn	_	_
17	University	_	NNP	NNP	_	18	nsubj	_	_
18	established	_	VBD	VBD	_	7	conj	_	_
19	under	_	IN	IN	_	18	prep	_	_
20	Chavez	_	NNP	NNP	_	19	pobj	_	_
21	and	_	CC	CC	_	18	cc	_	_
22	would	_	MD	MD	_	23	aux	_	_
23	report	_	VB	VB	_	18	conj	_	_
24	directly	_	RB	RB	_	23	advmod	_	_
25	to	_	TO	TO	_	23	prep	_	_
26	the	_	DT	DT	_	27	det	_	_
27	president	_	NN	NN	_	25	pobj	_	_
28	.	_	.	.	_	7	punct	_	_

Oracle:
(a / and, op, c / create-01)
(a / and, op, r / report-01)
(a2 / and, op, c2 / company)
(a2 / and, op, n / neighborhood)
(a2 / and, op, u2 / university)
(c / create-01, ARG1, u / unit)
(c / create-01, location, a2 / and)
(c2 / company, mod, s / state)
(d / defend-01, ARG0, u / unit)
(e / establish-01, ARG1, u2 / university)
(e / establish-01, prep-under, p2 / person)
(h / have-org-role-91, ARG2, p3 / president)
(n2 / name, op, "Free")
(n2 / name, op, "University")
(n3 / name, op, "Chavez")
(p2 / person, name, n3 / name)
(r / report-01, ARG0, u / unit)
(r / report-01, manner, d2 / direct)
(u2 / university, name, n2 / name)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),units,descend-01,false), Span(11,12,List(1),the,company,false), Span(26,27,List(3, 2),,(have-org-role-91 :ARG2 president),false), Span(17,18,List(4),and,establish-01,false), Span(19,20,List(7, 6, 5),report,(person :name (name :op "Chavez")),false), Span(20,21,List(8),directly,and,false), Span(10,11,List(9),and,state,false), Span(22,23,List(10),the,report-01,false), Span(13,14,List(11),University,and,false), Span(23,24,List(12),president.,direct,false), Span(15,16,List(13),under,free-of-charge,false), Span(3,4,List(14),would,unit,false), Span(6,7,List(15),in,create-01,false)),Map(2 -> have-org-role-91, 5 -> person, 12 -> direct, 15 -> create-01, 8 -> and, 7 -> "Chavez", 1 -> company, 4 -> establish-01, 11 -> and, 14 -> unit, 6 -> name, 0 -> descend-01, 9 -> state, 3 -> president, 10 -> report-01, 13 -> free-of-charge),Map(e -> establish-01, n -> name, h -> have-org-role-91, p2 -> person, s -> state, d -> descend-01, p -> president, a -> and, d2 -> direct, r -> report-01, a2 -> and, c -> company, u -> unit, f -> free-of-charge, c2 -> create-01))),[Ljava.lang.String;@72dd4d61,Annotation([Ljava.lang.String;@23e263a5,[Ljava.lang.String;@2779b15f,[Ljava.lang.String;@5326bae5),Annotation([Ljava.lang.String;@4b0843a5,[Ljava.lang.String;@7b47ee2a,[Ledu.cmu.lti.nlp.amr.Dependency;@115e5b54),Annotation([Ljava.lang.String;@77c92a08,[Ljava.lang.String;@7e554a3f,[Ljava.lang.String;@3a27cd61),Annotation([Ljava.lang.String;@59c0b58a,[Ljava.lang.String;@67e74dd0,[Ledu.cmu.lti.nlp.amr.Entity;@3337e7a1))
AMR:
(a / and, op, c / company)
(a2 / and, op, c2 / create-01)
(a2 / and, op, r / report-01)
(c / company, mod, s / state)
(c2 / create-01, ARG1, u / unit)
(c2 / create-01, location, a / and)
(d / descend-01, ARG0, u / unit)
(e / establish-01, ARG1, a / and)
(e / establish-01, prep-under, p2 / person)
(h / have-org-role-91, ARG1, u / unit)
(h / have-org-role-91, ARG2, p / president)
(n / name, op, "Chavez")
(p2 / person, name, n / name)
(r / report-01, ARG0, u / unit)
(r / report-01, ARG1, f / free-of-charge)
(r / report-01, manner, d2 / direct)

Decoded in 798,074 microseconds
Sentence: The government insists the reserves will support the armed forces and not act as a fifth column against a possible anti-Chavez coup.

Oracle Span 1:  act => act-01
Oracle Span 2:  and => and
Oracle Span 3:  anti => oppose-01
Oracle Span 4:  armed => arm-01
Oracle Span 5:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 6:  column => column
Oracle Span 7:  coup => coup
Oracle Span 8:  forces => force
Oracle Span 9:  government => (government-organization :ARG0-of govern-01)
Oracle Span 10:  insists => insist-01
Oracle Span 11:  possible => possible
Oracle Span 12:  reserves => reserve
Oracle Span 13:  support => support-01
Spans:
Span 12-13:  act => act-01
Span 10-11:  and => and
Span 8-9:  armed => arm-01
Span 16-17:  column => column
Span 21-22:  coup. => coup
Span 9-10:  forces => force
Span 1-2:  government => (government-organization :ARG0-of govern-01)
Span 2-3:  insists => insist-01
Span 19-20:  possible => possible
Span 4-5:  reserves => reserve
Span 6-7:  support => support-01
Span 0-16:  The government insists the reserves will support the armed forces and not act as a fifth => (ordinal-entity :value 1)

Langrangian relaxation converged after 67 iterations. Delta = 0.0
Oracle Span 12-13:  act => act-01
Oracle Span 10-11:  and => and
Oracle Span 20-21:  anti => oppose-01
Oracle Span 8-9:  armed => arm-01
Oracle Span 22-23:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 16-17:  column => column
Oracle Span 23-24:  coup => coup
Oracle Span 9-10:  forces => force
Oracle Span 1-2:  government => (government-organization :ARG0-of govern-01)
Oracle Span 2-3:  insists => insist-01
Oracle Span 19-20:  possible => possible
Oracle Span 4-5:  reserves => reserve
Oracle Span 6-7:  support => support-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	government	_	NN	NN	_	3	nsubj	_	_
3	insists	_	VBZ	VBZ	_	0	root	_	_
4	the	_	DT	DT	_	5	det	_	_
5	reserves	_	NNS	NNS	_	7	nsubj	_	_
6	will	_	MD	MD	_	7	aux	_	_
7	support	_	VB	VB	_	3	ccomp	_	_
8	the	_	DT	DT	_	10	det	_	_
9	armed	_	VBN	VBN	_	10	amod	_	_
10	forces	_	NNS	NNS	_	7	dobj	_	_
11	and	_	CC	CC	_	7	cc	_	_
12	not	_	RB	RB	_	13	neg	_	_
13	act	_	VB	VB	_	7	conj	_	_
14	as	_	IN	IN	_	13	prep	_	_
15	a	_	DT	DT	_	17	det	_	_
16	fifth	_	JJ	JJ	_	17	amod	_	_
17	column	_	NN	NN	_	14	pobj	_	_
18	against	_	IN	IN	_	17	prep	_	_
19	a	_	DT	DT	_	22	det	_	_
20	possible	_	JJ	JJ	_	22	amod	_	_
21	anti-Chavez	_	JJ	JJ	_	22	amod	_	_
22	coup	_	NN	NN	_	18	pobj	_	_
23	.	_	.	.	_	3	punct	_	_

Oracle:
(a / and, op, a3 / act-01)
(a / and, op, s / support-01)
(a2 / arm-01, ARG1, f / force)
(a3 / act-01, ARG0, r / reserve)
(a3 / act-01, ARG1, c / column)
(a3 / act-01, prep-against, c2 / coup)
(c2 / coup, mod, p2 / possible)
(g2 / govern-01, ARG0, g / government-organization)
(i / insist-01, ARG0, g / government-organization)
(i / insist-01, ARG1, a / and)
(n / name, op, "Chavez")
(o2 / oppose-01, ARG0, c2 / coup)
(o2 / oppose-01, ARG1, p / person)
(p / person, name, n / name)
(s / support-01, ARG0, r / reserve)
(s / support-01, ARG1, f / force)

Input(Some(Graph(null,ArrayBuffer(Span(0,16,List(1, 0),The government insists the reserves will support the armed forces and not act as a fifth,(ordinal-entity :value 1),false), Span(6,7,List(2),support,support-01,false), Span(2,3,List(3),insists,insist-01,false), Span(21,22,List(4),coup.,coup,false), Span(8,9,List(5),armed,arm-01,false), Span(10,11,List(6),and,and,false), Span(1,2,List(8, 7),government,(government-organization :ARG0-of govern-01),false), Span(9,10,List(9),forces,force,false), Span(12,13,List(10),act,act-01,false), Span(19,20,List(11),possible,possible,false), Span(4,5,List(12),reserves,reserve,false), Span(16,17,List(13),column,column,false)),Map(2 -> support-01, 5 -> arm-01, 12 -> reserve, 8 -> govern-01, 7 -> government-organization, 1 -> 1, 4 -> coup, 11 -> possible, 6 -> and, 0 -> ordinal-entity, 9 -> force, 3 -> insist-01, 10 -> act-01, 13 -> column),Map(a3 -> act-01, s -> support-01, 1 -> 1, g2 -> govern-01, g -> government-organization, p -> possible, a -> arm-01, i -> insist-01, a2 -> and, r -> reserve, c -> coup, f -> force, o -> ordinal-entity, c2 -> column))),[Ljava.lang.String;@2bd69926,Annotation([Ljava.lang.String;@255a4ed1,[Ljava.lang.String;@7563bcd7,[Ljava.lang.String;@661929ff),Annotation([Ljava.lang.String;@799993b3,[Ljava.lang.String;@ec26697,[Ledu.cmu.lti.nlp.amr.Dependency;@66aff69c),Annotation([Ljava.lang.String;@49567d67,[Ljava.lang.String;@7c676bf5,[Ljava.lang.String;@610c5c30),Annotation([Ljava.lang.String;@780e5d9b,[Ljava.lang.String;@2c9aab8,[Ledu.cmu.lti.nlp.amr.Entity;@453651d7))
AMR:
(a / arm-01, ARG0, c / coup)
(a / arm-01, ARG1, f / force)
(a2 / and, op, a3 / act-01)
(a2 / and, op, p / possible)
(a2 / and, op, s / support-01)
(a3 / act-01, ARG0, r / reserve)
(a3 / act-01, ARG1, c2 / column)
(g2 / govern-01, ARG0, g / government-organization)
(i / insist-01, ARG0, g / government-organization)
(i / insist-01, ARG1, a2 / and)
(o / ordinal-entity, op, c2 / column)
(o / ordinal-entity, value, 1 / 1)
(s / support-01, ARG0, r / reserve)
(s / support-01, ARG1, f / force)

Decoded in 1,909,142 microseconds
Sentence: Espinoza said the reserves are not to be used as shock troops for any political party and that if there were a civil war, it would be up to each person to take their own side.

Oracle Span 1:  and => and
Oracle Span 2:  any => any
Oracle Span 3:  civil => civil
Oracle Span 4:  each => each
Oracle Span 5:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 6:  party => party
Oracle Span 7:  person => person
Oracle Span 8:  political => politics
Oracle Span 9:  reserves => reserve
Oracle Span 10:  said => say-01
Oracle Span 11:  shock => shock-01
Oracle Span 12:  side => (thing :ARG1-of side-01)
Oracle Span 13:  troops => troop
Oracle Span 14:  used => use-01
Oracle Span 15:  war => war
NER Entity: (person :name (name :op "Espinoza"))
Spans:
Span 36-37:   => side
Span 16-17:  and => and
Span 13-14:  any => any
Span 22-23:  civil => civil
Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Span 30-31:  person => each
Span 14-15:  political => politics
Span 3-4:  reserves => reserve
Span 1-2:  said => say-01
Span 10-11:  shock => shock-01
Span 33-34:  their => take-01
Span 31-32:  to => person
Span 28-29:  to => up-to
Span 11-12:  troops => troop
Span 8-9:  used => use-01
Span 23-24:  war, => war-01

Langrangian relaxation converged after 53 iterations. Delta = 0.0
Oracle Span 16-17:  and => and
Oracle Span 13-14:  any => any
Oracle Span 22-23:  civil => civil
Oracle Span 30-31:  each => each
Oracle Span 0-1:  Espinoza => (person :name (name :op "Espinoza"))
Oracle Span 15-16:  party => party
Oracle Span 31-32:  person => person
Oracle Span 14-15:  political => politics
Oracle Span 3-4:  reserves => reserve
Oracle Span 1-2:  said => say-01
Oracle Span 10-11:  shock => shock-01
Oracle Span 36-37:  side => (thing :ARG1-of side-01)
Oracle Span 11-12:  troops => troop
Oracle Span 8-9:  used => use-01
Oracle Span 23-24:  war => war

Dependencies:
1	Espinoza	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	4	det	_	_
4	reserves	_	NNS	NNS	_	6	nsubj	_	_
5	are	_	VBP	VBP	_	6	aux	_	_
6	not	_	RB	RB	_	2	ccomp	_	_
7	to	_	TO	TO	_	9	aux	_	_
8	be	_	VB	VB	_	9	auxpass	_	_
9	used	_	VBN	VBN	_	6	xcomp	_	_
10	as	_	IN	IN	_	9	prep	_	_
11	shock	_	NN	NN	_	12	nn	_	_
12	troops	_	NNS	NNS	_	10	pobj	_	_
13	for	_	IN	IN	_	12	prep	_	_
14	any	_	DT	DT	_	16	det	_	_
15	political	_	JJ	JJ	_	16	amod	_	_
16	party	_	NN	NN	_	13	pobj	_	_
17	and	_	CC	CC	_	6	cc	_	_
18	that	_	IN	IN	_	28	mark	_	_
19	if	_	IN	IN	_	21	mark	_	_
20	there	_	EX	EX	_	21	expl	_	_
21	were	_	VBD	VBD	_	28	advcl	_	_
22	a	_	DT	DT	_	24	det	_	_
23	civil	_	JJ	JJ	_	24	amod	_	_
24	war	_	NN	NN	_	21	nsubj	_	_
25	,	_	,	,	_	28	punct	_	_
26	it	_	PRP	PRP	_	28	nsubj	_	_
27	would	_	MD	MD	_	28	aux	_	_
28	be	_	VB	VB	_	6	conj	_	_
29	up	_	RB	RB	_	28	advmod	_	_
30	to	_	TO	TO	_	29	prep	_	_
31	each	_	DT	DT	_	32	det	_	_
32	person	_	NN	NN	_	30	pobj	_	_
33	to	_	TO	TO	_	34	aux	_	_
34	take	_	VB	VB	_	32	vmod	_	_
35	their	_	PRP$	PRP$	_	37	poss	_	_
36	own	_	JJ	JJ	_	37	amod	_	_
37	side	_	NN	NN	_	34	dobj	_	_
38	.	_	.	.	_	2	punct	_	_

Oracle:
(n / name, op, "Espinoza")
(p / person, name, n / name)
(p2 / party, mod, a2 / any)
(p2 / party, mod, p3 / politics)
(p4 / person, mod, e / each)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a / and)
(s2 / shock-01, ARG0, t / troop)
(s2 / shock-01, ARG1, p2 / party)
(s4 / side-01, ARG0, p4 / person)
(s4 / side-01, ARG1, t2 / thing)
(u / use-01, ARG1, r / reserve)
(u / use-01, ARG2, t / troop)
(w / war, mod, c / civil)

Input(Some(Graph(null,ArrayBuffer(Span(31,32,List(0),to,person,false), Span(11,12,List(1),troops,troop,false), Span(10,11,List(2),shock,shock-01,false), Span(16,17,List(3),and,and,false), Span(0,1,List(6, 5, 4),Espinoza,(person :name (name :op "Espinoza")),false), Span(36,37,List(7),,side,false), Span(8,9,List(8),used,use-01,false), Span(28,29,List(9),to,up-to,false), Span(13,14,List(10),any,any,false), Span(22,23,List(11),civil,civil,false), Span(3,4,List(12),reserves,reserve,false), Span(30,31,List(13),person,each,false), Span(1,2,List(14),said,say-01,false), Span(33,34,List(15),their,take-01,false), Span(23,24,List(16),war,,war-01,false), Span(14,15,List(17),political,politics,false)),Map(2 -> shock-01, 5 -> name, 12 -> reserve, 15 -> take-01, 8 -> use-01, 7 -> side, 17 -> politics, 1 -> troop, 4 -> person, 11 -> civil, 14 -> say-01, 6 -> "Espinoza", 0 -> person, 9 -> up-to, 16 -> war-01, 3 -> and, 10 -> any, 13 -> each),Map(e -> each, w -> war-01, n -> name, s2 -> side, t -> troop, p2 -> person, s -> shock-01, u2 -> up-to, p -> person, a -> and, t2 -> take-01, a2 -> any, r -> reserve, s3 -> say-01, c -> civil, u -> use-01, p3 -> politics))),[Ljava.lang.String;@308bdc8d,Annotation([Ljava.lang.String;@16ed87ea,[Ljava.lang.String;@7f211297,[Ljava.lang.String;@418a5da6),Annotation([Ljava.lang.String;@2f8b9eae,[Ljava.lang.String;@55a38e62,[Ledu.cmu.lti.nlp.amr.Dependency;@22619beb),Annotation([Ljava.lang.String;@3195956c,[Ljava.lang.String;@4218131e,[Ljava.lang.String;@b8155a1),Annotation([Ljava.lang.String;@251129f9,[Ljava.lang.String;@3832e6c2,[Ledu.cmu.lti.nlp.amr.Entity;@3a308239))
AMR:
(a / and, op, u2 / up-to)
(n / name, op, "Espinoza")
(p / person, mod, e / each)
(p2 / person, name, n / name)
(s / shock-01, ARG0, t / troop)
(s / shock-01, ARG1, p3 / politics)
(s2 / side, poss, p / person)
(s3 / say-01, ARG0, p2 / person)
(s3 / say-01, ARG1, a / and)
(s3 / say-01, ARG6, u / use-01)
(t2 / take-01, ARG1, s2 / side)
(u / use-01, ARG1, r / reserve)
(u / use-01, ARG2, t / troop)
(u2 / up-to, condition, w / war-01)
(u2 / up-to, domain, t2 / take-01)
(w / war-01, ARG1, a2 / any)
(w / war-01, mod, c / civil)

Decoded in 2,597,046 microseconds
Sentence: General Julio Ramon Quintero viloria is commander of the reserves.

Oracle Span 1:  commander => command-02
Oracle Span 2:  General => (have-org-role-91 :ARG2 general)
Oracle Span 3:  Julio Ramon Quintero viloria => (person :name (name :op "Viloria" :op "Quintero" :op "Ramon" :op "Julio"))
Oracle Span 4:  reserves => reserve
NER Entity: (person :name (name :op "Julio" :op "Ramon" :op "Quintero"))
Spans:
Span 0-1:  General => general
Span 1-4:  Julio Ramon Quintero => (person :name (name :op "Julio" :op "Ramon" :op "Quintero"))
Span 9-10:  reserves. => reserve

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 6-7:  commander => command-02
Oracle Span 0-1:  General => (have-org-role-91 :ARG2 general)
Oracle Span 1-5:  Julio Ramon Quintero viloria => (person :name (name :op "Viloria" :op "Quintero" :op "Ramon" :op "Julio"))
Oracle Span 9-10:  reserves => reserve

Dependencies:
1	General	_	NNP	NNP	_	5	nn	_	_
2	Julio	_	NNP	NNP	_	5	nn	_	_
3	Ramon	_	NNP	NNP	_	5	nn	_	_
4	Quintero	_	NNP	NNP	_	5	nn	_	_
5	viloria	_	NNP	NNP	_	7	nsubj	_	_
6	is	_	VBZ	VBZ	_	7	cop	_	_
7	commander	_	NN	NN	_	0	root	_	_
8	of	_	IN	IN	_	7	prep	_	_
9	the	_	DT	DT	_	10	det	_	_
10	reserves	_	NNS	NNS	_	8	pobj	_	_
11	.	_	.	.	_	7	punct	_	_

Oracle:
(c2 / command-02, ARG0, p / person)
(c2 / command-02, ARG1, r / reserve)
(h2 / have-org-role-91, ARG0, p / person)
(h2 / have-org-role-91, ARG2, g / general)
(n / name, op, "Julio")
(n / name, op, "Quintero")
(n / name, op, "Ramon")
(n / name, op, "Viloria")
(p / person, name, n / name)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(0),reserves.,reserve,false), Span(0,1,List(1),General,general,false), Span(1,4,List(6, 5, 4, 3, 2),Julio Ramon Quintero,(person :name (name :op "Julio" :op "Ramon" :op "Quintero")),false)),Map(2 -> person, 5 -> "Ramon", 1 -> general, 4 -> "Julio", 6 -> "Quintero", 0 -> reserve, 3 -> name),Map(n -> name, p -> person, g -> general, r -> reserve))),[Ljava.lang.String;@2f045a89,Annotation([Ljava.lang.String;@173cbf5c,[Ljava.lang.String;@4efe835f,[Ljava.lang.String;@361c52d2),Annotation([Ljava.lang.String;@3bc1868a,[Ljava.lang.String;@49f508f1,[Ledu.cmu.lti.nlp.amr.Dependency;@732b9eeb),Annotation([Ljava.lang.String;@27f5d89e,[Ljava.lang.String;@10b7ff3c,[Ljava.lang.String;@71e4df5b),Annotation([Ljava.lang.String;@5e17cb4a,[Ljava.lang.String;@57afd93e,[Ledu.cmu.lti.nlp.amr.Entity;@78ce92e8))
AMR:
(n / name, op, "Julio")
(n / name, op, "Quintero")
(n / name, op, "Ramon")
(p / person, mod, g / general)
(p / person, name, n / name)
(r / reserve, poss, g / general)

Decoded in 168,144 microseconds
Sentence: Quintero said in an interview that the armed forces hope to train 50000 civilians over 20 weekends in the second half of 050000 and could train 300000 more in 060000.

Oracle Span 1:  050000 => (date-entity :year 2005)
Oracle Span 2:  060000 => (date-entity :year 2006)
Oracle Span 3:  20 => 20
Oracle Span 4:  300000 => 300000
Oracle Span 5:  50000 => 50000
Oracle Span 6:  and => and
Oracle Span 7:  armed => arm-01
Oracle Span 8:  civilians => civilian
Oracle Span 9:  could => possible
Oracle Span 10:  forces => force
Oracle Span 11:  half => half
Oracle Span 12:  hope => hope-01
Oracle Span 13:  interview => interview-01
Oracle Span 14:  more => more
Oracle Span 15:  Quintero => (person :name (name :op "Quintero"))
Oracle Span 16:  said => say-01
Oracle Span 17:  train => train-01
Oracle Span 18:  train => train-01
Oracle Span 19:  weekends => weekend
NER Entity: (person :name (name :op "Quintero"))
mkDayMonthYear(050000,00,00,05)
mkDayMonthYear(060000,00,00,06)
mkDayMonthYear(300000,00,00,30)
Spans:
Span 23-24:  and => and
Span 7-8:  armed => arm-01
Span 13-14:  civilians => civilian
Span 24-25:  could => possible
Span 8-9:  forces => force
Span 9-10:  hope => hope-01
Span 4-5:  interview => interview-01
Span 27-28:  more => more
Span 14-15:  over => over
Span 0-1:  Quintero => 1
Span 0-1:  Quintero => (person :name (name :op "Quintero"))
Span 0-20:  Quintero said in an interview that the armed forces hope to train 50000 civilians over 20 weekends in the second => (date-entity :time second :time half :time of :time 050000)
Span 1-2:  said => say-01
Span 18-19:  the => (country :name (name :op "North"))
Span 25-26:  train => train-01
Span 11-12:  train => train-01

Langrangian relaxation converged after 36 iterations. Delta = 0.0
Oracle Span 22-23:  050000 => (date-entity :year 2005)
Oracle Span 29-30:  060000 => (date-entity :year 2006)
Oracle Span 15-16:  20 => 20
Oracle Span 26-27:  300000 => 300000
Oracle Span 12-13:  50000 => 50000
Oracle Span 23-24:  and => and
Oracle Span 7-8:  armed => arm-01
Oracle Span 13-14:  civilians => civilian
Oracle Span 24-25:  could => possible
Oracle Span 8-9:  forces => force
Oracle Span 20-21:  half => half
Oracle Span 9-10:  hope => hope-01
Oracle Span 4-5:  interview => interview-01
Oracle Span 27-28:  more => more
Oracle Span 0-1:  Quintero => (person :name (name :op "Quintero"))
Oracle Span 1-2:  said => say-01
Oracle Span 11-12:  train => train-01
Oracle Span 25-26:  train => train-01
Oracle Span 16-17:  weekends => weekend

Dependencies:
1	Quintero	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	in	_	IN	IN	_	2	prep	_	_
4	an	_	DT	DT	_	5	det	_	_
5	interview	_	NN	NN	_	3	pobj	_	_
6	that	_	IN	IN	_	10	mark	_	_
7	the	_	DT	DT	_	9	det	_	_
8	armed	_	JJ	JJ	_	9	amod	_	_
9	forces	_	NNS	NNS	_	10	nsubj	_	_
10	hope	_	VBP	VBP	_	2	ccomp	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	train	_	VB	VB	_	10	xcomp	_	_
13	50000	_	CD	CD	_	14	num	_	_
14	civilians	_	NNS	NNS	_	12	dobj	_	_
15	over	_	IN	IN	_	12	prep	_	_
16	20	_	CD	CD	_	17	num	_	_
17	weekends	_	NNS	NNS	_	15	pobj	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	the	_	DT	DT	_	21	det	_	_
20	second	_	JJ	JJ	_	21	amod	_	_
21	half	_	NN	NN	_	18	pobj	_	_
22	of	_	IN	IN	_	21	prep	_	_
23	050000	_	CD	CD	_	22	pobj	_	_
24	and	_	CC	CC	_	10	cc	_	_
25	could	_	MD	MD	_	26	aux	_	_
26	train	_	VB	VB	_	10	conj	_	_
27	300000	_	CD	CD	_	28	npadvmod	_	_
28	more	_	RBR	RBR	_	29	advmod	_	_
29	in	_	IN	IN	_	26	prep	_	_
30	060000	_	CD	CD	_	29	pobj	_	_
31	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, h / hope-01)
(a / and, op, p2 / possible)
(a2 / arm-01, ARG1, f / force)
(c2 / civilian, mod, m / more)
(c2 / civilian, quant, 3 / 300000)
(d / date-entity, part, h2 / half)
(d / date-entity, year, 2005)
(d3 / date-entity, year, 2006)
(h / hope-01, ARG0, f / force)
(h / hope-01, ARG1, t / train-01)
(i / interview-01, ARG1, p / person)
(n / name, op, "Quintero")
(p / person, name, n / name)
(p2 / possible, domain, t2 / train-01)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a / and)
(s / say-01, medium, i / interview-01)
(t / train-01, ARG0, f / force)
(t / train-01, duration, w / weekend)
(t / train-01, time, h2 / half)
(t2 / train-01, ARG0, f / force)
(t2 / train-01, ARG2, c2 / civilian)
(t2 / train-01, time, d3 / date-entity)
(w / weekend, quant, 2 / 20)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),over,over,false), Span(8,9,List(1),forces,force,false), Span(13,14,List(2),civilians,civilian,false), Span(9,10,List(3),hope,hope-01,false), Span(18,19,List(6, 5, 4),the,(country :name (name :op "North")),false), Span(7,8,List(7),armed,arm-01,false), Span(25,26,List(8),train,train-01,false), Span(0,1,List(9),Quintero,1,false), Span(24,25,List(10),could,possible,false), Span(4,5,List(11),interview,interview-01,false), Span(1,2,List(12),said,say-01,false), Span(0,1,List(15, 14, 13),Quintero,(person :name (name :op "Quintero")),false), Span(0,20,List(20, 19, 18, 17, 16),Quintero said in an interview that the armed forces hope to train 50000 civilians over 20 weekends in the second,(date-entity :time second :time half :time of :time 050000),false), Span(11,12,List(21),train,train-01,false), Span(23,24,List(22),and,and,false), Span(27,28,List(23),more,more,false)),Map(2 -> civilian, 5 -> name, 12 -> say-01, 15 -> "Quintero", 8 -> train-01, 21 -> train-01, 18 -> half, 7 -> arm-01, 17 -> second, 1 -> force, 23 -> more, 4 -> country, 11 -> interview-01, 14 -> name, 20 -> 050000, 6 -> "North", 22 -> and, 0 -> over, 9 -> 1, 16 -> date-entity, 19 -> of, 3 -> hope-01, 10 -> possible, 13 -> person),Map(n -> name, h -> hope-01, h2 -> half, s2 -> second, t -> train-01, p2 -> person, s -> say-01, m -> more, d -> date-entity, 1 -> 1, p -> possible, a -> arm-01, o2 -> of, t2 -> train-01, a2 -> and, i -> interview-01, c -> civilian, 0 -> 050000, f -> force, o -> over, n2 -> name, c2 -> country))),[Ljava.lang.String;@70669032,Annotation([Ljava.lang.String;@3c825b5a,[Ljava.lang.String;@68d4ff0a,[Ljava.lang.String;@1e87cf99),Annotation([Ljava.lang.String;@5a242b7b,[Ljava.lang.String;@7452f3ee,[Ledu.cmu.lti.nlp.amr.Dependency;@3bb17ec1),Annotation([Ljava.lang.String;@1b6a9529,[Ljava.lang.String;@606e0acc,[Ljava.lang.String;@34058ac),Annotation([Ljava.lang.String;@33376973,[Ljava.lang.String;@7c3b71e1,[Ledu.cmu.lti.nlp.amr.Entity;@6c933cc0))
AMR:
(a / arm-01, ARG1, f / force)
(a2 / and, op, d / date-entity)
(a2 / and, op, h / hope-01)
(c / civilian, mod, c2 / country)
(c / civilian, mod, m / more)
(c / civilian, mod, o / over)
(c2 / country, name, n / name)
(d / date-entity, time, 0 / 050000)
(d / date-entity, time, h2 / half)
(d / date-entity, time, o2 / of)
(d / date-entity, time, s2 / second)
(h / hope-01, ARG0, f / force)
(h / hope-01, ARG1, t / train-01)
(i / interview-01, ARG1, 1 / 1)
(n / name, op, "North")
(n2 / name, op, "Quintero")
(p / possible, domain, t2 / train-01)
(p2 / person, name, n2 / name)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, a2 / and)
(s / say-01, medium, i / interview-01)
(t / train-01, ARG0, f / force)
(t2 / train-01, ARG0, f / force)
(t2 / train-01, ARG2, c / civilian)

Decoded in 3,049,044 microseconds
Sentence: Quintero said that Venezuelans don't want to be the colony of any empire and have to be ready for any possibility.

Oracle Span 1:  and => and
Oracle Span 2:  any => any
Oracle Span 3:  colony => colony
Oracle Span 4:  empire => empire
Oracle Span 5:  possibility => possible
Oracle Span 6:  Quintero => (person :name (name :op "Quintero"))
Oracle Span 7:  ready => ready-01
Oracle Span 8:  said => say-01
Oracle Span 9:  Venezuelans => (person :mod (country :name (name :op "Venezuela")))
Oracle Span 10:  want => want-01
NER Entity: (person :name (name :op "Quintero"))
NER Entity: (thing :name (name :op "Venezuelans"))
Spans:
Span 21-22:   => possibility
Span 12-13:  empire => any
Span 18-19:  for => ready-01
Span 14-15:  have => and
Span 10-11:  of => colony
Span 20-21:  possibility. => any
Span 0-1:  Quintero => (person :name (name :op "Quintero"))
Span 1-2:  said => say-01
Span 6-7:  to => want-01
Span 15-16:  to => have-02

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 14-15:  and => and
Oracle Span 12-13:  any => any
Oracle Span 10-11:  colony => colony
Oracle Span 13-14:  empire => empire
Oracle Span 21-22:  possibility => possible
Oracle Span 0-1:  Quintero => (person :name (name :op "Quintero"))
Oracle Span 18-19:  ready => ready-01
Oracle Span 1-2:  said => say-01
Oracle Span 3-4:  Venezuelans => (person :mod (country :name (name :op "Venezuela")))
Oracle Span 6-7:  want => want-01

Dependencies:
1	Quintero	_	NNP	NNP	_	2	nsubj	_	_
2	said	_	VBD	VBD	_	0	root	_	_
3	that	_	IN	IN	_	7	mark	_	_
4	Venezuelans	_	NNP	NNP	_	7	nsubj	_	_
5	do	_	VBP	VBP	_	7	aux	_	_
6	n't	_	RB	RB	_	7	neg	_	_
7	want	_	VB	VB	_	2	ccomp	_	_
8	to	_	TO	TO	_	11	aux	_	_
9	be	_	VB	VB	_	11	cop	_	_
10	the	_	DT	DT	_	11	det	_	_
11	colony	_	NN	NN	_	7	xcomp	_	_
12	of	_	IN	IN	_	11	prep	_	_
13	any	_	DT	DT	_	14	det	_	_
14	empire	_	NN	NN	_	12	pobj	_	_
15	and	_	CC	CC	_	11	cc	_	_
16	have	_	VB	VB	_	11	conj	_	_
17	to	_	TO	TO	_	19	aux	_	_
18	be	_	VB	VB	_	19	cop	_	_
19	ready	_	JJ	JJ	_	16	xcomp	_	_
20	for	_	IN	IN	_	19	prep	_	_
21	any	_	DT	DT	_	22	det	_	_
22	possibility	_	NN	NN	_	20	pobj	_	_
23	.	_	.	.	_	2	punct	_	_

Oracle:
(a / and, op, w / want-01)
(c / country, name, n2 / name)
(c2 / colony, poss, e / empire)
(e / empire, mod, a2 / any)
(n / name, op, "Quintero")
(n2 / name, op, "Venezuela")
(p / person, name, n / name)
(p2 / person, mod, c / country)
(p3 / possible, mod, a2 / any)
(r / ready-01, ARG1, p2 / person)
(r / ready-01, ARG2, p3 / possible)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, a / and)
(w / want-01, ARG0, p2 / person)
(w / want-01, ARG1, c2 / colony)

Input(Some(Graph(null,ArrayBuffer(Span(14,15,List(0),have,and,false), Span(12,13,List(1),empire,any,false), Span(20,21,List(2),possibility.,any,false), Span(6,7,List(3),to,want-01,false), Span(21,22,List(4),,possibility,false), Span(1,2,List(5),said,say-01,false), Span(10,11,List(6),of,colony,false), Span(15,16,List(7),to,have-02,false), Span(0,1,List(10, 9, 8),Quintero,(person :name (name :op "Quintero")),false), Span(18,19,List(11),for,ready-01,false)),Map(2 -> any, 5 -> say-01, 8 -> person, 7 -> have-02, 1 -> any, 11 -> ready-01, 4 -> possibility, 6 -> colony, 9 -> name, 0 -> and, 10 -> "Quintero", 3 -> want-01),Map(n -> name, w -> want-01, h -> have-02, p2 -> person, s -> say-01, a3 -> any, p -> possibility, a -> and, r -> ready-01, a2 -> any, c -> colony))),[Ljava.lang.String;@5327425b,Annotation([Ljava.lang.String;@5867fa7b,[Ljava.lang.String;@2098381e,[Ljava.lang.String;@42fbeda1),Annotation([Ljava.lang.String;@2b274a3f,[Ljava.lang.String;@4c74c902,[Ledu.cmu.lti.nlp.amr.Dependency;@2dcd505a),Annotation([Ljava.lang.String;@30c636a7,[Ljava.lang.String;@2121f432,[Ljava.lang.String;@4bf705cd),Annotation([Ljava.lang.String;@c7fc369,[Ljava.lang.String;@d0daf4f,[Ledu.cmu.lti.nlp.amr.Entity;@23235ab8))
AMR:
(a / and, op, h / have-02)
(a / and, op, w / want-01)
(h / have-02, ARG1, r / ready-01)
(n / name, op, "Quintero")
(p / possibility, mod, a2 / any)
(p / possibility, mod, a3 / any)
(p2 / person, name, n / name)
(r / ready-01, ARG1, p / possibility)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, a / and)
(w / want-01, ARG1, c / colony)

Decoded in 377,088 microseconds
Sentence: 100000 reservists in 050600 engaged with the Venezuelan navy in a massive war game to repel a stronger country that had invaded.

Oracle Span 1:  050600 => (date-entity :month 6 :year 2005)
Oracle Span 2:  100000 => 100000
Oracle Span 3:  country => country
Oracle Span 4:  engaged => engage-01
Oracle Span 5:  game => game
Oracle Span 6:  invaded => invade-01
Oracle Span 7:  massive => massive
Oracle Span 8:  navy => navy
Oracle Span 9:  repel => repel-01
Oracle Span 10:  reservists => reservist
Oracle Span 11:  stronger => strong
Oracle Span 12:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 13:  war => war
NER Entity: (thing :name (name :op "Venezuelan"))
mkDayMonthYear(050600,00,06,05)
mkDayMonthYear(100000,00,00,10)
Spans:
Span 0-1:  100000 => 1
Span 18-19:  country => country
Span 4-5:  engaged => engage-01
Span 13-14:  game => game
Span 21-22:  invaded. => invade-01
Span 11-12:  massive => massive
Span 8-9:  navy => navy
Span 15-16:  repel => repel-01
Span 1-2:  reservists => reservist
Span 17-18:  stronger => (strong :degree more)
Span 12-13:  war => war

Langrangian relaxation converged after 36 iterations. Delta = 0.0
Oracle Span 3-4:  050600 => (date-entity :month 6 :year 2005)
Oracle Span 0-1:  100000 => 100000
Oracle Span 18-19:  country => country
Oracle Span 4-5:  engaged => engage-01
Oracle Span 13-14:  game => game
Oracle Span 21-22:  invaded => invade-01
Oracle Span 11-12:  massive => massive
Oracle Span 8-9:  navy => navy
Oracle Span 15-16:  repel => repel-01
Oracle Span 1-2:  reservists => reservist
Oracle Span 17-18:  stronger => strong
Oracle Span 7-8:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 12-13:  war => war

Dependencies:
1	100000	_	CD	CD	_	2	num	_	_
2	reservists	_	NNS	NNS	_	5	nsubj	_	_
3	in	_	IN	IN	_	2	prep	_	_
4	050600	_	CD	CD	_	3	pobj	_	_
5	engaged	_	VBD	VBD	_	0	root	_	_
6	with	_	IN	IN	_	5	prep	_	_
7	the	_	DT	DT	_	9	det	_	_
8	Venezuelan	_	JJ	JJ	_	9	amod	_	_
9	navy	_	NN	NN	_	6	pobj	_	_
10	in	_	IN	IN	_	9	prep	_	_
11	a	_	DT	DT	_	14	det	_	_
12	massive	_	JJ	JJ	_	14	amod	_	_
13	war	_	NN	NN	_	14	nn	_	_
14	game	_	NN	NN	_	10	pobj	_	_
15	to	_	TO	TO	_	16	aux	_	_
16	repel	_	VB	VB	_	5	xcomp	_	_
17	a	_	DT	DT	_	19	det	_	_
18	stronger	_	JJR	JJR	_	19	amod	_	_
19	country	_	NN	NN	_	16	dobj	_	_
20	that	_	WDT	WDT	_	22	nsubj	_	_
21	had	_	VBD	VBD	_	22	aux	_	_
22	invaded	_	VBN	VBN	_	19	rcmod	_	_
23	.	_	.	.	_	5	punct	_	_

Oracle:
(c / country, name, n2 / name)
(c2 / country, mod, s / strong)
(d / date-entity, month, 6)
(d / date-entity, year, 2005)
(e / engage-01, ARG2, g / game)
(e / engage-01, purpose, r2 / repel-01)
(e / engage-01, time, d / date-entity)
(g / game, mod, m / massive)
(g / game, mod, w / war)
(i / invade-01, ARG0, c2 / country)
(n / navy, mod, c / country)
(n2 / name, op, "Venezuela")
(r / reservist, quant, 1 / 100000)
(r2 / repel-01, ARG1, c2 / country)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),100000,1,false), Span(13,14,List(1),game,game,false), Span(4,5,List(2),engaged,engage-01,false), Span(21,22,List(3),invaded.,invade-01,false), Span(12,13,List(4),war,war,false), Span(15,16,List(5),repel,repel-01,false), Span(18,19,List(6),country,country,false), Span(8,9,List(7),navy,navy,false), Span(17,18,List(9, 8),stronger,(strong :degree more),false), Span(1,2,List(10),reservists,reservist,false), Span(11,12,List(11),massive,massive,false)),Map(2 -> engage-01, 5 -> repel-01, 8 -> strong, 7 -> navy, 1 -> game, 11 -> massive, 4 -> war, 6 -> country, 9 -> more, 0 -> 1, 10 -> reservist, 3 -> invade-01),Map(n -> navy, w -> war, e -> engage-01, m2 -> massive, s -> strong, m -> more, r2 -> reservist, g -> game, 1 -> 1, r -> repel-01, i -> invade-01, c -> country))),[Ljava.lang.String;@419934d0,Annotation([Ljava.lang.String;@68035f39,[Ljava.lang.String;@babde28,[Ljava.lang.String;@2e2fcbf9),Annotation([Ljava.lang.String;@26185558,[Ljava.lang.String;@54102c35,[Ledu.cmu.lti.nlp.amr.Dependency;@11fe201),Annotation([Ljava.lang.String;@51bf91d8,[Ljava.lang.String;@3569ac22,[Ljava.lang.String;@60cd4f3e),Annotation([Ljava.lang.String;@1e3ca6cc,[Ljava.lang.String;@3320d582,[Ledu.cmu.lti.nlp.amr.Entity;@4bd07778))
AMR:
(1 / 1, op, i / invade-01)
(c / country, mod, s / strong)
(e / engage-01, ARG1, r / repel-01)
(e / engage-01, ARG2, g / game)
(g / game, mod, m2 / massive)
(g / game, mod, w / war)
(i / invade-01, ARG0, c / country)
(i / invade-01, ARG1, n / navy)
(r / repel-01, ARG1, c / country)
(r2 / reservist, quant, 1 / 1)
(s / strong, degree, m / more)

Decoded in 810,934 microseconds
Sentence: 40 employees of the state oil company participated in a similar exercise with 1200 soldiers in 050600.

Oracle Span 1:  050600 => (date-entity :month 6 :year 2005)
Oracle Span 2:  1200 => 1200
Oracle Span 3:  40 => 40
Oracle Span 4:  company => company
Oracle Span 5:  employees => (person :ARG1-of employ-01)
Oracle Span 6:  exercise => exercise
Oracle Span 7:  oil => oil
Oracle Span 8:  participated => participate-01
Oracle Span 9:  soldiers => soldier
Oracle Span 10:  state => state
mkDayMonthYear(050600,00,06,05)
Spans:
Span 0-1:  40 => 1
Span 1-2:  employees => (person :ARG1-of employ-01)
Span 11-12:  exercise => exercise-01
Span 5-6:  oil => oil
Span 7-8:  participated => participate-01
Span 10-11:  similar => simmer-01
Span 14-15:  soldiers => soldier
Span 4-5:  state => state

Langrangian relaxation converged after 90 iterations. Delta = 0.0
Oracle Span 16-17:  050600 => (date-entity :month 6 :year 2005)
Oracle Span 13-14:  1200 => 1200
Oracle Span 0-1:  40 => 40
Oracle Span 6-7:  company => company
Oracle Span 1-2:  employees => (person :ARG1-of employ-01)
Oracle Span 11-12:  exercise => exercise
Oracle Span 5-6:  oil => oil
Oracle Span 7-8:  participated => participate-01
Oracle Span 14-15:  soldiers => soldier
Oracle Span 4-5:  state => state

Dependencies:
1	40	_	CD	CD	_	2	num	_	_
2	employees	_	NNS	NNS	_	8	nsubj	_	_
3	of	_	IN	IN	_	2	prep	_	_
4	the	_	DT	DT	_	7	det	_	_
5	state	_	NN	NN	_	7	nn	_	_
6	oil	_	NN	NN	_	7	nn	_	_
7	company	_	NN	NN	_	3	pobj	_	_
8	participated	_	VBD	VBD	_	0	root	_	_
9	in	_	IN	IN	_	8	prep	_	_
10	a	_	DT	DT	_	12	det	_	_
11	similar	_	JJ	JJ	_	12	amod	_	_
12	exercise	_	NN	NN	_	9	pobj	_	_
13	with	_	IN	IN	_	8	prep	_	_
14	1200	_	CD	CD	_	15	num	_	_
15	soldiers	_	NNS	NNS	_	13	pobj	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	050600	_	CD	CD	_	16	pobj	_	_
18	.	_	.	.	_	8	punct	_	_

Oracle:
(c / company, mod, o / oil)
(c / company, mod, s / state)
(d / date-entity, month, 6)
(d / date-entity, year, 2005)
(e / employ-01, ARG0, c / company)
(e / employ-01, ARG1, p2 / person)
(p / participate-01, ARG0, p2 / person)
(p / participate-01, ARG1, e2 / exercise)
(p / participate-01, time, d / date-entity)
(p2 / person, accompanier, s2 / soldier)
(p2 / person, quant, 4 / 40)
(s2 / soldier, quant, 1 / 1200)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),40,1,false), Span(4,5,List(1),state,state,false), Span(7,8,List(2),participated,participate-01,false), Span(1,2,List(4, 3),employees,(person :ARG1-of employ-01),false), Span(11,12,List(5),exercise,exercise-01,false), Span(5,6,List(6),oil,oil,false), Span(10,11,List(7),similar,simmer-01,false), Span(14,15,List(8),soldiers,soldier,false)),Map(2 -> participate-01, 5 -> exercise-01, 8 -> soldier, 7 -> simmer-01, 1 -> state, 4 -> employ-01, 6 -> oil, 0 -> 1, 3 -> person),Map(e -> employ-01, s2 -> simmer-01, e2 -> exercise-01, p2 -> person, s -> state, p -> participate-01, 1 -> 1, s3 -> soldier, o -> oil))),[Ljava.lang.String;@22ee2207,Annotation([Ljava.lang.String;@6c123673,[Ljava.lang.String;@6bcc0f0e,[Ljava.lang.String;@506cb9fd),Annotation([Ljava.lang.String;@3c147ed,[Ljava.lang.String;@7e1d5848,[Ledu.cmu.lti.nlp.amr.Dependency;@75228cfa),Annotation([Ljava.lang.String;@403470f2,[Ljava.lang.String;@4943b936,[Ljava.lang.String;@5d88774e),Annotation([Ljava.lang.String;@3cac6559,[Ljava.lang.String;@5f7c31de,[Ledu.cmu.lti.nlp.amr.Entity;@ba2b90e))
AMR:
(e / employ-01, ARG1, p2 / person)
(e2 / exercise-01, ARG1, o / oil)
(p / participate-01, ARG0, p2 / person)
(p / participate-01, ARG1, e2 / exercise-01)
(p / participate-01, ARG6, s / state)
(p2 / person, accompanier, s3 / soldier)
(p2 / person, quant, 1 / 1)
(s2 / simmer-01, ARG1, e2 / exercise-01)

Decoded in 906,054 microseconds
Sentence: Pro-Chavez circles here warn of asymmetrical warfare.

Oracle Span 1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 2:  circles => circle
Oracle Span 3:  here => here
Oracle Span 4:  warfare => warfare
Oracle Span 5:  warn => warn-01
Spans:
Span 5-6:  asymmetrical => asymmetrical
Span 1-2:  circles => circle
Span 2-3:  here => here
Span 6-7:  warfare. => warfare
Span 3-4:  warn => warn-01

Langrangian relaxation converged after 18 iterations. Delta = 0.0
Oracle Span 2-3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 3-4:  circles => circle
Oracle Span 4-5:  here => here
Oracle Span 8-9:  warfare => warfare
Oracle Span 5-6:  warn => warn-01

Dependencies:
1	Pro-Chavez	_	JJ	JJ	_	2	amod	_	_
2	circles	_	NNS	NNS	_	4	nsubj	_	_
3	here	_	RB	RB	_	4	advmod	_	_
4	warn	_	VBP	VBP	_	0	root	_	_
5	of	_	IN	IN	_	4	prep	_	_
6	asymmetrical	_	JJ	JJ	_	7	amod	_	_
7	warfare	_	NN	NN	_	5	pobj	_	_
8	.	_	.	.	_	4	punct	_	_

Oracle:
(c / circle, location, h / here)
(n / name, op, "Chavez")
(p / person, name, n / name)
(w / warn-01, ARG0, c / circle)
(w / warn-01, ARG1, w2 / warfare)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(0),here,here,false), Span(6,7,List(1),warfare.,warfare,false), Span(3,4,List(2),warn,warn-01,false), Span(1,2,List(3),circles,circle,false), Span(5,6,List(4),asymmetrical,asymmetrical,false)),Map(2 -> warn-01, 1 -> warfare, 4 -> asymmetrical, 0 -> here, 3 -> circle),Map(w -> warfare, h -> here, a -> asymmetrical, w2 -> warn-01, c -> circle))),[Ljava.lang.String;@6d334b04,Annotation([Ljava.lang.String;@6b1e523e,[Ljava.lang.String;@4fbcda2c,[Ljava.lang.String;@70b08f5),Annotation([Ljava.lang.String;@7097187b,[Ljava.lang.String;@69813bf5,[Ledu.cmu.lti.nlp.amr.Dependency;@4045f153),Annotation([Ljava.lang.String;@1fd6150e,[Ljava.lang.String;@574a924f,[Ljava.lang.String;@37f455c0),Annotation([Ljava.lang.String;@5854e504,[Ljava.lang.String;@7705e565,[Ledu.cmu.lti.nlp.amr.Entity;@74dec920))
AMR:
(a / asymmetrical, calendar, w2 / warn-01)
(h / here, mod, c / circle)
(w2 / warn-01, ARG1, h / here)
(w2 / warn-01, ARG6, w / warfare)

Decoded in 189,204 microseconds
Sentence: Asymmetrical warfare is a term coined by US military strategists to describe a conflict between unequal combatants where the weaker side employs guerrilla tactics.

Oracle Span 1:  coined => coin-01
Oracle Span 2:  combatants => (person :ARG0-of combat-01)
Oracle Span 3:  conflict => conflict-01
Oracle Span 4:  describe => describe-01
Oracle Span 5:  employs => employ-02
Oracle Span 6:  guerrilla => guerrilla
Oracle Span 7:  military => (have-org-role-91 :ARG1 military)
Oracle Span 8:  side => side
Oracle Span 9:  strategists => strategize-01
Oracle Span 10:  tactics => tactic
Oracle Span 11:  term => term
Oracle Span 12:  unequal => equal
Oracle Span 13:  US => (country :name (name :op "US"))
Oracle Span 14:  warfare => warfare
Oracle Span 15:  weaker => weak
NER Entity: (country :name (name :op "US"))
Spans:
Span 12-13:  a => ah-01
Span 5-6:  coined => coin-01
Span 16-17:  combatants => combatant
Span 13-14:  conflict => conflict-01
Span 11-12:  describe => describe-01
Span 21-22:  employs => employ-01
Span 22-23:  guerrilla => guerrilla
Span 8-9:  military => military
Span 20-21:  side => side
Span 23-24:  tactics. => tactic
Span 4-5:  term => term
Span 7-8:  US => (country :name (name :op "US"))
Span 1-2:  warfare => warfare
Span 19-20:  weaker => (weak :degree more)

Langrangian relaxation converged after 27 iterations. Delta = 0.0
Oracle Span 5-6:  coined => coin-01
Oracle Span 16-17:  combatants => (person :ARG0-of combat-01)
Oracle Span 13-14:  conflict => conflict-01
Oracle Span 11-12:  describe => describe-01
Oracle Span 21-22:  employs => employ-02
Oracle Span 22-23:  guerrilla => guerrilla
Oracle Span 8-9:  military => (have-org-role-91 :ARG1 military)
Oracle Span 20-21:  side => side
Oracle Span 9-10:  strategists => strategize-01
Oracle Span 23-24:  tactics => tactic
Oracle Span 4-5:  term => term
Oracle Span 15-16:  unequal => equal
Oracle Span 7-8:  US => (country :name (name :op "US"))
Oracle Span 1-2:  warfare => warfare
Oracle Span 19-20:  weaker => weak

Dependencies:
1	Asymmetrical	_	JJ	JJ	_	2	amod	_	_
2	warfare	_	NN	NN	_	5	nsubj	_	_
3	is	_	VBZ	VBZ	_	5	cop	_	_
4	a	_	DT	DT	_	5	det	_	_
5	term	_	NN	NN	_	0	root	_	_
6	coined	_	VBN	VBN	_	5	vmod	_	_
7	by	_	IN	IN	_	6	prep	_	_
8	US	_	NNP	NNP	_	10	nn	_	_
9	military	_	JJ	JJ	_	10	amod	_	_
10	strategists	_	NNS	NNS	_	7	pobj	_	_
11	to	_	TO	TO	_	12	aux	_	_
12	describe	_	VB	VB	_	6	xcomp	_	_
13	a	_	DT	DT	_	14	det	_	_
14	conflict	_	NN	NN	_	12	dobj	_	_
15	between	_	IN	IN	_	14	prep	_	_
16	unequal	_	JJ	JJ	_	17	amod	_	_
17	combatants	_	NNS	NNS	_	15	pobj	_	_
18	where	_	WRB	WRB	_	22	advmod	_	_
19	the	_	DT	DT	_	21	det	_	_
20	weaker	_	JJR	JJR	_	21	amod	_	_
21	side	_	NN	NN	_	22	nsubj	_	_
22	employs	_	VBZ	VBZ	_	12	advcl	_	_
23	guerrilla	_	NN	NN	_	24	nn	_	_
24	tactics	_	NNS	NNS	_	22	dobj	_	_
25	.	_	.	.	_	5	punct	_	_

Oracle:
(c / coin-01, ARG1, t / term)
(c2 / country, name, n / name)
(c3 / conflict-01, ARG0, p2 / person)
(c4 / combat-01, ARG0, p2 / person)
(d / describe-01, ARG0, t / term)
(d / describe-01, ARG1, c3 / conflict-01)
(e2 / employ-02, ARG0, s3 / side)
(e2 / employ-02, ARG1, t2 / tactic)
(e2 / employ-02, location, c3 / conflict-01)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG3, s / strategize-01)
(m / military, mod, c2 / country)
(n / name, op, "US")
(p2 / person, mod, e / equal)
(s3 / side, mod, w2 / weak)
(t / term, domain, w / warfare)
(t2 / tactic, mod, g / guerrilla)

Input(Some(Graph(null,ArrayBuffer(Span(16,17,List(0),combatants,combatant,false), Span(4,5,List(1),term,term,false), Span(5,6,List(2),coined,coin-01,false), Span(20,21,List(3),side,side,false), Span(13,14,List(4),conflict,conflict-01,false), Span(8,9,List(5),military,military,false), Span(11,12,List(6),describe,describe-01,false), Span(1,2,List(7),warfare,warfare,false), Span(12,13,List(8),a,ah-01,false), Span(7,8,List(11, 10, 9),US,(country :name (name :op "US")),false), Span(21,22,List(12),employs,employ-01,false), Span(22,23,List(13),guerrilla,guerrilla,false), Span(19,20,List(15, 14),weaker,(weak :degree more),false), Span(23,24,List(16),tactics.,tactic,false)),Map(2 -> coin-01, 5 -> military, 12 -> employ-01, 15 -> more, 8 -> ah-01, 7 -> warfare, 1 -> term, 4 -> conflict-01, 11 -> "US", 14 -> weak, 6 -> describe-01, 0 -> combatant, 9 -> country, 16 -> tactic, 3 -> side, 10 -> name, 13 -> guerrilla),Map(e -> employ-01, w -> warfare, n -> name, t -> term, m2 -> more, c4 -> country, s -> side, m -> military, d -> describe-01, g -> guerrilla, c3 -> conflict-01, a -> ah-01, t2 -> tactic, w2 -> weak, c -> combatant, c2 -> coin-01))),[Ljava.lang.String;@1f989159,Annotation([Ljava.lang.String;@1ded8a0f,[Ljava.lang.String;@6fb4fd98,[Ljava.lang.String;@858dfd7),Annotation([Ljava.lang.String;@531195dc,[Ljava.lang.String;@225dd043,[Ledu.cmu.lti.nlp.amr.Dependency;@6a4da1ad),Annotation([Ljava.lang.String;@24257d54,[Ljava.lang.String;@7b45b379,[Ljava.lang.String;@37d6bb9a),Annotation([Ljava.lang.String;@30112404,[Ljava.lang.String;@3fd1308f,[Ledu.cmu.lti.nlp.amr.Entity;@69d99277))
AMR:
(a / ah-01, ARG1, d / describe-01)
(c2 / coin-01, ARG1, t / term)
(c3 / conflict-01, ARG0, c / combatant)
(c3 / conflict-01, ARG1, c4 / country)
(c4 / country, name, n / name)
(d / describe-01, ARG0, t / term)
(d / describe-01, ARG1, c3 / conflict-01)
(e / employ-01, ARG0, s / side)
(e / employ-01, ARG1, t2 / tactic)
(e / employ-01, location, c3 / conflict-01)
(m / military, mod, c4 / country)
(n / name, op, "US")
(s / side, mod, w2 / weak)
(t / term, domain, w / warfare)
(t2 / tactic, mod, g / guerrilla)
(w2 / weak, degree, m2 / more)

Decoded in 1,289,855 microseconds
Sentence: The US government has given $3.3 billion in mostly military aid to Colombia in the past 5 years.

Oracle Span 1:  5 => 5
Oracle Span 2:  aid => aid-01
Oracle Span 3:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 4:  given => give-01
Oracle Span 5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6:  military => military
Oracle Span 7:  mostly => most
Oracle Span 8:  past => past
Oracle Span 9:  US => (country :name (name :op "US"))
Oracle Span 10:  years => (temporal-quantity :unit year)
Spans:
Span 18-19:   => year
Span 16-17:  5 => past
Span 10-11:  aid => military
Span 4-5:  given => give-01
Span 2-3:  government => (government-organization :ARG0-of govern-01)
Span 13-14:  in => (country :name (name :op "Colombia"))
Span 9-10:  military => most
Span 15-16:  past => (country :name (name :op "North"))
Span 11-12:  to => aid-01
Span 1-2:  US => (country :name (name :op "US"))
Span 17-18:  years. => 5

Langrangian relaxation converged after 39 iterations. Delta = 0.0
Oracle Span 17-18:  5 => 5
Oracle Span 11-12:  aid => aid-01
Oracle Span 13-14:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 4-5:  given => give-01
Oracle Span 2-3:  government => (government-organization :ARG0-of govern-01)
Oracle Span 10-11:  military => military
Oracle Span 9-10:  mostly => most
Oracle Span 16-17:  past => past
Oracle Span 1-2:  US => (country :name (name :op "US"))
Oracle Span 18-19:  years => (temporal-quantity :unit year)

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	US	_	NNP	NNP	_	3	nn	_	_
3	government	_	NN	NN	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	given	_	VBN	VBN	_	0	root	_	_
6	$	_	$	$	_	5	dobj	_	_
7	3.3	_	CD	CD	_	8	number	_	_
8	billion	_	CD	CD	_	6	num	_	_
9	in	_	IN	IN	_	6	prep	_	_
10	mostly	_	RB	RB	_	12	advmod	_	_
11	military	_	JJ	JJ	_	12	amod	_	_
12	aid	_	NN	NN	_	9	pobj	_	_
13	to	_	TO	TO	_	5	prep	_	_
14	Colombia	_	NNP	NNP	_	13	pobj	_	_
15	in	_	IN	IN	_	5	prep	_	_
16	the	_	DT	DT	_	19	det	_	_
17	past	_	JJ	JJ	_	19	amod	_	_
18	5	_	CD	CD	_	19	num	_	_
19	years	_	NNS	NNS	_	15	pobj	_	_
20	.	_	.	.	_	5	punct	_	_

Oracle:
(a / aid-01, ARG0, g2 / government-organization)
(a / aid-01, ARG2, c2 / country)
(a / aid-01, degree, m3 / most)
(a / aid-01, mod, m2 / military)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(g / give-01, ARG0, g2 / government-organization)
(g / give-01, ARG2, c2 / country)
(g / give-01, time, p / past)
(g3 / govern-01, ARG0, g2 / government-organization)
(g3 / govern-01, ARG1, c / country)
(n / name, op, "US")
(n2 / name, op, "Colombia")
(p / past, op, t / temporal-quantity)
(t / temporal-quantity, quant, 5 / 5)
(t / temporal-quantity, unit, y / year)

Input(Some(Graph(null,ArrayBuffer(Span(2,3,List(1, 0),government,(government-organization :ARG0-of govern-01),false), Span(1,2,List(4, 3, 2),US,(country :name (name :op "US")),false), Span(15,16,List(7, 6, 5),past,(country :name (name :op "North")),false), Span(10,11,List(8),aid,military,false), Span(9,10,List(9),military,most,false), Span(16,17,List(10),5,past,false), Span(18,19,List(11),,year,false), Span(13,14,List(14, 13, 12),in,(country :name (name :op "Colombia")),false), Span(4,5,List(15),given,give-01,false), Span(11,12,List(16),to,aid-01,false), Span(17,18,List(17),years.,5,false)),Map(2 -> country, 5 -> country, 12 -> country, 15 -> give-01, 8 -> military, 7 -> "North", 17 -> 5, 1 -> govern-01, 4 -> "US", 11 -> year, 14 -> "Colombia", 6 -> name, 0 -> government-organization, 9 -> most, 16 -> aid-01, 3 -> name, 10 -> past, 13 -> name),Map(n -> name, g3 -> give-01, 5 -> 5, m2 -> most, m -> military, g2 -> govern-01, g -> government-organization, p -> past, y -> year, a -> aid-01, c3 -> country, n3 -> name, c -> country, c2 -> country, n2 -> name))),[Ljava.lang.String;@5774d634,Annotation([Ljava.lang.String;@19a04249,[Ljava.lang.String;@3b661a9b,[Ljava.lang.String;@390a3f9b),Annotation([Ljava.lang.String;@483e9bf8,[Ljava.lang.String;@53972abc,[Ledu.cmu.lti.nlp.amr.Dependency;@582e5097),Annotation([Ljava.lang.String;@30304aee,[Ljava.lang.String;@c6de64b,[Ljava.lang.String;@6645efb0),Annotation([Ljava.lang.String;@4cc5b107,[Ljava.lang.String;@7e90f54b,[Ledu.cmu.lti.nlp.amr.Entity;@1dac0b6c))
AMR:
(a / aid-01, ARG0, g / government-organization)
(a / aid-01, ARG1, m / military)
(a / aid-01, degree, m2 / most)
(c / country, name, n / name)
(c2 / country, name, n2 / name)
(c3 / country, name, n3 / name)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(g3 / give-01, ARG0, g / government-organization)
(g3 / give-01, ARG1, c2 / country)
(g3 / give-01, ARG2, c3 / country)
(g3 / give-01, time, p / past)
(n / name, op, "US")
(n2 / name, op, "North")
(n3 / name, op, "Colombia")
(p / past, op, y / year)
(y / year, quant, 5 / 5)

Decoded in 1,159,484 microseconds
Sentence: Chavez loyalists fear that the US government could instigate a proxy war between Colombia and Venezuela as a way to oust Chavez and control Venezuelan oil.

Oracle Span 1:  and => and
Oracle Span 2:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 3:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 4:  control => control-01
Oracle Span 5:  could => possible
Oracle Span 6:  fear => fear-01
Oracle Span 7:  government => (government-organization :ARG0-of govern-01)
Oracle Span 8:  instigate => instigate-01
Oracle Span 9:  loyalists => (person :ARG1-of loyal-41)
Oracle Span 10:  oil => oil
Oracle Span 11:  oust => oust-01
Oracle Span 12:  proxy => proxy
Oracle Span 13:  US => (country :name (name :op "US"))
Oracle Span 14:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 15:  war => war-01
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "Colombia"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 22-23:  and => and
Span 14-15:  and => and
Span 21-22:  Chavez => (person :name (name :op "Chavez"))
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 13-14:  Colombia => (country :name (name :op "Colombia"))
Span 23-24:  control => control-01
Span 7-8:  could => possible
Span 2-3:  fear => fear-01
Span 6-7:  government => (government-organization :ARG0-of govern-01)
Span 8-9:  instigate => instigate-01
Span 25-26:  oil. => oil
Span 20-21:  oust => oust-01
Span 10-11:  proxy => proxy
Span 5-6:  US => (country :name (name :op "US"))
Span 15-16:  Venezuela => (country :name (name :op "Venezuela"))
Span 11-12:  war => war-01
Span 18-19:  way => way

Langrangian relaxation converged after 30 iterations. Delta = 0.0
Oracle Span 14-15:  and => and
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 13-14:  Colombia => (country :name (name :op "Colombia"))
Oracle Span 23-24:  control => control-01
Oracle Span 7-8:  could => possible
Oracle Span 2-3:  fear => fear-01
Oracle Span 6-7:  government => (government-organization :ARG0-of govern-01)
Oracle Span 8-9:  instigate => instigate-01
Oracle Span 1-2:  loyalists => (person :ARG1-of loyal-41)
Oracle Span 25-26:  oil => oil
Oracle Span 20-21:  oust => oust-01
Oracle Span 10-11:  proxy => proxy
Oracle Span 5-6:  US => (country :name (name :op "US"))
Oracle Span 15-16:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 11-12:  war => war-01

Dependencies:
1	Chavez	_	JJ	JJ	_	2	amod	_	_
2	loyalists	_	NNS	NNS	_	3	nsubj	_	_
3	fear	_	VBP	VBP	_	0	root	_	_
4	that	_	IN	IN	_	9	mark	_	_
5	the	_	DT	DT	_	7	det	_	_
6	US	_	NNP	NNP	_	7	nn	_	_
7	government	_	NN	NN	_	9	nsubj	_	_
8	could	_	MD	MD	_	9	aux	_	_
9	instigate	_	VB	VB	_	3	ccomp	_	_
10	a	_	DT	DT	_	12	det	_	_
11	proxy	_	JJ	JJ	_	12	amod	_	_
12	war	_	NN	NN	_	9	dobj	_	_
13	between	_	IN	IN	_	12	prep	_	_
14	Colombia	_	NNP	NNP	_	13	pobj	_	_
15	and	_	CC	CC	_	14	cc	_	_
16	Venezuela	_	NNP	NNP	_	14	conj	_	_
17	as	_	IN	IN	_	9	prep	_	_
18	a	_	DT	DT	_	19	det	_	_
19	way	_	NN	NN	_	17	pobj	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	oust	_	VB	VB	_	19	vmod	_	_
22	Chavez	_	NNP	NNP	_	26	nn	_	_
23	and	_	CC	CC	_	22	cc	_	_
24	control	_	NN	NN	_	22	conj	_	_
25	Venezuelan	_	JJ	JJ	_	26	amod	_	_
26	oil	_	NN	NN	_	21	dobj	_	_
27	.	_	.	.	_	3	punct	_	_

Oracle:
(a / and, instrument, i / instigate-01)
(a / and, op, c4 / control-01)
(a / and, op, o / oust-01)
(c / country, name, n2 / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n4 / name)
(c4 / control-01, ARG0, g / government-organization)
(c4 / control-01, ARG1, o2 / oil)
(f / fear-01, ARG0, p / person)
(f / fear-01, ARG1, i / instigate-01)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(i / instigate-01, ARG0, g / government-organization)
(i / instigate-01, ARG1, w / war-01)
(i / instigate-01, mod, p4 / possible)
(l / loyal-41, ARG1, p / person)
(l / loyal-41, ARG2, p2 / person)
(n / name, op, "Chavez")
(n2 / name, op, "US")
(n3 / name, op, "Colombia")
(n4 / name, op, "Venezuela")
(o / oust-01, ARG0, g / government-organization)
(o / oust-01, ARG1, p2 / person)
(o2 / oil, source, c3 / country)
(p2 / person, name, n / name)
(w / war-01, ARG0, c2 / country)
(w / war-01, ARG1, c3 / country)
(w / war-01, mod, p3 / proxy)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),instigate,instigate-01,false), Span(22,23,List(1),and,and,false), Span(10,11,List(2),proxy,proxy,false), Span(15,16,List(5, 4, 3),Venezuela,(country :name (name :op "Venezuela")),false), Span(2,3,List(6),fear,fear-01,false), Span(14,15,List(7),and,and,false), Span(25,26,List(8),oil.,oil,false), Span(20,21,List(9),oust,oust-01,false), Span(7,8,List(10),could,possible,false), Span(21,22,List(13, 12, 11),Chavez,(person :name (name :op "Chavez")),false), Span(6,7,List(15, 14),government,(government-organization :ARG0-of govern-01),false), Span(5,6,List(18, 17, 16),US,(country :name (name :op "US")),false), Span(0,1,List(21, 20, 19),Chavez,(person :name (name :op "Chavez")),false), Span(13,14,List(24, 23, 22),Colombia,(country :name (name :op "Colombia")),false), Span(18,19,List(25),way,way,false), Span(23,24,List(26),control,control-01,false), Span(11,12,List(27),war,war-01,false)),Map(2 -> proxy, 5 -> "Venezuela", 27 -> war-01, 12 -> name, 8 -> oil, 15 -> govern-01, 21 -> "Chavez", 18 -> "US", 24 -> "Colombia", 7 -> and, 1 -> and, 17 -> name, 23 -> name, 26 -> control-01, 4 -> name, 11 -> person, 14 -> government-organization, 20 -> name, 6 -> fear-01, 9 -> oust-01, 0 -> instigate-01, 22 -> country, 16 -> country, 19 -> person, 10 -> possible, 3 -> country, 25 -> way, 13 -> "Chavez"),Map(w -> way, n -> name, p2 -> possible, c4 -> control-01, n4 -> name, g2 -> govern-01, p -> proxy, g -> government-organization, c3 -> country, n3 -> name, a -> and, p4 -> person, o2 -> oust-01, w2 -> war-01, i -> instigate-01, a2 -> and, c -> country, f -> fear-01, o -> oil, p3 -> person, c2 -> country, n2 -> name, n5 -> name))),[Ljava.lang.String;@cb09476,Annotation([Ljava.lang.String;@6161d621,[Ljava.lang.String;@58677615,[Ljava.lang.String;@24d86095),Annotation([Ljava.lang.String;@2c43435c,[Ljava.lang.String;@437c482b,[Ledu.cmu.lti.nlp.amr.Dependency;@20c8598f),Annotation([Ljava.lang.String;@477359cb,[Ljava.lang.String;@711cbbda,[Ljava.lang.String;@500088c2),Annotation([Ljava.lang.String;@32e6b76c,[Ljava.lang.String;@6f060dfa,[Ledu.cmu.lti.nlp.amr.Entity;@7bd0a9ab))
AMR:
(a / and, op, c / country)
(a / and, op, c4 / control-01)
(a / and, op, p3 / person)
(a2 / and, instrument, i / instigate-01)
(a2 / and, op, c4 / control-01)
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(c3 / country, name, n5 / name)
(c4 / control-01, ARG1, o / oil)
(f / fear-01, ARG1, i / instigate-01)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c2 / country)
(i / instigate-01, ARG0, g / government-organization)
(i / instigate-01, ARG1, w2 / war-01)
(i / instigate-01, mod, p2 / possible)
(n / name, op, "Venezuela")
(n2 / name, op, "Chavez")
(n3 / name, op, "US")
(n4 / name, op, "Chavez")
(n5 / name, op, "Colombia")
(o2 / oust-01, ARG0, g / government-organization)
(o2 / oust-01, ARG1, p4 / person)
(p3 / person, name, n2 / name)
(p4 / person, name, n4 / name)
(w2 / war-01, ARG0, c3 / country)
(w2 / war-01, ARG1, w / way)
(w2 / war-01, mod, p / proxy)

Decoded in 2,330,761 microseconds
Sentence: A senior US official in an interview dismissed the notion that the United States Government wants to invade Venezuela as complete and utter nonsense.

Oracle Span 1:  complete => complete
Oracle Span 2:  dismissed => dismiss-02
Oracle Span 3:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 4:  interview => interview-01
Oracle Span 5:  invade => invade-01
Oracle Span 6:  nonsense => nonsense
Oracle Span 7:  notion => notion
Oracle Span 8:  official => (have-org-role-91 :ARG2 official)
Oracle Span 9:  senior => senior
Oracle Span 10:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 11:  US => (country :name (name :op "US"))
Oracle Span 12:  utter => utter
Oracle Span 13:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 14:  wants => want-01
NER Entity: (country :name (name :op "US"))
NER Entity: (country :name (name :op "United" :op "States"))
NER Entity: (country :name (name :op "Venezuela"))
Spans:
Span 21-22:  and => and
Span 20-21:  complete => complete-01
Span 7-8:  dismissed => dismiss-01
Span 14-15:  Government => (government-organization :ARG0-of govern-01)
Span 6-7:  interview => interview-01
Span 17-18:  invade => invade-01
Span 23-24:  nonsense. => nonsense
Span 9-10:  notion => notion
Span 3-4:  official => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 1-2:  senior => senior
Span 13-14:  States => state
Span 12-13:  United => (company :name (name :op "Services" :op "United" :op "Energy"))
Span 2-3:  US => (country :name (name :op "US"))
Span 18-19:  Venezuela => (country :name (name :op "Venezuela"))
Span 15-16:  wants => want-01

Langrangian relaxation converged after 126 iterations. Delta = 0.0
Oracle Span 20-21:  complete => complete
Oracle Span 7-8:  dismissed => dismiss-02
Oracle Span 14-15:  Government => (government-organization :ARG0-of govern-01)
Oracle Span 6-7:  interview => interview-01
Oracle Span 17-18:  invade => invade-01
Oracle Span 23-24:  nonsense => nonsense
Oracle Span 9-10:  notion => notion
Oracle Span 3-4:  official => (have-org-role-91 :ARG2 official)
Oracle Span 1-2:  senior => senior
Oracle Span 12-14:  United States => (country :name (name :op "States" :op "United"))
Oracle Span 2-3:  US => (country :name (name :op "US"))
Oracle Span 22-23:  utter => utter
Oracle Span 18-19:  Venezuela => (country :name (name :op "Venezuela"))
Oracle Span 15-16:  wants => want-01

Dependencies:
1	A	_	DT	DT	_	4	det	_	_
2	senior	_	JJ	JJ	_	4	amod	_	_
3	US	_	NNP	NNP	_	4	nn	_	_
4	official	_	NN	NN	_	8	nsubj	_	_
5	in	_	IN	IN	_	4	prep	_	_
6	an	_	DT	DT	_	7	det	_	_
7	interview	_	NN	NN	_	5	pobj	_	_
8	dismissed	_	VBD	VBD	_	0	root	_	_
9	the	_	DT	DT	_	10	det	_	_
10	notion	_	NN	NN	_	8	dobj	_	_
11	that	_	IN	IN	_	16	mark	_	_
12	the	_	DT	DT	_	15	det	_	_
13	United	_	NNP	NNP	_	15	nn	_	_
14	States	_	NNPS	NNPS	_	15	nn	_	_
15	Government	_	NNP	NNP	_	16	nsubj	_	_
16	wants	_	VBZ	VBZ	_	8	ccomp	_	_
17	to	_	TO	TO	_	18	aux	_	_
18	invade	_	VB	VB	_	16	xcomp	_	_
19	Venezuela	_	NNP	NNP	_	18	dobj	_	_
20	as	_	IN	IN	_	19	prep	_	_
21	complete	_	JJ	JJ	_	24	amod	_	_
22	and	_	CC	CC	_	21	cc	_	_
23	utter	_	JJ	JJ	_	21	conj	_	_
24	nonsense	_	NN	NN	_	20	pobj	_	_
25	.	_	.	.	_	8	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(c4 / country, name, n5 / name)
(d / dismiss-02, ARG1, n2 / notion)
(d / dismiss-02, ARG2, n4 / nonsense)
(d / dismiss-02, medium, i2 / interview-01)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c4 / country)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(i / invade-01, ARG0, g / government-organization)
(i / invade-01, ARG1, c2 / country)
(i2 / interview-01, ARG1, o / official)
(n / name, op, "US")
(n2 / notion, topic, w / want-01)
(n3 / name, op, "Venezuela")
(n4 / nonsense, mod, c3 / complete)
(n4 / nonsense, mod, u / utter)
(n5 / name, op, "States")
(n5 / name, op, "United")
(o / official, mod, s / senior)
(w / want-01, ARG0, g / government-organization)
(w / want-01, ARG1, i / invade-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),interview,interview-01,false), Span(15,16,List(1),wants,want-01,false), Span(21,22,List(2),and,and,false), Span(9,10,List(3),notion,notion,false), Span(2,3,List(6, 5, 4),US,(country :name (name :op "US")),false), Span(14,15,List(8, 7),Government,(government-organization :ARG0-of govern-01),false), Span(23,24,List(9),nonsense.,nonsense,false), Span(17,18,List(10),invade,invade-01,false), Span(12,13,List(15, 14, 13, 12, 11),United,(company :name (name :op "Services" :op "United" :op "Energy")),false), Span(18,19,List(18, 17, 16),Venezuela,(country :name (name :op "Venezuela")),false), Span(20,21,List(19),complete,complete-01,false), Span(3,4,List(22, 21, 20),official,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(13,14,List(23),States,state,false), Span(1,2,List(24),senior,senior,false), Span(7,8,List(25),dismissed,dismiss-01,false)),Map(2 -> and, 5 -> name, 12 -> name, 8 -> govern-01, 15 -> "Energy", 21 -> have-org-role-91, 18 -> "Venezuela", 24 -> senior, 7 -> government-organization, 1 -> want-01, 17 -> name, 23 -> state, 4 -> country, 11 -> company, 14 -> "United", 20 -> person, 6 -> "US", 9 -> nonsense, 0 -> interview-01, 22 -> official, 16 -> country, 19 -> complete-01, 10 -> invade-01, 3 -> notion, 25 -> dismiss-01, 13 -> "Services"),Map(w -> want-01, n -> notion, h -> have-org-role-91, s2 -> senior, c4 -> complete-01, n4 -> name, s -> state, d -> dismiss-01, g2 -> govern-01, p -> person, g -> government-organization, a -> and, n3 -> nonsense, c3 -> country, i2 -> invade-01, i -> interview-01, c -> country, o -> official, n2 -> name, c2 -> company, n5 -> name))),[Ljava.lang.String;@74738321,Annotation([Ljava.lang.String;@31871c1e,[Ljava.lang.String;@40641ba1,[Ljava.lang.String;@3f7b8d0c),Annotation([Ljava.lang.String;@57f96b49,[Ljava.lang.String;@5e97fa44,[Ledu.cmu.lti.nlp.amr.Dependency;@3ece4b24),Annotation([Ljava.lang.String;@5d3eb21c,[Ljava.lang.String;@418129d1,[Ljava.lang.String;@20a5ae7f),Annotation([Ljava.lang.String;@6c7e4624,[Ljava.lang.String;@44f8a7e5,[Ledu.cmu.lti.nlp.amr.Entity;@cffd10a))
AMR:
(a / and, op, c3 / country)
(a / and, op, c4 / complete-01)
(c / country, name, n2 / name)
(c2 / company, name, n4 / name)
(c3 / country, name, n5 / name)
(d / dismiss-01, ARG0, p / person)
(d / dismiss-01, ARG1, n / notion)
(d / dismiss-01, ARG2, n3 / nonsense)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, s / state)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, o / official)
(i / interview-01, ARG1, p / person)
(i2 / invade-01, ARG0, g / government-organization)
(i2 / invade-01, ARG1, c2 / company)
(n / notion, topic, w / want-01)
(n2 / name, op, "US")
(n4 / name, op, "Energy")
(n4 / name, op, "Services")
(n4 / name, op, "United")
(n5 / name, op, "Venezuela")
(o / official, mod, s2 / senior)
(w / want-01, ARG0, g / government-organization)
(w / want-01, ARG1, c3 / country)

Decoded in 5,471,269 microseconds
Sentence: The official said the chavista side wishes to make the relationship negative because they've made a political calculation that Mr. Chavez reached power by constantly being in confrontation with the US.

Oracle Span 1:  because => cause-01
Oracle Span 2:  calculation => calculate-01
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  confrontation => confront-01
Oracle Span 5:  constantly => constant
Oracle Span 6:  make => make-02
Oracle Span 7:  Mr. => "Mr."
Oracle Span 8:  negative => negative
Oracle Span 9:  official => (have-org-role-91 :ARG2 official)
Oracle Span 10:  political => politics
Oracle Span 11:  power => power
Oracle Span 12:  reached => reach-01
Oracle Span 13:  relationship => relationship
Oracle Span 14:  said => say-01
Oracle Span 15:  side => side
Oracle Span 16:  US => (country :name (name :op "US"))
Oracle Span 17:  wishes => wish-01
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "US"))
Spans:
Span 31-32:   => (country :name (name :op "US"))
Span 12-13:  because => accuse-01
Span 25-26:  being => constant
Span 23-24:  by => power
Span 17-18:  calculation => politics
Span 8-9:  make => make-02
Span 11-12:  negative => negative
Span 1-2:  official => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 22-23:  power => reach-01
Span 21-22:  reached => (person :name (name :op "Chavez"))
Span 10-11:  relationship => relationship
Span 2-3:  said => say-01
Span 5-6:  side => side
Span 18-19:  that => caution-01
Span 6-7:  wishes => wish-01
Span 28-29:  with => confront-01

Langrangian relaxation converged after 13 iterations. Delta = 0.0
Oracle Span 12-13:  because => cause-01
Oracle Span 18-19:  calculation => calculate-01
Oracle Span 21-22:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 28-29:  confrontation => confront-01
Oracle Span 25-26:  constantly => constant
Oracle Span 8-9:  make => make-02
Oracle Span 20-21:  Mr. => "Mr."
Oracle Span 11-12:  negative => negative
Oracle Span 1-2:  official => (have-org-role-91 :ARG2 official)
Oracle Span 17-18:  political => politics
Oracle Span 23-24:  power => power
Oracle Span 22-23:  reached => reach-01
Oracle Span 10-11:  relationship => relationship
Oracle Span 2-3:  said => say-01
Oracle Span 5-6:  side => side
Oracle Span 31-32:  US => (country :name (name :op "US"))
Oracle Span 6-7:  wishes => wish-01

Dependencies:
1	The	_	DT	DT	_	2	det	_	_
2	official	_	NN	NN	_	3	nsubj	_	_
3	said	_	VBD	VBD	_	0	root	_	_
4	the	_	DT	DT	_	6	det	_	_
5	chavista	_	NN	NN	_	6	nn	_	_
6	side	_	NN	NN	_	7	nsubj	_	_
7	wishes	_	VBZ	VBZ	_	3	ccomp	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	make	_	VB	VB	_	7	xcomp	_	_
10	the	_	DT	DT	_	11	det	_	_
11	relationship	_	NN	NN	_	16	nsubj	_	_
12	negative	_	JJ	JJ	_	16	dep	_	_
13	because	_	IN	IN	_	16	mark	_	_
14	they	_	PRP	PRP	_	16	nsubj	_	_
15	've	_	VBP	VBP	_	16	aux	_	_
16	made	_	VBN	VBN	_	9	xcomp	_	_
17	a	_	DT	DT	_	19	det	_	_
18	political	_	JJ	JJ	_	19	amod	_	_
19	calculation	_	NN	NN	_	16	dobj	_	_
20	that	_	IN	IN	_	23	mark	_	_
21	Mr.	_	NNP	NNP	_	22	nn	_	_
22	Chavez	_	NNP	NNP	_	23	nsubj	_	_
23	reached	_	VBD	VBD	_	16	ccomp	_	_
24	power	_	NN	NN	_	23	dobj	_	_
25	by	_	IN	IN	_	23	prep	_	_
26	constantly	_	RB	RB	_	27	advmod	_	_
27	being	_	VBG	VBG	_	25	pcomp	_	_
28	in	_	IN	IN	_	27	prep	_	_
29	confrontation	_	NN	NN	_	28	pobj	_	_
30	with	_	IN	IN	_	27	prep	_	_
31	the	_	DT	DT	_	32	det	_	_
32	US	_	NNP	NNP	_	30	pobj	_	_
33	.	_	.	.	_	3	punct	_	_

Oracle:
(c / cause-01, ARG0, c2 / calculate-01)
(c / cause-01, ARG1, w / wish-01)
(c2 / calculate-01, ARG0, s2 / side)
(c2 / calculate-01, ARG1, r2 / reach-01)
(c2 / calculate-01, mod, p4 / politics)
(c3 / confront-01, ARG1, c4 / country)
(c3 / confront-01, manner, c5 / constant)
(c4 / country, name, n4 / name)
(h / have-org-role-91, ARG2, o / official)
(m / make-02, ARG0, s2 / side)
(m / make-02, ARG1, r / relationship)
(n / name, op, "Chavez")
(n4 / name, op, "US")
(p / person, name, n / name)
(r / relationship, mod, n2 / negative)
(r2 / reach-01, ARG1, p3 / power)
(r2 / reach-01, instrument, c3 / confront-01)
(s / say-01, ARG1, w / wish-01)
(s2 / side, mod, p / person)
(w / wish-01, ARG0, s2 / side)
(w / wish-01, ARG1, m / make-02)

Input(Some(Graph(null,ArrayBuffer(Span(22,23,List(0),power,reach-01,false), Span(12,13,List(1),because,accuse-01,false), Span(1,2,List(4, 3, 2),official,(person :ARG0-of (have-org-role-91 :ARG2 official)),false), Span(25,26,List(5),being,constant,false), Span(31,32,List(8, 7, 6),,(country :name (name :op "US")),false), Span(11,12,List(9),negative,negative,false), Span(5,6,List(10),side,side,false), Span(17,18,List(11),calculation,politics,false), Span(23,24,List(12),by,power,false), Span(18,19,List(13),that,caution-01,false), Span(28,29,List(14),with,confront-01,false), Span(8,9,List(15),make,make-02,false), Span(21,22,List(18, 17, 16),reached,(person :name (name :op "Chavez")),false), Span(6,7,List(19),wishes,wish-01,false), Span(10,11,List(20),relationship,relationship,false), Span(2,3,List(21),said,say-01,false)),Map(2 -> person, 5 -> constant, 12 -> power, 15 -> make-02, 8 -> "US", 21 -> say-01, 18 -> "Chavez", 7 -> name, 17 -> name, 1 -> accuse-01, 4 -> official, 11 -> politics, 14 -> confront-01, 20 -> relationship, 6 -> country, 0 -> reach-01, 9 -> negative, 16 -> person, 19 -> wish-01, 3 -> have-org-role-91, 10 -> side, 13 -> caution-01),Map(w -> wish-01, n -> name, h -> have-org-role-91, s2 -> say-01, p2 -> politics, c4 -> confront-01, s -> side, m -> make-02, r2 -> relationship, p -> person, n3 -> name, a -> accuse-01, c3 -> caution-01, p4 -> person, r -> reach-01, c -> constant, o -> official, p3 -> power, c2 -> country, n2 -> negative))),[Ljava.lang.String;@454f3db2,Annotation([Ljava.lang.String;@4ce93696,[Ljava.lang.String;@46d7ec99,[Ljava.lang.String;@4245962f),Annotation([Ljava.lang.String;@7e5b8178,[Ljava.lang.String;@7b8355a3,[Ledu.cmu.lti.nlp.amr.Dependency;@249dd6e),Annotation([Ljava.lang.String;@6c53d7e6,[Ljava.lang.String;@4ea1cb55,[Ljava.lang.String;@2f6eb16f),Annotation([Ljava.lang.String;@6300bb41,[Ljava.lang.String;@111eac20,[Ledu.cmu.lti.nlp.amr.Entity;@51253635))
AMR:
(a / accuse-01, ARG1, w / wish-01)
(c2 / country, name, n / name)
(c3 / caution-01, ARG0, s / side)
(c3 / caution-01, ARG1, r / reach-01)
(c3 / caution-01, mod, p2 / politics)
(c4 / confront-01, ARG1, c2 / country)
(c4 / confront-01, manner, c / constant)
(h / have-org-role-91, ARG0, p / person)
(h / have-org-role-91, ARG2, o / official)
(m / make-02, ARG0, s / side)
(m / make-02, ARG1, r2 / relationship)
(n / name, op, "US")
(n3 / name, op, "Chavez")
(p4 / person, name, n3 / name)
(r / reach-01, ARG0, p4 / person)
(r / reach-01, ARG1, p3 / power)
(r / reach-01, instrument, c4 / confront-01)
(r2 / relationship, mod, n2 / negative)
(s2 / say-01, ARG0, p / person)
(s2 / say-01, ARG1, w / wish-01)
(w / wish-01, ARG0, s / side)
(w / wish-01, ARG1, m / make-02)

Decoded in 1,581,476 microseconds
Sentence: Another development that has troubled the United States is Chavez's rollback of military cooperation and joint exercises.

Oracle Span 1:  and => and
Oracle Span 2:  Another => another
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  cooperation => cooperate-01
Oracle Span 5:  development => develop-01
Oracle Span 6:  exercises => exercise
Oracle Span 7:  joint => joint
Oracle Span 8:  military => military
Oracle Span 9:  rollback => roll-00
Oracle Span 10:  troubled => trouble-01
Oracle Span 11:  United States => (country :name (name :op "States" :op "United"))
NER Entity: (person :name (name :op "Chavez"))
NER Entity: (country :name (name :op "United" :op "States"))
Spans:
Span 17-18:   => exercise
Span 14-15:  and => cooperate-01
Span 0-1:  Another => another
Span 9-10:  Chavez's => (person :name (name :op "Chavez"))
Span 13-14:  cooperation => military
Span 1-2:  development => develop-01
Span 16-17:  exercises. => joint
Span 15-16:  joint => and
Span 11-12:  of => roll-01
Span 4-5:  troubled => trouble-01
Span 6-8:  United States => (country :name (name :op "United" :op "States"))

Langrangian relaxation converged after 29 iterations. Delta = 0.0
Oracle Span 15-16:  and => and
Oracle Span 0-1:  Another => another
Oracle Span 9-10:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 14-15:  cooperation => cooperate-01
Oracle Span 1-2:  development => develop-01
Oracle Span 17-18:  exercises => exercise
Oracle Span 16-17:  joint => joint
Oracle Span 13-14:  military => military
Oracle Span 11-12:  rollback => roll-00
Oracle Span 4-5:  troubled => trouble-01
Oracle Span 6-8:  United States => (country :name (name :op "States" :op "United"))

Dependencies:
1	Another	_	DT	DT	_	2	det	_	_
2	development	_	NN	NN	_	12	nsubj	_	_
3	that	_	WDT	WDT	_	5	nsubj	_	_
4	has	_	VBZ	VBZ	_	5	aux	_	_
5	troubled	_	VBN	VBN	_	2	rcmod	_	_
6	the	_	DT	DT	_	8	det	_	_
7	United	_	NNP	NNP	_	8	nn	_	_
8	States	_	NNPS	NNPS	_	5	dobj	_	_
9	is	_	VBZ	VBZ	_	12	cop	_	_
10	Chavez	_	NNP	NNP	_	12	poss	_	_
11	's	_	POS	POS	_	10	possessive	_	_
12	rollback	_	NN	NN	_	0	root	_	_
13	of	_	IN	IN	_	12	prep	_	_
14	military	_	JJ	JJ	_	15	amod	_	_
15	cooperation	_	NN	NN	_	13	pobj	_	_
16	and	_	CC	CC	_	15	cc	_	_
17	joint	_	JJ	JJ	_	18	amod	_	_
18	exercises	_	NNS	NNS	_	15	conj	_	_
19	.	_	.	.	_	12	punct	_	_

Oracle:
(a / and, op, c / cooperate-01)
(a / and, op, e / exercise)
(c / cooperate-01, mod, m / military)
(c2 / country, name, n2 / name)
(d / develop-01, ARG2, r / roll-00)
(d / develop-01, mod, a2 / another)
(e / exercise, mod, j / joint)
(n / name, op, "Chavez")
(n2 / name, op, "States")
(n2 / name, op, "United")
(p / person, name, n / name)
(r / roll-00, ARG0, p / person)
(r / roll-00, ARG1, a / and)
(t / trouble-01, ARG0, d / develop-01)
(t / trouble-01, ARG1, c2 / country)

Input(Some(Graph(null,ArrayBuffer(Span(9,10,List(2, 1, 0),Chavez's,(person :name (name :op "Chavez")),false), Span(13,14,List(3),cooperation,military,false), Span(11,12,List(4),of,roll-01,false), Span(4,5,List(5),troubled,trouble-01,false), Span(0,1,List(6),Another,another,false), Span(15,16,List(7),joint,and,false), Span(17,18,List(8),,exercise,false), Span(6,8,List(12, 11, 10, 9),United States,(country :name (name :op "United" :op "States")),false), Span(1,2,List(13),development,develop-01,false), Span(14,15,List(14),and,cooperate-01,false), Span(16,17,List(15),exercises.,joint,false)),Map(2 -> "Chavez", 5 -> trouble-01, 12 -> "States", 15 -> joint, 8 -> exercise, 7 -> and, 1 -> name, 4 -> roll-01, 11 -> "United", 14 -> cooperate-01, 6 -> another, 0 -> person, 9 -> country, 3 -> military, 10 -> name, 13 -> develop-01),Map(e -> exercise, n -> name, t -> trouble-01, j -> joint, m -> military, d -> develop-01, p -> person, a -> another, r -> roll-01, a2 -> and, c -> country, n2 -> name, c2 -> cooperate-01))),[Ljava.lang.String;@6ad65d7f,Annotation([Ljava.lang.String;@3f761efb,[Ljava.lang.String;@1b9c7312,[Ljava.lang.String;@253180cb),Annotation([Ljava.lang.String;@7d541cb7,[Ljava.lang.String;@72da5420,[Ledu.cmu.lti.nlp.amr.Dependency;@a26bd8a),Annotation([Ljava.lang.String;@23b843dd,[Ljava.lang.String;@7ed452b9,[Ljava.lang.String;@5e0f6217),Annotation([Ljava.lang.String;@617a4eb1,[Ljava.lang.String;@3d5fe8,[Ledu.cmu.lti.nlp.amr.Entity;@5c2084cc))
AMR:
(a2 / and, op, c2 / cooperate-01)
(a2 / and, op, e / exercise)
(c / country, name, n2 / name)
(c2 / cooperate-01, ARG1, m / military)
(d / develop-01, ARG2, r / roll-01)
(d / develop-01, mod, a / another)
(e / exercise, mod, j / joint)
(n / name, op, "Chavez")
(n2 / name, op, "States")
(n2 / name, op, "United")
(p / person, name, n / name)
(r / roll-01, ARG0, p / person)
(r / roll-01, ARG1, a2 / and)
(t / trouble-01, ARG0, d / develop-01)
(t / trouble-01, ARG1, c / country)

Decoded in 863,722 microseconds
Sentence: The US military had a Cooperation Office for 50 years in a Venezuelan Fort.

Oracle Span 1:  50 => 50
Oracle Span 2:  Cooperation Office => (organization :name (name :op "Office" :op "Cooperation"))
Oracle Span 3:  Fort => fort
Oracle Span 4:  had => have-03
Oracle Span 5:  military => military
Oracle Span 6:  US => (country :name (name :op "US"))
Oracle Span 7:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 8:  years => (temporal-quantity :unit year)
NER Entity: (country :name (name :op "US"))
NER Entity: (organization :name (name :op "Cooperation" :op "Office"))
NER Entity: (thing :name (name :op "Venezuelan"))
NER Entity: (organization :name (name :op "Fort"))
Spans:
Span 8-9:  50 => 50
Span 5-6:  Cooperation => country
Span 7-8:  for => person
Span 2-3:  military => military
Span 6-7:  Office => (have-org-role-91 :ARG2 office)
Span 1-2:  US => (country :name (name :op "US"))
Span 9-10:  years => year

Langrangian relaxation converged after 35 iterations. Delta = 0.0
Oracle Span 8-9:  50 => 50
Oracle Span 5-7:  Cooperation Office => (organization :name (name :op "Office" :op "Cooperation"))
Oracle Span 13-14:  Fort => fort
Oracle Span 3-4:  had => have-03
Oracle Span 2-3:  military => military
Oracle Span 1-2:  US => (country :name (name :op "US"))
Oracle Span 12-13:  Venezuelan => (country :name (name :op "Venezuela"))
Oracle Span 9-10:  years => (temporal-quantity :unit year)

Dependencies:
1	The	_	DT	DT	_	3	det	_	_
2	US	_	NNP	NNP	_	3	nn	_	_
3	military	_	NN	NN	_	4	nsubj	_	_
4	had	_	VBD	VBD	_	0	root	_	_
5	a	_	DT	DT	_	7	det	_	_
6	Cooperation	_	NNP	NNP	_	7	nn	_	_
7	Office	_	NNP	NNP	_	4	dobj	_	_
8	for	_	IN	IN	_	7	prep	_	_
9	50	_	CD	CD	_	10	num	_	_
10	years	_	NNS	NNS	_	8	pobj	_	_
11	in	_	IN	IN	_	10	prep	_	_
12	a	_	DT	DT	_	14	det	_	_
13	Venezuelan	_	JJ	JJ	_	14	amod	_	_
14	Fort	_	NNP	NNP	_	11	pobj	_	_
15	.	_	.	.	_	4	punct	_	_

Oracle:
(c / country, name, n / name)
(c2 / country, name, n3 / name)
(f / fort, mod, c2 / country)
(h / have-03, ARG0, m / military)
(h / have-03, ARG1, o / organization)
(h / have-03, duration, t / temporal-quantity)
(h / have-03, location, f / fort)
(m / military, mod, c / country)
(n / name, op, "US")
(n2 / name, op, "Cooperation")
(n2 / name, op, "Office")
(n3 / name, op, "Venezuela")
(o / organization, name, n2 / name)
(t / temporal-quantity, quant, 5 / 50)
(t / temporal-quantity, unit, y / year)

Input(Some(Graph(null,ArrayBuffer(Span(8,9,List(0),50,50,false), Span(1,2,List(3, 2, 1),US,(country :name (name :op "US")),false), Span(6,7,List(5, 4),Office,(have-org-role-91 :ARG2 office),false), Span(7,8,List(6),for,person,false), Span(2,3,List(7),military,military,false), Span(9,10,List(8),years,year,false), Span(5,6,List(9),Cooperation,country,false)),Map(2 -> name, 5 -> office, 8 -> year, 7 -> military, 1 -> country, 4 -> have-org-role-91, 6 -> person, 9 -> country, 0 -> 50, 3 -> "US"),Map(n -> name, h -> have-org-role-91, 5 -> 50, m -> military, y -> year, p -> person, c -> country, o -> office, c2 -> country))),[Ljava.lang.String;@6f693a4c,Annotation([Ljava.lang.String;@6ca142a5,[Ljava.lang.String;@5ece0d5b,[Ljava.lang.String;@6483b71a),Annotation([Ljava.lang.String;@429e5a9c,[Ljava.lang.String;@244c9c00,[Ledu.cmu.lti.nlp.amr.Dependency;@ac6f907),Annotation([Ljava.lang.String;@7384b422,[Ljava.lang.String;@43fe5a74,[Ljava.lang.String;@3927297),Annotation([Ljava.lang.String;@3e21bd23,[Ljava.lang.String;@68d22b61,[Ledu.cmu.lti.nlp.amr.Entity;@59cef1f5))
AMR:
(c / country, name, n / name)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG2, o / office)
(h / have-org-role-91, ARG6, p / person)
(m / military, mod, c / country)
(n / name, op, "US")
(o / office, mod, c2 / country)
(y / year, quant, 5 / 50)
(y / year, quant, p / person)

Decoded in 700,635 microseconds
Sentence: Chavez shut it down in 040000.

Oracle Span 1:  040000 => (date-entity :year 2004)
Oracle Span 2:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 3:  it => it
Oracle Span 4:  shut => shut-05
NER Entity: (person :name (name :op "Chavez"))
mkDayMonthYear(040000,00,00,04)
Spans:
Span 0-1:  Chavez => 1
Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Span 1-2:  shut => shut-06

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 5-6:  040000 => (date-entity :year 2004)
Oracle Span 0-1:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 2-3:  it => it
Oracle Span 1-2:  shut => shut-05

Dependencies:
1	Chavez	_	NNP	NNP	_	2	nsubj	_	_
2	shut	_	VBD	VBD	_	0	root	_	_
3	it	_	PRP	PRP	_	2	dobj	_	_
4	down	_	RP	RP	_	2	prt	_	_
5	in	_	IN	IN	_	2	prep	_	_
6	040000	_	CD	CD	_	5	pobj	_	_
7	.	_	.	.	_	2	punct	_	_

Oracle:
(d / date-entity, year, 2004)
(n / name, op, "Chavez")
(p / person, name, n / name)
(s / shut-05, ARG0, p / person)
(s / shut-05, ARG1, i / it)
(s / shut-05, time, d / date-entity)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),Chavez,1,false), Span(1,2,List(1),shut,shut-06,false), Span(0,1,List(4, 3, 2),Chavez,(person :name (name :op "Chavez")),false)),Map(2 -> person, 1 -> shut-06, 4 -> "Chavez", 0 -> 1, 3 -> name),Map(n -> name, s -> shut-06, p -> person, 1 -> 1))),[Ljava.lang.String;@4b01cc01,Annotation([Ljava.lang.String;@b74ac55,[Ljava.lang.String;@449ba235,[Ljava.lang.String;@7ca2d77),Annotation([Ljava.lang.String;@42ee984b,[Ljava.lang.String;@6cd69247,[Ledu.cmu.lti.nlp.amr.Dependency;@75450fe2),Annotation([Ljava.lang.String;@233225a8,[Ljava.lang.String;@15a8cd45,[Ljava.lang.String;@4db4311d),Annotation([Ljava.lang.String;@10530d56,[Ljava.lang.String;@22fe7591,[Ledu.cmu.lti.nlp.amr.Entity;@71ef466e))
AMR:
(n / name, op, "Chavez")
(p / person, name, n / name)
(s / shut-06, ARG0, p / person)
(s / shut-06, ARG1, 1 / 1)

Decoded in 120,945 microseconds
Sentence: 5 US military trainers and students participating in an exchange program were ordered to leave the country in 050400.

Oracle Span 1:  050400 => (date-entity :month 4 :year 2005)
Oracle Span 2:  5 => 5
Oracle Span 3:  and => and
Oracle Span 4:  country => country
Oracle Span 5:  exchange => exchange-01
Oracle Span 6:  leave => leave-01
Oracle Span 7:  military => (have-org-role-91 :ARG1 military)
Oracle Span 8:  ordered => order-01
Oracle Span 9:  participating => participate-01
Oracle Span 10:  program => program
Oracle Span 11:  students => (person :ARG0-of study-01)
Oracle Span 12:  trainers => train-01
Oracle Span 13:  US => (country :name (name :op "US"))
NER Entity: (country :name (name :op "US"))
mkDayMonthYear(050400,00,04,05)
Spans:
Span 0-1:  5 => 1
Span 4-5:  and => and
Span 16-17:  country => country
Span 9-10:  exchange => exchange-01
Span 14-15:  leave => leave-02
Span 2-3:  military => military
Span 12-13:  ordered => order-01
Span 6-7:  participating => participate-01
Span 10-11:  program => program
Span 5-6:  students => (person :ARG0-of study-01)
Span 3-4:  trainers => train-01
Span 1-2:  US => (country :name (name :op "US"))

Langrangian relaxation converged after 43 iterations. Delta = 0.0
Oracle Span 18-19:  050400 => (date-entity :month 4 :year 2005)
Oracle Span 0-1:  5 => 5
Oracle Span 4-5:  and => and
Oracle Span 16-17:  country => country
Oracle Span 9-10:  exchange => exchange-01
Oracle Span 14-15:  leave => leave-01
Oracle Span 2-3:  military => (have-org-role-91 :ARG1 military)
Oracle Span 12-13:  ordered => order-01
Oracle Span 6-7:  participating => participate-01
Oracle Span 10-11:  program => program
Oracle Span 5-6:  students => (person :ARG0-of study-01)
Oracle Span 3-4:  trainers => train-01
Oracle Span 1-2:  US => (country :name (name :op "US"))

Dependencies:
1	5	_	CD	CD	_	4	num	_	_
2	US	_	NNP	NNP	_	4	nn	_	_
3	military	_	JJ	JJ	_	4	amod	_	_
4	trainers	_	NNS	NNS	_	13	nsubjpass	_	_
5	and	_	CC	CC	_	4	cc	_	_
6	students	_	NNS	NNS	_	4	conj	_	_
7	participating	_	VBG	VBG	_	6	vmod	_	_
8	in	_	IN	IN	_	7	prep	_	_
9	an	_	DT	DT	_	11	det	_	_
10	exchange	_	NN	NN	_	11	nn	_	_
11	program	_	NN	NN	_	8	pobj	_	_
12	were	_	VBD	VBD	_	13	auxpass	_	_
13	ordered	_	VBN	VBN	_	0	root	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	leave	_	VB	VB	_	13	xcomp	_	_
16	the	_	DT	DT	_	17	det	_	_
17	country	_	NN	NN	_	15	dobj	_	_
18	in	_	IN	IN	_	17	prep	_	_
19	050400	_	CD	CD	_	18	pobj	_	_
20	.	_	.	.	_	13	punct	_	_

Oracle:
(a / and, op, p2 / person)
(c2 / country, name, n / name)
(d / date-entity, month, 4)
(d / date-entity, year, 2005)
(h / have-org-role-91, ARG1, m / military)
(h / have-org-role-91, ARG3, t / train-01)
(l / leave-01, ARG0, a / and)
(l / leave-01, ARG1, c / country)
(l / leave-01, time, d / date-entity)
(m / military, mod, c2 / country)
(n / name, op, "US")
(o / order-01, ARG1, a / and)
(o / order-01, ARG2, l / leave-01)
(p3 / participate-01, ARG0, p2 / person)
(p3 / participate-01, ARG1, p4 / program)
(p4 / program, topic, e / exchange-01)
(s / study-01, ARG0, p2 / person)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),5,1,false), Span(1,2,List(3, 2, 1),US,(country :name (name :op "US")),false), Span(2,3,List(4),military,military,false), Span(5,6,List(6, 5),students,(person :ARG0-of study-01),false), Span(16,17,List(7),country,country,false), Span(14,15,List(8),leave,leave-02,false), Span(3,4,List(9),trainers,train-01,false), Span(9,10,List(10),exchange,exchange-01,false), Span(12,13,List(11),ordered,order-01,false), Span(6,7,List(12),participating,participate-01,false), Span(10,11,List(13),program,program,false), Span(4,5,List(14),and,and,false)),Map(2 -> name, 5 -> person, 12 -> participate-01, 8 -> leave-02, 7 -> country, 1 -> country, 4 -> military, 11 -> order-01, 14 -> and, 6 -> study-01, 0 -> 1, 9 -> train-01, 3 -> "US", 10 -> exchange-01, 13 -> program),Map(e -> exchange-01, n -> name, t -> train-01, p2 -> participate-01, s -> study-01, m -> military, 1 -> 1, p -> person, a -> and, c -> country, l -> leave-02, o -> order-01, p3 -> program, c2 -> country))),[Ljava.lang.String;@67835b42,Annotation([Ljava.lang.String;@3ed00470,[Ljava.lang.String;@2cc1a016,[Ljava.lang.String;@26fdf5f),Annotation([Ljava.lang.String;@7fcbdd1b,[Ljava.lang.String;@4106a516,[Ledu.cmu.lti.nlp.amr.Dependency;@60e67c30),Annotation([Ljava.lang.String;@1c8fc254,[Ljava.lang.String;@3d8df7db,[Ljava.lang.String;@49d7db69),Annotation([Ljava.lang.String;@1a83399f,[Ljava.lang.String;@78fcd5f9,[Ledu.cmu.lti.nlp.amr.Entity;@2a1dc612))
AMR:
(a / and, op, p / person)
(c / country, name, n / name)
(e / exchange-01, ARG1, 1 / 1)
(l / leave-02, ARG0, a / and)
(l / leave-02, ARG1, c2 / country)
(m / military, mod, c / country)
(n / name, op, "US")
(o / order-01, ARG1, a / and)
(o / order-01, ARG2, l / leave-02)
(p2 / participate-01, ARG0, p / person)
(p2 / participate-01, ARG1, p3 / program)
(p3 / program, topic, e / exchange-01)
(s / study-01, ARG0, p / person)
(s / study-01, ARG1, m / military)
(t / train-01, ARG1, m / military)

Decoded in 1,327,001 microseconds
Sentence: Analysts say that it is likely Chavez is trying to indoctrinate his public and armed forces.

Oracle Span 1:  Analysts => (person :ARG0-of analyze-01)
Oracle Span 2:  and => and
Oracle Span 3:  armed => arm-01
Oracle Span 4:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 5:  forces => force
Oracle Span 6:  indoctrinate => indoctrinate-01
Oracle Span 7:  likely => likely
Oracle Span 8:  public => public
Oracle Span 9:  say => say-01
Oracle Span 10:  trying => try-01
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 0-1:  Analysts => (person :ARG0-of analyze-01)
Span 13-14:  and => and
Span 14-15:  armed => arm-01
Span 6-7:  Chavez => (person :name (name :op "Chavez"))
Span 15-16:  forces. => force
Span 10-11:  indoctrinate => indoctrinize-01
Span 5-6:  likely => likely
Span 12-13:  public => public
Span 1-2:  say => say-01
Span 8-9:  trying => try-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  Analysts => (person :ARG0-of analyze-01)
Oracle Span 13-14:  and => and
Oracle Span 14-15:  armed => arm-01
Oracle Span 6-7:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 15-16:  forces => force
Oracle Span 10-11:  indoctrinate => indoctrinate-01
Oracle Span 5-6:  likely => likely
Oracle Span 12-13:  public => public
Oracle Span 1-2:  say => say-01
Oracle Span 8-9:  trying => try-01

Dependencies:
1	Analysts	_	NNS	NNS	_	2	nsubj	_	_
2	say	_	VBP	VBP	_	0	root	_	_
3	that	_	IN	IN	_	6	mark	_	_
4	it	_	PRP	PRP	_	6	nsubj	_	_
5	is	_	VBZ	VBZ	_	6	cop	_	_
6	likely	_	JJ	JJ	_	2	ccomp	_	_
7	Chavez	_	NNP	NNP	_	9	nsubj	_	_
8	is	_	VBZ	VBZ	_	9	aux	_	_
9	trying	_	VBG	VBG	_	6	ccomp	_	_
10	to	_	TO	TO	_	11	aux	_	_
11	indoctrinate	_	VB	VB	_	9	xcomp	_	_
12	his	_	PRP$	PRP$	_	13	poss	_	_
13	public	_	JJ	JJ	_	11	dobj	_	_
14	and	_	CC	CC	_	13	cc	_	_
15	armed	_	JJ	JJ	_	16	amod	_	_
16	forces	_	NNS	NNS	_	13	conj	_	_
17	.	_	.	.	_	2	punct	_	_

Oracle:
(a / analyze-01, ARG0, p / person)
(a2 / and, op, f / force)
(a2 / and, op, p3 / public)
(a3 / arm-01, ARG1, f / force)
(f / force, poss, p2 / person)
(i / indoctrinate-01, ARG0, p2 / person)
(i / indoctrinate-01, ARG1, a2 / and)
(l / likely, domain, t / try-01)
(n / name, op, "Chavez")
(p2 / person, name, n / name)
(p3 / public, poss, p2 / person)
(s / say-01, ARG0, p / person)
(s / say-01, ARG1, l / likely)
(t / try-01, ARG0, p2 / person)
(t / try-01, ARG1, i / indoctrinate-01)

Input(Some(Graph(null,ArrayBuffer(Span(15,16,List(0),forces.,force,false), Span(8,9,List(1),trying,try-01,false), Span(12,13,List(2),public,public,false), Span(5,6,List(3),likely,likely,false), Span(14,15,List(4),armed,arm-01,false), Span(1,2,List(5),say,say-01,false), Span(0,1,List(7, 6),Analysts,(person :ARG0-of analyze-01),false), Span(10,11,List(8),indoctrinate,indoctrinize-01,false), Span(13,14,List(9),and,and,false), Span(6,7,List(12, 11, 10),Chavez,(person :name (name :op "Chavez")),false)),Map(2 -> public, 5 -> say-01, 12 -> "Chavez", 8 -> indoctrinize-01, 7 -> analyze-01, 1 -> try-01, 4 -> arm-01, 11 -> name, 6 -> person, 0 -> force, 9 -> and, 3 -> likely, 10 -> person),Map(n -> name, t -> try-01, p2 -> person, a3 -> and, s -> say-01, p -> public, a -> arm-01, i -> indoctrinize-01, a2 -> analyze-01, l -> likely, f -> force, p3 -> person))),[Ljava.lang.String;@29c71255,Annotation([Ljava.lang.String;@2cd6e972,[Ljava.lang.String;@a4c8e9d,[Ljava.lang.String;@f346047),Annotation([Ljava.lang.String;@1e709e4e,[Ljava.lang.String;@576698b,[Ledu.cmu.lti.nlp.amr.Dependency;@6b2037de),Annotation([Ljava.lang.String;@473a54a5,[Ljava.lang.String;@5da230e2,[Ljava.lang.String;@6b2e30ec),Annotation([Ljava.lang.String;@1da7490,[Ljava.lang.String;@14d08772,[Ledu.cmu.lti.nlp.amr.Entity;@58b9802a))
AMR:
(a / arm-01, ARG1, f / force)
(a2 / analyze-01, ARG0, p2 / person)
(f / force, poss, p3 / person)
(i / indoctrinize-01, ARG0, p3 / person)
(i / indoctrinize-01, ARG1, a3 / and)
(l / likely, domain, t / try-01)
(n / name, op, "Chavez")
(p / public, poss, p3 / person)
(p3 / person, name, n / name)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, l / likely)
(t / try-01, ARG0, p3 / person)
(t / try-01, ARG1, i / indoctrinize-01)

Decoded in 339,244 microseconds
Sentence: Analysts say that there is no proof that Chavez will use those forces to aid leftist revolutions elsewhere.

Oracle Span 1:  aid => aid-01
Oracle Span 2:  Analysts => (person :ARG0-of analyze-01)
Oracle Span 3:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 4:  elsewhere => elsewhere
Oracle Span 5:  forces => force
Oracle Span 6:  leftist => leftist
Oracle Span 7:  no => -
Oracle Span 8:  revolutions => revolution
Oracle Span 9:  say => say-01
Oracle Span 10:  that => that
Oracle Span 11:  use => use-01
NER Entity: (person :name (name :op "Chavez"))
Spans:
Span 14-15:  aid => aid-01
Span 0-1:  Analysts => (person :ARG0-of analyze-01)
Span 8-9:  Chavez => (person :name (name :op "Chavez"))
Span 17-18:  elsewhere. => elsewhere
Span 12-13:  forces => force
Span 15-16:  leftist => leftist
Span 6-7:  proof => proof
Span 16-17:  revolutions => revolution
Span 1-2:  say => say-01
Span 10-11:  use => use-01

Langrangian relaxation converged after 39 iterations. Delta = 0.0
Oracle Span 14-15:  aid => aid-01
Oracle Span 0-1:  Analysts => (person :ARG0-of analyze-01)
Oracle Span 8-9:  Chavez => (person :name (name :op "Chavez"))
Oracle Span 17-18:  elsewhere => elsewhere
Oracle Span 12-13:  forces => force
Oracle Span 15-16:  leftist => leftist
Oracle Span 5-6:  no => -
Oracle Span 16-17:  revolutions => revolution
Oracle Span 1-2:  say => say-01
Oracle Span 2-3:  that => that
Oracle Span 10-11:  use => use-01

Dependencies:
1	Analysts	_	NNS	NNS	_	2	nsubj	_	_
2	say	_	VBP	VBP	_	0	root	_	_
3	that	_	IN	IN	_	5	mark	_	_
4	there	_	EX	EX	_	5	expl	_	_
5	is	_	VBZ	VBZ	_	2	ccomp	_	_
6	no	_	DT	DT	_	7	neg	_	_
7	proof	_	NN	NN	_	5	nsubj	_	_
8	that	_	IN	IN	_	11	mark	_	_
9	Chavez	_	NNP	NNP	_	11	nsubj	_	_
10	will	_	MD	MD	_	11	aux	_	_
11	use	_	VB	VB	_	5	ccomp	_	_
12	those	_	DT	DT	_	13	det	_	_
13	forces	_	NNS	NNS	_	11	dobj	_	_
14	to	_	TO	TO	_	15	aux	_	_
15	aid	_	VB	VB	_	11	xcomp	_	_
16	leftist	_	JJ	JJ	_	17	amod	_	_
17	revolutions	_	NNS	NNS	_	15	dobj	_	_
18	elsewhere	_	RB	RB	_	15	advmod	_	_
19	.	_	.	.	_	2	punct	_	_

Oracle:
(a / analyze-01, ARG0, p / person)
(a2 / aid-01, ARG0, p3 / person)
(a2 / aid-01, ARG2, r / revolution)
(f / force, mod, t / that)
(n / name, op, "Chavez")
(p3 / person, name, n / name)
(r / revolution, location, e / elsewhere)
(r / revolution, mod, l / leftist)
(s / say-01, ARG0, p / person)
(u / use-01, ARG0, p3 / person)
(u / use-01, ARG1, f / force)
(u / use-01, ARG2, a2 / aid-01)

Input(Some(Graph(null,ArrayBuffer(Span(6,7,List(0),proof,proof,false), Span(12,13,List(1),forces,force,false), Span(1,2,List(2),say,say-01,false), Span(0,1,List(4, 3),Analysts,(person :ARG0-of analyze-01),false), Span(17,18,List(5),elsewhere.,elsewhere,false), Span(8,9,List(8, 7, 6),Chavez,(person :name (name :op "Chavez")),false), Span(10,11,List(9),use,use-01,false), Span(15,16,List(10),leftist,leftist,false), Span(14,15,List(11),aid,aid-01,false), Span(16,17,List(12),revolutions,revolution,false)),Map(2 -> say-01, 5 -> elsewhere, 12 -> revolution, 8 -> "Chavez", 7 -> name, 1 -> force, 4 -> analyze-01, 11 -> aid-01, 6 -> person, 0 -> proof, 9 -> use-01, 3 -> person, 10 -> leftist),Map(n -> name, e -> elsewhere, p2 -> person, s -> say-01, p -> proof, a -> analyze-01, r -> revolution, a2 -> aid-01, l -> leftist, u -> use-01, f -> force, p3 -> person))),[Ljava.lang.String;@17a0d448,Annotation([Ljava.lang.String;@7b8cc41b,[Ljava.lang.String;@62f65e9c,[Ljava.lang.String;@791a737c),Annotation([Ljava.lang.String;@6809ea83,[Ljava.lang.String;@75385785,[Ledu.cmu.lti.nlp.amr.Dependency;@25eaf500),Annotation([Ljava.lang.String;@fc1e352,[Ljava.lang.String;@28bb5ddb,[Ljava.lang.String;@1f08b336),Annotation([Ljava.lang.String;@6d381722,[Ljava.lang.String;@6d63a2a4,[Ledu.cmu.lti.nlp.amr.Entity;@1f447f56))
AMR:
(a / analyze-01, ARG0, p2 / person)
(a2 / aid-01, ARG0, p3 / person)
(a2 / aid-01, ARG1, r / revolution)
(n / name, op, "Chavez")
(p3 / person, name, n / name)
(r / revolution, location, e / elsewhere)
(r / revolution, mod, l / leftist)
(s / say-01, ARG0, p2 / person)
(s / say-01, ARG1, p / proof)
(u / use-01, ARG0, p3 / person)
(u / use-01, ARG1, f / force)
(u / use-01, ARG2, a2 / aid-01)
(u / use-01, ARG6, p / proof)

Decoded in 835,226 microseconds
Sentence: 2007-06-18

Oracle Span 1:  2007-06-18 => (date-entity :year 2007 :month 6 :day 18)
mkDayMonthYear(2007-06-18,18,06,2007)
Spans:
Span 0-1:  2007-06-18 => (date-entity :year 2007 :month 6 :day 18)

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 0-1:  2007-06-18 => (date-entity :year 2007 :month 6 :day 18)

Dependencies:
1	2007-06-18	_	NNP	NNP	_	0	root	_	_

Oracle:
(d2 / date-entity, day, 18)
(d2 / date-entity, month, 6)
(d2 / date-entity, year, 2007)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(3, 2, 1, 0),2007-06-18,(date-entity :year 2007 :month 6 :day 18),false)),Map(2 -> 6, 1 -> 2007, 0 -> date-entity, 3 -> 18),Map(2 -> 2007, d -> date-entity, 1 -> 18, 6 -> 6))),[Ljava.lang.String;@fd7c87d,Annotation([Ljava.lang.String;@5f84a6e5,[Ljava.lang.String;@524edbbd,[Ljava.lang.String;@32d242bf),Annotation([Ljava.lang.String;@3f7e0b8,[Ljava.lang.String;@79beddad,[Ledu.cmu.lti.nlp.amr.Dependency;@5d096214),Annotation([Ljava.lang.String;@7dee04b0,[Ljava.lang.String;@41a0c995,[Ljava.lang.String;@4efc27b9),Annotation([Ljava.lang.String;@5873f5b0,[Ljava.lang.String;@5535a18a,[Ledu.cmu.lti.nlp.amr.Entity;@129e26d8))
AMR:
(d / date-entity, day, 1 / 18)
(d / date-entity, month, 6 / 6)
(d / date-entity, year, 2 / 2007)

Decoded in 30,696 microseconds
Sentence: Korea, Democratic People's Republic of (KP)

WARNING ADDING ANOTHER SPAN TO NODE 0.0.2
ArrayBuffer(0) + 1
WARNING ADDING ANOTHER SPAN TO NODE 0.0.3
ArrayBuffer(0) + 2
WARNING ADDING ANOTHER SPAN TO NODE 0.0.4
ArrayBuffer(0) + 3
WARNING ADDING ANOTHER SPAN TO NODE 0.0.1
ArrayBuffer(0) + 4
Oracle Span 1:  Korea => "Korea"
Oracle Span 2:  Korea , Democratic People 's Republic of => (country :name (name :op "Korea" :op "of" :op "Republic" :op "People's" :op "Democratic"))
Oracle Span 3:  of => "of"
Oracle Span 4:  People => "People's"
Oracle Span 5:  Republic => "Republic"
NER Entity: (country :name (name :op "Korea"))
NER Entity: (country :name (name :op "Republic"))
NER Entity: (country :name (name :op "Korea"))
Spans:
Span 6-7:   => of-course
Span 5-6:  (KP) => (include-91 :ARG2 republic)
Span 1-2:  Democratic => and
Span 0-1:  Korea, => (country :name (name :op "Korea"))
Span 2-3:  People's => democracy

Langrangian relaxation converged after 22 iterations. Delta = 0.0
WARNING ADDING ANOTHER SPAN TO NODE 0.0.2
ArrayBuffer(0) + 1
WARNING ADDING ANOTHER SPAN TO NODE 0.0.3
ArrayBuffer(0) + 2
WARNING ADDING ANOTHER SPAN TO NODE 0.0.4
ArrayBuffer(0) + 3
WARNING ADDING ANOTHER SPAN TO NODE 0.0.1
ArrayBuffer(0) + 4
Oracle Span 0-1:  Korea => "Korea"
Oracle Span 0-7:  Korea , Democratic People 's Republic of => (country :name (name :op "Korea" :op "of" :op "Republic" :op "People's" :op "Democratic"))
Oracle Span 6-7:  of => "of"
Oracle Span 3-4:  People => "People's"
Oracle Span 5-6:  Republic => "Republic"

Dependencies:
1	Korea	_	NNP	NNP	_	6	nsubj	_	_
2	,	_	,	,	_	1	punct	_	_
3	Democratic	_	JJ	JJ	_	4	amod	_	_
4	People	_	NNS	NNS	_	1	appos	_	_
5	's	_	VBZ	VBZ	_	6	cop	_	_
6	Republic	_	NNP	NNP	_	0	root	_	_
7	of	_	IN	IN	_	6	prep	_	_
8	(	_	(	(	_	9	punct	_	_
9	KP	_	NNP	NNP	_	6	appos	_	_
10	)	_	)	)	_	9	punct	_	_

Oracle:
(c / country, name, n / name)
(n / name, op, "Democratic")
(n / name, op, K / "Korea")
(n / name, op, P / "People's")
(n / name, op, R / "Republic")
(n / name, op, o / "of")

Input(Some(Graph(null,ArrayBuffer(Span(5,6,List(1, 0),(KP),(include-91 :ARG2 republic),false), Span(2,3,List(2),People's,democracy,false), Span(6,7,List(3),,of-course,false), Span(0,1,List(6, 5, 4),Korea,,(country :name (name :op "Korea")),false), Span(1,2,List(7),Democratic,and,false)),Map(2 -> democracy, 5 -> name, 7 -> and, 1 -> republic, 4 -> country, 6 -> "Korea", 0 -> include-91, 3 -> of-course),Map(n -> name, d -> democracy, a -> and, r -> republic, i -> include-91, c -> country, o -> of-course))),[Ljava.lang.String;@19b3bc1c,Annotation([Ljava.lang.String;@282f33a0,[Ljava.lang.String;@566f35a5,[Ljava.lang.String;@5e8ac2be),Annotation([Ljava.lang.String;@5addd62f,[Ljava.lang.String;@b3e4ce7,[Ledu.cmu.lti.nlp.amr.Dependency;@24538238),Annotation([Ljava.lang.String;@2c442b3e,[Ljava.lang.String;@181cfc37,[Ljava.lang.String;@613cc2a7),Annotation([Ljava.lang.String;@59c6defa,[Ljava.lang.String;@54561327,[Ledu.cmu.lti.nlp.amr.Entity;@2bd4b0de))
AMR:
(a / and, op, c / country)
(c / country, name, n / name)
(d / democracy, calendar, a / and)
(i / include-91, ARG1, a / and)
(i / include-91, ARG2, r / republic)
(i / include-91, ARG6, o / of-course)
(n / name, op, "Korea")

Decoded in 315,535 microseconds
Sentence: proliferation; international

Oracle Span 1:  ; => and
Oracle Span 2:  international => international
Oracle Span 3:  proliferation => proliferate-01
Spans:
Span 2-3:   => international
Span 1-2:  international => and
Span 0-1:  proliferation; => proliferate-01

Langrangian relaxation converged after 1 iterations. Delta = 0.0
Oracle Span 1-2:  ; => and
Oracle Span 2-3:  international => international
Oracle Span 0-1:  proliferation => proliferate-01

Dependencies:
1	proliferation	_	NN	NN	_	0	root	_	_
2	;	_	:	:	_	1	punct	_	_
3	international	_	JJ	JJ	_	1	dep	_	_

Oracle:
(a / and, op, i / international)
(a / and, op, p / proliferate-01)

Input(Some(Graph(null,ArrayBuffer(Span(0,1,List(0),proliferation;,proliferate-01,false), Span(2,3,List(1),,international,false), Span(1,2,List(2),international,and,false)),Map(2 -> and, 1 -> international, 0 -> proliferate-01),Map(p -> proliferate-01, a -> and, i -> international))),[Ljava.lang.String;@4d37e4cd,Annotation([Ljava.lang.String;@5ddc692a,[Ljava.lang.String;@23d70b8d,[Ljava.lang.String;@68046d2e),Annotation([Ljava.lang.String;@1a67fd6f,[Ljava.lang.String;@244c5230,[Ledu.cmu.lti.nlp.amr.Dependency;@3f5cae57),Annotation([Ljava.lang.String;@747ad98f,[Ljava.lang.String;@51d3deea,[Ljava.lang.String;@17c8db32),Annotation([Ljava.lang.String;@4d3cf18a,[Ljava.lang.String;@6f28ef03,[Ledu.cmu.lti.nlp.amr.Entity;@20c35882))
AMR:
(a / and, op, i / international)
(a / and, op, p / proliferate-01)

Decoded in 41,364 microseconds
Sentence: The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first step toward disabling the Unit by December 2007.

Oracle Span 1:  begin => begin-01
Oracle Span 2:  by => by
Oracle Span 3:  December 2007 => (date-entity :year 2007 :month 12)
Oracle Span 4:  disabling => disable-01
Oracle Span 5:  government => (government-organization :ARG0-of govern-01)
Oracle Span 6:  June 2007 => (date-entity :year 2007 :month 6)
Oracle Span 7:  may => possible
Oracle Span 8:  North Korean => (country :name (name :op "Korea" :op "North"))
Oracle Span 9:  plutonium => plutonium
Oracle Span 10:  prepared => prepare-02
Oracle Span 11:  producing => produce-01
Oracle Span 12:  reactor => reactor
Oracle Span 13:  shutting => shut-05
Oracle Span 14:  step => step-01
NER Entity: (thing :name (name :op "North" :op "Korean"))
Spans:
Span 8-9:  begin => begin-01
Span 23-24:  disabling => disable-01
Span 1-2:  North => (relative-position :direction north)
Span 12-13:  plutonium => plutonium
Span 6-7:  prepared => prepare-02
Span 13-14:  producing => produce-01
Span 14-15:  reactor => reactor
Span 9-10:  shutting => shut-05
Span 21-22:  step => step-01
Span 0-1:  The => (country :name (name :op "North"))
Span 0-17:  The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June => (date-entity :year 2007 :month 6)
Span 0-21:  The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first => (ordinal-entity :value 1)
Span 0-28:  The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first step toward disabling the Unit by December => (date-entity :year 2007 :month 12)
Span 25-26:  Unit => organization

Langrangian relaxation converged after 29 iterations. Delta = 0.0
Oracle Span 8-9:  begin => begin-01
Oracle Span 26-27:  by => by
Oracle Span 27-29:  December 2007 => (date-entity :year 2007 :month 12)
Oracle Span 23-24:  disabling => disable-01
Oracle Span 3-4:  government => (government-organization :ARG0-of govern-01)
Oracle Span 16-18:  June 2007 => (date-entity :year 2007 :month 6)
Oracle Span 4-5:  may => possible
Oracle Span 1-3:  North Korean => (country :name (name :op "Korea" :op "North"))
Oracle Span 12-13:  plutonium => plutonium
Oracle Span 6-7:  prepared => prepare-02
Oracle Span 13-14:  producing => produce-01
Oracle Span 14-15:  reactor => reactor
Oracle Span 9-10:  shutting => shut-05
Oracle Span 21-22:  step => step-01

Dependencies:
1	The	_	DT	DT	_	4	det	_	_
2	North	_	JJ	JJ	_	3	amod	_	_
3	Korean	_	JJ	JJ	_	4	amod	_	_
4	government	_	NN	NN	_	7	nsubjpass	_	_
5	may	_	MD	MD	_	7	aux	_	_
6	be	_	VB	VB	_	7	auxpass	_	_
7	prepared	_	VBN	VBN	_	0	root	_	_
8	to	_	TO	TO	_	9	aux	_	_
9	begin	_	VB	VB	_	7	xcomp	_	_
10	shutting	_	VBG	VBG	_	9	xcomp	_	_
11	down	_	RP	RP	_	10	prt	_	_
12	a	_	DT	DT	_	15	det	_	_
13	plutonium	_	NN	NN	_	15	nn	_	_
14	producing	_	VBG	VBG	_	15	amod	_	_
15	reactor	_	NN	NN	_	10	dobj	_	_
16	in	_	IN	IN	_	15	prep	_	_
17	June	_	NNP	NNP	_	16	pobj	_	_
18	2007	_	CD	CD	_	17	num	_	_
19	as	_	IN	IN	_	10	prep	_	_
20	the	_	DT	DT	_	22	det	_	_
21	first	_	JJ	JJ	_	22	amod	_	_
22	step	_	NN	NN	_	19	pobj	_	_
23	toward	_	IN	IN	_	22	prep	_	_
24	disabling	_	VBG	VBG	_	23	pcomp	_	_
25	the	_	DT	DT	_	26	det	_	_
26	Unit	_	NN	NN	_	24	dobj	_	_
27	by	_	IN	IN	_	24	prep	_	_
28	December	_	NNP	NNP	_	27	pobj	_	_
29	2007	_	CD	CD	_	28	num	_	_
30	.	_	.	.	_	7	punct	_	_

Oracle:
(b / begin-01, ARG0, g / government-organization)
(b / begin-01, ARG1, s / shut-05)
(b / begin-01, time, d2 / date-entity)
(b2 / by, op, d3 / date-entity)
(c / country, name, n / name)
(d / disable-01, ARG0, g / government-organization)
(d / disable-01, ARG1, r / reactor)
(d / disable-01, time, b2 / by)
(d2 / date-entity, month, 6)
(d2 / date-entity, year, 2007)
(d3 / date-entity, month, 12)
(d3 / date-entity, year, 2007)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(n / name, op, "Korea")
(n / name, op, "North")
(p / possible, domain, p2 / prepare-02)
(p2 / prepare-02, ARG1, g / government-organization)
(p2 / prepare-02, ARG2, b / begin-01)
(p3 / produce-01, ARG0, r / reactor)
(p3 / produce-01, ARG1, p4 / plutonium)
(s / shut-05, ARG0, g / government-organization)
(s / shut-05, ARG1, r / reactor)
(s / shut-05, prep-as, s2 / step-01)
(s2 / step-01, ARG2, d / disable-01)

Input(Some(Graph(null,ArrayBuffer(Span(0,21,List(1, 0),The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first,(ordinal-entity :value 1),false), Span(6,7,List(2),prepared,prepare-02,false), Span(25,26,List(3),Unit,organization,false), Span(23,24,List(4),disabling,disable-01,false), Span(0,28,List(7, 6, 5),The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first step toward disabling the Unit by December,(date-entity :year 2007 :month 12),false), Span(21,22,List(8),step,step-01,false), Span(9,10,List(9),shutting,shut-05,false), Span(13,14,List(10),producing,produce-01,false), Span(8,9,List(11),begin,begin-01,false), Span(0,1,List(14, 13, 12),The,(country :name (name :op "North")),false), Span(12,13,List(15),plutonium,plutonium,false), Span(1,2,List(17, 16),North,(relative-position :direction north),false), Span(0,17,List(20, 19, 18),The North Korean government may be prepared to begin shutting down a plutonium producing reactor in June,(date-entity :year 2007 :month 6),false), Span(14,15,List(21),reactor,reactor,false)),Map(2 -> prepare-02, 5 -> date-entity, 12 -> country, 15 -> plutonium, 8 -> step-01, 21 -> reactor, 18 -> date-entity, 7 -> 12, 17 -> north, 1 -> 1, 4 -> disable-01, 11 -> begin-01, 14 -> "North", 20 -> 6, 6 -> 2007, 0 -> ordinal-entity, 9 -> shut-05, 16 -> relative-position, 19 -> 2007, 3 -> organization, 10 -> produce-01, 13 -> name),Map(n -> name, 2 -> 2007, s2 -> shut-05, 12 -> 12, b -> begin-01, d3 -> date-entity, p2 -> produce-01, s -> step-01, d -> disable-01, 1 -> 1, r2 -> reactor, p -> prepare-02, o2 -> organization, d2 -> date-entity, r -> relative-position, 6 -> 6, c -> country, 22 -> 2007, o -> ordinal-entity, p3 -> plutonium, n2 -> north))),[Ljava.lang.String;@4851d5f1,Annotation([Ljava.lang.String;@16e3b6c4,[Ljava.lang.String;@41742992,[Ljava.lang.String;@1d7408fe),Annotation([Ljava.lang.String;@5b4ca8fc,[Ljava.lang.String;@501270c7,[Ledu.cmu.lti.nlp.amr.Dependency;@304aebee),Annotation([Ljava.lang.String;@dc436e1,[Ljava.lang.String;@337174ed,[Ljava.lang.String;@70a6be0c),Annotation([Ljava.lang.String;@17542e6d,[Ljava.lang.String;@3b0b6158,[Ledu.cmu.lti.nlp.amr.Entity;@3e5acc8))
AMR:
(b / begin-01, ARG1, s2 / shut-05)
(b / begin-01, time, d2 / date-entity)
(b / begin-01, time, d3 / date-entity)
(c / country, name, n / name)
(d / disable-01, ARG0, c / country)
(d / disable-01, ARG1, o2 / organization)
(d2 / date-entity, month, 12 / 12)
(d2 / date-entity, year, 2 / 2007)
(d3 / date-entity, month, 6 / 6)
(d3 / date-entity, year, 22 / 2007)
(n / name, op, "North")
(o / ordinal-entity, op, s / step-01)
(o / ordinal-entity, value, 1 / 1)
(p / prepare-02, ARG1, b / begin-01)
(p / prepare-02, ARG6, c / country)
(p2 / produce-01, ARG0, r2 / reactor)
(p2 / produce-01, ARG1, p3 / plutonium)
(r / relative-position, direction, n2 / north)
(s / step-01, ARG0, r / relative-position)
(s / step-01, ARG1, d / disable-01)
(s2 / shut-05, ARG1, r2 / reactor)

Decoded in 2,300,010 microseconds
Sentence: Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first step toward disabling the Unit by December 2007.

Oracle Span 1:  18 => 18
Oracle Span 2:  2007 => 2007
Oracle Span 3:  Assistant => assist-01
Oracle Span 4:  begin => begin-01
Oracle Span 5:  by => by
Oracle Span 6:  Christopher Hill => (person :name (name :op "Hill" :op "Christopher"))
Oracle Span 7:  December 2007 => (date-entity :year 2007 :month 12)
Oracle Span 8:  disabling => disable-01
Oracle Span 9:  government => (government-organization :ARG0-of govern-01)
Oracle Span 10:  June => 6
Oracle Span 11:  June 2007 => (date-entity :year 2007 :month 6)
Oracle Span 12:  may => possible
Oracle Span 13:  North Korean => (country :name (name :op "Korea" :op "North"))
Oracle Span 14:  plutonium => plutonium
Oracle Span 15:  prepared => prepare-02
Oracle Span 16:  producing => produce-01
Oracle Span 17:  reactor => reactor
Oracle Span 18:  Secretary => (have-org-role-91 :ARG2 secretary)
Oracle Span 19:  shutting => shut-05
Oracle Span 20:  State => state-01
Oracle Span 21:  stated => state
Oracle Span 22:  step => step-01
NER Entity: (person :name (name :op "Christopher" :op "Hill"))
NER Entity: (thing :name (name :op "North" :op "Korean"))
mkDayMonthYear(18	June	2007,18,June,2007)
Spans:
Span 0-9:  Assistant Secretary of State Christopher Hill stated on 18 => (date-entity :year 2007 :month 6 :day 18)
Span 0-29:  Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June => (date-entity :year 2007 :month 6)
Span 0-33:  Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first => (ordinal-entity :value 1)
Span 0-40:  Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first step toward disabling the Unit by December => (date-entity :year 2007 :month 12)
Span 20-21:  begin => begin-01
Span 4-6:  Christopher Hill => (person :name (name :op "Christopher" :op "Hill"))
Span 35-36:  disabling => disable-01
Span 13-14:  North => (relative-position :direction north)
Span 24-25:  plutonium => plutonium
Span 18-19:  prepared => prepare-02
Span 25-26:  producing => produce-01
Span 26-27:  reactor => reactor
Span 1-2:  Secretary => (have-org-role-91 :ARG2 secretary)
Span 21-22:  shutting => shut-05
Span 3-4:  State => state
Span 6-7:  stated => state-01
Span 33-34:  step => step-01
Span 12-13:  the => (country :name (name :op "North"))
Span 37-38:  Unit => organization

Langrangian relaxation converged after 44 iterations. Delta = 0.0
Oracle Span 8-9:  18 => 18
Oracle Span 29-30:  2007 => 2007
Oracle Span 0-1:  Assistant => assist-01
Oracle Span 20-21:  begin => begin-01
Oracle Span 38-39:  by => by
Oracle Span 4-6:  Christopher Hill => (person :name (name :op "Hill" :op "Christopher"))
Oracle Span 39-41:  December 2007 => (date-entity :year 2007 :month 12)
Oracle Span 35-36:  disabling => disable-01
Oracle Span 15-16:  government => (government-organization :ARG0-of govern-01)
Oracle Span 28-29:  June => 6
Oracle Span 9-11:  June 2007 => (date-entity :year 2007 :month 6)
Oracle Span 16-17:  may => possible
Oracle Span 13-15:  North Korean => (country :name (name :op "Korea" :op "North"))
Oracle Span 24-25:  plutonium => plutonium
Oracle Span 18-19:  prepared => prepare-02
Oracle Span 25-26:  producing => produce-01
Oracle Span 26-27:  reactor => reactor
Oracle Span 1-2:  Secretary => (have-org-role-91 :ARG2 secretary)
Oracle Span 21-22:  shutting => shut-05
Oracle Span 3-4:  State => state-01
Oracle Span 6-7:  stated => state
Oracle Span 33-34:  step => step-01

Dependencies:
1	Assistant	_	NNP	NNP	_	6	dep	_	_
2	Secretary	_	NNP	NNP	_	1	dep	_	_
3	of	_	IN	IN	_	1	prep	_	_
4	State	_	NNP	NNP	_	3	pobj	_	_
5	Christopher	_	NNP	NNP	_	6	nn	_	_
6	Hill	_	NNP	NNP	_	7	nsubj	_	_
7	stated	_	VBD	VBD	_	0	root	_	_
8	on	_	IN	IN	_	7	prep	_	_
9	18	_	CD	CD	_	8	pobj	_	_
10	June	_	NNP	NNP	_	7	tmod	_	_
11	2007	_	CD	CD	_	10	num	_	_
12	that	_	IN	IN	_	19	mark	_	_
13	the	_	DT	DT	_	16	det	_	_
14	North	_	NNP	NNP	_	16	nn	_	_
15	Korean	_	JJ	JJ	_	16	amod	_	_
16	government	_	NN	NN	_	19	nsubjpass	_	_
17	may	_	MD	MD	_	19	aux	_	_
18	be	_	VB	VB	_	19	auxpass	_	_
19	prepared	_	VBN	VBN	_	7	ccomp	_	_
20	to	_	TO	TO	_	21	aux	_	_
21	begin	_	VB	VB	_	19	xcomp	_	_
22	shutting	_	VBG	VBG	_	21	xcomp	_	_
23	down	_	RP	RP	_	22	prt	_	_
24	a	_	DT	DT	_	27	det	_	_
25	plutonium	_	NN	NN	_	27	nn	_	_
26	producing	_	VBG	VBG	_	27	amod	_	_
27	reactor	_	NN	NN	_	22	dobj	_	_
28	in	_	IN	IN	_	27	prep	_	_
29	June	_	NNP	NNP	_	28	pobj	_	_
30	2007	_	CD	CD	_	29	num	_	_
31	as	_	IN	IN	_	22	prep	_	_
32	the	_	DT	DT	_	34	det	_	_
33	first	_	JJ	JJ	_	34	amod	_	_
34	step	_	NN	NN	_	31	pobj	_	_
35	toward	_	IN	IN	_	34	prep	_	_
36	disabling	_	VBG	VBG	_	35	pcomp	_	_
37	the	_	DT	DT	_	38	det	_	_
38	Unit	_	NN	NN	_	36	dobj	_	_
39	by	_	IN	IN	_	36	prep	_	_
40	December	_	NNP	NNP	_	39	pobj	_	_
41	2007	_	CD	CD	_	40	num	_	_
42	.	_	.	.	_	7	punct	_	_

Oracle:
(a2 / assist-01, ARG0, p5 / person)
(b / begin-01, ARG0, g / government-organization)
(b / begin-01, ARG1, s / shut-05)
(b / begin-01, time, d2 / date-entity)
(b2 / by, op, d3 / date-entity)
(c / country, name, n / name)
(d / disable-01, ARG0, g / government-organization)
(d / disable-01, ARG1, r / reactor)
(d / disable-01, time, b2 / by)
(d2 / date-entity, month, 6)
(d2 / date-entity, year, 2007)
(d3 / date-entity, month, 12)
(d3 / date-entity, year, 2007)
(g2 / govern-01, ARG0, g / government-organization)
(g2 / govern-01, ARG1, c / country)
(h / have-org-role-91, ARG0, p5 / person)
(h / have-org-role-91, ARG2, s4 / secretary)
(h / have-org-role-91, ARG3, a2 / assist-01)
(n / name, op, "Korea")
(n / name, op, "North")
(n2 / name, op, "Christopher")
(n2 / name, op, "Hill")
(p2 / prepare-02, ARG1, g / government-organization)
(p2 / prepare-02, ARG2, b / begin-01)
(p3 / produce-01, ARG0, r / reactor)
(p3 / produce-01, ARG1, p4 / plutonium)
(p5 / person, name, n2 / name)
(p6 / possible, domain, p2 / prepare-02)
(s / shut-05, ARG0, g / government-organization)
(s / shut-05, ARG1, r / reactor)
(s / shut-05, prep-as, s2 / step-01)
(s2 / step-01, ARG2, d / disable-01)
(s3 / state-01, ARG0, p5 / person)
(s3 / state-01, ARG1, p6 / possible)
(s4 / secretary, mod, s5 / state)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(2, 1, 0),the,(country :name (name :op "North")),false), Span(37,38,List(3),Unit,organization,false), Span(0,33,List(5, 4),Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first,(ordinal-entity :value 1),false), Span(3,4,List(6),State,state,false), Span(13,14,List(8, 7),North,(relative-position :direction north),false), Span(33,34,List(9),step,step-01,false), Span(1,2,List(11, 10),Secretary,(have-org-role-91 :ARG2 secretary),false), Span(20,21,List(12),begin,begin-01,false), Span(18,19,List(13),prepared,prepare-02,false), Span(24,25,List(14),plutonium,plutonium,false), Span(0,9,List(18, 17, 16, 15),Assistant Secretary of State Christopher Hill stated on 18,(date-entity :year 2007 :month 6 :day 18),false), Span(4,6,List(22, 21, 20, 19),Christopher Hill,(person :name (name :op "Christopher" :op "Hill")),false), Span(35,36,List(23),disabling,disable-01,false), Span(0,40,List(26, 25, 24),Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June 2007 as the first step toward disabling the Unit by December,(date-entity :year 2007 :month 12),false), Span(26,27,List(27),reactor,reactor,false), Span(6,7,List(28),stated,state-01,false), Span(0,29,List(31, 30, 29),Assistant Secretary of State Christopher Hill stated on 18 June 2007 that the North Korean government may be prepared to begin shutting down a plutonium producing reactor in June,(date-entity :year 2007 :month 6),false), Span(21,22,List(32),shutting,shut-05,false), Span(25,26,List(33),producing,produce-01,false)),Map(30 -> 2007, 2 -> "North", 5 -> 1, 33 -> produce-01, 27 -> reactor, 12 -> begin-01, 8 -> north, 15 -> date-entity, 21 -> "Christopher", 18 -> 18, 24 -> date-entity, 7 -> relative-position, 1 -> name, 17 -> 6, 23 -> disable-01, 26 -> 12, 4 -> ordinal-entity, 11 -> secretary, 32 -> shut-05, 14 -> plutonium, 29 -> date-entity, 20 -> name, 28 -> state-01, 6 -> state, 9 -> step-01, 0 -> country, 22 -> "Hill", 16 -> 2007, 19 -> person, 10 -> have-org-role-91, 3 -> organization, 31 -> 6, 25 -> 2007, 13 -> prepare-02),Map(s5 -> shut-05, n -> name, h -> have-org-role-91, 2 -> 2007, s2 -> step-01, 12 -> 18, b -> begin-01, d3 -> date-entity, p2 -> plutonium, s -> state, s4 -> state-01, 62 -> 6, d -> date-entity, 1 -> 1, 23 -> 2007, r2 -> reactor, p -> prepare-02, n3 -> name, p4 -> produce-01, o2 -> ordinal-entity, d2 -> disable-01, r -> relative-position, c -> country, 6 -> 6, s3 -> secretary, d4 -> date-entity, 22 -> 2007, o -> organization, p3 -> person, n2 -> north, 13 -> 12))),[Ljava.lang.String;@14c83bc0,Annotation([Ljava.lang.String;@26803782,[Ljava.lang.String;@52aabcff,[Ljava.lang.String;@268b65c),Annotation([Ljava.lang.String;@57ab8bea,[Ljava.lang.String;@70309aba,[Ledu.cmu.lti.nlp.amr.Dependency;@777a8d07),Annotation([Ljava.lang.String;@30671fe2,[Ljava.lang.String;@3b9836df,[Ljava.lang.String;@4f099e5c),Annotation([Ljava.lang.String;@6c38300f,[Ljava.lang.String;@64a8aa65,[Ledu.cmu.lti.nlp.amr.Entity;@1e7c46e1))
AMR:
(b / begin-01, ARG1, s5 / shut-05)
(b / begin-01, time, d4 / date-entity)
(c / country, name, n / name)
(d / date-entity, calendar, p / prepare-02)
(d / date-entity, day, 12 / 18)
(d / date-entity, month, 6 / 6)
(d / date-entity, year, 2 / 2007)
(d2 / disable-01, ARG0, c / country)
(d2 / disable-01, ARG1, o / organization)
(d3 / date-entity, month, 13 / 12)
(d3 / date-entity, year, 22 / 2007)
(d4 / date-entity, month, 62 / 6)
(d4 / date-entity, year, 23 / 2007)
(h / have-org-role-91, ARG0, p3 / person)
(h / have-org-role-91, ARG1, c / country)
(h / have-org-role-91, ARG2, s3 / secretary)
(n / name, op, "North")
(n3 / name, op, "Christopher")
(n3 / name, op, "Hill")
(o2 / ordinal-entity, op, s2 / step-01)
(o2 / ordinal-entity, value, 1 / 1)
(p / prepare-02, ARG1, b / begin-01)
(p / prepare-02, ARG6, r / relative-position)
(p3 / person, name, n3 / name)
(p4 / produce-01, ARG0, r2 / reactor)
(p4 / produce-01, ARG1, p2 / plutonium)
(r / relative-position, direction, n2 / north)
(s2 / step-01, ARG1, d3 / date-entity)
(s2 / step-01, ARG2, d2 / disable-01)
(s4 / state-01, ARG0, p3 / person)
(s4 / state-01, ARG1, p / prepare-02)
(s4 / state-01, ARG6, s / state)
(s5 / shut-05, ARG1, r2 / reactor)

Decoded in 6,584,543 microseconds
Sentence: Hill is the head American negotiator on North Korea's nuclear weapons program.

Oracle Span 1:  head => head
Oracle Span 2:  Hill => (person :name (name :op "Hill"))
Oracle Span 3:  negotiator => (person :ARG0-of negotiate-01)
Oracle Span 4:  North Korea => (country :name (name :op "Korea" :op "North"))
Oracle Span 5:  nuclear => nucleus
Oracle Span 6:  program => program
Oracle Span 7:  weapons => weapon
NER Entity: (country :name (name :op "North" :op "Korea"))
NER Entity: (person :name (name :op "Hill"))
Spans:
Span 12-13:   => program
Span 3-4:  head => (person :ARG0-of head-01)
Span 0-1:  Hill => (person :name (name :op "Hill"))
Span 5-6:  negotiator => (person :ARG0-of negotiate-01)
Span 7-9:  North Korea's => (country :name (name :op "North" :op "Korea"))
Span 11-12:  program. => weapon
Span 10-11:  weapons => nucleus

Langrangian relaxation converged after 5 iterations. Delta = 0.0
Oracle Span 3-4:  head => head
Oracle Span 0-1:  Hill => (person :name (name :op "Hill"))
Oracle Span 5-6:  negotiator => (person :ARG0-of negotiate-01)
Oracle Span 7-9:  North Korea => (country :name (name :op "Korea" :op "North"))
Oracle Span 10-11:  nuclear => nucleus
Oracle Span 12-13:  program => program
Oracle Span 11-12:  weapons => weapon

Dependencies:
1	Hill	_	NNP	NNP	_	6	nsubj	_	_
2	is	_	VBZ	VBZ	_	6	cop	_	_
3	the	_	DT	DT	_	6	det	_	_
4	head	_	NN	NN	_	6	nn	_	_
5	American	_	JJ	JJ	_	6	amod	_	_
6	negotiator	_	NN	NN	_	0	root	_	_
7	on	_	IN	IN	_	6	prep	_	_
8	North	_	NNP	NNP	_	9	nn	_	_
9	Korea	_	NNP	NNP	_	13	poss	_	_
10	's	_	POS	POS	_	9	possessive	_	_
11	nuclear	_	JJ	JJ	_	13	amod	_	_
12	weapons	_	NNS	NNS	_	13	nn	_	_
13	program	_	NN	NN	_	7	pobj	_	_
14	.	_	.	.	_	6	punct	_	_

Oracle:
(c2 / country, name, n5 / name)
(n / negotiate-01, ARG0, p2 / person)
(n / negotiate-01, ARG2, p / program)
(n2 / name, op, "Hill")
(n5 / name, op, "Korea")
(n5 / name, op, "North")
(p / program, poss, c2 / country)
(p / program, topic, w / weapon)
(p2 / person, domain, p3 / person)
(p2 / person, mod, h / head)
(p3 / person, name, n2 / name)
(w / weapon, mod, n4 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(12,13,List(0),,program,false), Span(11,12,List(1),program.,weapon,false), Span(5,6,List(3, 2),negotiator,(person :ARG0-of negotiate-01),false), Span(7,9,List(7, 6, 5, 4),North Korea's,(country :name (name :op "North" :op "Korea")),false), Span(10,11,List(8),weapons,nucleus,false), Span(3,4,List(10, 9),head,(person :ARG0-of head-01),false), Span(0,1,List(13, 12, 11),Hill,(person :name (name :op "Hill")),false)),Map(2 -> person, 5 -> name, 12 -> name, 8 -> nucleus, 7 -> "Korea", 1 -> weapon, 4 -> country, 11 -> person, 6 -> "North", 0 -> program, 9 -> person, 3 -> negotiate-01, 10 -> head-01, 13 -> "Hill"),Map(n -> negotiate-01, w -> weapon, h -> head-01, p2 -> person, n4 -> name, p -> program, p4 -> person, n3 -> nucleus, c -> country, p3 -> person, n2 -> name))),[Ljava.lang.String;@189e98cd,Annotation([Ljava.lang.String;@2e566a37,[Ljava.lang.String;@696bb765,[Ljava.lang.String;@2dfefc9a),Annotation([Ljava.lang.String;@41ca5118,[Ljava.lang.String;@5c508cc4,[Ledu.cmu.lti.nlp.amr.Dependency;@6834d8b4),Annotation([Ljava.lang.String;@32f4e304,[Ljava.lang.String;@21a526d3,[Ljava.lang.String;@79cba88f),Annotation([Ljava.lang.String;@37f43e7a,[Ljava.lang.String;@220d1743,[Ledu.cmu.lti.nlp.amr.Entity;@2a163e6f))
AMR:
(c / country, name, n2 / name)
(h / head-01, ARG0, p3 / person)
(h / head-01, ARG1, p / program)
(n / negotiate-01, ARG0, p2 / person)
(n / negotiate-01, ARG1, p / program)
(n2 / name, op, "Korea")
(n2 / name, op, "North")
(n4 / name, op, "Hill")
(p / program, poss, c / country)
(p / program, topic, w / weapon)
(p2 / person, domain, p4 / person)
(p4 / person, name, n4 / name)
(w / weapon, mod, n3 / nucleus)

Decoded in 371,654 microseconds
Sentence: Hill stated stalled efforts to dismantle North Korea's nuclear weapons program could move ahead after the weekend of 16 June 2007 and 17 June 2007 when Pyongyang officials invited inspectors from the International Atomic Energy Agency to visit for talks on verifying and monitoring a shutdown.

Oracle Span 1:  16 June 2007 => (date-entity :year 2007 :month 6 :day 16)
Oracle Span 2:  17 June 2007 => (date-entity :year 2007 :month 6 :day 17)
Oracle Span 3:  after => after
Oracle Span 4:  ahead => ahead
Oracle Span 5:  and => and
Oracle Span 6:  could => possible
Oracle Span 7:  dismantle => dismantle-01
Oracle Span 8:  efforts => effort
Oracle Span 9:  Hill => (person :name (name :op "Hill"))
Oracle Span 10:  inspectors => inspect-01
Oracle Span 11:  International Atomic Energy Agency => (have-org-role-91 :ARG1 (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International")))
Oracle Span 12:  invited => invite-01
Oracle Span 13:  monitoring => monitor-01
Oracle Span 14:  move => move-01
Oracle Span 15:  North Korea => (country :name (name :op "Korea" :op "North"))
Oracle Span 16:  nuclear => nucleus
Oracle Span 17:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 18:  program => program
Oracle Span 19:  Pyongyang => (city :name (name :op "Pyongyang"))
Oracle Span 20:  shutdown => shut-05
Oracle Span 21:  stalled => stall-01
Oracle Span 22:  stated => state-01
Oracle Span 23:  talks => talk-01
Oracle Span 24:  verifying => verify-01
Oracle Span 25:  visit => visit-01
Oracle Span 26:  weapons => weapon
Oracle Span 27:  weekend => weekend
NER Entity: (person :name (name :op "Hill"))
NER Entity: (country :name (name :op "North" :op "Korea"))
NER Entity: (organization :name (name :op "International" :op "Atomic" :op "Energy" :op "Agency"))
NER Entity: (country :name (name :op "Pyongyang"))
mkDayMonthYear(16	June	2007,16,June,2007)
mkDayMonthYear(17	June	2007,17,June,2007)
Spans:
Span 46-47:   => shut-05
Span 22-23:  17 => and
Span 44-45:  a => monitor-01
Span 14-15:  after => ahead
Span 13-14:  ahead => move-01
Span 42-43:  and => verify-01
Span 11-12:  could => program
Span 5-6:  dismantle => dismantle-01
Span 3-4:  efforts => effort
Span 34-37:  Energy Agency to => (organization :name (name :op "Agency" :op "Energy" :op "Atomic"))
Span 38-39:  for => visit-01
Span 30-31:  from => (person :ARG0-of inspect-01)
Span 0-1:  Hill => (person :name (name :op "Hill"))
Span 0-17:  Hill stated stalled efforts to dismantle North Korea's nuclear weapons program could move ahead after the weekend => (date-entity :year 2007 :month 6 :day 16)
Span 0-24:  Hill stated stalled efforts to dismantle North Korea's nuclear weapons program could move ahead after the weekend of 16 June 2007 and 17 June => (date-entity :year 2007 :month 6 :day 17)
Span 29-30:  inspectors => invite-01
Span 28-29:  invited => (person :ARG0-of (have-org-role-91 :ARG2 official))
Span 7-8:  Korea's => (country :name (name :op "Korea"))
Span 43-44:  monitoring => and
Span 12-13:  move => possible
Span 27-28:  officials => (city :name (name :op "Pyongyang"))
Span 40-41:  on => talk-01
Span 10-11:  program => weapon
Span 2-3:  stalled => stall-01
Span 1-2:  stated => state-01
Span 15-16:  the => after
Span 9-10:  weapons => nucleus

Langrangian relaxation converged after 31 iterations. Delta = 0.0
Oracle Span 19-22:  16 June 2007 => (date-entity :year 2007 :month 6 :day 16)
Oracle Span 23-26:  17 June 2007 => (date-entity :year 2007 :month 6 :day 17)
Oracle Span 15-16:  after => after
Oracle Span 14-15:  ahead => ahead
Oracle Span 22-23:  and => and
Oracle Span 12-13:  could => possible
Oracle Span 5-6:  dismantle => dismantle-01
Oracle Span 3-4:  efforts => effort
Oracle Span 0-1:  Hill => (person :name (name :op "Hill"))
Oracle Span 30-31:  inspectors => inspect-01
Oracle Span 33-37:  International Atomic Energy Agency => (have-org-role-91 :ARG1 (organization :name (name :op "Agency" :op "Energy" :op "Atomic" :op "International")))
Oracle Span 29-30:  invited => invite-01
Oracle Span 44-45:  monitoring => monitor-01
Oracle Span 13-14:  move => move-01
Oracle Span 6-8:  North Korea => (country :name (name :op "Korea" :op "North"))
Oracle Span 9-10:  nuclear => nucleus
Oracle Span 28-29:  officials => (have-org-role-91 :ARG2 official)
Oracle Span 11-12:  program => program
Oracle Span 27-28:  Pyongyang => (city :name (name :op "Pyongyang"))
Oracle Span 46-47:  shutdown => shut-05
Oracle Span 2-3:  stalled => stall-01
Oracle Span 1-2:  stated => state-01
Oracle Span 40-41:  talks => talk-01
Oracle Span 42-43:  verifying => verify-01
Oracle Span 38-39:  visit => visit-01
Oracle Span 10-11:  weapons => weapon
Oracle Span 17-18:  weekend => weekend

Dependencies:
1	Hill	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	stalled	_	VBN	VBN	_	4	amod	_	_
4	efforts	_	NNS	NNS	_	14	nsubj	_	_
5	to	_	TO	TO	_	6	aux	_	_
6	dismantle	_	VB	VB	_	4	vmod	_	_
7	North	_	NNP	NNP	_	8	nn	_	_
8	Korea	_	NNP	NNP	_	12	poss	_	_
9	's	_	POS	POS	_	8	possessive	_	_
10	nuclear	_	JJ	JJ	_	12	amod	_	_
11	weapons	_	NNS	NNS	_	12	nn	_	_
12	program	_	NN	NN	_	6	dobj	_	_
13	could	_	MD	MD	_	14	aux	_	_
14	move	_	VB	VB	_	2	ccomp	_	_
15	ahead	_	RB	RB	_	14	advmod	_	_
16	after	_	IN	IN	_	14	prep	_	_
17	the	_	DT	DT	_	18	det	_	_
18	weekend	_	NN	NN	_	16	pobj	_	_
19	of	_	IN	IN	_	18	prep	_	_
20	16	_	CD	CD	_	19	pobj	_	_
21	June	_	NNP	NNP	_	14	tmod	_	_
22	2007	_	CD	CD	_	21	num	_	_
23	and	_	CC	CC	_	21	cc	_	_
24	17	_	CD	CD	_	21	conj	_	_
25	June	_	NNP	NNP	_	2	tmod	_	_
26	2007	_	CD	CD	_	25	num	_	_
27	when	_	WRB	WRB	_	30	advmod	_	_
28	Pyongyang	_	NNP	NNP	_	29	nn	_	_
29	officials	_	NNS	NNS	_	30	nsubj	_	_
30	invited	_	VBD	VBD	_	2	advcl	_	_
31	inspectors	_	NNS	NNS	_	30	dobj	_	_
32	from	_	IN	IN	_	30	prep	_	_
33	the	_	DT	DT	_	37	det	_	_
34	International	_	NNP	NNP	_	37	nn	_	_
35	Atomic	_	NNP	NNP	_	37	nn	_	_
36	Energy	_	NNP	NNP	_	37	nn	_	_
37	Agency	_	NNP	NNP	_	32	pobj	_	_
38	to	_	TO	TO	_	39	aux	_	_
39	visit	_	VB	VB	_	30	vmod	_	_
40	for	_	IN	IN	_	39	prep	_	_
41	talks	_	NNS	NNS	_	40	pobj	_	_
42	on	_	IN	IN	_	39	prep	_	_
43	verifying	_	VBG	VBG	_	42	pcomp	_	_
44	and	_	CC	CC	_	43	cc	_	_
45	monitoring	_	VBG	VBG	_	43	conj	_	_
46	a	_	DT	DT	_	47	det	_	_
47	shutdown	_	NN	NN	_	43	dobj	_	_
48	.	_	.	.	_	2	punct	_	_

Oracle:
(a2 / after, op, w2 / weekend)
(a3 / and, op, m2 / monitor-01)
(a3 / and, op, v2 / verify-01)
(c / country, name, n3 / name)
(c2 / city, name, n4 / name)
(d / date-entity, day, 16)
(d / date-entity, month, 6)
(d / date-entity, year, 2007)
(d2 / date-entity, day, 17)
(d2 / date-entity, month, 6)
(d2 / date-entity, year, 2007)
(d3 / dismantle-01, ARG1, p3 / program)
(e / effort, purpose, d3 / dismantle-01)
(h / have-org-role-91, ARG1, o3 / organization)
(h / have-org-role-91, ARG3, i2 / inspect-01)
(h2 / have-org-role-91, ARG1, c2 / city)
(h2 / have-org-role-91, ARG2, o / official)
(i / invite-01, ARG2, v / visit-01)
(m / move-01, ARG1, e / effort)
(m / move-01, ARG2, a / ahead)
(m / move-01, time, a2 / after)
(m2 / monitor-01, ARG1, s3 / shut-05)
(n / name, op, "Hill")
(n3 / name, op, "Korea")
(n3 / name, op, "North")
(n4 / name, op, "Pyongyang")
(n5 / name, op, "Agency")
(n5 / name, op, "Atomic")
(n5 / name, op, "Energy")
(n5 / name, op, "International")
(o3 / organization, name, n5 / name)
(p / person, name, n / name)
(p2 / possible, domain, m / move-01)
(p3 / program, poss, c / country)
(p3 / program, topic, w / weapon)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, p2 / possible)
(s2 / stall-01, ARG1, e / effort)
(t / talk-01, ARG1, a3 / and)
(v / visit-01, purpose, t / talk-01)
(v / visit-01, time, w2 / weekend)
(v2 / verify-01, ARG1, s3 / shut-05)
(w / weapon, mod, n2 / nucleus)

Input(Some(Graph(null,ArrayBuffer(Span(38,39,List(0),for,visit-01,false), Span(43,44,List(1),monitoring,and,false), Span(0,24,List(5, 4, 3, 2),Hill stated stalled efforts to dismantle North Korea's nuclear weapons program could move ahead after the weekend of 16 June 2007 and 17 June,(date-entity :year 2007 :month 6 :day 17),false), Span(15,16,List(6),the,after,false), Span(29,30,List(7),inspectors,invite-01,false), Span(27,28,List(10, 9, 8),officials,(city :name (name :op "Pyongyang")),false), Span(7,8,List(13, 12, 11),Korea's,(country :name (name :op "Korea")),false), Span(0,1,List(16, 15, 14),Hill,(person :name (name :op "Hill")),false), Span(9,10,List(17),weapons,nucleus,false), Span(3,4,List(18),efforts,effort,false), Span(1,2,List(19),stated,state-01,false), Span(11,12,List(20),could,program,false), Span(44,45,List(21),a,monitor-01,false), Span(10,11,List(22),program,weapon,false), Span(2,3,List(23),stalled,stall-01,false), Span(12,13,List(24),move,possible,false), Span(40,41,List(25),on,talk-01,false), Span(14,15,List(26),after,ahead,false), Span(42,43,List(27),and,verify-01,false), Span(22,23,List(28),17,and,false), Span(5,6,List(29),dismantle,dismantle-01,false), Span(30,31,List(31, 30),from,(person :ARG0-of inspect-01),false), Span(46,47,List(32),,shut-05,false), Span(13,14,List(33),ahead,move-01,false), Span(0,17,List(37, 36, 35, 34),Hill stated stalled efforts to dismantle North Korea's nuclear weapons program could move ahead after the weekend,(date-entity :year 2007 :month 6 :day 16),false), Span(34,37,List(42, 41, 40, 39, 38),Energy Agency to,(organization :name (name :op "Agency" :op "Energy" :op "Atomic")),false), Span(28,29,List(45, 44, 43),invited,(person :ARG0-of (have-org-role-91 :ARG2 official)),false)),Map(45 -> official, 39 -> name, 30 -> person, 2 -> date-entity, 5 -> 17, 33 -> move-01, 27 -> verify-01, 12 -> name, 8 -> city, 15 -> name, 42 -> "Atomic", 36 -> 6, 21 -> monitor-01, 18 -> effort, 24 -> possible, 41 -> "Energy", 35 -> 2007, 7 -> invite-01, 1 -> and, 17 -> nucleus, 44 -> have-org-role-91, 23 -> stall-01, 38 -> organization, 26 -> ahead, 4 -> 6, 11 -> country, 32 -> shut-05, 14 -> person, 29 -> dismantle-01, 20 -> program, 34 -> date-entity, 28 -> and, 6 -> after, 40 -> "Agency", 43 -> person, 9 -> name, 0 -> visit-01, 22 -> weapon, 16 -> "Hill", 37 -> 16, 19 -> state-01, 10 -> "Pyongyang", 3 -> 2007, 31 -> inspect-01, 25 -> talk-01, 13 -> "Korea"),Map(e -> effort, n -> name, w -> weapon, v2 -> verify-01, h -> have-org-role-91, 2 -> 2007, p5 -> person, s2 -> stall-01, 12 -> 16, t -> talk-01, m2 -> move-01, d3 -> date-entity, p2 -> program, n4 -> nucleus, a3 -> ahead, s -> state-01, v -> visit-01, 62 -> 6, d -> date-entity, m -> monitor-01, 1 -> 17, p -> person, a -> and, n3 -> name, p4 -> person, o2 -> official, d2 -> dismantle-01, i2 -> inspect-01, i -> invite-01, a2 -> after, c -> city, 6 -> 6, s3 -> shut-05, 22 -> 2007, o -> organization, p3 -> possible, n2 -> name, c2 -> country, a4 -> and, n5 -> name))),[Ljava.lang.String;@5f1ef387,Annotation([Ljava.lang.String;@6c62c55a,[Ljava.lang.String;@79fc71d8,[Ljava.lang.String;@2361ef5e),Annotation([Ljava.lang.String;@bcbb27e,[Ljava.lang.String;@7179fe48,[Ledu.cmu.lti.nlp.amr.Dependency;@6b91330e),Annotation([Ljava.lang.String;@47262a3d,[Ljava.lang.String;@11a838e5,[Ljava.lang.String;@2f9d1f26),Annotation([Ljava.lang.String;@4df65098,[Ljava.lang.String;@3bf7ecd9,[Ledu.cmu.lti.nlp.amr.Entity;@6b489452))
AMR:
(a / and, op, m / monitor-01)
(a2 / after, mod, a3 / ahead)
(c / city, name, n / name)
(c2 / country, name, n2 / name)
(d / date-entity, day, 1 / 17)
(d / date-entity, month, 6 / 6)
(d / date-entity, purpose, i / invite-01)
(d / date-entity, year, 2 / 2007)
(d2 / dismantle-01, ARG1, p2 / program)
(d3 / date-entity, day, 12 / 16)
(d3 / date-entity, month, 62 / 6)
(d3 / date-entity, time, i / invite-01)
(d3 / date-entity, year, 22 / 2007)
(e / effort, purpose, d2 / dismantle-01)
(h / have-org-role-91, ARG0, p5 / person)
(h / have-org-role-91, ARG1, c / city)
(h / have-org-role-91, ARG2, o2 / official)
(i / invite-01, ARG0, p5 / person)
(i / invite-01, ARG1, p4 / person)
(i2 / inspect-01, ARG0, p4 / person)
(i2 / inspect-01, ARG1, o / organization)
(m / monitor-01, ARG1, s3 / shut-05)
(m2 / move-01, ARG1, e / effort)
(m2 / move-01, time, a2 / after)
(n / name, op, "Pyongyang")
(n2 / name, op, "Korea")
(n3 / name, op, "Hill")
(n5 / name, op, "Agency")
(n5 / name, op, "Atomic")
(n5 / name, op, "Energy")
(o / organization, name, n5 / name)
(p / person, name, n3 / name)
(p2 / program, poss, c2 / country)
(p2 / program, topic, w / weapon)
(p3 / possible, domain, m2 / move-01)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, p3 / possible)
(s / state-01, time, i / invite-01)
(s2 / stall-01, ARG1, e / effort)
(s3 / shut-05, ARG1, a4 / and)
(t / talk-01, ARG1, n4 / nucleus)
(v / visit-01, ARG0, p4 / person)
(v / visit-01, ARG1, a / and)
(v / visit-01, instrument, t / talk-01)
(v2 / verify-01, ARG1, s3 / shut-05)

Decoded in 6,929,680 microseconds
Sentence: Following talks with Chinese negotiator Wu Dawei Hill stated the shutdown has long been anticipated.

Oracle Span 1:  anticipated => anticipate-01
Oracle Span 2:  Chinese => (country :name (name :op "China"))
Oracle Span 3:  Following => follow-01
Oracle Span 4:  Hill => (person :name (name :op "Hill"))
Oracle Span 5:  long => long
Oracle Span 6:  negotiator => negotiate-01
Oracle Span 7:  shutdown => shut-05
Oracle Span 8:  stated => state-01
Oracle Span 9:  talks => talk-01
Oracle Span 10:  Wu Dawei => (person :name (name :op "Dawei" :op "Wu"))
NER Entity: (person :name (name :op "Wu" :op "Dawei" :op "Hill"))
NER Entity: (thing :name (name :op "Chinese"))
Spans:
Span 14-15:  anticipated. => anticipate-01
Span 0-1:  Following => follow-01
Span 12-13:  long => long
Span 10-11:  shutdown => shut-05
Span 8-9:  stated => state-01
Span 1-2:  talks => talk-01
Span 5-8:  Wu Dawei Hill => (person :name (name :op "Wu" :op "Dawei" :op "Hill"))

Langrangian relaxation converged after 20 iterations. Delta = 0.0
Oracle Span 14-15:  anticipated => anticipate-01
Oracle Span 3-4:  Chinese => (country :name (name :op "China"))
Oracle Span 0-1:  Following => follow-01
Oracle Span 7-8:  Hill => (person :name (name :op "Hill"))
Oracle Span 12-13:  long => long
Oracle Span 4-5:  negotiator => negotiate-01
Oracle Span 10-11:  shutdown => shut-05
Oracle Span 8-9:  stated => state-01
Oracle Span 1-2:  talks => talk-01
Oracle Span 5-7:  Wu Dawei => (person :name (name :op "Dawei" :op "Wu"))

Dependencies:
1	Following	_	VBG	VBG	_	9	prep	_	_
2	talks	_	NNS	NNS	_	1	pobj	_	_
3	with	_	IN	IN	_	2	prep	_	_
4	Chinese	_	JJ	JJ	_	5	amod	_	_
5	negotiator	_	NN	NN	_	3	pobj	_	_
6	Wu	_	NNP	NNP	_	8	nn	_	_
7	Dawei	_	NNP	NNP	_	8	nn	_	_
8	Hill	_	NNP	NNP	_	9	nsubj	_	_
9	stated	_	VBD	VBD	_	0	root	_	_
10	the	_	DT	DT	_	11	det	_	_
11	shutdown	_	NN	NN	_	15	nsubjpass	_	_
12	has	_	VBZ	VBZ	_	15	aux	_	_
13	long	_	RB	RB	_	15	advmod	_	_
14	been	_	VBN	VBN	_	15	auxpass	_	_
15	anticipated	_	VBN	VBN	_	9	ccomp	_	_
16	.	_	.	.	_	9	punct	_	_

Oracle:
(a / anticipate-01, ARG1, s2 / shut-05)
(a / anticipate-01, duration, l / long)
(c / country, name, n3 / name)
(f / follow-01, ARG1, s / state-01)
(f / follow-01, ARG2, t / talk-01)
(n / name, op, "Hill")
(n2 / negotiate-01, ARG0, p2 / person)
(n3 / name, op, "China")
(n4 / name, op, "Dawei")
(n4 / name, op, "Wu")
(p / person, name, n / name)
(p2 / person, mod, c / country)
(p2 / person, name, n4 / name)
(s / state-01, ARG0, p / person)
(s / state-01, ARG1, a / anticipate-01)
(t / talk-01, ARG0, p / person)
(t / talk-01, ARG2, p2 / person)

Input(Some(Graph(null,ArrayBuffer(Span(5,8,List(4, 3, 2, 1, 0),Wu Dawei Hill,(person :name (name :op "Wu" :op "Dawei" :op "Hill")),false), Span(1,2,List(5),talks,talk-01,false), Span(0,1,List(6),Following,follow-01,false), Span(10,11,List(7),shutdown,shut-05,false), Span(14,15,List(8),anticipated.,anticipate-01,false), Span(8,9,List(9),stated,state-01,false), Span(12,13,List(10),long,long,false)),Map(2 -> "Wu", 5 -> talk-01, 8 -> anticipate-01, 7 -> shut-05, 1 -> name, 4 -> "Hill", 6 -> follow-01, 9 -> state-01, 0 -> person, 10 -> long, 3 -> "Dawei"),Map(n -> name, s2 -> state-01, t -> talk-01, s -> shut-05, p -> person, a -> anticipate-01, l -> long, f -> follow-01))),[Ljava.lang.String;@178700b4,Annotation([Ljava.lang.String;@3c21a7f,[Ljava.lang.String;@690bc65,[Ljava.lang.String;@4c1159f3),Annotation([Ljava.lang.String;@63bc7265,[Ljava.lang.String;@703e8d8f,[Ledu.cmu.lti.nlp.amr.Dependency;@734e7479),Annotation([Ljava.lang.String;@35567522,[Ljava.lang.String;@35f906b7,[Ljava.lang.String;@31afb772),Annotation([Ljava.lang.String;@31c2f082,[Ljava.lang.String;@37bb6cfd,[Ledu.cmu.lti.nlp.amr.Entity;@4a0a0803))
AMR:
(a / anticipate-01, ARG1, s / shut-05)
(a / anticipate-01, mod, l / long)
(f / follow-01, ARG1, s2 / state-01)
(f / follow-01, ARG2, t / talk-01)
(n / name, op, "Dawei")
(n / name, op, "Hill")
(n / name, op, "Wu")
(p / person, name, n / name)
(s2 / state-01, ARG0, p / person)
(s2 / state-01, ARG1, a / anticipate-01)

Decoded in 466,615 microseconds
Sentence: Hill stated the shutdown could occur in a matter of weeks not months.

Oracle Span 1:  could => possible
Oracle Span 2:  Hill => (person :name (name :op "Hill"))
Oracle Span 3:  months => (temporal-quantity :unit month)
Oracle Span 4:  shutdown => shut-05
Oracle Span 5:  stated => state-01
Oracle Span 6:  weeks => (temporal-quantity :unit week)
NER Entity: (person :name (name :op "Hill"))
Spans:
Span 4-5:  could => possible
Span 0-1:  Hill => (person :name (name :op "Hill"))
Span 8-9:  matter => matter
Span 12-13:  months. => month
Span 3-4:  shutdown => shut-05
Span 1-2:  stated => state-01
Span 10-11:  weeks => week

Langrangian relaxation converged after 24 iterations. Delta = 0.0
Oracle Span 4-5:  could => possible
Oracle Span 0-1:  Hill => (person :name (name :op "Hill"))
Oracle Span 12-13:  months => (temporal-quantity :unit month)
Oracle Span 3-4:  shutdown => shut-05
Oracle Span 1-2:  stated => state-01
Oracle Span 10-11:  weeks => (temporal-quantity :unit week)

Dependencies:
1	Hill	_	NNP	NNP	_	2	nsubj	_	_
2	stated	_	VBD	VBD	_	0	root	_	_
3	the	_	DT	DT	_	4	det	_	_
4	shutdown	_	NN	NN	_	6	nsubj	_	_
5	could	_	MD	MD	_	6	aux	_	_
6	occur	_	VB	VB	_	2	ccomp	_	_
7	in	_	IN	IN	_	6	prep	_	_
8	a	_	DT	DT	_	9	det	_	_
9	matter	_	NN	NN	_	7	pobj	_	_
10	of	_	IN	IN	_	9	prep	_	_
11	weeks	_	NNS	NNS	_	10	pobj	_	_
12	not	_	RB	RB	_	6	prep	_	_
13	months	_	NNS	NNS	_	12	dep	_	_
14	.	_	.	.	_	2	punct	_	_

Oracle:
(n / name, op, "Hill")
(p / person, name, n / name)
(p2 / possible, domain, s2 / shut-05)
(s / state-01, ARG0, p / person)
(t / temporal-quantity, unit, w / week)
(t2 / temporal-quantity, unit, m2 / month)

Input(Some(Graph(null,ArrayBuffer(Span(1,2,List(0),stated,state-01,false), Span(8,9,List(1),matter,matter,false), Span(12,13,List(2),months.,month,false), Span(10,11,List(3),weeks,week,false), Span(3,4,List(4),shutdown,shut-05,false), Span(4,5,List(5),could,possible,false), Span(0,1,List(8, 7, 6),Hill,(person :name (name :op "Hill")),false)),Map(2 -> month, 5 -> possible, 8 -> "Hill", 7 -> name, 1 -> matter, 4 -> shut-05, 6 -> person, 0 -> state-01, 3 -> week),Map(n -> name, w -> week, s2 -> shut-05, m2 -> month, p2 -> person, s -> state-01, m -> matter, p -> possible))),[Ljava.lang.String;@7438a7e4,Annotation([Ljava.lang.String;@61e32c4b,[Ljava.lang.String;@6903204f,[Ljava.lang.String;@229800e5),Annotation([Ljava.lang.String;@132e94d5,[Ljava.lang.String;@6b57638f,[Ledu.cmu.lti.nlp.amr.Dependency;@1ba627f2),Annotation([Ljava.lang.String;@795b934b,[Ljava.lang.String;@1eb42889,[Ljava.lang.String;@4eaf7bcb),Annotation([Ljava.lang.String;@641c5c5b,[Ljava.lang.String;@41785a58,[Ledu.cmu.lti.nlp.amr.Entity;@7e37d29e))
AMR:
(m / matter, prep-for, w / week)
(n / name, op, "Hill")
(p / possible, domain, s2 / shut-05)
(p2 / person, name, n / name)
(s / state-01, ARG0, p2 / person)
(s / state-01, ARG1, p / possible)
(s2 / shut-05, ARG0, w / week)
(s2 / shut-05, ARG1, m2 / month)

Decoded in 495,763 microseconds
Sentence: The Associated Press reported from Vienna, Austria that the IAEA stated on 18 June 2007 that a team would visit Pyongyang the week of 24 June 2007 to discuss the manner in which inspectors will verify the shutdown.

Oracle Span 1:  18 June 2007 => (date-entity :year 2007 :month 6 :day 18)
Oracle Span 2:  24 June 2007 => (date-entity :year 2007 :month 6 :day 24)
Oracle Span 3:  Associated Press => (publication :name (name :op "Press" :op "Associated"))
Oracle Span 4:  Austria => (country :name (name :op "Austria"))
Oracle Span 5:  discuss => discuss-01
Oracle Span 6:  IAEA => (organization :name (name :op "IAEA"))
Oracle Span 7:  inspectors => (person :ARG0-of inspect-01)
Oracle Span 8:  manner => manner
Oracle Span 9:  Pyongyang => (city :name (name :op "Pyongyang"))
Oracle Span 10:  reported => report-01
Oracle Span 11:  shutdown => shut-05
Oracle Span 12:  stated => state-01
Oracle Span 13:  team => team
Oracle Span 14:  verify => verify-01
Oracle Span 15:  Vienna => (city :name (name :op "Vienna"))
Oracle Span 16:  visit => visit-01
Oracle Span 17:  week => week
NER Entity: (organization :name (name :op "Associated" :op "Press"))
NER Entity: (organization :name (name :op "IAEA"))
NER Entity: (country :name (name :op "Pyongyang"))
NER Entity: (country :name (name :op "Vienna"))
NER Entity: (country :name (name :op "Austria"))
mkDayMonthYear(24	June	2007,24,June,2007)
mkDayMonthYear(18	June	2007,18,June,2007)
