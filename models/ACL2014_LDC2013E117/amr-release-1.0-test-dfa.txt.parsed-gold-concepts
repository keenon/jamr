# ::snt I am 24 and a mother of a 2 and a half year old.
# ::tok I am 24 and a mother of a 2 and a half year old .
# ::alignments 3-4|0 5-6|0.0 12-13|0.1+0.1.0 0-1|0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:21.425
# ::node	0	and	3-4
# ::node	0.0	mother	5-6
# ::node	0.0.0	24	2-3
# ::node	0.0.0.0	i	0-1
# ::node	0.1	temporal-quantity	12-13
# ::node	0.1.0	year	12-13
# ::root	0	and
# ::edge	24	calendar	i	0.0.0	0.0.0.0	
# ::edge	and	op1	mother	0	0.0	
# ::edge	and	op2	temporal-quantity	0	0.1	
# ::edge	mother	calendar	24	0.0	0.0.0	
# ::edge	temporal-quantity	unit	year	0.1	0.1.0	
(a / and 
      :op1 (m / mother 
            :calendar (2 / 24 
                  :calendar (i / i))) 
      :op2 (t3 / temporal-quantity 
            :unit (y / year)))

# ::snt Me and my son's father have been broken up since August.
# ::tok Me and my son 's father have been broken up since August .
# ::alignments 11-12|0.1+0.1.0 8-9|0 10-11|0.1.1 5-6|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:21.891
# ::node	0	break-16	8-9
# ::node	0.0	father	5-6
# ::node	0.0.0	son	3-4
# ::node	0.1	date-entity	11-12
# ::node	0.1.0	8	11-12
# ::node	0.1.1	since	10-11
# ::root	0	break-16
# ::edge	break-16	ARG0	father	0	0.0	
# ::edge	break-16	ARG1	date-entity	0	0.1	
# ::edge	date-entity	month	8	0.1	0.1.0	
# ::edge	father	poss	son	0.0	0.0.0	
# ::edge	since	op1	date-entity	0.1.1	0.1	
(b / break-16 
      :ARG0 (f / father 
            :poss (s / son)) 
      :ARG1 (d / date-entity 
            :month 8 
            :op-of (s2 / since)))

# ::snt I want to start dating other people and my son's father says if I do he will have nothing to do with his son.
# ::tok I want to start dating other people and my son 's father says if I do he will have nothing to do with his son .
# ::alignments 7-8|0.2 12-13|0.2.0 15-16|0.2.0.1 19-20|0.2.0.1.0 9-10|0.2.0.0.0 11-12|0.2.0.0 24-25|0.1.0 1-2|0 3-4|0.1 4-5|0.1.1 5-6|0.1.1.0+0.1.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:23.001
# ::node	0	want-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	start-01	3-4
# ::node	0.1.0	son	24-25
# ::node	0.1.1	date-02	4-5
# ::node	0.1.1.0	person	5-6
# ::node	0.1.1.0.0	other	5-6
# ::node	0.2	and	7-8
# ::node	0.2.0	say-01	12-13
# ::node	0.2.0.0	father	11-12
# ::node	0.2.0.0.0	son	9-10
# ::node	0.2.0.1	do-04	15-16
# ::node	0.2.0.1.0	nothing	19-20
# ::root	0	want-01
# ::edge	and	op1	want-01	0.2	0	
# ::edge	and	op2	say-01	0.2	0.2.0	
# ::edge	date-02	ARG1	person	0.1.1	0.1.1.0	
# ::edge	do-04	ARG1	nothing	0.2.0.1	0.2.0.1.0	
# ::edge	father	poss	son	0.2.0.0	0.2.0.0.0	
# ::edge	person	mod	other	0.1.1.0	0.1.1.0.0	
# ::edge	say-01	ARG0	father	0.2.0	0.2.0.0	
# ::edge	say-01	ARG1	do-04	0.2.0	0.2.0.1	
# ::edge	start-01	ARG0	son	0.1	0.1.0	
# ::edge	start-01	ARG1	date-02	0.1	0.1.1	
# ::edge	want-01	ARG0	i	0	0.0	
# ::edge	want-01	ARG1	start-01	0	0.1	
(w / want-01 
      :ARG0 (i / i) 
      :ARG1 (s2 / start-01 
            :ARG0 (s3 / son) 
            :ARG1 (d / date-02 
                  :ARG1 (p / person 
                        :mod (o / other)))) 
      :op-of (a / and 
            :op1 (s / say-01 
                  :ARG0 (f / father 
                        :poss (s4 / son)) 
                  :ARG1 (d2 / do-04 
                        :ARG1 (n / nothing)))))

# ::snt He is very possesive and controlling but he has no right to be as we are not together.
# ::tok He is very possesive and controlling but he has no right to be as we are not together .
# ::alignments 9-10|0.2 6-7|0 17-18|0.0 14-15|0.0.0 4-5|0.1 5-6|0.1.0 2-3|0.3.0 0-1|0.3.1 3-4|0.3 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:23.272
# ::node	0	contrast-01	6-7
# ::node	0.0	together	17-18
# ::node	0.0.0	we	14-15
# ::node	0.1	and	4-5
# ::node	0.1.0	controlling	5-6
# ::node	0.2	-	9-10
# ::node	0.3	possessive	3-4
# ::node	0.3.0	very	2-3
# ::node	0.3.1	he	0-1
# ::root	0	contrast-01
# ::edge	and	op1	controlling	0.1	0.1.0	
# ::edge	contrast-01	ARG0	together	0	0.0	
# ::edge	contrast-01	ARG1	and	0	0.1	
# ::edge	contrast-01	ARG2	-	0	0.2	
# ::edge	contrast-01	ARG6	possessive	0	0.3	
# ::edge	possessive	degree	very	0.3	0.3.0	
# ::edge	possessive	domain	he	0.3	0.3.1	
# ::edge	we	calendar	together	0.0.0	0.0	
(c / contrast-01 
      :ARG0 (t / together 
            :calendar-of (w / we)) 
      :ARG1 (a / and 
            :op1 (c3 / controlling)) 
      :ARG2 (- / -) 
      :ARG6 (p / possessive 
            :degree (v / very) 
            :domain (h2 / he)))

# ::snt He has too much going on in his life right now and he thinks we can work when I have told him several times I dont love him and he does not love me.
# ::tok He has too much going on in his life right now and he thinks we can work when I have told him several times I dont love him and he does not love me .
# ::alignments 11-12|0 13-14|0.1 20-21|0.1.1.0.1.2 22-23|0.1.1.0.1.2.1 28-29|0.1.1.0.1 26-27|0.1.1.0.1.1 32-33|0.1.1.0.1.0 18-19|0.1.1.0.1.2.0 15-16|0.1.1 16-17|0.1.1.0 14-15|0.1.1.0.0 4-5|0.0 10-11|0.0.1.0 9-10|0.0.1 8-9|0.0.0 0-1|0.1.0 3-4|0.0.2 2-3|0.0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:24.382
# ::node	0	and	11-12
# ::node	0.0	go-00	4-5
# ::node	0.0.0	life	8-9
# ::node	0.0.1	right	9-10
# ::node	0.0.1.0	now	10-11
# ::node	0.0.2	much	3-4
# ::node	0.0.2.0	too	2-3
# ::node	0.1	think-01	13-14
# ::node	0.1.0	he	0-1
# ::node	0.1.1	possible	15-16
# ::node	0.1.1.0	work-09	16-17
# ::node	0.1.1.0.0	we	14-15
# ::node	0.1.1.0.1	and	28-29
# ::node	0.1.1.0.1.0	love-01	32-33
# ::node	0.1.1.0.1.1	love-01	26-27
# ::node	0.1.1.0.1.2	tell-01	20-21
# ::node	0.1.1.0.1.2.0	i	18-19
# ::node	0.1.1.0.1.2.1	several	22-23
# ::root	0	and
# ::edge	and	condition	tell-01	0.1.1.0.1	0.1.1.0.1.2	
# ::edge	and	op1	think-01	0	0.1	
# ::edge	go-00	ARG0	life	0.0	0.0.0	
# ::edge	go-00	ARG1	right	0.0	0.0.1	
# ::edge	go-00	ARG2	and	0.0	0	
# ::edge	go-00	ARG6	much	0.0	0.0.2	
# ::edge	love-01	ARG1	and	0.1.1.0.1.0	0.1.1.0.1	
# ::edge	love-01	ARG1	and	0.1.1.0.1.1	0.1.1.0.1	
# ::edge	much	degree	too	0.0.2	0.0.2.0	
# ::edge	now	degree	right	0.0.1.0	0.0.1	
# ::edge	possible	domain	work-09	0.1.1	0.1.1.0	
# ::edge	tell-01	ARG0	i	0.1.1.0.1.2	0.1.1.0.1.2.0	
# ::edge	tell-01	ARG1	several	0.1.1.0.1.2	0.1.1.0.1.2.1	
# ::edge	think-01	ARG0	he	0.1	0.1.0	
# ::edge	think-01	ARG1	possible	0.1	0.1.1	
# ::edge	work-09	ARG0	we	0.1.1.0	0.1.1.0.0	
# ::edge	work-09	ARG1	and	0.1.1.0	0.1.1.0.1	
(a / and 
      :ARG2-of (g2 / go-00 
            :ARG0 (l / life) 
            :ARG1 (r / right 
                  :degree-of (n / now)) 
            :ARG6 (m / much 
                  :degree (t2 / too))) 
      :op1 (t / think-01 
            :ARG0 (h2 / he) 
            :ARG1 (p / possible 
                  :domain (w / work-09 
                        :ARG0 (w2 / we) 
                        :ARG1 (a2 / and 
                              :ARG1-of (l2 / love-01) 
                              :ARG1-of (l3 / love-01) 
                              :condition (t3 / tell-01 
                                    :ARG0 (i / i) 
                                    :ARG1 (s2 / several)))))))

# ::snt I want him to be there for his son without needing me too.
# ::tok I want him to be there for his son without needing me too .
# ::alignments 1-2|0 10-11|0.2 12-13|0.2.1 5-6|0.1 8-9|0.2.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:24.527
# ::node	0	want-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	there	5-6
# ::node	0.2	need-01	10-11
# ::node	0.2.0	son	8-9
# ::node	0.2.1	too	12-13
# ::root	0	want-01
# ::edge	need-01	ARG0	son	0.2	0.2.0	
# ::edge	need-01	ARG1	too	0.2	0.2.1	
# ::edge	want-01	ARG0	i	0	0.0	
# ::edge	want-01	ARG1	there	0	0.1	
# ::edge	want-01	manner	need-01	0	0.2	
(w / want-01 
      :ARG0 (i / i) 
      :ARG1 (t / there) 
      :manner (n / need-01 
            :ARG0 (s / son) 
            :ARG1 (t2 / too)))

# ::snt But he has no one his family and him dont get along and have their own issues.
# ::tok But he has no one his family and him dont get along and have their own issues .
# ::alignments 3-4|0.0.0 0-1|0 2-3|0.1.1.0 1-2|0.1.1.0.0 7-8|0.1.1.0.1 13-14|0.1 16-17|0.1.0 12-13|0.1.1 10-11|0.0 6-7|0.1.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:24.772
# ::node	0	contrast-01	0-1
# ::node	0.0	get-18	10-11
# ::node	0.0.0	-	3-4
# ::node	0.1	have-03	13-14
# ::node	0.1.0	issue	16-17
# ::node	0.1.1	and	12-13
# ::node	0.1.1.0	have-03	2-3
# ::node	0.1.1.0.0	he	1-2
# ::node	0.1.1.0.1	and	7-8
# ::node	0.1.1.1	family	6-7
# ::root	0	contrast-01
# ::edge	and	op1	have-03	0.1.1	0.1.1.0	
# ::edge	and	op2	have-03	0.1.1	0.1	
# ::edge	and	time	family	0.1.1	0.1.1.1	
# ::edge	contrast-01	ARG1	get-18	0	0.0	
# ::edge	contrast-01	ARG2	have-03	0	0.1	
# ::edge	get-18	ARG1	-	0.0	0.0.0	
# ::edge	have-03	ARG0	he	0.1.1.0	0.1.1.0.0	
# ::edge	have-03	ARG1	and	0.1.1.0	0.1.1.0.1	
# ::edge	have-03	ARG1	issue	0.1	0.1.0	
(c / contrast-01 
      :ARG1 (g / get-18 
            :ARG1 (- / -)) 
      :ARG2 (h4 / have-03 
            :ARG1 (i / issue) 
            :op-of (a3 / and 
                  :op1 (h / have-03 
                        :ARG0 (h2 / he) 
                        :ARG1 (a / and)) 
                  :time (f / family))))

# ::snt I don't want to be miserable anymore and the longer he is around the more miserable I will be.
# ::tok I do n't want to be miserable anymore and the longer he is around the more miserable I will be .
# ::alignments 3-4|0 7-8|0.1.0 6-7|0.1 0-1|0.0 16-17|0.2 11-12|0.2.1 13-14|0.2.0.0 10-11|0.2.1.0 15-16|0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:25.170
# ::node	0	want-01	3-4
# ::node	0.0	i	0-1
# ::node	0.1	miserable	6-7
# ::node	0.1.0	anymore	7-8
# ::node	0.2	miserable	16-17
# ::node	0.2.0	more	15-16
# ::node	0.2.0.0	around	13-14
# ::node	0.2.1	he	11-12
# ::node	0.2.1.0	long	10-11
# ::root	0	want-01
# ::edge	he	calendar	long	0.2.1	0.2.1.0	
# ::edge	miserable	degree	more	0.2	0.2.0	
# ::edge	miserable	domain	he	0.2	0.2.1	
# ::edge	miserable	mod	anymore	0.1	0.1.0	
# ::edge	more	calendar	around	0.2.0	0.2.0.0	
# ::edge	want-01	ARG1	i	0	0.0	
# ::edge	want-01	ARG2	miserable	0	0.1	
# ::edge	want-01	ARG6	miserable	0	0.2	
(w / want-01 
      :ARG1 (i / i) 
      :ARG2 (m / miserable 
            :mod (a / anymore)) 
      :ARG6 (m2 / miserable 
            :degree (m4 / more 
                  :calendar (a2 / around)) 
            :domain (h / he 
                  :calendar (l / long))))

# ::snt I dont want him to not be there for his son as he is a good father or he at least tries.
# ::tok I dont want him to not be there for his son as he is a good father or he at least tries .
# ::alignments 2-3|0.0 17-18|0 21-22|0.2 16-17|0.1 15-16|0.1.0 12-13|0.0.0 7-8|0.0.1 10-11|0.2.0 0-1|0.2.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:25.355
# ::node	0	or	17-18
# ::node	0.0	want-01	2-3
# ::node	0.0.0	he	12-13
# ::node	0.0.1	there	7-8
# ::node	0.1	father	16-17
# ::node	0.1.0	good	15-16
# ::node	0.2	try-01	21-22
# ::node	0.2.0	son	10-11
# ::node	0.2.1	i	0-1
# ::root	0	or
# ::edge	father	mod	good	0.1	0.1.0	
# ::edge	or	op1	want-01	0	0.0	
# ::edge	or	op2	father	0	0.1	
# ::edge	or	op3	try-01	0	0.2	
# ::edge	try-01	ARG0	son	0.2	0.2.0	
# ::edge	try-01	ARG1	i	0.2	0.2.1	
# ::edge	want-01	ARG0	he	0.0	0.0.0	
# ::edge	want-01	ARG1	there	0.0	0.0.1	
(o / or 
      :op1 (w / want-01 
            :ARG0 (h / he) 
            :ARG1 (t / there)) 
      :op2 (f / father 
            :mod (g / good)) 
      :op3 (t2 / try-01 
            :ARG0 (s / son) 
            :ARG1 (i / i)))

# ::snt I do believe every child needs both parents weather they are together or not.
# ::tok I do believe every child needs both parents weather they are together or not .
# ::alignments 2-3|0 5-6|0.1 12-13|0.0.0 11-12|0.0 7-8|0.1.1 6-7|0.1.1.0 4-5|0.1.0 3-4|0.1.0.0 0-1|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:25.646
# ::node	0	believe-01	2-3
# ::node	0.0	together	11-12
# ::node	0.0.0	or	12-13
# ::node	0.1	need-01	5-6
# ::node	0.1.0	child	4-5
# ::node	0.1.0.0	every	3-4
# ::node	0.1.1	parent	7-8
# ::node	0.1.1.0	both	6-7
# ::node	0.2	i	0-1
# ::root	0	believe-01
# ::edge	believe-01	ARG0	together	0	0.0	
# ::edge	believe-01	ARG1	need-01	0	0.1	
# ::edge	believe-01	ARG6	i	0	0.2	
# ::edge	child	mod	every	0.1.0	0.1.0.0	
# ::edge	need-01	ARG0	child	0.1	0.1.0	
# ::edge	need-01	ARG1	parent	0.1	0.1.1	
# ::edge	or	op1	together	0.0.0	0.0	
# ::edge	parent	mod	both	0.1.1	0.1.1.0	
(b / believe-01 
      :ARG0 (t2 / together 
            :op-of (o / or)) 
      :ARG1 (n / need-01 
            :ARG0 (c / child 
                  :mod (e / every)) 
            :ARG1 (p / parent 
                  :mod (b2 / both))) 
      :ARG6 (i / i))

# ::snt But he thinks if he cant have me no one can.
# ::tok But he thinks if he cant have me no one can .
# ::alignments 8-9|0.0.1.1 0-1|0 2-3|0.0 10-11|0.0.1.0 6-7|0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:25.809
# ::node	0	contrast-01	0-1
# ::node	0.0	think-01	2-3
# ::node	0.0.0	he	1-2
# ::node	0.0.1	have-03	6-7
# ::node	0.0.1.0	possible	10-11
# ::node	0.0.1.1	-	8-9
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	think-01	0	0.0	
# ::edge	have-03	ARG1	possible	0.0.1	0.0.1.0	
# ::edge	have-03	ARG6	-	0.0.1	0.0.1.1	
# ::edge	think-01	ARG0	he	0.0	0.0.0	
# ::edge	think-01	ARG1	have-03	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (t / think-01 
            :ARG0 (h / he) 
            :ARG1 (h3 / have-03 
                  :ARG1 (p / possible) 
                  :ARG6 (- / -))))

# ::snt What do I do to move on with my life.
# ::tok What do I do to move on with my life .
# ::alignments 1-2|0.1 5-6|0.0 9-10|0.0.0 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:25.831
# ::node	0	i	2-3
# ::node	0.0	move-01	5-6
# ::node	0.0.0	life	9-10
# ::node	0.1	do-02	1-2
# ::root	0	i
(i / i 
      :ARG0-of (m / move-01 
            :ARG1 (l / life)) 
      :ARG1-of (d / do-02))

# ::snt Your ex is threatening you using your son... bad, bad, bad.
# ::tok Your ex is threatening you using your son ... bad , bad , bad .
# ::alignments 9-10|0.1.2 3-4|0 5-6|0.1 7-8|0.1.1 4-5|0.1.0 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:26.002
# ::node	0	threaten-01	3-4
# ::node	0.0	ex	1-2
# ::node	0.1	use-01	5-6
# ::node	0.1.0	you	4-5
# ::node	0.1.1	son	7-8
# ::node	0.1.2	bad	9-10
# ::root	0	threaten-01
# ::edge	threaten-01	ARG0	ex	0	0.0	
# ::edge	threaten-01	ARG1	use-01	0	0.1	
# ::edge	use-01	ARG0	you	0.1	0.1.0	
# ::edge	use-01	ARG1	son	0.1	0.1.1	
# ::edge	use-01	ARG6	bad	0.1	0.1.2	
(t / threaten-01 
      :ARG0 (e / ex) 
      :ARG1 (u / use-01 
            :ARG0 (y / you) 
            :ARG1 (s / son) 
            :ARG6 (b / bad)))

# ::snt You can't give in to that or it will just escalate.
# ::tok You ca n't give in to that or it will just escalate .
# ::alignments 3-4|0 6-7|0.1 0-1|0.0 11-12|0.0.0 10-11|0.0.0.0.0 8-9|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:26.055
# ::node	0	give-09	3-4
# ::node	0.0	you	0-1
# ::node	0.0.0	escalate-01	11-12
# ::node	0.0.0.0	it	8-9
# ::node	0.0.0.0.0	just	10-11
# ::node	0.1	that	6-7
# ::root	0	give-09
# ::edge	escalate-01	ARG0	it	0.0.0	0.0.0.0	
# ::edge	escalate-01	ARG1	you	0.0.0	0.0	
# ::edge	give-09	ARG0	you	0	0.0	
# ::edge	give-09	ARG1	that	0	0.1	
# ::edge	just	domain	it	0.0.0.0.0	0.0.0.0	
(g2 / give-09 
      :ARG0 (y / you 
            :ARG1-of (e / escalate-01 
                  :ARG0 (i / it 
                        :domain-of (j / just)))) 
      :ARG1 (t / that))

# ::snt You have a right to live your own life and be happy, so don't cave to his threats.
# ::tok You have a right to live your own life and be happy , so do n't cave to his threats .
# ::alignments 9-10|0 11-12|0.1 5-6|0.0 8-9|0.0.0 0-1|0.1.0.0.0 16-17|0.1.0 19-20|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:26.250
# ::node	0	and	9-10
# ::node	0.0	live-01	5-6
# ::node	0.0.0	life	8-9
# ::node	0.1	happy	11-12
# ::node	0.1.0	cave-00	16-17
# ::node	0.1.0.0	threaten-01	19-20
# ::node	0.1.0.0.0	you	0-1
# ::root	0	and
# ::edge	and	op1	live-01	0	0.0	
# ::edge	and	op2	happy	0	0.1	
# ::edge	cave-00	ARG1	happy	0.1.0	0.1	
# ::edge	cave-00	ARG2	threaten-01	0.1.0	0.1.0.0	
# ::edge	live-01	ARG1	life	0.0	0.0.0	
# ::edge	threaten-01	ARG1	you	0.1.0.0	0.1.0.0.0	
(a / and 
      :op1 (l / live-01 
            :ARG1 (l2 / life)) 
      :op2 (h2 / happy 
            :ARG1-of (c2 / cave-00 
                  :ARG2 (t / threaten-01 
                        :ARG1 (y / you)))))

# ::snt If he really loves his son, he'll see him regardless, but this is just a typical control method that people like him use.
# ::tok If he really loves his son , he 'll see him regardless , but this is just a typical control method that people like him use .
# ::alignments 13-14|0 20-21|0.1 14-15|0.1.2 25-26|0.1.1 16-17|0.1.2.0 18-19|0.1.0.0 19-20|0.1.0 9-10|0.0 3-4|0.0.0 5-6|0.0.0.1 11-12|0.0.1 1-2|0.0.0.0 2-3|0.0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:26.597
# ::node	0	contrast-01	13-14
# ::node	0.0	see-01	9-10
# ::node	0.0.0	love-01	3-4
# ::node	0.0.0.0	he	1-2
# ::node	0.0.0.1	son	5-6
# ::node	0.0.0.2	real	2-3
# ::node	0.0.1	regardless	11-12
# ::node	0.1	method	20-21
# ::node	0.1.0	control-01	19-20
# ::node	0.1.0.0	typical	18-19
# ::node	0.1.1	use-01	25-26
# ::node	0.1.2	this	14-15
# ::node	0.1.2.0	just	16-17
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	see-01	0	0.0	
# ::edge	contrast-01	ARG2	method	0	0.1	
# ::edge	control-01	ARG0	method	0.1.0	0.1	
# ::edge	control-01	ARG1	typical	0.1.0	0.1.0.0	
# ::edge	love-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	love-01	ARG1	son	0.0.0	0.0.0.1	
# ::edge	love-01	manner	real	0.0.0	0.0.0.2	
# ::edge	see-01	ARG1	love-01	0.0	0.0.0	
# ::edge	see-01	ARG6	regardless	0.0	0.0.1	
# ::edge	this	mod	method	0.1.2	0.1	
# ::edge	this	time	just	0.1.2	0.1.2.0	
# ::edge	use-01	ARG1	method	0.1.1	0.1	
(c / contrast-01 
      :ARG1 (s / see-01 
            :ARG1 (l / love-01 
                  :ARG0 (h / he) 
                  :ARG1 (s2 / son) 
                  :manner (r2 / real)) 
            :ARG6 (r / regardless)) 
      :ARG2 (m / method 
            :ARG0-of (c2 / control-01 
                  :ARG1 (t / typical)) 
            :ARG1-of (u / use-01) 
            :mod-of (t2 / this 
                  :time (j / just))))

# ::snt Others say things like, "I'm going to kill myself if you leave me"... get it?
# ::tok Others say things like , " I 'm going to kill myself if you leave me " ... get it ?
# ::alignments 1-2|0 2-3|0.1 10-11|0.0.0 14-15|0.0.0.1 13-14|0.0.0.1.0 6-7|0.0.0.0 0-1|0.0+0.0.1 18-19|0.0.0.1.1 19-20|0.0.0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.056
# ::node	0	say-01	1-2
# ::node	0.0	person	0-1
# ::node	0.0.0	kill-01	10-11
# ::node	0.0.0.0	i	6-7
# ::node	0.0.0.1	leave-01	14-15
# ::node	0.0.0.1.0	you	13-14
# ::node	0.0.0.1.1	get-12	18-19
# ::node	0.0.0.1.1.0	it	19-20
# ::node	0.0.1	other	0-1
# ::node	0.1	thing	2-3
# ::root	0	say-01
# ::edge	get-12	ARG1	it	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	kill-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	kill-01	ARG1	person	0.0.0	0.0	
# ::edge	kill-01	time	leave-01	0.0.0	0.0.0.1	
# ::edge	leave-01	ARG0	you	0.0.0.1	0.0.0.1.0	
# ::edge	leave-01	ARG1	get-12	0.0.0.1	0.0.0.1.1	
# ::edge	person	mod	other	0.0	0.0.1	
# ::edge	say-01	ARG0	person	0	0.0	
# ::edge	say-01	ARG1	thing	0	0.1	
(s / say-01 
      :ARG0 (p / person 
            :ARG1-of (k / kill-01 
                  :ARG0 (i2 / i) 
                  :time (l / leave-01 
                        :ARG0 (y2 / you) 
                        :ARG1 (g / get-12 
                              :ARG1 (i / it)))) 
            :mod (o / other)) 
      :ARG1 (t / thing))

# ::snt Date.
# ::tok Date .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.060
# ::node	0	date-02	0-1
# ::root	0	date-02
(d / date-02)

# ::snt Meet all kinds of people.
# ::tok Meet all kinds of people .
# ::alignments 0-1|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.071
# ::node	0	meet-03	0-1
# ::node	0.0	kind	2-3
# ::node	0.0.0	all	1-2
# ::root	0	meet-03
# ::edge	kind	quant	all	0.0	0.0.0	
# ::edge	meet-03	ARG1	kind	0	0.0	
(m / meet-03 
      :ARG1 (k / kind 
            :quant (a / all)))

# ::snt Do what you want.
# ::tok Do what you want .
# ::alignments 0-1|0 3-4|0.0+0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.084
# ::node	0	do-02	0-1
# ::node	0.0	thing	3-4
# ::node	0.0.0	want-01	3-4
# ::node	0.0.0.0	you	2-3
# ::root	0	do-02
# ::edge	do-02	ARG1	thing	0	0.0	
# ::edge	want-01	ARG0	you	0.0.0	0.0.0.0	
# ::edge	want-01	ARG1	thing	0.0.0	0.0	
(d / do-02 
      :ARG1 (t / thing 
            :ARG1-of (w / want-01 
                  :ARG0 (y / you))))

# ::snt If the price is, he voluntarily walks out of both of your lives, you're probably better off without him.
# ::tok If the price is , he voluntarily walks out of both of your lives , you 're probably better off without him .
# ::alignments 18-19|0 5-6|0.0.0.0 2-3|0.0 7-8|0.0.0 8-9|0.0.0.2 13-14|0.0.0.3.0 15-16|0.1.0 10-11|0.0.0.3 6-7|0.0.0.1 17-18|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.454
# ::node	0	good	18-19
# ::node	0.0	price-01	2-3
# ::node	0.0.0	walk-01	7-8
# ::node	0.0.0.0	he	5-6
# ::node	0.0.0.1	volunteer-01	6-7
# ::node	0.0.0.2	out	8-9
# ::node	0.0.0.3	both	10-11
# ::node	0.0.0.3.0	life	13-14
# ::node	0.1	probable	17-18
# ::node	0.1.0	you	15-16
# ::root	0	good
# ::edge	good	mod	probable	0	0.1	
# ::edge	life	mod	both	0.0.0.3.0	0.0.0.3	
# ::edge	price-01	ARG1	good	0.0	0	
# ::edge	probable	domain	you	0.1	0.1.0	
# ::edge	volunteer-01	ARG1	walk-01	0.0.0.1	0.0.0	
# ::edge	walk-01	ARG0	he	0.0.0	0.0.0.0	
# ::edge	walk-01	ARG1	price-01	0.0.0	0.0	
# ::edge	walk-01	ARG5	out	0.0.0	0.0.0.2	
# ::edge	walk-01	ARG6	both	0.0.0	0.0.0.3	
(g / good 
      :ARG1-of (p2 / price-01 
            :ARG1-of (w / walk-01 
                  :ARG0 (h2 / he) 
                  :ARG1-of (v / volunteer-01) 
                  :ARG5 (o / out) 
                  :ARG6 (b / both 
                        :mod-of (l / life)))) 
      :mod (p / probable 
            :domain (y2 / you)))

# ::snt I'd agree - one other thing it is none of his business whether you date or not.
# ::tok I 'd agree - one other thing it is none of his business whether you date or not .
# ::alignments 2-3|0 0-1|0.0 6-7|0.1 12-13|0.1.0.1 16-17|0.1.0.2 15-16|0.1.0 14-15|0.1.0.0 5-6|0.1.1 4-5|0.1.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.692
# ::node	0	agree-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	thing	6-7
# ::node	0.1.0	date-02	15-16
# ::node	0.1.0.0	you	14-15
# ::node	0.1.0.1	business	12-13
# ::node	0.1.0.2	or	16-17
# ::node	0.1.1	other	5-6
# ::node	0.1.2	1	4-5
# ::root	0	agree-01
# ::edge	agree-01	ARG0	i	0	0.0	
# ::edge	agree-01	ARG1	thing	0	0.1	
# ::edge	date-02	ARG0	you	0.1.0	0.1.0.0	
# ::edge	date-02	ARG1	thing	0.1.0	0.1	
# ::edge	date-02	ARG6	business	0.1.0	0.1.0.1	
# ::edge	or	op1	date-02	0.1.0.2	0.1.0	
# ::edge	thing	mod	other	0.1	0.1.1	
# ::edge	thing	quant	1	0.1	0.1.2	
(a2 / agree-01 
      :ARG0 (i / i) 
      :ARG1 (t / thing 
            :ARG1-of (d2 / date-02 
                  :ARG0 (y / you) 
                  :ARG6 (b / business) 
                  :op-of (o3 / or)) 
            :mod (o / other) 
            :quant 1))

# ::snt I wouldn't tell him.
# ::tok I would n't tell him .
# ::alignments 3-4|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.700
# ::node	0	tell-01	3-4
# ::node	0.0	i	0-1
# ::root	0	tell-01
# ::edge	tell-01	ARG0	i	0	0.0	
(t / tell-01 
      :ARG0 (i / i))

# ::snt Not because of his threat - but because your personal life is none of his business.
# ::tok Not because of his threat - but because your personal life is none of his business .
# ::alignments 6-7|0 1-2|0.0.0 15-16|0.1.0.0 10-11|0.1.0 9-10|0.0.0.0 7-8|0.1 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.840
# ::node	0	contrast-01	6-7
# ::node	0.0	threaten-01	4-5
# ::node	0.0.0	cause-01	1-2
# ::node	0.0.0.0	personal	9-10
# ::node	0.1	cause-01	7-8
# ::node	0.1.0	life	10-11
# ::node	0.1.0.0	business	15-16
# ::root	0	contrast-01
# ::edge	business	poss	life	0.1.0.0	0.1.0	
# ::edge	cause-01	ARG1	life	0.1	0.1.0	
# ::edge	cause-01	ARG1	personal	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	threaten-01	0	0.0	
# ::edge	contrast-01	ARG6	cause-01	0	0.1	
# ::edge	threaten-01	ARG1	cause-01	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (t / threaten-01 
            :ARG1 (c3 / cause-01 
                  :ARG1 (p / personal))) 
      :ARG6 (c2 / cause-01 
            :ARG1 (l / life 
                  :poss-of (b / business))))

# ::snt Can you document his threats?
# ::tok Can you document his threats ?
# ::alignments 0-1|0 2-3|0.0 1-2|0.0.0 4-5|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.855
# ::node	0	possible	0-1
# ::node	0.0	document-01	2-3
# ::node	0.0.0	you	1-2
# ::node	0.0.1	threaten-01	4-5
# ::root	0	possible
# ::edge	document-01	ARG0	you	0.0	0.0.0	
# ::edge	document-01	ARG1	threaten-01	0.0	0.0.1	
# ::edge	possible	domain	document-01	0	0.0	
(p / possible 
      :domain (d / document-01 
            :ARG0 (y / you) 
            :ARG1 (t2 / threaten-01)))

# ::snt You really need to.
# ::tok You really need to .
# ::alignments 2-3|0 0-1|0.0 1-2|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:27.872
# ::node	0	need-01	2-3
# ::node	0.0	you	0-1
# ::node	0.1	real	1-2
# ::root	0	need-01
# ::edge	need-01	ARG0	you	0	0.0	
# ::edge	need-01	ARG1	real	0	0.1	
(n / need-01 
      :ARG0 (y / you) 
      :ARG1 (r / real))

# ::snt Quit taking his calls, make him leave voice mail.
# ::tok Quit taking his calls , make him leave voice mail .
# ::alignments 0-1|0.1 1-2|0.1.0.0 3-4|0.1.0 5-6|0 7-8|0.0 9-10|0.0.0 8-9|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.012
# ::node	0	make-02	5-6
# ::node	0.0	leave-02	7-8
# ::node	0.0.0	mail	9-10
# ::node	0.0.0.0	voice	8-9
# ::node	0.1	quit-01	0-1
# ::node	0.1.0	call-02	3-4
# ::node	0.1.0.0	take-01	1-2
# ::root	0	make-02
# ::edge	call-02	ARG1	quit-01	0.1.0	0.1	
# ::edge	leave-02	ARG1	mail	0.0	0.0.0	
# ::edge	mail	mod	voice	0.0.0	0.0.0.0	
# ::edge	make-02	ARG1	leave-02	0	0.0	
# ::edge	quit-01	ARG1	make-02	0.1	0	
# ::edge	take-01	ARG1	call-02	0.1.0.0	0.1.0	
(m / make-02 
      :ARG1 (l / leave-02 
            :ARG1 (m2 / mail 
                  :mod (v / voice))) 
      :ARG1-of (q / quit-01 
            :ARG1-of (c / call-02 
                  :ARG1-of (t / take-01))))

# ::snt Make him email or text you.
# ::tok Make him email or text you .
# ::alignments 0-1|0 3-4|0.0.0 4-5|0.0.0.0 2-3|0.0 5-6|0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.031
# ::node	0	make-02	0-1
# ::node	0.0	email-01	2-3
# ::node	0.0.0	or	3-4
# ::node	0.0.0.0	text-00	4-5
# ::node	0.0.0.0.0	you	5-6
# ::root	0	make-02
# ::edge	make-02	ARG1	email-01	0	0.0	
# ::edge	or	op1	email-01	0.0.0	0.0	
# ::edge	or	op2	text-00	0.0.0	0.0.0.0	
# ::edge	text-00	ARG1	you	0.0.0.0	0.0.0.0.0	
(m / make-02 
      :ARG1 (e / email-01 
            :op-of (o / or 
                  :op1 (t / text-00 
                        :ARG1 (y / you)))))

# ::snt Keep those records.
# ::tok Keep those records .
# ::alignments 0-1|0 2-3|0.0+0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.040
# ::node	0	keep-01	0-1
# ::node	0.0	thing	2-3
# ::node	0.0.0	record-01	2-3
# ::root	0	keep-01
# ::edge	keep-01	ARG1	thing	0	0.0	
# ::edge	record-01	ARG1	thing	0.0.0	0.0	
(k / keep-01 
      :ARG1 (t / thing 
            :ARG1-of (r / record-01)))

# ::snt Get a lawyer and get a divorce.
# ::tok Get a lawyer and get a divorce .
# ::alignments 3-4|0 6-7|0.0 0-1|0.1 2-3|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.086
# ::node	0	and	3-4
# ::node	0.0	divorce-01	6-7
# ::node	0.1	get-01	0-1
# ::node	0.1.0	lawyer	2-3
# ::root	0	and
# ::edge	and	op1	get-01	0	0.1	
# ::edge	divorce-01	ARG1	and	0.0	0	
# ::edge	get-01	ARG1	lawyer	0.1	0.1.0	
(a / and 
      :ARG1-of (d / divorce-01) 
      :op1 (g / get-01 
            :ARG1 (l / lawyer)))

# ::snt If you can't afford one, try legal aid.
# ::tok If you ca n't afford one , try legal aid .
# ::alignments 7-8|0 4-5|0.1 5-6|0.1.1 9-10|0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.191
# ::node	0	try-01	7-8
# ::node	0.0	aid-01	9-10
# ::node	0.1	afford-01	4-5
# ::node	0.1.0	you	1-2
# ::node	0.1.1	one	5-6
# ::root	0	try-01
# ::edge	afford-01	ARG0	you	0.1	0.1.0	
# ::edge	afford-01	ARG1	one	0.1	0.1.1	
# ::edge	try-01	ARG1	aid-01	0	0.0	
# ::edge	try-01	time	afford-01	0	0.1	
(t / try-01 
      :ARG1 (a / aid-01) 
      :time (a2 / afford-01 
            :ARG0 (y / you) 
            :ARG1 (o / one)))

# ::snt Tell your ex that all communication needs to go through the lawyer.
# ::tok Tell your ex that all communication needs to go through the lawyer .
# ::alignments 0-1|0 2-3|0.0 6-7|0.0.0.0.1 8-9|0.0.0.0 11-12|0.0.0.0.0 4-5|0.0.0.1 5-6|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.370
# ::node	0	tell-01	0-1
# ::node	0.0	ex	2-3
# ::node	0.0.0	communicate-01	5-6
# ::node	0.0.0.0	go-06	8-9
# ::node	0.0.0.0.0	lawyer	11-12
# ::node	0.0.0.0.1	need-01	6-7
# ::node	0.0.0.1	all	4-5
# ::root	0	tell-01
# ::edge	communicate-01	ARG1	ex	0.0.0	0.0	
# ::edge	communicate-01	ARG6	all	0.0.0	0.0.0.1	
# ::edge	go-06	ARG0	communicate-01	0.0.0.0	0.0.0	
# ::edge	go-06	ARG1	lawyer	0.0.0.0	0.0.0.0.0	
# ::edge	need-01	ARG1	go-06	0.0.0.0.1	0.0.0.0	
# ::edge	tell-01	ARG1	ex	0	0.0	
(t / tell-01 
      :ARG1 (e / ex 
            :ARG1-of (c / communicate-01 
                  :ARG0-of (g / go-06 
                        :ARG1 (l / lawyer) 
                        :ARG1-of (n / need-01)) 
                  :ARG6 (a / all))))

# ::snt The bus drivers want exact change, the till people want exact change, the people who deliver your food want exact change...
# ::tok The bus drivers want exact change , the till people want exact change , the people who deliver your food want exact change ...
# ::alignments 3-4|0 5-6|0.1 4-5|0.1.0 1-2|0.0.0.0 8-9|0.2.1+0.2.1.0 17-18|0.2.0.0+0.2.0 19-20|0.2 2-3|0.0+0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:28.884
# ::node	0	want-01	3-4
# ::node	0.0	person	2-3
# ::node	0.0.0	drive-01	2-3
# ::node	0.0.0.0	bus	1-2
# ::node	0.1	change	5-6
# ::node	0.1.0	exact	4-5
# ::node	0.2	food	19-20
# ::node	0.2.0	deliver-01	17-18
# ::node	0.2.0.0	person	17-18
# ::node	0.2.1	person	8-9
# ::node	0.2.1.0	till	8-9
# ::root	0	want-01
# ::edge	change	mod	exact	0.1	0.1.0	
# ::edge	deliver-01	ARG0	person	0.2.0	0.2.0.0	
# ::edge	deliver-01	ARG1	food	0.2.0	0.2	
# ::edge	drive-01	ARG0	person	0.0.0	0.0	
# ::edge	drive-01	ARG1	bus	0.0.0	0.0.0.0	
# ::edge	food	mod	person	0.2	0.2.1	
# ::edge	food	op1	want-01	0.2	0	
# ::edge	person	location	till	0.2.1	0.2.1.0	
# ::edge	want-01	ARG0	person	0	0.0	
# ::edge	want-01	ARG1	change	0	0.1	
(w / want-01 
      :ARG0 (p / person 
            :ARG0-of (d / drive-01 
                  :ARG1 (b / bus))) 
      :ARG1 (c / change 
            :mod (e / exact)) 
      :op-of (f / food 
            :ARG1-of (d2 / deliver-01 
                  :ARG0 (p3 / person)) 
            :mod (p2 / person 
                  :location (t / till))))

# ::snt Do they not realise that you don't get piles of change from the bank,
# ::tok Do they not realise that you do n't get piles of change from the bank ,
# ::alignments 1-2|0.1 8-9|0.0 14-15|0.0.1 9-10|0.0.0 11-12|0.0.0.0 5-6|0.0.2 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.002
# ::node	0	realize-01	3-4
# ::node	0.0	get-01	8-9
# ::node	0.0.0	pile	9-10
# ::node	0.0.0.0	change	11-12
# ::node	0.0.1	bank	14-15
# ::node	0.0.2	you	5-6
# ::node	0.1	they	1-2
# ::root	0	realize-01
# ::edge	get-01	ARG1	pile	0.0	0.0.0	
# ::edge	get-01	ARG2	bank	0.0	0.0.1	
# ::edge	get-01	ARG6	you	0.0	0.0.2	
# ::edge	pile	location	change	0.0.0	0.0.0.0	
# ::edge	realize-01	ARG1	get-01	0	0.0	
# ::edge	realize-01	ARG6	they	0	0.1	
(r / realize-01 
      :ARG1 (g / get-01 
            :ARG1 (p / pile 
                  :location (c / change)) 
            :ARG2 (b / bank) 
            :ARG6 (y / you)) 
      :ARG6 (t / they))

# ::snt someone somewhere is going to have to take the notes?
# ::tok someone somewhere is going to have to take the notes ?
# ::alignments 7-8|0.0.0 1-2|0 9-10|0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.055
# ::node	0	somewhere	1-2
# ::node	0.0	someone	0-1
# ::node	0.0.0	take-01	7-8
# ::node	0.0.0.0	note	9-10
# ::root	0	somewhere
(s2 / somewhere 
      :location-of (s / someone 
            :ARG0-of (t / take-01 
                  :ARG1 (n / note))))

# ::snt People are getting lazy.
# ::tok People are getting lazy .
# ::alignments 2-3|0.0 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.062
# ::node	0	lazy	3-4
# ::node	0.0	get-03	2-3
# ::root	0	lazy
(l / lazy 
      :ARG1-of (g / get-03))

# ::snt I do like to get as near as possible as i woudn't like to be couting coppers all day
# ::tok I do like to get as near as possible as i woud n't like to be couting coppers all day
# ::alignments 2-3|0.0 13-14|0.0.0 17-18|0.0.0.0 19-20|0.0.0.0.0.0 18-19|0.0.0.0.0 6-7|0.1 8-9|0 0-1|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.263
# ::node	0	possible	8-9
# ::node	0.0	like-01	2-3
# ::node	0.0.0	like-01	13-14
# ::node	0.0.0.0	copper	17-18
# ::node	0.0.0.0.0	all	18-19
# ::node	0.0.0.0.0.0	day	19-20
# ::node	0.0.1	i	0-1
# ::node	0.1	near-01	6-7
# ::root	0	possible
(p / possible 
      :ARG0-of (l / like-01 
            :ARG1 (l2 / like-01 
                  :ARG1 (c3 / copper 
                        :calendar-of (a / all 
                              :quant-of (d2 / day)))) 
            :ARG6 (i / i)) 
      :ARG1-of (n2 / near-01))

# ::snt take a £20 note on the bus, they just tell you to get on cos theyre lazy as hell
# ::tok take a GBP 20 note on the bus , they just tell you to get on cos theyre lazy as hell
# ::alignments 11-12|0 0-1|0.0.0.0.0.0.0.0 7-8|0.0.0.0 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 12-13|0.2 18-19|0.0.1.0 20-21|0.0.1 10-11|0.0 14-15|0.1 5-6|0.0.0.0.0 9-10|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.547
# ::node	0	tell-01	11-12
# ::node	0.0	just	10-11
# ::node	0.0.0	they	9-10
# ::node	0.0.0.0	bus	7-8
# ::node	0.0.0.0.0	on	5-6
# ::node	0.0.0.0.0.0	note	4-5
# ::node	0.0.0.0.0.0.0	20	3-4
# ::node	0.0.0.0.0.0.0.0	take-01	0-1
# ::node	0.0.1	hell	20-21
# ::node	0.0.1.0	lazy	18-19
# ::node	0.1	get-05	14-15
# ::node	0.2	you	12-13
# ::root	0	tell-01
# ::edge	bus	quant	on	0.0.0.0	0.0.0.0.0	
# ::edge	get-05	ARG1	tell-01	0.1	0	
# ::edge	hell	quant	just	0.0.1	0.0	
# ::edge	hell	quant	lazy	0.0.1	0.0.1.0	
# ::edge	just	quant	they	0.0	0.0.0	
# ::edge	note	quant	20	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	on	quant	note	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	take-01	ARG1	20	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	tell-01	ARG1	just	0	0.0	
# ::edge	they	quant	bus	0.0.0	0.0.0.0	
# ::edge	you	purpose	tell-01	0.2	0	
(t4 / tell-01 
      :ARG1 (j / just 
            :quant (t3 / they 
                  :quant (b / bus 
                        :quant (o / on 
                              :quant (n / note 
                                    :quant (2 / 20 
                                          :ARG1-of (t / take-01)))))) 
            :quant-of (h / hell 
                  :quant (l / lazy))) 
      :ARG1-of (g / get-05) 
      :purpose-of (y / you))

# ::snt its illegal to pay certain amounts in loads of coins. such as you can only pay something like 30pence in 1ps
# ::tok its illegal to pay certain amounts in loads of coins . such as you can only pay something like 30pence in 1ps
# ::alignments 1-2|0.0.0.1.0.1+0.0.0.1.0.1.1 3-4|0.0.0.1.0 14-15|0 16-17|0.0.0 15-16|0.0.0.2 17-18|0.0.0.0 13-14|0.0 9-10|0.0.0.1.0.1.0 7-8|0.0.0.1 5-6|0.0.0.1.0.0 4-5|0.0.0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.750
# ::node	0	possible	14-15
# ::node	0.0	you	13-14
# ::node	0.0.0	pay-01	16-17
# ::node	0.0.0.0	something	17-18
# ::node	0.0.0.1	load	7-8
# ::node	0.0.0.1.0	pay-01	3-4
# ::node	0.0.0.1.0.0	amount	5-6
# ::node	0.0.0.1.0.0.0	certain	4-5
# ::node	0.0.0.1.0.1	law	1-2
# ::node	0.0.0.1.0.1.0	coin	9-10
# ::node	0.0.0.1.0.1.1	-	1-2
# ::node	0.0.0.2	only	15-16
# ::root	0	possible
# ::edge	amount	mod	certain	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	coin	mod	law	0.0.0.1.0.1.0	0.0.0.1.0.1	
# ::edge	law	polarity	-	0.0.0.1.0.1	0.0.0.1.0.1.1	
# ::edge	pay-01	ARG0	load	0.0.0.1.0	0.0.0.1	
# ::edge	pay-01	ARG0	you	0.0.0	0.0	
# ::edge	pay-01	ARG1	amount	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	pay-01	ARG1	something	0.0.0	0.0.0.0	
# ::edge	pay-01	ARG3	load	0.0.0	0.0.0.1	
# ::edge	pay-01	ARG6	law	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	pay-01	ARG6	only	0.0.0	0.0.0.2	
# ::edge	possible	op1	you	0	0.0	
(p2 / possible 
      :op1 (y / you 
            :ARG0-of (p3 / pay-01 
                  :ARG1 (s / something) 
                  :ARG3 (l / load 
                        :ARG0-of (p / pay-01 
                              :ARG1 (a / amount 
                                    :mod (c / certain)) 
                              :ARG6 (l3 / law 
                                    :mod-of (c2 / coin) 
                                    :polarity -))) 
                  :ARG6 (o / only))))

# ::snt Hello I started university in September, didn't immediately gel with it obviously like most people.
# ::tok Hello I started university in September , did n't immediately gel with it obviously like most people .
# ::alignments 5-6|0.1.3+0.1.3.0 0-1|0.1.2 2-3|0.1 3-4|0.1.1 1-2|0.1.0 10-11|0 15-16|0.0+0.0.0 13-14|0.2 9-10|0.3 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:29.963
# ::node	0	gel-00	10-11
# ::node	0.0	person	15-16
# ::node	0.0.0	most	15-16
# ::node	0.1	start-01	2-3
# ::node	0.1.0	i	1-2
# ::node	0.1.1	university	3-4
# ::node	0.1.2	hello	0-1
# ::node	0.1.3	date-entity	5-6
# ::node	0.1.3.0	9	5-6
# ::node	0.2	obvious	13-14
# ::node	0.3	immediate	9-10
# ::root	0	gel-00
# ::edge	date-entity	month	9	0.1.3	0.1.3.0	
# ::edge	gel-00	ARG0	person	0	0.0	
# ::edge	gel-00	ARG1	start-01	0	0.1	
# ::edge	gel-00	ARG6	obvious	0	0.2	
# ::edge	gel-00	time	immediate	0	0.3	
# ::edge	person	mod	most	0.0	0.0.0	
# ::edge	start-01	ARG0	i	0.1	0.1.0	
# ::edge	start-01	ARG1	university	0.1	0.1.1	
# ::edge	start-01	ARG6	hello	0.1	0.1.2	
# ::edge	start-01	time	date-entity	0.1	0.1.3	
(g / gel-00 
      :ARG0 (p / person 
            :mod (m2 / most)) 
      :ARG1 (s / start-01 
            :ARG0 (i / i) 
            :ARG1 (u / university) 
            :ARG6 (h / hello) 
            :time (d / date-entity 
                  :month 9)) 
      :ARG6 (o / obvious) 
      :time (i2 / immediate))

# ::snt However, I knew it would take me some time to adjust, because I have always been very introverted, and shy and especially anxious and all the rest of it.
# ::tok However , I knew it would take me some time to adjust , because I have always been very introverted , and shy and especially anxious and all the rest of it .
# ::alignments 3-4|0.1.1.0 13-14|0.1 21-22|0.1.0 16-17|0.0.0.1 29-30|0.0.0.0.0 27-28|0.0.0.0.0.0 25-26|0.0.0.0.1.0 24-25|0.0.0.0.1 22-23|0.0.0.0 19-20|0.0.0 18-19|0.0 6-7|0.1.1 9-10|0.1.1.0.1.0 8-9|0.1.1.0.1.0.0 11-12|0.1.1.0.1 2-3|0.1.1.0.0 15-16|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:30.724
# ::node	0	have-concession-91	15-16
# ::node	0.0	very	18-19
# ::node	0.0.0	introvert	19-20
# ::node	0.0.0.0	shy-01	22-23
# ::node	0.0.0.0.0	rest	29-30
# ::node	0.0.0.0.0.0	all	27-28
# ::node	0.0.0.0.1	especially	24-25
# ::node	0.0.0.0.1.0	anxious	25-26
# ::node	0.0.0.1	always	16-17
# ::node	0.1	cause-01	13-14
# ::node	0.1.0	and	21-22
# ::node	0.1.1	take-10	6-7
# ::node	0.1.1.0	know-01	3-4
# ::node	0.1.1.0.0	i	2-3
# ::node	0.1.1.0.1	adjust-01	11-12
# ::node	0.1.1.0.1.0	time	9-10
# ::node	0.1.1.0.1.0.0	some	8-9
# ::root	0	have-concession-91
# ::edge	adjust-01	ARG1	time	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	anxious	degree	especially	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	cause-01	ARG0	and	0.1	0.1.0	
# ::edge	cause-01	ARG1	have-concession-91	0.1	0	
# ::edge	have-concession-91	ARG1	very	0	0.0	
# ::edge	introvert	degree	very	0.0.0	0.0	
# ::edge	introvert	mod	always	0.0.0	0.0.0.1	
# ::edge	know-01	ARG0	i	0.1.1.0	0.1.1.0.0	
# ::edge	know-01	ARG1	take-10	0.1.1.0	0.1.1	
# ::edge	know-01	ARG6	adjust-01	0.1.1.0	0.1.1.0.1	
# ::edge	rest	quant	all	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	shy-01	ARG0	rest	0.0.0.0	0.0.0.0.0	
# ::edge	shy-01	ARG1	introvert	0.0.0.0	0.0.0	
# ::edge	shy-01	ARG6	especially	0.0.0.0	0.0.0.0.1	
# ::edge	take-10	ARG1	cause-01	0.1.1	0.1	
# ::edge	time	quant	some	0.1.1.0.1.0	0.1.1.0.1.0.0	
(h / have-concession-91 
      :ARG1 (v / very 
            :degree-of (i2 / introvert 
                  :ARG1-of (s2 / shy-01 
                        :ARG0 (r / rest 
                              :quant (a5 / all)) 
                        :ARG6 (e / especially 
                              :degree-of (a4 / anxious))) 
                  :mod (a2 / always))) 
      :ARG1-of (c / cause-01 
            :ARG0 (a3 / and) 
            :ARG1-of (t / take-10 
                  :ARG1-of (k / know-01 
                        :ARG0 (i / i) 
                        :ARG6 (a / adjust-01 
                              :ARG1 (t2 / time 
                                    :quant (s / some)))))))

# ::snt The first night I was here, all my housemates and I went out and it was the hardest thing I have ever ever had to do.
# ::tok The first night I was here , all my housemates and I went out and it was the hardest thing I have ever ever had to do .
# ::alignments 10-11|0 18-19|0.1.0.1+0.1.0.1.0 19-20|0.1.0 26-27|0.1.0.0 22-23|0.1.0.0.0 12-13|0.1 2-3|0.1.1.0 3-4|0.1.1 5-6|0.1.1.1 14-15|0.1.2 9-10|0.0 7-8|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:31.024
# ::node	0	and	10-11
# ::node	0.0	housemate	9-10
# ::node	0.0.0	all	7-8
# ::node	0.1	go-17	12-13
# ::node	0.1.0	thing	19-20
# ::node	0.1.0.0	do-02	26-27
# ::node	0.1.0.0.0	ever	22-23
# ::node	0.1.0.1	hard	18-19
# ::node	0.1.0.1.0	most	18-19
# ::node	0.1.1	i	3-4
# ::node	0.1.1.0	night	2-3
# ::node	0.1.1.1	here	5-6
# ::node	0.1.2	and	14-15
# ::root	0	and
# ::edge	and	op1	go-17	0.1.2	0.1	
# ::edge	and	op1	housemate	0	0.0	
# ::edge	and	op2	go-17	0	0.1	
# ::edge	do-02	ARG0	ever	0.1.0.0	0.1.0.0.0	
# ::edge	do-02	ARG1	thing	0.1.0.0	0.1.0	
# ::edge	go-17	ARG0	thing	0.1	0.1.0	
# ::edge	go-17	ARG1	i	0.1	0.1.1	
# ::edge	hard	degree	most	0.1.0.1	0.1.0.1.0	
# ::edge	here	domain	i	0.1.1.1	0.1.1	
# ::edge	housemate	calendar	all	0.0	0.0.0	
# ::edge	i	calendar	night	0.1.1	0.1.1.0	
# ::edge	thing	mod	hard	0.1.0	0.1.0.1	
(a / and 
      :op1 (h2 / housemate 
            :calendar (a3 / all)) 
      :op2 (g / go-17 
            :ARG0 (t / thing 
                  :ARG1-of (d / do-02 
                        :ARG0 (e / ever)) 
                  :mod (h3 / hard 
                        :degree (m / most))) 
            :ARG1 (i / i 
                  :calendar (n / night) 
                  :domain-of (h / here)) 
            :op-of (a2 / and)))

# ::snt To go into the SU bar on my own, sober.
# ::tok To go into the SU bar on my own , sober .
# ::alignments 1-2|0 10-11|0.0 8-9|0.2 5-6|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:31.080
# ::node	0	go-06	1-2
# ::node	0.0	sober	10-11
# ::node	0.1	bar	5-6
# ::node	0.2	own	8-9
# ::root	0	go-06
# ::edge	go-06	ARG1	sober	0	0.0	
# ::edge	go-06	ARG2	bar	0	0.1	
# ::edge	go-06	ARG6	own	0	0.2	
(g / go-06 
      :ARG1 (s / sober) 
      :ARG2 (b / bar) 
      :ARG6 (o / own))

# ::snt Anyways more to the point; Here are the facts:
# ::tok Anyways more to the point ; Here are the facts :
# ::alignments 9-10|0.2 6-7|0.0 4-5|0 1-2|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:31.099
# ::node	0	point	4-5
# ::node	0.0	here	6-7
# ::node	0.1	more	1-2
# ::node	0.2	fact	9-10
# ::root	0	point
# ::edge	more	calendar	point	0.1	0	
# ::edge	point	calendar	here	0	0.0	
# ::edge	point	location	fact	0	0.2	
(p / point 
      :calendar (h / here) 
      :calendar-of (m / more) 
      :location (f / fact))

# ::snt - I am not enjoying university having been here 5months or so; I'm disillusioned by the course, not enjoying the projects set, and I don't like the course delivery as much.
# ::tok - I am not enjoying university having been here 5months or so ; I 'm disillusioned by the course , not enjoying the projects set , and I do n't like the course delivery as much .
# ::alignments 4-5|0 8-9|0.0 5-6|0.1 1-2|0.2 12-13|0.2.1.1 30-31|0.2.0 35-36|0.2.0.1 18-19|0.2.1.0 21-22|0.2.1.2 23-24|0.2.1.2.0.0 24-25|0.2.1.2.0 15-16|0.2.1 32-33|0.2.0.0.0 33-34|0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:32.055
# ::node	0	enjoy-01	4-5
# ::node	0.0	here	8-9
# ::node	0.1	university	5-6
# ::node	0.2	i	1-2
# ::node	0.2.0	like-01	30-31
# ::node	0.2.0.0	deliver-01	33-34
# ::node	0.2.0.0.0	course	32-33
# ::node	0.2.0.1	much	35-36
# ::node	0.2.1	disillusion-01	15-16
# ::node	0.2.1.0	course	18-19
# ::node	0.2.1.1	and	12-13
# ::node	0.2.1.2	enjoy-01	21-22
# ::node	0.2.1.2.0	set-02	24-25
# ::node	0.2.1.2.0.0	project	23-24
# ::root	0	enjoy-01
# ::edge	deliver-01	ARG1	course	0.2.0.0	0.2.0.0.0	
# ::edge	disillusion-01	ARG0	course	0.2.1	0.2.1.0	
# ::edge	disillusion-01	ARG1	i	0.2.1	0.2	
# ::edge	disillusion-01	ARG6	and	0.2.1	0.2.1.1	
# ::edge	disillusion-01	purpose	enjoy-01	0.2.1	0.2.1.2	
# ::edge	enjoy-01	ARG0	here	0	0.0	
# ::edge	enjoy-01	ARG1	set-02	0.2.1.2	0.2.1.2.0	
# ::edge	enjoy-01	ARG1	university	0	0.1	
# ::edge	enjoy-01	ARG6	i	0	0.2	
# ::edge	like-01	ARG0	i	0.2.0	0.2	
# ::edge	like-01	ARG1	deliver-01	0.2.0	0.2.0.0	
# ::edge	like-01	ARG6	much	0.2.0	0.2.0.1	
# ::edge	set-02	ARG1	project	0.2.1.2.0	0.2.1.2.0.0	
(e / enjoy-01 
      :ARG0 (h / here) 
      :ARG1 (u / university) 
      :ARG6 (i / i 
            :ARG0-of (l / like-01 
                  :ARG1 (d2 / deliver-01 
                        :ARG1 (c / course)) 
                  :ARG6 (m4 / much)) 
            :ARG1-of (d / disillusion-01 
                  :ARG0 (c2 / course) 
                  :ARG6 (a / and) 
                  :purpose (e2 / enjoy-01 
                        :ARG1 (s / set-02 
                              :ARG1 (p2 / project))))))

# ::snt The University made out it was much better than it seems.
# ::tok The University made out it was much better than it seems .
# ::alignments 2-3|0 7-8|0.1 10-11|0.1.0 4-5|0.2 6-7|0.1.0.0 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:32.145
# ::node	0	make-12	2-3
# ::node	0.0	university	1-2
# ::node	0.1	good	7-8
# ::node	0.1.0	seem-01	10-11
# ::node	0.1.0.0	much	6-7
# ::node	0.2	it	4-5
# ::root	0	make-12
# ::edge	good	compared-to	seem-01	0.1	0.1.0	
# ::edge	make-12	ARG0	university	0	0.0	
# ::edge	make-12	ARG1	good	0	0.1	
# ::edge	make-12	ARG6	it	0	0.2	
# ::edge	seem-01	ARG1	much	0.1.0	0.1.0.0	
(m / make-12 
      :ARG0 (u / university) 
      :ARG1 (g / good 
            :compared-to (s / seem-01 
                  :ARG1 (m3 / much))) 
      :ARG6 (i / it))

# ::snt - I had a bad start to the first term; student finance was delayed, adding to my stress levels, I was so worried I was unable to progress with work, conclusively it all piled up.
# ::tok - I had a bad start to the first term ; student finance was delayed , adding to my stress levels , I was so worried I was unable to progress with work , conclusively it all piled up .
# ::alignments 5-6|0.1.0.1.1 4-5|0.1.0.1.1.2 9-10|0.1.0.1.1.1 1-2|0.1.0.1.1.0 10-11|0.1.0.1 37-38|0.0.0 36-37|0.0 25-26|0.1.0.1.0 30-31|0.1.1 32-33|0.1 24-25|0.1.0.1.0.0 14-15|0.1.0.0.0.0 16-17|0.1.0.0.0.0.0 20-21|0.1.0.0.0.0.0.0.0 19-20|0.1.0.0.0.0.0.0 12-13|0.1.0.0.0 34-35|0 11-12|0.1.0+0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:33.442
# ::node	0	conclude-01	34-35
# ::node	0.0	all	36-37
# ::node	0.0.0	pile-01	37-38
# ::node	0.1	work-01	32-33
# ::node	0.1.0	person	11-12
# ::node	0.1.0.0	study-01	11-12
# ::node	0.1.0.0.0	finance	12-13
# ::node	0.1.0.0.0.0	delay-01	14-15
# ::node	0.1.0.0.0.0.0	add-02	16-17
# ::node	0.1.0.0.0.0.0.0	stress	19-20
# ::node	0.1.0.0.0.0.0.0.0	level	20-21
# ::node	0.1.0.1	and	10-11
# ::node	0.1.0.1.0	worry-01	25-26
# ::node	0.1.0.1.0.0	so	24-25
# ::node	0.1.0.1.1	start-01	5-6
# ::node	0.1.0.1.1.0	i	1-2
# ::node	0.1.0.1.1.1	term	9-10
# ::node	0.1.0.1.1.2	bad	4-5
# ::node	0.1.1	progress-01	30-31
# ::root	0	conclude-01
# ::edge	add-02	ARG1	delay-01	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	add-02	ARG2	stress	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	and	op1	person	0.1.0.1	0.1.0	
# ::edge	conclude-01	ARG1	all	0	0.0	
# ::edge	delay-01	ARG1	finance	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	level	mod	stress	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	pile-01	ARG1	all	0.0.0	0.0	
# ::edge	progress-01	ARG1	work-01	0.1.1	0.1	
# ::edge	start-01	ARG0	i	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	start-01	ARG2	term	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	start-01	ARG6	and	0.1.0.1.1	0.1.0.1	
# ::edge	start-01	mod	bad	0.1.0.1.1	0.1.0.1.1.2	
# ::edge	study-01	ARG0	person	0.1.0.0	0.1.0	
# ::edge	study-01	ARG1	finance	0.1.0.0	0.1.0.0.0	
# ::edge	work-01	ARG0	person	0.1	0.1.0	
# ::edge	work-01	ARG1	conclude-01	0.1	0	
# ::edge	worry-01	ARG1	and	0.1.0.1.0	0.1.0.1	
# ::edge	worry-01	ARG6	so	0.1.0.1.0	0.1.0.1.0.0	
(c5 / conclude-01 
      :ARG1 (a2 / all 
            :ARG1-of (p2 / pile-01)) 
      :ARG1-of (w2 / work-01 
            :ARG0 (p4 / person 
                  :ARG0-of (s / study-01 
                        :ARG1 (f2 / finance 
                              :ARG1-of (d / delay-01 
                                    :ARG1-of (a3 / add-02 
                                          :ARG2 (s3 / stress 
                                                :mod-of (l / level)))))) 
                  :op-of (a / and 
                        :ARG1-of (w / worry-01 
                              :ARG6 (s4 / so)) 
                        :ARG6-of (s2 / start-01 
                              :ARG0 (i / i) 
                              :ARG2 (t / term) 
                              :mod (b / bad)))) 
            :ARG1-of (p3 / progress-01)))

# ::snt - I was assigned a counselor through the university; had seen her for about 5-6weeks (block sessions), if I'm honest it didn't really work; because I was never open with her.
# ::tok - I was assigned a counselor through the university ; had seen her for about 5-6weeks ( block sessions ) , if I 'm honest it did n't really work ; because I was never open with her .
# ::alignments 9-10|0.1.0.0 29-30|0.0.0 24-25|0.0 21-22|0 35-36|0.0.0.0 11-12|0.1.0 18-19|0.1 17-18|0.1.1 14-15|0.0.0.0.0 3-4|0.1.0.0.0.0.0 8-9|0.1.0.0.1 1-2|0.1.0.0.0.0.0.0 28-29|0.0.0.1 5-6|0.1.0.0.0.0+0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:34.394
# ::node	0	cause-01	21-22
# ::node	0.0	honest	24-25
# ::node	0.0.0	work-02	29-30
# ::node	0.0.0.0	open-03	35-36
# ::node	0.0.0.0.0	about	14-15
# ::node	0.0.0.1	real	28-29
# ::node	0.1	session	18-19
# ::node	0.1.0	see-01	11-12
# ::node	0.1.0.0	and	9-10
# ::node	0.1.0.0.0	counsel-01	5-6
# ::node	0.1.0.0.0.0	person	5-6
# ::node	0.1.0.0.0.0.0	assign-01	3-4
# ::node	0.1.0.0.0.0.0.0	i	1-2
# ::node	0.1.0.0.1	university	8-9
# ::node	0.1.1	block	17-18
# ::root	0	cause-01
# ::edge	and	op1	university	0.1.0.0	0.1.0.0.1	
# ::edge	assign-01	ARG1	i	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	assign-01	ARG2	person	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	cause-01	ARG0	honest	0	0.0	
# ::edge	cause-01	ARG1	session	0	0.1	
# ::edge	counsel-01	ARG0	person	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	counsel-01	ARG1	and	0.1.0.0.0	0.1.0.0	
# ::edge	honest	domain	work-02	0.0	0.0.0	
# ::edge	open-03	ARG1	about	0.0.0.0	0.0.0.0.0	
# ::edge	see-01	ARG1	and	0.1.0	0.1.0.0	
# ::edge	see-01	ARG2	session	0.1.0	0.1	
# ::edge	session	mod	block	0.1	0.1.1	
# ::edge	work-02	ARG1	open-03	0.0.0	0.0.0.0	
# ::edge	work-02	manner	real	0.0.0	0.0.0.1	
(c2 / cause-01 
      :ARG0 (h / honest 
            :domain (w3 / work-02 
                  :ARG1 (o / open-03 
                        :ARG1 (a3 / about)) 
                  :manner (r / real))) 
      :ARG1 (s2 / session 
            :ARG2-of (s / see-01 
                  :ARG1 (a / and 
                        :ARG1-of (c / counsel-01 
                              :ARG0 (p / person 
                                    :ARG2-of (a2 / assign-01 
                                          :ARG1 (i / i)))) 
                        :op1 (u / university))) 
            :mod (b / block)))

# ::snt Only half-halfheartedly.
# ::tok Only half - halfheartedly .
# ::alignments 0-1|0.0 1-2|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:34.400
# ::node	0	half-half	1-2
# ::node	0.0	only	0-1
# ::root	0	half-half
# ::edge	half-half	mod	only	0	0.0	
(h2 / half-half 
      :mod (o / only))

# ::snt - Now the work-load is up to my neck, I have major deadlines to hit, I am depressed, the anxiety is resulting in me feeling miserable all the time.
# ::tok - Now the work - load is up to my neck , I have major deadlines to hit , I am depressed , the anxiety is resulting in me feeling miserable all the time .
# ::alignments 5-6|0.1.0.0 10-11|0.2.0 12-13|0.1.0.0.0 1-2|0.2.1 3-4|0.1.0 17-18|0.1.0.0.0.0.0.0 15-16|0.1.0.0.0.0.0 14-15|0.1.0.0.0.0 21-22|0.2 26-27|0 29-30|0.1 33-34|0.1.3 31-32|0.1.2 30-31|0.1.1 24-25|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:34.922
# ::node	0	result-01	26-27
# ::node	0.0	anxiety	24-25
# ::node	0.1	feel-01	29-30
# ::node	0.1.0	work	3-4
# ::node	0.1.0.0	load-01	5-6
# ::node	0.1.0.0.0	i	12-13
# ::node	0.1.0.0.0.0	major	14-15
# ::node	0.1.0.0.0.0.0	deadline	15-16
# ::node	0.1.0.0.0.0.0.0	hit-02	17-18
# ::node	0.1.1	miserable	30-31
# ::node	0.1.2	all	31-32
# ::node	0.1.3	time	33-34
# ::node	0.2	depress-01	21-22
# ::node	0.2.0	neck	10-11
# ::node	0.2.1	now	1-2
# ::root	0	result-01
# ::edge	deadline	mod	major	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	depress-01	ARG0	neck	0.2	0.2.0	
# ::edge	depress-01	ARG1	now	0.2	0.2.1	
# ::edge	feel-01	ARG0	work	0.1	0.1.0	
# ::edge	feel-01	ARG1	miserable	0.1	0.1.1	
# ::edge	feel-01	ARG6	all	0.1	0.1.2	
# ::edge	feel-01	time	time	0.1	0.1.3	
# ::edge	hit-02	ARG1	deadline	0.1.0.0.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	load-01	ARG0	i	0.1.0.0	0.1.0.0.0	
# ::edge	load-01	ARG1	work	0.1.0.0	0.1.0	
# ::edge	major	domain	i	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	result-01	ARG1	anxiety	0	0.0	
# ::edge	result-01	ARG2	feel-01	0	0.1	
# ::edge	result-01	ARG6	depress-01	0	0.2	
(r / result-01 
      :ARG1 (a2 / anxiety) 
      :ARG2 (f / feel-01 
            :ARG0 (w / work 
                  :ARG1-of (l / load-01 
                        :ARG0 (i / i 
                              :domain-of (m / major 
                                    :mod-of (d2 / deadline 
                                          :ARG1-of (h / hit-02)))))) 
            :ARG1 (m2 / miserable) 
            :ARG6 (a3 / all) 
            :time (t / time)) 
      :ARG6 (d / depress-01 
            :ARG0 (n2 / neck) 
            :ARG1 (n / now)))

# ::snt In no longer have a counselor because you can only have them for so many sessions at a time, and I doubt it will help much this time, if it hasn't already.
# ::tok In no longer have a counselor because you can only have them for so many sessions at a time , and I doubt it will help much this time , if it has n't already .
# ::alignments 1-2|0.0.1 20-21|0 22-23|0.2 25-26|0.2.1 34-35|0.0.0.0.0.1 18-19|0.1 27-28|0.2.1.0.0 26-27|0.2.1.1 3-4|0.0 6-7|0.0.0.0.0.2.0 8-9|0.0.0.0.0.2 10-11|0.0.0.0.0 9-10|0.0.0.0.0.2.0.0 15-16|0.0.0.0.0.3 28-29|0.2.1.0 7-8|0.0.0.0.0.0 21-22|0.2.0 5-6|0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:36.154
# ::node	0	and	20-21
# ::node	0.0	have-03	3-4
# ::node	0.0.0	person	5-6
# ::node	0.0.0.0	counsel-01	5-6
# ::node	0.0.0.0.0	have-03	10-11
# ::node	0.0.0.0.0.0	you	7-8
# ::node	0.0.0.0.0.1	already	34-35
# ::node	0.0.0.0.0.2	possible	8-9
# ::node	0.0.0.0.0.2.0	cause-01	6-7
# ::node	0.0.0.0.0.2.0.0	only	9-10
# ::node	0.0.0.0.0.3	session	15-16
# ::node	0.0.1	-	1-2
# ::node	0.1	time	18-19
# ::node	0.2	doubt-01	22-23
# ::node	0.2.0	i	21-22
# ::node	0.2.1	help-01	25-26
# ::node	0.2.1.0	time	28-29
# ::node	0.2.1.0.0	this	27-28
# ::node	0.2.1.1	much	26-27
# ::root	0	and
# ::edge	and	op1	have-03	0	0.0	
# ::edge	and	op2	time	0	0.1	
# ::edge	and	op3	doubt-01	0	0.2	
# ::edge	cause-01	ARG0	possible	0.0.0.0.0.2.0	0.0.0.0.0.2	
# ::edge	cause-01	ARG1	only	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	counsel-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	counsel-01	ARG1	have-03	0.0.0.0	0.0.0.0.0	
# ::edge	doubt-01	ARG0	i	0.2	0.2.0	
# ::edge	doubt-01	ARG1	help-01	0.2	0.2.1	
# ::edge	have-03	ARG0	you	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-03	ARG1	already	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	have-03	ARG1	person	0.0	0.0.0	
# ::edge	have-03	ARG6	-	0.0	0.0.1	
# ::edge	have-03	location	session	0.0.0.0.0	0.0.0.0.0.3	
# ::edge	help-01	ARG1	time	0.2.1	0.2.1.0	
# ::edge	help-01	ARG6	much	0.2.1	0.2.1.1	
# ::edge	possible	domain	have-03	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	time	mod	this	0.2.1.0	0.2.1.0.0	
(a / and 
      :op1 (h / have-03 
            :ARG1 (p / person 
                  :ARG0-of (c / counsel-01 
                        :ARG1 (h2 / have-03 
                              :ARG0 (y / you) 
                              :ARG1 (a2 / already) 
                              :domain-of (p2 / possible 
                                    :ARG0-of (c2 / cause-01 
                                          :ARG1 (o / only))) 
                              :location (s / session)))) 
            :ARG6 (- / -)) 
      :op2 (t2 / time) 
      :op3 (d / doubt-01 
            :ARG0 (i / i) 
            :ARG1 (h3 / help-01 
                  :ARG1 (t / time 
                        :mod (t3 / this)) 
                  :ARG6 (m2 / much))))

# ::snt - I lack motivation, don't feel comfortable with any of my lecturers, feel like I want to give in, but can't bring myself to it, because I will end up in a dead end job, and I aspired to 'be someone'.
# ::tok - I lack motivation , do n't feel comfortable with any of my lecturers , feel like I want to give in , but ca n't bring myself to it , because I will end up in a dead end job , and I aspired to ' be someone ' .
# ::alignments 42-43|0.2.1 23-24|0 26-27|0.2 20-21|0.2.1.1.0.0 31-32|0.2.0 34-35|0.2.0.0 40-41|0.2.1.2 39-40|0.2.1.2.0 44-45|0.1 48-49|0.1.0 7-8|0.2.1.0 18-19|0.2.1.1.0 15-16|0.2.1.1 8-9|0.2.1.0.0 2-3|0.0 3-4|0.0.1 1-2|0.0.0 13-14|0.2.0.0.0+0.2.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:37.186
# ::node	0	contrast-01	23-24
# ::node	0.0	lack-01	2-3
# ::node	0.0.0	i	1-2
# ::node	0.0.1	motivation	3-4
# ::node	0.1	aspire-01	44-45
# ::node	0.1.0	someone	48-49
# ::node	0.2	bring-05	26-27
# ::node	0.2.0	cause-01	31-32
# ::node	0.2.0.0	end-03	34-35
# ::node	0.2.0.0.0	person	13-14
# ::node	0.2.0.0.0.0	lecture-01	13-14
# ::node	0.2.1	and	42-43
# ::node	0.2.1.0	feel-01	7-8
# ::node	0.2.1.0.0	comfortable	8-9
# ::node	0.2.1.1	feel-01	15-16
# ::node	0.2.1.1.0	want-01	18-19
# ::node	0.2.1.1.0.0	give-09	20-21
# ::node	0.2.1.2	job	40-41
# ::node	0.2.1.2.0	end-02	39-40
# ::root	0	contrast-01
# ::edge	and	op1	feel-01	0.2.1	0.2.1.0	
# ::edge	and	op2	feel-01	0.2.1	0.2.1.1	
# ::edge	and	op3	bring-05	0.2.1	0.2	
# ::edge	and	op4	job	0.2.1	0.2.1.2	
# ::edge	aspire-01	ARG1	someone	0.1	0.1.0	
# ::edge	cause-01	ARG0	end-03	0.2.0	0.2.0.0	
# ::edge	cause-01	ARG1	bring-05	0.2.0	0.2	
# ::edge	contrast-01	ARG1	lack-01	0	0.0	
# ::edge	contrast-01	ARG2	aspire-01	0	0.1	
# ::edge	contrast-01	ARG6	bring-05	0	0.2	
# ::edge	end-02	ARG1	job	0.2.1.2.0	0.2.1.2	
# ::edge	end-03	ARG1	person	0.2.0.0	0.2.0.0.0	
# ::edge	feel-01	ARG1	comfortable	0.2.1.0	0.2.1.0.0	
# ::edge	feel-01	ARG1	want-01	0.2.1.1	0.2.1.1.0	
# ::edge	lack-01	ARG0	i	0.0	0.0.0	
# ::edge	lack-01	ARG1	motivation	0.0	0.0.1	
# ::edge	lecture-01	ARG0	person	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	want-01	ARG1	give-09	0.2.1.1.0	0.2.1.1.0.0	
(c / contrast-01 
      :ARG1 (l / lack-01 
            :ARG0 (i / i) 
            :ARG1 (m / motivation)) 
      :ARG2 (a2 / aspire-01 
            :ARG1 (s / someone)) 
      :ARG6 (b / bring-05 
            :ARG1-of (c3 / cause-01 
                  :ARG0 (e / end-03 
                        :ARG1 (p / person 
                              :ARG0-of (l2 / lecture-01)))) 
            :op-of (a / and 
                  :op1 (f2 / feel-01 
                        :ARG1 (c2 / comfortable)) 
                  :op2 (f / feel-01 
                        :ARG1 (w / want-01 
                              :ARG1 (g2 / give-09))) 
                  :op3 (j / job 
                        :ARG1-of (e2 / end-02)))))

# ::snt - I would rather be dead than not be educated, and live a life I want to live (and dropping out of uni would make matters worse).
# ::tok - I would rather be dead than not be educated , and live a life I want to live ( and dropping out of uni would make matters worse ) .
# ::alignments 11-12|0 21-22|0.1.1.0 27-28|0.1.1.0.0.0 1-2|0.0.0 20-21|0.1.1 12-13|0.1 14-15|0.1.0 16-17|0.1.0.0.0 18-19|0.1.0.0 9-10|0.0 28-29|0.1.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:37.456
# ::node	0	and	11-12
# ::node	0.0	educate-01	9-10
# ::node	0.0.0	i	1-2
# ::node	0.1	live-01	12-13
# ::node	0.1.0	life	14-15
# ::node	0.1.0.0	live-01	18-19
# ::node	0.1.0.0.0	want-01	16-17
# ::node	0.1.1	and	20-21
# ::node	0.1.1.0	drop-04	21-22
# ::node	0.1.1.0.0	worsen-01	28-29
# ::node	0.1.1.0.0.0	matter	27-28
# ::root	0	and
# ::edge	and	op1	educate-01	0	0.0	
# ::edge	and	op1	live-01	0.1.1	0.1	
# ::edge	and	op2	drop-04	0.1.1	0.1.1.0	
# ::edge	and	op2	live-01	0	0.1	
# ::edge	drop-04	ARG1	worsen-01	0.1.1.0	0.1.1.0.0	
# ::edge	educate-01	ARG1	i	0.0	0.0.0	
# ::edge	live-01	ARG1	life	0.1	0.1.0	
# ::edge	live-01	ARG1	life	0.1.0.0	0.1.0	
# ::edge	want-01	ARG1	live-01	0.1.0.0.0	0.1.0.0	
# ::edge	worsen-01	ARG1	matter	0.1.1.0.0	0.1.1.0.0.0	
(a / and 
      :op1 (e / educate-01 
            :ARG1 (i / i)) 
      :op2 (l / live-01 
            :ARG1 (l2 / life 
                  :ARG1-of (l3 / live-01 
                        :ARG1-of (w2 / want-01))) 
            :op-of (a2 / and 
                  :op1 (d2 / drop-04 
                        :ARG1 (w / worsen-01 
                              :ARG1 (m / matter))))))

# ::snt - I'm 21yrs old (turn 22 this year), don't have much time left for failing need to do something.
# ::tok - I 'm 21yrs old ( turn 22 this year ) , do n't have much time left for failing need to do something .
# ::alignments 1-2|0.0 9-10|0.1+0.1.0 6-7|0 8-9|0.1.0.0 7-8|0.1.0.0.0 14-15|0.2.1.0 16-17|0.2.0 19-20|0.2.2 17-18|0.2 15-16|0.2.1.0.0 12-13|0.2.1 23-24|0.2.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:38.128
# ::node	0	turn-02	6-7
# ::node	0.0	i	1-2
# ::node	0.1	temporal-quantity	9-10
# ::node	0.1.0	year	9-10
# ::node	0.1.0.0	this	8-9
# ::node	0.1.0.0.0	22	7-8
# ::node	0.2	leave-06	17-18
# ::node	0.2.0	time	16-17
# ::node	0.2.1	do-02	12-13
# ::node	0.2.1.0	have-03	14-15
# ::node	0.2.1.0.0	much	15-16
# ::node	0.2.2	fail-01	19-20
# ::node	0.2.2.0	something	23-24
# ::root	0	turn-02
# ::edge	do-02	ARG1	leave-06	0.2.1	0.2	
# ::edge	do-02	ARG6	have-03	0.2.1	0.2.1.0	
# ::edge	fail-01	ARG1	something	0.2.2	0.2.2.0	
# ::edge	have-03	ARG1	much	0.2.1.0	0.2.1.0.0	
# ::edge	leave-06	ARG1	time	0.2	0.2.0	
# ::edge	leave-06	ARG2	fail-01	0.2	0.2.2	
# ::edge	leave-06	ARG6	turn-02	0.2	0	
# ::edge	temporal-quantity	unit	year	0.1	0.1.0	
# ::edge	this	calendar	22	0.1.0.0	0.1.0.0.0	
# ::edge	turn-02	ARG0	i	0	0.0	
# ::edge	turn-02	ARG1	temporal-quantity	0	0.1	
# ::edge	year	mod	this	0.1.0	0.1.0.0	
(t / turn-02 
      :ARG0 (i / i) 
      :ARG1 (t2 / temporal-quantity 
            :unit (y / year 
                  :mod (t4 / this 
                        :calendar 22))) 
      :ARG6-of (l / leave-06 
            :ARG1 (t5 / time) 
            :ARG1-of (d / do-02 
                  :ARG6 (h / have-03 
                        :ARG1 (m / much))) 
            :ARG2 (f / fail-01 
                  :ARG1 (s / something))))

# ::snt I failed college once over, did another course so I could get to uni don't want to go through the system over and over and consistently fail.
# ::tok I failed college once over , did another course so I could get to uni do n't want to go through the system over and over and consistently fail .
# ::alignments 17-18|0.0.0.0 24-25|0.0.0.0.0.1 1-2|0.1.0.0 19-20|0.0.0.0.0 22-23|0.0.0.0.0.0 26-27|0 6-7|0.0 11-12|0.0.0.1.0 12-13|0.0.0.1 8-9|0.0.0 7-8|0.0.0.2 28-29|0.1 3-4|0.1.0.0.1 2-3|0.1.0.0.0 0-1|0.1.0 27-28|0.1.1 4-5|0.1.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:39.027
# ::node	0	and	26-27
# ::node	0.0	do-02	6-7
# ::node	0.0.0	course	8-9
# ::node	0.0.0.0	want-01	17-18
# ::node	0.0.0.0.0	go-01	19-20
# ::node	0.0.0.0.0.0	system	22-23
# ::node	0.0.0.0.0.1	and	24-25
# ::node	0.0.0.1	get-05	12-13
# ::node	0.0.0.1.0	possible	11-12
# ::node	0.0.0.2	another	7-8
# ::node	0.1	fail-01	28-29
# ::node	0.1.0	i	0-1
# ::node	0.1.0.0	fail-01	1-2
# ::node	0.1.0.0.0	college	2-3
# ::node	0.1.0.0.1	once	3-4
# ::node	0.1.0.0.1.0	over-and-over	4-5
# ::node	0.1.1	consistent	27-28
# ::root	0	and
# ::edge	and	op1	do-02	0	0.0	
# ::edge	and	op2	fail-01	0	0.1	
# ::edge	course	mod	another	0.0.0	0.0.0.2	
# ::edge	do-02	ARG1	course	0.0	0.0.0	
# ::edge	fail-01	ARG0	i	0.1.0.0	0.1.0	
# ::edge	fail-01	ARG1	college	0.1.0.0	0.1.0.0.0	
# ::edge	fail-01	ARG1	i	0.1	0.1.0	
# ::edge	fail-01	ARG6	once	0.1.0.0	0.1.0.0.1	
# ::edge	fail-01	manner	consistent	0.1	0.1.1	
# ::edge	get-05	ARG1	course	0.0.0.1	0.0.0	
# ::edge	go-01	ARG2	system	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	go-01	ARG6	and	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	over-and-over	degree	once	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	possible	domain	get-05	0.0.0.1.0	0.0.0.1	
# ::edge	want-01	ARG0	course	0.0.0.0	0.0.0	
# ::edge	want-01	ARG1	go-01	0.0.0.0	0.0.0.0.0	
(a3 / and 
      :op1 (d / do-02 
            :ARG1 (c2 / course 
                  :ARG0-of (w / want-01 
                        :ARG1 (g2 / go-01 
                              :ARG2 (s / system) 
                              :ARG6 (a2 / and))) 
                  :ARG1-of (g / get-05 
                        :domain-of (p / possible)) 
                  :mod (a / another))) 
      :op2 (f / fail-01 
            :ARG1 (i / i 
                  :ARG0-of (f2 / fail-01 
                        :ARG1 (c / college) 
                        :ARG6 (o / once 
                              :degree-of (o2 / over-and-over)))) 
            :manner (c3 / consistent)))

# ::snt Can someone please give me some advice please?
# ::tok Can someone please give me some advice please ?
# ::alignments 0-1|0 1-2|0.1 5-6|0.0.0 6-7|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:39.051
# ::node	0	possible	0-1
# ::node	0.0	advise-01	6-7
# ::node	0.0.0	some	5-6
# ::node	0.1	someone	1-2
# ::root	0	possible
# ::edge	advise-01	ARG1	possible	0.0	0	
# ::edge	advise-01	ARG6	some	0.0	0.0.0	
# ::edge	possible	calendar	someone	0	0.1	
(p / possible 
      :ARG1-of (a2 / advise-01 
            :ARG6 (s2 / some)) 
      :calendar (s / someone))

# ::snt Perhaps go and see your doctor, and see if there's any way you can get your deadlines extended to try and ease the pressure a bit?
# ::tok Perhaps go and see your doctor , and see if there 's any way you can get your deadlines extended to try and ease the pressure a bit ?
# ::alignments 2-3|0.0.1 3-4|0.0.1.0 13-14|0.1.0 15-16|0.1.0.0.2 16-17|0.1.0.0 19-20|0.1.0.0.1.0.0.0.0 21-22|0.1.0.0.1.0.0.0 23-24|0.1.0.0.1.0 27-28|0.0.0 25-26|0.1.0.0.1.0.0 18-19|0.1.0.0.1 7-8|0 8-9|0.1 5-6|0.0.1.0.0 1-2|0.0 14-15|0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:40.008
# ::node	0	and	7-8
# ::node	0.0	go-01	1-2
# ::node	0.0.0	bit	27-28
# ::node	0.0.1	and	2-3
# ::node	0.0.1.0	see-01	3-4
# ::node	0.0.1.0.0	doctor	5-6
# ::node	0.1	see-01	8-9
# ::node	0.1.0	way	13-14
# ::node	0.1.0.0	get-04	16-17
# ::node	0.1.0.0.0	you	14-15
# ::node	0.1.0.0.1	deadline	18-19
# ::node	0.1.0.0.1.0	ease-02	23-24
# ::node	0.1.0.0.1.0.0	pressure	25-26
# ::node	0.1.0.0.1.0.0.0	try-01	21-22
# ::node	0.1.0.0.1.0.0.0.0	extend-01	19-20
# ::node	0.1.0.0.2	possible	15-16
# ::root	0	and
# ::edge	and	op1	go-01	0	0.0	
# ::edge	and	op1	go-01	0.0.1	0.0	
# ::edge	and	op2	see-01	0	0.1	
# ::edge	and	op2	see-01	0.0.1	0.0.1.0	
# ::edge	ease-02	ARG0	deadline	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	ease-02	ARG1	pressure	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	extend-01	ARG1	try-01	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0	
# ::edge	get-04	ARG0	you	0.1.0.0	0.1.0.0.0	
# ::edge	get-04	ARG1	deadline	0.1.0.0	0.1.0.0.1	
# ::edge	get-04	manner	way	0.1.0.0	0.1.0	
# ::edge	go-01	ARG1	bit	0.0	0.0.0	
# ::edge	possible	domain	get-04	0.1.0.0.2	0.1.0.0	
# ::edge	see-01	ARG1	doctor	0.0.1.0	0.0.1.0.0	
# ::edge	see-01	ARG1	way	0.1	0.1.0	
# ::edge	try-01	ARG1	pressure	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0	
(a2 / and 
      :op1 (g / go-01 
            :ARG1 (b / bit) 
            :op-of (a / and 
                  :op1 (s / see-01 
                        :ARG1 (d / doctor)))) 
      :op2 (s2 / see-01 
            :ARG1 (w / way 
                  :manner-of (g2 / get-04 
                        :ARG0 (y / you) 
                        :ARG1 (d2 / deadline 
                              :ARG0-of (e2 / ease-02 
                                    :ARG1 (p3 / pressure 
                                          :ARG1-of (t2 / try-01 
                                                :ARG1-of (e / extend-01))))) 
                        :domain-of (p2 / possible)))))

# ::snt Send your tutors a similar email to this post (don't worry they've seen it all before - some much more uncomfortable admissions too - I know as I used to work in a Uni Dept admin) and they will consider mitigating circumstances.
# ::tok Send your tutors a similar email to this post ( do n't worry they 've seen it all before - some much more uncomfortable admissions too - I know as I used to work in a Uni Dept admin ) and they will consider mitigating circumstances .
# ::alignments 40-41|0.2 43-44|0.2.1 45-46|0.2.1.0.0 44-45|0.2.1.0 0-1|0 2-3|0.0 5-6|0.1 8-9|0.1.0 7-8|0.1.0.0 12-13|0.2.0.1.1.0.0.2 15-16|0.2.0.1.1.0.0 18-19|0.2.0.1.1.0.0.2.0 17-18|0.2.0.1.1.0.0.1 20-21|0.2.0.1.1.1 23-24|0.2.0.1.1.2+0.2.0.1.1.2.1 22-23|0.2.0.1.1.2.0 21-22|0.2.0.1.1.2.0.0 13-14|0.2.0.1.1.0.0.0 28-29|0.2.0.1.0 31-32|0.2.0.1 33-34|0.2.0 24-25|0.2.0.1.1+0.2.0.1.1.0 38-39|0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:42.288
# ::node	0	send-01	0-1
# ::node	0.0	tutor	2-3
# ::node	0.1	email	5-6
# ::node	0.1.0	post	8-9
# ::node	0.1.0.0	this	7-8
# ::node	0.2	and	40-41
# ::node	0.2.0	work-01	33-34
# ::node	0.2.0.0	administrate-01	38-39
# ::node	0.2.0.1	use-02	31-32
# ::node	0.2.0.1.0	know-01	28-29
# ::node	0.2.0.1.1	thing	24-25
# ::node	0.2.0.1.1.0	admit-02	24-25
# ::node	0.2.0.1.1.0.0	see-01	15-16
# ::node	0.2.0.1.1.0.0.0	they	13-14
# ::node	0.2.0.1.1.0.0.1	all	17-18
# ::node	0.2.0.1.1.0.0.2	worry-02	12-13
# ::node	0.2.0.1.1.0.0.2.0	before	18-19
# ::node	0.2.0.1.1.1	some	20-21
# ::node	0.2.0.1.1.2	comfortable	23-24
# ::node	0.2.0.1.1.2.0	more	22-23
# ::node	0.2.0.1.1.2.0.0	much	21-22
# ::node	0.2.0.1.1.2.1	-	23-24
# ::node	0.2.1	consider-02	43-44
# ::node	0.2.1.0	mitigate-01	44-45
# ::node	0.2.1.0.0	circumstance	45-46
# ::root	0	send-01
# ::edge	admit-02	ARG1	thing	0.2.0.1.1.0	0.2.0.1.1	
# ::edge	admit-02	ARG2	see-01	0.2.0.1.1.0	0.2.0.1.1.0.0	
# ::edge	and	op1	send-01	0.2	0	
# ::edge	and	op2	consider-02	0.2	0.2.1	
# ::edge	comfortable	degree	more	0.2.0.1.1.2	0.2.0.1.1.2.0	
# ::edge	comfortable	polarity	-	0.2.0.1.1.2	0.2.0.1.1.2.1	
# ::edge	consider-02	ARG1	mitigate-01	0.2.1	0.2.1.0	
# ::edge	email	op1	post	0.1	0.1.0	
# ::edge	know-01	ARG1	use-02	0.2.0.1.0	0.2.0.1	
# ::edge	mitigate-01	ARG1	circumstance	0.2.1.0	0.2.1.0.0	
# ::edge	more	degree	much	0.2.0.1.1.2.0	0.2.0.1.1.2.0.0	
# ::edge	post	mod	this	0.1.0	0.1.0.0	
# ::edge	see-01	ARG0	they	0.2.0.1.1.0.0	0.2.0.1.1.0.0.0	
# ::edge	see-01	ARG1	all	0.2.0.1.1.0.0	0.2.0.1.1.0.0.1	
# ::edge	send-01	ARG1	tutor	0	0.0	
# ::edge	send-01	ARG2	email	0	0.1	
# ::edge	thing	mod	comfortable	0.2.0.1.1	0.2.0.1.1.2	
# ::edge	thing	mod	some	0.2.0.1.1	0.2.0.1.1.1	
# ::edge	use-02	ARG1	work-01	0.2.0.1	0.2.0	
# ::edge	use-02	ARG6	thing	0.2.0.1	0.2.0.1.1	
# ::edge	work-01	ARG0	and	0.2.0	0.2	
# ::edge	work-01	ARG1	administrate-01	0.2.0	0.2.0.0	
# ::edge	worry-02	ARG1	see-01	0.2.0.1.1.0.0.2	0.2.0.1.1.0.0	
# ::edge	worry-02	ARG6	before	0.2.0.1.1.0.0.2	0.2.0.1.1.0.0.2.0	
(s / send-01 
      :ARG1 (t / tutor) 
      :ARG2 (e / email 
            :op1 (p / post 
                  :mod (t2 / this))) 
      :op-of (a / and 
            :ARG0-of (w2 / work-01 
                  :ARG1 (a4 / administrate-01) 
                  :ARG1-of (u / use-02 
                        :ARG1-of (k / know-01) 
                        :ARG6 (t4 / thing 
                              :ARG1-of (a3 / admit-02 
                                    :ARG2 (s2 / see-01 
                                          :ARG0 (t3 / they) 
                                          :ARG1 (a2 / all) 
                                          :ARG1-of (w / worry-02 
                                                :ARG6 (b / before)))) 
                              :mod (s3 / some) 
                              :mod (c4 / comfortable 
                                    :degree (m3 / more 
                                          :degree (m4 / much)) 
                                    :polarity -)))) 
            :op1 (c / consider-02 
                  :ARG1 (m2 / mitigate-01 
                        :ARG1 (c6 / circumstance)))))

# ::snt Break your work into manageable chunks.
# ::tok Break your work into manageable chunks .
# ::alignments 0-1|0 5-6|0.1 2-3|0.0+0.0.0 4-5|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:42.408
# ::node	0	break-01	0-1
# ::node	0.0	thing	2-3
# ::node	0.0.0	work-01	2-3
# ::node	0.1	chunk	5-6
# ::node	0.1.0	manage-01	4-5
# ::root	0	break-01
# ::edge	break-01	ARG1	thing	0	0.0	
# ::edge	break-01	ARG2	chunk	0	0.1	
# ::edge	manage-01	ARG1	chunk	0.1.0	0.1	
# ::edge	work-01	ARG1	thing	0.0.0	0.0	
(b / break-01 
      :ARG1 (t / thing 
            :ARG1-of (w / work-01)) 
      :ARG2 (c / chunk 
            :ARG1-of (m / manage-01)))

# ::snt Concentrate on one bit of work at a time (obvs the most urgent assignment first).
# ::tok Concentrate on one bit of work at a time ( obvs the most urgent assignment first ) .
# ::alignments 0-1|0 3-4|0.1 8-9|0.2 13-14|0.0.1 12-13|0.0.1.0 2-3|0.1.1 5-6|0.1.0+0.1.0.0 14-15|0.0+0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:42.657
# ::node	0	concentrate-01	0-1
# ::node	0.0	thing	14-15
# ::node	0.0.0	assign-01	14-15
# ::node	0.0.1	urgent	13-14
# ::node	0.0.1.0	most	12-13
# ::node	0.1	bit	3-4
# ::node	0.1.0	thing	5-6
# ::node	0.1.0.0	work-01	5-6
# ::node	0.1.1	1	2-3
# ::node	0.2	time	8-9
# ::root	0	concentrate-01
# ::edge	assign-01	ARG1	thing	0.0.0	0.0	
# ::edge	bit	mod	thing	0.1	0.1.0	
# ::edge	bit	quant	1	0.1	0.1.1	
# ::edge	concentrate-01	ARG0	thing	0	0.0	
# ::edge	concentrate-01	ARG1	bit	0	0.1	
# ::edge	concentrate-01	ARG2	time	0	0.2	
# ::edge	thing	mod	urgent	0.0	0.0.1	
# ::edge	urgent	degree	most	0.0.1	0.0.1.0	
# ::edge	work-01	ARG1	thing	0.1.0.0	0.1.0	
(c / concentrate-01 
      :ARG0 (t3 / thing 
            :ARG1-of (a / assign-01) 
            :mod (u / urgent 
                  :degree (m / most))) 
      :ARG1 (b / bit 
            :mod (t2 / thing 
                  :ARG1-of (w / work-01)) 
            :quant 1) 
      :ARG2 (t / time))

# ::snt Don't shut yourself off from your housemates, and well done for trying new things from the very beginning now keep at it!
# ::tok Do n't shut yourself off from your housemates , and well done for trying new things from the very beginning now keep at it !
# ::alignments 9-10|0 0-1|0.1.0 13-14|0.0 5-6|0.1.0.0 19-20|0.0.0.0.0 18-19|0.0.0.0.0.0 15-16|0.0.0 14-15|0.0.0.1 10-11|0.1.1 2-3|0.1 7-8|0.1.0.0.0 21-22|0.0.0.0 20-21|0.0.0.0.2 23-24|0.0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:43.216
# ::node	0	and	9-10
# ::node	0.0	try-01	13-14
# ::node	0.0.0	thing	15-16
# ::node	0.0.0.0	keep-02	21-22
# ::node	0.0.0.0.0	begin-01	19-20
# ::node	0.0.0.0.0.0	very	18-19
# ::node	0.0.0.0.1	it	23-24
# ::node	0.0.0.0.2	now	20-21
# ::node	0.0.0.1	new	14-15
# ::node	0.1	shut-03	2-3
# ::node	0.1.0	do-02	0-1
# ::node	0.1.0.0	from	5-6
# ::node	0.1.0.0.0	housemate	7-8
# ::node	0.1.1	well	10-11
# ::root	0	and
# ::edge	and	op1	shut-03	0	0.1	
# ::edge	begin-01	ARG1	very	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	do-02	ARG1	from	0.1.0	0.1.0.0	
# ::edge	from	op1	housemate	0.1.0.0	0.1.0.0.0	
# ::edge	keep-02	ARG0	thing	0.0.0.0	0.0.0	
# ::edge	keep-02	ARG1	begin-01	0.0.0.0	0.0.0.0.0	
# ::edge	keep-02	ARG6	it	0.0.0.0	0.0.0.0.1	
# ::edge	keep-02	time	now	0.0.0.0	0.0.0.0.2	
# ::edge	shut-03	ARG0	do-02	0.1	0.1.0	
# ::edge	shut-03	ARG1	well	0.1	0.1.1	
# ::edge	thing	mod	new	0.0.0	0.0.0.1	
# ::edge	try-01	ARG0	thing	0.0	0.0.0	
# ::edge	try-01	ARG1	and	0.0	0	
(a / and 
      :ARG1-of (t / try-01 
            :ARG0 (t2 / thing 
                  :ARG0-of (k / keep-02 
                        :ARG1 (b2 / begin-01 
                              :ARG1 (v / very)) 
                        :ARG6 (i / it) 
                        :time (n / now)) 
                  :mod (n2 / new))) 
      :op1 (s / shut-03 
            :ARG0 (d / do-02 
                  :ARG1 (f / from 
                        :op1 (h / housemate))) 
            :ARG1 (w / well)))

# ::snt I'd reccomend you go and see your doctor too.
# ::tok I 'd reccomend you go and see your doctor too .
# ::alignments 0-1|0.0.0.0.0 4-5|0.0 6-7|0.0.0.0 9-10|0.0.0.0.1 8-9|0.0.0 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:43.390
# ::node	0	you	3-4
# ::node	0.0	go-01	4-5
# ::node	0.0.0	doctor	8-9
# ::node	0.0.0.0	see-01	6-7
# ::node	0.0.0.0.0	i	0-1
# ::node	0.0.0.0.1	too	9-10
# ::root	0	you
(y / you 
      :ARG0-of (g / go-01 
            :ARG1 (d / doctor 
                  :ARG1-of (s / see-01 
                        :ARG0 (i / i) 
                        :ARG6 (t / too)))))

# ::snt If you've always been an anxious person you might benefit from speaking to someone (my friend got therapy on the NHS for anxiety, so its really normal).
# ::tok If you 've always been an anxious person you might benefit from speaking to someone ( my friend got therapy on the NHS for anxiety , so its really normal ) .
# ::alignments 22-23|0.0.1.0.2+0.0.1.0.2.1+0.0.1.0.2.1.0 10-11|0 6-7|0.1.0.0 3-4|0.1.1.0 7-8|0.1.0 1-2|0.1.1 12-13|0.0 14-15|0.0.1 18-19|0.0.1.0 0-1|0.1 24-25|0.0.1.0.2.0 29-30|0.0.0 27-28|0.0.0.0.0 19-20|0.0.1.0.1 17-18|0.0.1.0.0 28-29|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:44.075
# ::node	0	benefit-01	10-11
# ::node	0.0	speak-01	12-13
# ::node	0.0.0	normal	29-30
# ::node	0.0.0.0	real	28-29
# ::node	0.0.0.0.0	it	27-28
# ::node	0.0.1	someone	14-15
# ::node	0.0.1.0	get-01	18-19
# ::node	0.0.1.0.0	friend	17-18
# ::node	0.0.1.0.1	therapy	19-20
# ::node	0.0.1.0.2	organization	22-23
# ::node	0.0.1.0.2.0	anxiety	24-25
# ::node	0.0.1.0.2.1	name	22-23
# ::node	0.0.1.0.2.1.0	"NHS"	22-23
# ::node	0.1	cause-01	0-1
# ::node	0.1.0	person	7-8
# ::node	0.1.0.0	anxious	6-7
# ::node	0.1.1	you	1-2
# ::node	0.1.1.0	always	3-4
# ::root	0	benefit-01
# ::edge	always	domain	you	0.1.1.0	0.1.1	
# ::edge	benefit-01	ARG1	speak-01	0	0.0	
# ::edge	cause-01	ARG0	person	0.1	0.1.0	
# ::edge	cause-01	ARG1	benefit-01	0.1	0	
# ::edge	cause-01	ARG6	you	0.1	0.1.1	
# ::edge	get-01	ARG0	friend	0.0.1.0	0.0.1.0.0	
# ::edge	get-01	ARG1	therapy	0.0.1.0	0.0.1.0.1	
# ::edge	get-01	ARG2	organization	0.0.1.0	0.0.1.0.2	
# ::edge	get-01	ARG6	someone	0.0.1.0	0.0.1	
# ::edge	name	op1	"NHS"	0.0.1.0.2.1	0.0.1.0.2.1.0	
# ::edge	normal	mod	real	0.0.0	0.0.0.0	
# ::edge	organization	location	anxiety	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	organization	name	name	0.0.1.0.2	0.0.1.0.2.1	
# ::edge	person	mod	anxious	0.1.0	0.1.0.0	
# ::edge	real	calendar	it	0.0.0.0	0.0.0.0.0	
# ::edge	speak-01	ARG1	normal	0.0	0.0.0	
# ::edge	speak-01	ARG2	someone	0.0	0.0.1	
(b / benefit-01 
      :ARG1 (s / speak-01 
            :ARG1 (n2 / normal 
                  :mod (r / real 
                        :calendar (i2 / it))) 
            :ARG2 (s2 / someone 
                  :ARG6-of (g / get-01 
                        :ARG0 (f / friend) 
                        :ARG1 (t / therapy) 
                        :ARG2 (o / organization 
                              :location (a4 / anxiety) 
                              :name (n / name 
                                    :op1 "NHS"))))) 
      :ARG1-of (c2 / cause-01 
            :ARG0 (p2 / person 
                  :mod (a2 / anxious)) 
            :ARG6 (y / you 
                  :domain-of (a3 / always))))

# ::snt And try and get deadlines extended, if you're honest I'm sure your uni will allow it.
# ::tok And try and get deadlines extended , if you 're honest I 'm sure your uni will allow it .
# ::alignments 11-12|0.0.0.1 17-18|0.0.0.0 18-19|0.0.0.0.0 8-9|0.0 10-11|0.0.0 0-1|0.1 1-2|0 3-4|0.1.0 5-6|0.1.0.0.0 4-5|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:44.416
# ::node	0	try-01	1-2
# ::node	0.0	you	8-9
# ::node	0.0.0	honest	10-11
# ::node	0.0.0.0	allow-01	17-18
# ::node	0.0.0.0.0	it	18-19
# ::node	0.0.0.1	i	11-12
# ::node	0.1	and	0-1
# ::node	0.1.0	get-04	3-4
# ::node	0.1.0.0	deadline	4-5
# ::node	0.1.0.0.0	extend-01	5-6
# ::root	0	try-01
# ::edge	allow-01	ARG0	honest	0.0.0.0	0.0.0	
# ::edge	allow-01	ARG6	it	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	try-01	0.1	0	
# ::edge	and	op2	get-04	0.1	0.1.0	
# ::edge	extend-01	ARG1	deadline	0.1.0.0.0	0.1.0.0	
# ::edge	get-04	ARG1	deadline	0.1.0	0.1.0.0	
# ::edge	honest	domain	you	0.0.0	0.0	
# ::edge	i	calendar	honest	0.0.0.1	0.0.0	
# ::edge	try-01	ARG1	you	0	0.0	
(t / try-01 
      :ARG1 (y2 / you 
            :domain-of (h / honest 
                  :ARG0-of (a / allow-01 
                        :ARG6 (i2 / it)) 
                  :calendar-of (i / i))) 
      :op-of (a2 / and 
            :op1 (g / get-04 
                  :ARG1 (d / deadline 
                        :ARG1-of (e / extend-01)))))

# ::snt It's getting hard to keep strong and keep carrying on with life.
# ::tok It 's getting hard to keep strong and keep carrying on with life .
# ::alignments 2-3|0.0 3-4|0 7-8|0.0.0 5-6|0.0.0.0 9-10|0.0.0.1.0 8-9|0.0.0.1 6-7|0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:44.618
# ::node	0	hard	3-4
# ::node	0.0	get-03	2-3
# ::node	0.0.0	and	7-8
# ::node	0.0.0.0	keep-02	5-6
# ::node	0.0.0.0.0	strong	6-7
# ::node	0.0.0.1	keep-02	8-9
# ::node	0.0.0.1.0	carry-02	9-10
# ::root	0	hard
(h / hard 
      :manner-of (g / get-03 
            :ARG1 (a / and 
                  :op1 (k2 / keep-02 
                        :ARG1 (s / strong)) 
                  :op2 (k / keep-02 
                        :ARG1 (c / carry-02)))))

# ::snt My mum is getting divorced - she had a horrible time with my step-father and her new found freedom has sent her round the bend.
# ::tok My mum is getting divorced - she had a horrible time with my step - father and her new found freedom has sent her round the bend .
# ::alignments 4-5|0.0.2 1-2|0.0.2.0 16-17|0 22-23|0.1.0 24-25|0.1.0.0.1 26-27|0.1.0.1 19-20|0.1 18-19|0.1.0.0.0 7-8|0.0 10-11|0.0.1 9-10|0.0.1.0 6-7|0.0.0 20-21|0.1.0.0 13-14|0.0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.400
# ::node	0	and	16-17
# ::node	0.0	have-03	7-8
# ::node	0.0.0	she	6-7
# ::node	0.0.1	time	10-11
# ::node	0.0.1.0	horrible	9-10
# ::node	0.0.1.1	step-father	13-14
# ::node	0.0.2	divorce-01	4-5
# ::node	0.0.2.0	mum	1-2
# ::node	0.1	find-01	19-20
# ::node	0.1.0	send-02	22-23
# ::node	0.1.0.0	free-41	20-21
# ::node	0.1.0.0.0	new	18-19
# ::node	0.1.0.0.1	round-03	24-25
# ::node	0.1.0.1	bend	26-27
# ::root	0	and
# ::edge	and	op1	have-03	0	0.0	
# ::edge	and	op2	find-01	0	0.1	
# ::edge	divorce-01	ARG0	mum	0.0.2	0.0.2.0	
# ::edge	divorce-01	ARG1	have-03	0.0.2	0.0	
# ::edge	find-01	ARG1	send-02	0.1	0.1.0	
# ::edge	free-41	ARG1	new	0.1.0.0	0.1.0.0.0	
# ::edge	have-03	ARG0	she	0.0	0.0.0	
# ::edge	have-03	ARG1	time	0.0	0.0.1	
# ::edge	round-03	ARG1	free-41	0.1.0.0.1	0.1.0.0	
# ::edge	send-02	ARG0	free-41	0.1.0	0.1.0.0	
# ::edge	send-02	ARG1	bend	0.1.0	0.1.0.1	
# ::edge	time	mod	horrible	0.0.1	0.0.1.0	
# ::edge	time	poss	step-father	0.0.1	0.0.1.1	
(a / and 
      :op1 (h / have-03 
            :ARG0 (s / she) 
            :ARG1 (t / time 
                  :mod (h2 / horrible) 
                  :poss (s2 / step-father)) 
            :ARG1-of (d / divorce-01 
                  :ARG0 (m2 / mum))) 
      :op2 (f2 / find-01 
            :ARG1 (s3 / send-02 
                  :ARG0 (f / free-41 
                        :ARG1 (n / new) 
                        :ARG1-of (r / round-03)) 
                  :ARG1 (b / bend))))

# ::snt She's epileptic and a manic depressive with a huge anger problem.
# ::tok She 's epileptic and a manic depressive with a huge anger problem .
# ::alignments 3-4|0 5-6|0.0.2 11-12|0.0.0 9-10|0.0.0.0 10-11|0.0.0.1 0-1|0.0.1 6-7|0.0 2-3|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.500
# ::node	0	and	3-4
# ::node	0.0	depress-01	6-7
# ::node	0.0.0	problem	11-12
# ::node	0.0.0.0	huge	9-10
# ::node	0.0.0.1	anger	10-11
# ::node	0.0.1	she	0-1
# ::node	0.0.1.0	epilepsy	2-3
# ::node	0.0.2	manic	5-6
# ::root	0	and
# ::edge	and	op1	depress-01	0	0.0	
# ::edge	depress-01	ARG1	problem	0.0	0.0.0	
# ::edge	depress-01	ARG6	she	0.0	0.0.1	
# ::edge	depress-01	mod	manic	0.0	0.0.2	
# ::edge	epilepsy	domain	she	0.0.1.0	0.0.1	
# ::edge	problem	mod	anger	0.0.0	0.0.0.1	
# ::edge	problem	mod	huge	0.0.0	0.0.0.0	
(a / and 
      :op1 (d / depress-01 
            :ARG1 (p / problem 
                  :mod (h / huge) 
                  :mod (a2 / anger)) 
            :ARG6 (s / she 
                  :domain-of (e / epilepsy)) 
            :mod (m / manic)))

# ::snt She's horrible to me, constantly.
# ::tok She 's horrible to me , constantly .
# ::alignments 2-3|0 0-1|0.0 6-7|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.511
# ::node	0	horrible	2-3
# ::node	0.0	she	0-1
# ::node	0.1	constant	6-7
# ::root	0	horrible
# ::edge	constant	op1	horrible	0.1	0	
# ::edge	horrible	domain	she	0	0.0	
(h / horrible 
      :domain (s / she) 
      :op-of (c / constant))

# ::snt I can't cope with her outbursts and nasty hateful remarks when I'm at home.
# ::tok I ca n't cope with her outbursts and nasty hateful remarks when I 'm at home .
# ::alignments 3-4|0.0.2.0.0 7-8|0.0.2 10-11|0.0+0 9-10|0.0.0 8-9|0.0.1 6-7|0.0.2.0 0-1|0.0.2.0.0.0 15-16|0.0.2.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.665
# ::node	0	remark-01	10-11
# ::node	0.0	thing	10-11
# ::node	0.0.0	hateful	9-10
# ::node	0.0.1	nasty	8-9
# ::node	0.0.2	and	7-8
# ::node	0.0.2.0	outburst	6-7
# ::node	0.0.2.0.0	cope-01	3-4
# ::node	0.0.2.0.0.0	i	0-1
# ::node	0.0.2.0.0.1	home	15-16
# ::root	0	remark-01
# ::edge	and	op1	outburst	0.0.2	0.0.2.0	
# ::edge	and	op2	thing	0.0.2	0.0	
# ::edge	cope-01	ARG0	i	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	cope-01	ARG1	home	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	cope-01	medium	outburst	0.0.2.0.0	0.0.2.0	
# ::edge	remark-01	ARG1	thing	0	0.0	
# ::edge	thing	mod	hateful	0.0	0.0.0	
# ::edge	thing	mod	nasty	0.0	0.0.1	
(r / remark-01 
      :ARG1 (t / thing 
            :mod (h / hateful) 
            :mod (n / nasty) 
            :op-of (a / and 
                  :op1 (o / outburst 
                        :medium-of (c / cope-01 
                              :ARG0 (i / i) 
                              :ARG1 (h2 / home))))))

# ::snt I'm 18, a full-time sixth former at a high pressure private school (on a 95% bursary) and I'm at breaking point.
# ::tok I 'm 18 , a full - time sixth former at a high pressure private school ( on a 95 % bursary ) and I 'm at breaking point .
# ::alignments 21-22|0.0.0.1.0.1.0.1 19-20|0.0.0.1.0.1.0.0 7-8|0.0.0.2 5-6|0.0.0 15-16|0.0.0.1.0 13-14|0.0.0.1.0.1.0 12-13|0.0.0.1.0.1 14-15|0.0.0.1.0.0 9-10|0.0.0.1 2-3|0.0.0.0 28-29|0 27-28|0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.946
# ::node	0	point	28-29
# ::node	0.0	break-01	27-28
# ::node	0.0.0	full	5-6
# ::node	0.0.0.0	18	2-3
# ::node	0.0.0.0.0	i	0-1
# ::node	0.0.0.1	form	9-10
# ::node	0.0.0.1.0	school	15-16
# ::node	0.0.0.1.0.0	private	14-15
# ::node	0.0.0.1.0.1	high	12-13
# ::node	0.0.0.1.0.1.0	pressure-01	13-14
# ::node	0.0.0.1.0.1.0.0	95	19-20
# ::node	0.0.0.1.0.1.0.1	bursary	21-22
# ::node	0.0.0.2	time	7-8
# ::root	0	point
(p4 / point 
      :ARG1-of (b3 / break-01 
            :ARG0 (f2 / full 
                  :calendar (1 / 18 
                        :calendar-of (i / i)) 
                  :mod-of (f / form 
                        :part-of (s / school 
                              :mod (p2 / private) 
                              :mod (h / high 
                                    :mod-of (p3 / pressure-01 
                                          :ARG0 95 
                                          :ARG1 (b / bursary))))) 
                  :mod-of (t2 / time))))

# ::snt I can't do work at home, because she shouts at me.
# ::tok I ca n't do work at home , because she shouts at me .
# ::alignments 4-5|0.0 6-7|0.0.0 0-1|0 8-9|0.0.1.1 10-11|0.0.1 9-10|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.980
# ::node	0	i	0-1
# ::node	0.0	work-01	4-5
# ::node	0.0.0	home	6-7
# ::node	0.0.1	shout-01	10-11
# ::node	0.0.1.0	she	9-10
# ::node	0.0.1.1	cause-01	8-9
# ::root	0	i
(i / i 
      :ARG0-of (w / work-01 
            :ARG1 (h / home) 
            :ARG1-of (s / shout-01 
                  :ARG0 (s2 / she) 
                  :ARG0-of (c / cause-01))))

# ::snt So then my teachers get angry at me.
# ::tok So then my teachers get angry at me .
# ::alignments 3-4|0.0+0 1-2|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:45.992
# ::node	0	teach-01	3-4
# ::node	0.0	person	3-4
# ::node	0.1	then	1-2
# ::root	0	teach-01
# ::edge	teach-01	ARG0	person	0	0.0	
# ::edge	teach-01	ARG1	then	0	0.1	
(t / teach-01 
      :ARG0 (p / person) 
      :ARG1 (t2 / then))

# ::snt One minute she's lovely, and it's like having my mummy back, then the next, she turns into the most spiteful human alive.
# ::tok One minute she 's lovely , and it 's like having my mummy back , then the next , she turns into the most spiteful human alive .
# ::alignments 6-7|0.1 20-21|0 1-2|0.1.0.1.0 17-18|0.1.0.0.1 15-16|0.1.0.0.1.0 25-26|0.2 24-25|0.2.0 23-24|0.2.0.0 4-5|0.1.0 10-11|0.1.0.0 13-14|0.1.0.0.0 12-13|0.1.0.0.0.0 0-1|0.0 2-3|0.1.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:46.576
# ::node	0	turn-02	20-21
# ::node	0.0	one	0-1
# ::node	0.1	and	6-7
# ::node	0.1.0	lovely	4-5
# ::node	0.1.0.0	have-06	10-11
# ::node	0.1.0.0.0	back	13-14
# ::node	0.1.0.0.0.0	mummy	12-13
# ::node	0.1.0.0.1	next	17-18
# ::node	0.1.0.0.1.0	then	15-16
# ::node	0.1.0.1	she	2-3
# ::node	0.1.0.1.0	minute	1-2
# ::node	0.2	human	25-26
# ::node	0.2.0	spiteful	24-25
# ::node	0.2.0.0	most	23-24
# ::root	0	turn-02
# ::edge	and	op1	lovely	0.1	0.1.0	
# ::edge	back	mod	mummy	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	have-06	ARG0	lovely	0.1.0.0	0.1.0	
# ::edge	have-06	ARG1	back	0.1.0.0	0.1.0.0.0	
# ::edge	have-06	ARG6	next	0.1.0.0	0.1.0.0.1	
# ::edge	human	mod	spiteful	0.2	0.2.0	
# ::edge	lovely	domain	she	0.1.0	0.1.0.1	
# ::edge	minute	calendar	she	0.1.0.1.0	0.1.0.1	
# ::edge	next	mod	then	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	spiteful	degree	most	0.2.0	0.2.0.0	
# ::edge	turn-02	ARG0	one	0	0.0	
# ::edge	turn-02	ARG1	and	0	0.1	
# ::edge	turn-02	prep-as	human	0	0.2	
(t2 / turn-02 
      :ARG0 (o / one) 
      :ARG1 (a / and 
            :op1 (l / lovely 
                  :ARG0-of (h / have-06 
                        :ARG1 (b / back 
                              :mod (m2 / mummy)) 
                        :ARG6 (n / next 
                              :mod (t3 / then))) 
                  :domain (s / she 
                        :calendar-of (m4 / minute)))) 
      :prep-as (h2 / human 
            :mod (s2 / spiteful 
                  :degree (m3 / most))))

# ::snt I'm not going to pass my A2 exams, I've already accepted defeat, that this year of my life is going to make me a failure.
# ::tok I 'm not going to pass my A 2 exams , I 've already accepted defeat , that this year of my life is going to make me a failure .
# ::alignments 7-8|0.0.0.0.0.0.0+0.0.0.0.0.0.0.1 5-6|0.0.0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.0.0 0-1|0.0.0.0.0.0.0.0.0.0 14-15|0 13-14|0.1 15-16|0.0 26-27|0.0.0.0.0 19-20|0.0.0.0 18-19|0.0.0 29-30|0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:47.235
# ::node	0	accept-01	14-15
# ::node	0.0	defeat-01	15-16
# ::node	0.0.0	this	18-19
# ::node	0.0.0.0	year	19-20
# ::node	0.0.0.0.0	make-02	26-27
# ::node	0.0.0.0.0.0	fail-01	29-30
# ::node	0.0.0.0.0.0.0	name	7-8
# ::node	0.0.0.0.0.0.0.0	exam	9-10
# ::node	0.0.0.0.0.0.0.0.0	pass-07	5-6
# ::node	0.0.0.0.0.0.0.0.0.0	i	0-1
# ::node	0.0.0.0.0.0.0.1	"A2"	7-8
# ::node	0.1	already	13-14
# ::root	0	accept-01
# ::edge	accept-01	ARG1	defeat-01	0	0.0	
# ::edge	accept-01	time	already	0	0.1	
# ::edge	defeat-01	ARG1	this	0.0	0.0.0	
# ::edge	exam	name	name	0.0.0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	fail-01	ARG1	name	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	make-02	ARG0	year	0.0.0.0.0	0.0.0.0	
# ::edge	make-02	ARG1	fail-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	name	op1	"A2"	0.0.0.0.0.0.0	0.0.0.0.0.0.0.1	
# ::edge	pass-07	ARG0	i	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0.0.0	
# ::edge	pass-07	ARG1	exam	0.0.0.0.0.0.0.0.0	0.0.0.0.0.0.0.0	
# ::edge	year	mod	this	0.0.0.0	0.0.0	
(a2 / accept-01 
      :ARG1 (d / defeat-01 
            :ARG1 (t / this 
                  :mod-of (y / year 
                        :ARG0-of (m / make-02 
                              :ARG1 (f / fail-01 
                                    :ARG1 (n / name 
                                          :name-of (e / exam 
                                                :ARG1-of (p / pass-07 
                                                      :ARG0 (i / i))) 
                                          :op1 "A2")))))) 
      :time (a4 / already))

# ::snt Maybe I can come back from this, who knows. I've got the most amazing university offers, but I can't even accept them - I'll never make the grades.
# ::tok Maybe I can come back from this , who knows . I 've got the most amazing university offers , but I ca n't even accept them - I 'll never make the grades .
# ::alignments 2-3|0 9-10|0.0.1.0 3-4|0.0 4-5|0.0.2 6-7|0.0.1 1-2|0.0.0 20-21|0.1.0.1 25-26|0.1 24-25|0.3 18-19|0.1.0 16-17|0.1.0.1.0 15-16|0.1.0.1.0.0 11-12|0.2.0 17-18|0.1.0.0 31-32|0.2 33-34|0.4 21-22|0.1.0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.150
# ::node	0	possible	2-3
# ::node	0.0	come-01	3-4
# ::node	0.0.0	i	1-2
# ::node	0.0.1	this	6-7
# ::node	0.0.1.0	know-01	9-10
# ::node	0.0.2	back	4-5
# ::node	0.1	accept-01	25-26
# ::node	0.1.0	offer-01	18-19
# ::node	0.1.0.0	university	17-18
# ::node	0.1.0.1	contrast-01	20-21
# ::node	0.1.0.1.0	amaze-01	16-17
# ::node	0.1.0.1.0.0	most	15-16
# ::node	0.1.0.1.1	i	21-22
# ::node	0.2	make-18	31-32
# ::node	0.2.0	i	11-12
# ::node	0.3	even	24-25
# ::node	0.4	grade	33-34
# ::root	0	possible
# ::edge	accept-01	ARG1	offer-01	0.1	0.1.0	
# ::edge	amaze-01	ARG1	contrast-01	0.1.0.1.0	0.1.0.1	
# ::edge	amaze-01	ARG6	most	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	come-01	ARG0	i	0.0	0.0.0	
# ::edge	come-01	ARG1	this	0.0	0.0.1	
# ::edge	come-01	direction	back	0.0	0.0.2	
# ::edge	contrast-01	ARG1	offer-01	0.1.0.1	0.1.0	
# ::edge	contrast-01	ARG6	i	0.1.0.1	0.1.0.1.1	
# ::edge	know-01	ARG1	this	0.0.1.0	0.0.1	
# ::edge	make-18	ARG1	i	0.2	0.2.0	
# ::edge	offer-01	ARG1	university	0.1.0	0.1.0.0	
# ::edge	possible	domain	accept-01	0	0.1	
# ::edge	possible	domain	come-01	0	0.0	
# ::edge	possible	domain	even	0	0.3	
# ::edge	possible	domain	grade	0	0.4	
# ::edge	possible	domain	make-18	0	0.2	
(p / possible 
      :domain (c / come-01 
            :ARG0 (i / i) 
            :ARG1 (t / this 
                  :ARG1-of (k / know-01)) 
            :direction (b / back)) 
      :domain (a2 / accept-01 
            :ARG1 (o / offer-01 
                  :ARG1 (u / university) 
                  :ARG1-of (c2 / contrast-01 
                        :ARG1-of (a / amaze-01 
                              :ARG6 (m2 / most)) 
                        :ARG6 (i3 / i)))) 
      :domain (m3 / make-18 
            :ARG1 (i2 / i)) 
      :domain (e / even) 
      :domain (g / grade))

# ::snt I wish I could wipe her out of my life - things would be so much better without her.
# ::tok I wish I could wipe her out of my life - things would be so much better without her .
# ::alignments 1-2|0 3-4|0.1 4-5|0.1.0 0-1|0.0 16-17|0.1.0.0 11-12|0.1.0.0.0 15-16|0.2.0 14-15|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.324
# ::node	0	wish-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	possible	3-4
# ::node	0.1.0	wipe-02	4-5
# ::node	0.1.0.0	good	16-17
# ::node	0.1.0.0.0	thing	11-12
# ::node	0.2	so	14-15
# ::node	0.2.0	much	15-16
# ::root	0	wish-01
# ::edge	good	domain	thing	0.1.0.0	0.1.0.0.0	
# ::edge	much	calendar	so	0.2.0	0.2	
# ::edge	possible	domain	wipe-02	0.1	0.1.0	
# ::edge	wipe-02	ARG1	good	0.1.0	0.1.0.0	
# ::edge	wish-01	ARG0	i	0	0.0	
# ::edge	wish-01	ARG1	possible	0	0.1	
# ::edge	wish-01	ARG6	so	0	0.2	
(w2 / wish-01 
      :ARG0 (i2 / i) 
      :ARG1 (p / possible 
            :domain (w3 / wipe-02 
                  :ARG1 (g / good 
                        :domain (t / thing)))) 
      :ARG6 (s2 / so 
            :calendar-of (m3 / much)))

# ::snt But then, I think I'm just being selfish.
# ::tok But then , I think I 'm just being selfish .
# ::alignments 0-1|0 4-5|0.0.0 1-2|0.0.0.2 9-10|0.0 7-8|0.0.0.1 3-4|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.500
# ::node	0	contrast-01	0-1
# ::node	0.0	selfish	9-10
# ::node	0.0.0	think-01	4-5
# ::node	0.0.0.0	i	3-4
# ::node	0.0.0.1	just	7-8
# ::node	0.0.0.2	then	1-2
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	selfish	0	0.0	
# ::edge	think-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	think-01	ARG1	selfish	0.0.0	0.0	
# ::edge	think-01	ARG6	just	0.0.0	0.0.0.1	
# ::edge	think-01	time	then	0.0.0	0.0.0.2	
(c / contrast-01 
      :ARG1 (s / selfish 
            :ARG1-of (t / think-01 
                  :ARG0 (i / i) 
                  :ARG6 (j / just) 
                  :time (t2 / then))))

# ::snt But surely, my life isn't meant to be like this?
# ::tok But surely , my life is n't meant to be like this ?
# ::alignments 0-1|0 7-8|0.1 11-12|0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.540
# ::node	0	contrast-01	0-1
# ::node	0.0	this	11-12
# ::node	0.1	mean-01	7-8
# ::node	0.1.0	sure	1-2
# ::root	0	contrast-01
# ::edge	contrast-01	ARG0	this	0	0.0	
# ::edge	contrast-01	ARG1	mean-01	0	0.1	
# ::edge	mean-01	ARG1	sure	0.1	0.1.0	
(c / contrast-01 
      :ARG0 (t / this) 
      :ARG1 (m / mean-01 
            :ARG1 (s / sure)))

# ::snt It should be so much better. B
# ::tok It should be so much better . B
# ::alignments 1-2|0 5-6|0.2 0-1|0.1 4-5|0.3.0 3-4|0.3 7-8|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.611
# ::node	0	recommend-01	1-2
# ::node	0.0	b	7-8
# ::node	0.1	it	0-1
# ::node	0.2	good	5-6
# ::node	0.3	so	3-4
# ::node	0.3.0	much	4-5
# ::root	0	recommend-01
# ::edge	much	calendar	so	0.3.0	0.3	
# ::edge	recommend-01	ARG0	b	0	0.0	
# ::edge	recommend-01	ARG1	it	0	0.1	
# ::edge	recommend-01	ARG2	good	0	0.2	
# ::edge	recommend-01	ARG6	so	0	0.3	
(r / recommend-01 
      :ARG0 (b / b) 
      :ARG1 (i / it) 
      :ARG2 (g / good) 
      :ARG6 (s / so 
            :calendar-of (m2 / much)))

# ::snt ut I feel as if I have no control over this downhill spiral.
# ::tok ut I feel as if I have no control over this downhill spiral .
# ::alignments 7-8|0.1.1 2-3|0 8-9|0.1 12-13|0.1.0 10-11|0.1.0.0 11-12|0.1.0.1 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.693
# ::node	0	feel-01	2-3
# ::node	0.0	i	1-2
# ::node	0.1	control-01	8-9
# ::node	0.1.0	spiral	12-13
# ::node	0.1.0.0	this	10-11
# ::node	0.1.0.1	downhill	11-12
# ::node	0.1.1	-	7-8
# ::root	0	feel-01
# ::edge	control-01	ARG1	spiral	0.1	0.1.0	
# ::edge	control-01	ARG6	-	0.1	0.1.1	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG1	control-01	0	0.1	
# ::edge	spiral	mod	downhill	0.1.0	0.1.0.1	
# ::edge	spiral	mod	this	0.1.0	0.1.0.0	
(f / feel-01 
      :ARG0 (i / i) 
      :ARG1 (c2 / control-01 
            :ARG1 (s / spiral 
                  :mod (t / this) 
                  :mod (d / downhill)) 
            :ARG6 (- / -)))

# ::snt And I don't know what to do.
# ::tok And I do n't know what to do .
# ::alignments 0-1|0.2 4-5|0 2-3|0.0+0.0.0 1-2|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.711
# ::node	0	know-01	4-5
# ::node	0.0	thing	2-3
# ::node	0.0.0	do-02	2-3
# ::node	0.1	i	1-2
# ::node	0.2	and	0-1
# ::root	0	know-01
# ::edge	and	op1	know-01	0.2	0	
# ::edge	do-02	ARG1	thing	0.0.0	0.0	
# ::edge	know-01	ARG0	thing	0	0.0	
# ::edge	know-01	ARG1	i	0	0.1	
(k / know-01 
      :ARG0 (t / thing 
            :ARG1-of (d / do-02)) 
      :ARG1 (i / i) 
      :op-of (a / and))

# ::snt Thanks for reading.
# ::tok Thanks for reading .
# ::alignments 0-1|0 2-3|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.717
# ::node	0	thank-01	0-1
# ::node	0.0	read-01	2-3
# ::root	0	thank-01
# ::edge	thank-01	ARG1	read-01	0	0.0	
(t / thank-01 
      :ARG1 (r / read-01))

# ::snt It's nice to vent.
# ::tok It 's nice to vent .
# ::alignments 2-3|0 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.724
# ::node	0	nice-42	2-3
# ::node	0.0	vent-01	4-5
# ::root	0	nice-42
# ::edge	nice-42	ARG1	vent-01	0	0.0	
(n / nice-42 
      :ARG1 (v / vent-01))

# ::snt You can't get her sectioned for that.
# ::tok You ca n't get her sectioned for that .
# ::alignments 3-4|0 5-6|0.1 7-8|0.2 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.789
# ::node	0	get-04	3-4
# ::node	0.0	you	0-1
# ::node	0.1	section-00	5-6
# ::node	0.2	that	7-8
# ::root	0	get-04
# ::edge	get-04	ARG0	you	0	0.0	
# ::edge	get-04	ARG1	section-00	0	0.1	
# ::edge	get-04	ARG6	that	0	0.2	
(g / get-04 
      :ARG0 (y / you) 
      :ARG1 (s / section-00) 
      :ARG6 (t / that))

# ::snt Does she even have a history of mental illness or a diagnosis?
# ::tok Does she even have a history of mental illness or a diagnosis ?
# ::alignments 3-4|0 2-3|0.0.0 9-10|0.1.0 5-6|0.1 7-8|0.1.0.0.0 1-2|0.0 11-12|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:48.955
# ::node	0	have-03	3-4
# ::node	0.0	she	1-2
# ::node	0.0.0	even	2-3
# ::node	0.1	history	5-6
# ::node	0.1.0	or	9-10
# ::node	0.1.0.0	diagnose-01	11-12
# ::node	0.1.0.0.0	mental	7-8
# ::root	0	have-03
# ::edge	diagnose-01	ARG1	mental	0.1.0.0	0.1.0.0.0	
# ::edge	even	calendar	she	0.0.0	0.0	
# ::edge	have-03	ARG0	she	0	0.0	
# ::edge	have-03	ARG1	history	0	0.1	
# ::edge	history	poss	or	0.1	0.1.0	
# ::edge	or	op1	diagnose-01	0.1.0	0.1.0.0	
(h / have-03 
      :ARG0 (s / she 
            :calendar-of (e / even)) 
      :ARG1 (h2 / history 
            :poss (o / or 
                  :op1 (d / diagnose-01 
                        :ARG1 (m / mental)))))

# ::snt You don't know for sure that you won't get good grades so accept places if you can.
# ::tok You do n't know for sure that you wo n't get good grades so accept places if you can .
# ::alignments 3-4|0 16-17|0.0.1.0.1 14-15|0.0.1.0 18-19|0.0.1.0.1.0 15-16|0.0.1.0.0 5-6|0.1 10-11|0.0 12-13|0.0.1 11-12|0.0.1.1 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:49.251
# ::node	0	know-01	3-4
# ::node	0.0	get-01	10-11
# ::node	0.0.0	you	0-1
# ::node	0.0.1	grade	12-13
# ::node	0.0.1.0	accept-01	14-15
# ::node	0.0.1.0.0	place	15-16
# ::node	0.0.1.0.1	cause-01	16-17
# ::node	0.0.1.0.1.0	possible	18-19
# ::node	0.0.1.1	good	11-12
# ::node	0.1	sure	5-6
# ::root	0	know-01
# ::edge	accept-01	ARG0	grade	0.0.1.0	0.0.1	
# ::edge	accept-01	ARG1	place	0.0.1.0	0.0.1.0.0	
# ::edge	accept-01	ARG6	cause-01	0.0.1.0	0.0.1.0.1	
# ::edge	cause-01	ARG1	possible	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	get-01	ARG0	you	0.0	0.0.0	
# ::edge	get-01	ARG1	grade	0.0	0.0.1	
# ::edge	grade	mod	good	0.0.1	0.0.1.1	
# ::edge	know-01	ARG1	get-01	0	0.0	
# ::edge	know-01	ARG2	sure	0	0.1	
(k / know-01 
      :ARG1 (g / get-01 
            :ARG0 (y / you) 
            :ARG1 (g2 / grade 
                  :ARG0-of (a / accept-01 
                        :ARG1 (p / place) 
                        :ARG6 (c / cause-01 
                              :ARG1 (p2 / possible))) 
                  :mod (g3 / good))) 
      :ARG2 (s / sure))

# ::snt Life throws **** at you all the time.
# ::tok Life throws * * * * at you all the time .
# ::alignments 1-2|0 10-11|0.1 8-9|0.1.0 7-8|0.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:49.304
# ::node	0	throw-01	1-2
# ::node	0.0	life	0-1
# ::node	0.1	time	10-11
# ::node	0.1.0	all	8-9
# ::node	0.1.0.0	you	7-8
# ::root	0	throw-01
# ::edge	all	calendar	you	0.1.0	0.1.0.0	
# ::edge	throw-01	ARG0	life	0	0.0	
# ::edge	throw-01	ARG1	time	0	0.1	
# ::edge	time	quant	all	0.1	0.1.0	
(t / throw-01 
      :ARG0 (l / life) 
      :ARG1 (t2 / time 
            :quant (a / all 
                  :calendar (y / you))))

# ::snt If it's not someone in your family, it's an outsider.
# ::tok If it 's not someone in your family , it 's an outsider .
# ::alignments 12-13|0 4-5|0.0 7-8|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:49.322
# ::node	0	outsider	12-13
# ::node	0.0	someone	4-5
# ::node	0.0.0	family	7-8
# ::root	0	outsider
(o / outsider 
      :poss-of (s / someone 
            :poss (f / family)))

# ::snt I had to deal with verbal abuse from my dad for a long 8 years before I came to uni and honestly, the only reason why I'm here is because it was the only way out.
# ::tok I had to deal with verbal abuse from my dad for a long 8 years before I came to uni and honestly , the only reason why I 'm here is because it was the only way out .
# ::alignments 20-21|0 31-32|0.0.0.0 29-30|0.1.1.1 25-26|0.2 36-37|0.0.0 32-33|0.0.0.0.1 37-38|0.0.0.0.0 24-25|0.2.0 35-36|0.0.0.1 3-4|0.1 15-16|0.0.2 17-18|0.0 13-14|0.0.2.0.1 14-15|0.0.2.0+0.0.2.0.2 12-13|0.0.2.0.0 6-7|0.1.1 5-6|0.1.1.2 9-10|0.1.1.0 0-1|0.1.0 21-22|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:50.330
# ::node	0	and	20-21
# ::node	0.0	come-01	17-18
# ::node	0.0.0	way	36-37
# ::node	0.0.0.0	cause-01	31-32
# ::node	0.0.0.0.0	out	37-38
# ::node	0.0.0.0.1	it	32-33
# ::node	0.0.0.1	only	35-36
# ::node	0.0.1	honest	21-22
# ::node	0.0.2	before	15-16
# ::node	0.0.2.0	temporal-quantity	14-15
# ::node	0.0.2.0.0	long	12-13
# ::node	0.0.2.0.1	8	13-14
# ::node	0.0.2.0.2	year	14-15
# ::node	0.1	deal-01	3-4
# ::node	0.1.0	i	0-1
# ::node	0.1.1	abuse-01	6-7
# ::node	0.1.1.0	dad	9-10
# ::node	0.1.1.1	here	29-30
# ::node	0.1.1.2	verbal	5-6
# ::node	0.2	reason	25-26
# ::node	0.2.0	only	24-25
# ::root	0	and
# ::edge	abuse-01	ARG0	dad	0.1.1	0.1.1.0	
# ::edge	abuse-01	ARG1	here	0.1.1	0.1.1.1	
# ::edge	abuse-01	mod	verbal	0.1.1	0.1.1.2	
# ::edge	and	condition	come-01	0	0.0	
# ::edge	and	op1	deal-01	0	0.1	
# ::edge	and	op2	reason	0	0.2	
# ::edge	before	op1	come-01	0.0.2	0.0	
# ::edge	cause-01	ARG0	way	0.0.0.0	0.0.0	
# ::edge	cause-01	ARG1	out	0.0.0.0	0.0.0.0.0	
# ::edge	cause-01	ARG6	it	0.0.0.0	0.0.0.0.1	
# ::edge	come-01	ARG0	way	0.0	0.0.0	
# ::edge	come-01	ARG1	honest	0.0	0.0.1	
# ::edge	deal-01	ARG0	i	0.1	0.1.0	
# ::edge	deal-01	ARG1	abuse-01	0.1	0.1.1	
# ::edge	long	op1	temporal-quantity	0.0.2.0.0	0.0.2.0	
# ::edge	reason	mod	only	0.2	0.2.0	
# ::edge	temporal-quantity	location	before	0.0.2.0	0.0.2	
# ::edge	temporal-quantity	quant	8	0.0.2.0	0.0.2.0.1	
# ::edge	temporal-quantity	unit	year	0.0.2.0	0.0.2.0.2	
# ::edge	way	mod	only	0.0.0	0.0.0.1	
(a / and 
      :condition (c / come-01 
            :ARG0 (w / way 
                  :ARG0-of (c2 / cause-01 
                        :ARG1 (o3 / out) 
                        :ARG6 (i2 / it)) 
                  :mod (o4 / only)) 
            :ARG1 (h2 / honest) 
            :op-of (b2 / before 
                  :location-of (t2 / temporal-quantity 
                        :op-of (l / long) 
                        :quant 8 
                        :unit (y2 / year)))) 
      :op1 (d / deal-01 
            :ARG0 (i / i) 
            :ARG1 (a2 / abuse-01 
                  :ARG0 (d2 / dad) 
                  :ARG1 (h / here) 
                  :mod (v / verbal))) 
      :op2 (r / reason 
            :mod (o2 / only)))

# ::snt Work hard if you really want out.
# ::tok Work hard if you really want out .
# ::alignments 0-1|0 1-2|0.0 3-4|0.1.0 5-6|0.1 4-5|0.1.2 6-7|0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:50.441
# ::node	0	work-01	0-1
# ::node	0.0	hard	1-2
# ::node	0.1	want-01	5-6
# ::node	0.1.0	you	3-4
# ::node	0.1.1	out	6-7
# ::node	0.1.2	really	4-5
# ::root	0	work-01
# ::edge	want-01	ARG0	you	0.1	0.1.0	
# ::edge	want-01	ARG1	work-01	0.1	0	
# ::edge	want-01	ARG5	out	0.1	0.1.1	
# ::edge	want-01	manner	really	0.1	0.1.2	
# ::edge	work-01	ARG1	hard	0	0.0	
(w / work-01 
      :ARG1 (h2 / hard) 
      :ARG1-of (w2 / want-01 
            :ARG0 (y / you) 
            :ARG5 (o / out) 
            :manner (r / really)))

# ::snt Really sounds like you need support from somewhere else if she can't give it to you consistently.
# ::tok Really sounds like you need support from somewhere else if she ca n't give it to you consistently .
# ::alignments 1-2|0 0-1|0.0 4-5|0.1 13-14|0.1.0.2 10-11|0.1.0.2.0 7-8|0.1.0.1.0 8-9|0.1.0.1 5-6|0.1.0 3-4|0.1.0.0 17-18|0.1.0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:50.611
# ::node	0	sound-01	1-2
# ::node	0.0	really	0-1
# ::node	0.1	need-01	4-5
# ::node	0.1.0	support-01	5-6
# ::node	0.1.0.0	you	3-4
# ::node	0.1.0.1	else	8-9
# ::node	0.1.0.1.0	somewhere	7-8
# ::node	0.1.0.2	give-01	13-14
# ::node	0.1.0.2.0	she	10-11
# ::node	0.1.0.2.0.0	consistent	17-18
# ::root	0	sound-01
# ::edge	consistent	domain	she	0.1.0.2.0.0	0.1.0.2.0	
# ::edge	else	degree	somewhere	0.1.0.1	0.1.0.1.0	
# ::edge	give-01	ARG0	she	0.1.0.2	0.1.0.2.0	
# ::edge	give-01	ARG1	support-01	0.1.0.2	0.1.0	
# ::edge	need-01	ARG1	support-01	0.1	0.1.0	
# ::edge	sound-01	ARG0	really	0	0.0	
# ::edge	sound-01	ARG1	need-01	0	0.1	
# ::edge	support-01	ARG0	you	0.1.0	0.1.0.0	
# ::edge	support-01	ARG1	else	0.1.0	0.1.0.1	
(s / sound-01 
      :ARG0 (r2 / really) 
      :ARG1 (n / need-01 
            :ARG1 (s2 / support-01 
                  :ARG0 (y / you) 
                  :ARG1 (e / else 
                        :degree (s3 / somewhere)) 
                  :ARG1-of (g / give-01 
                        :ARG0 (s4 / she 
                              :domain-of (c / consistent))))))

# ::snt You could call Childline or something similar?
# ::tok You could call Childline or something similar ?
# ::alignments 3-4|0.0.1+0.0.1.0+0.0.1.0.0 1-2|0 2-3|0.0 4-5|0.0.1.1 5-6|0.0.1.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:50.724
# ::node	0	possible	1-2
# ::node	0.0	call-02	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.1	organization	3-4
# ::node	0.0.1.0	name	3-4
# ::node	0.0.1.0.0	"Childline"	3-4
# ::node	0.0.1.1	or	4-5
# ::node	0.0.1.1.0	something	5-6
# ::root	0	possible
# ::edge	call-02	ARG0	you	0.0	0.0.0	
# ::edge	call-02	ARG1	organization	0.0	0.0.1	
# ::edge	name	op1	"Childline"	0.0.1.0	0.0.1.0.0	
# ::edge	or	op1	organization	0.0.1.1	0.0.1	
# ::edge	or	op2	something	0.0.1.1	0.0.1.1.0	
# ::edge	organization	name	name	0.0.1	0.0.1.0	
# ::edge	possible	domain	call-02	0	0.0	
(p / possible 
      :domain (c / call-02 
            :ARG0 (y / you) 
            :ARG1 (o2 / organization 
                  :name (n / name 
                        :op1 "Childline") 
                  :op-of (o / or 
                        :op1 (s / something)))))

# ::snt You could go to the library on saturdays and do a good 8 hours of studying there.
# ::tok You could go to the library on saturdays and do a good 8 hours of studying there .
# ::alignments 8-9|0.0.4 15-16|0.0.1.0 11-12|0.0.1.1 12-13|0.0.1.0.0 13-14|0.0.1+0.0.1.2 1-2|0 2-3|0.0 7-8|0.0.2 5-6|0.0.3 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:50.852
# ::node	0	possible	1-2
# ::node	0.0	go-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.1	temporal-quantity	13-14
# ::node	0.0.1.0	study-01	15-16
# ::node	0.0.1.0.0	8	12-13
# ::node	0.0.1.1	good	11-12
# ::node	0.0.1.2	hour	13-14
# ::node	0.0.2	saturday	7-8
# ::node	0.0.3	library	5-6
# ::node	0.0.4	and	8-9
# ::root	0	possible
# ::edge	and	op1	go-01	0.0.4	0.0	
# ::edge	go-01	ARG0	you	0.0	0.0.0	
# ::edge	go-01	ARG1	temporal-quantity	0.0	0.0.1	
# ::edge	go-01	ARG2	saturday	0.0	0.0.2	
# ::edge	go-01	ARG4	library	0.0	0.0.3	
# ::edge	good	op1	temporal-quantity	0.0.1.1	0.0.1	
# ::edge	possible	domain	go-01	0	0.0	
# ::edge	study-01	ARG0	temporal-quantity	0.0.1.0	0.0.1	
# ::edge	study-01	ARG1	8	0.0.1.0	0.0.1.0.0	
# ::edge	temporal-quantity	unit	hour	0.0.1	0.0.1.2	
(p / possible 
      :domain (g / go-01 
            :ARG0 (y / you) 
            :ARG1 (t / temporal-quantity 
                  :ARG0-of (s2 / study-01 
                        :ARG1 8) 
                  :op-of (g2 / good) 
                  :unit (h / hour)) 
            :ARG2 (s / saturday) 
            :ARG4 (l / library) 
            :op-of (a / and)))

# ::snt Is there a friend's house you could go to- form a study group?
# ::tok Is there a friend 's house you could go to - form a study group ?
# ::alignments 7-8|0 8-9|0.0 11-12|0.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0.0.0 5-6|0.0.1 3-4|0.0.0.0.0.0.0 6-7|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:50.988
# ::node	0	possible	7-8
# ::node	0.0	go-01	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.0.0	form-01	11-12
# ::node	0.0.0.0.0	group	14-15
# ::node	0.0.0.0.0.0	study-01	13-14
# ::node	0.0.0.0.0.0.0	friend	3-4
# ::node	0.0.1	house	5-6
# ::root	0	possible
# ::edge	form-01	ARG0	you	0.0.0.0	0.0.0	
# ::edge	form-01	ARG1	group	0.0.0.0	0.0.0.0.0	
# ::edge	go-01	ARG0	you	0.0	0.0.0	
# ::edge	go-01	ARG1	house	0.0	0.0.1	
# ::edge	possible	domain	go-01	0	0.0	
# ::edge	study-01	ARG0	group	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	study-01	ARG1	friend	0.0.0.0.0.0	0.0.0.0.0.0.0	
(p / possible 
      :domain (g / go-01 
            :ARG0 (y / you 
                  :ARG0-of (f2 / form-01 
                        :ARG1 (g2 / group 
                              :ARG0-of (s / study-01 
                                    :ARG1 (f / friend))))) 
            :ARG1 (h / house)))

# ::snt So you want her sectioned cos she is a bit of a pain in the arse and you've blamed all your problems on her?
# ::tok So you want her sectioned cos she is a bit of a pain in the arse and you 've blamed all your problems on her ?
# ::alignments 16-17|0.1.0.4 19-20|0.1.0 22-23|0.1.0.0 20-21|0.1.0.3 12-13|0.1.0.1 9-10|0.1.0.2 15-16|0.1.0.4.0 2-3|0 4-5|0.1.0.2.0 6-7|0.1 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:51.332
# ::node	0	want-01	2-3
# ::node	0.0	you	1-2
# ::node	0.1	she	6-7
# ::node	0.1.0	blame-01	19-20
# ::node	0.1.0.0	problem	22-23
# ::node	0.1.0.1	pain	12-13
# ::node	0.1.0.2	bit	9-10
# ::node	0.1.0.2.0	section-00	4-5
# ::node	0.1.0.3	all	20-21
# ::node	0.1.0.4	and	16-17
# ::node	0.1.0.4.0	arse	15-16
# ::root	0	want-01
# ::edge	all	op1	blame-01	0.1.0.3	0.1.0	
# ::edge	and	op1	arse	0.1.0.4	0.1.0.4.0	
# ::edge	and	op2	blame-01	0.1.0.4	0.1.0	
# ::edge	blame-01	ARG0	she	0.1.0	0.1	
# ::edge	blame-01	ARG1	problem	0.1.0	0.1.0.0	
# ::edge	blame-01	ARG2	pain	0.1.0	0.1.0.1	
# ::edge	blame-01	ARG6	bit	0.1.0	0.1.0.2	
# ::edge	section-00	ARG1	bit	0.1.0.2.0	0.1.0.2	
# ::edge	want-01	ARG0	you	0	0.0	
# ::edge	want-01	ARG1	she	0	0.1	
(w / want-01 
      :ARG0 (y / you) 
      :ARG1 (s2 / she 
            :ARG0-of (b2 / blame-01 
                  :ARG1 (p2 / problem) 
                  :ARG2 (p / pain) 
                  :ARG6 (b / bit 
                        :ARG1-of (s / section-00)) 
                  :op-of (a3 / all) 
                  :op-of (a2 / and 
                        :op1 (a / arse)))))

# ::snt I know what you're feeling.
# ::tok I know what you 're feeling .
# ::alignments 1-2|0 5-6|0.1+0.1.0 3-4|0.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:51.352
# ::node	0	know-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	thing	5-6
# ::node	0.1.0	feel-01	5-6
# ::node	0.1.0.0	you	3-4
# ::root	0	know-01
# ::edge	feel-01	ARG0	you	0.1.0	0.1.0.0	
# ::edge	feel-01	ARG1	thing	0.1.0	0.1	
# ::edge	know-01	ARG0	i	0	0.0	
# ::edge	know-01	ARG1	thing	0	0.1	
(k / know-01 
      :ARG0 (i / i) 
      :ARG1 (t / thing 
            :ARG1-of (f / feel-01 
                  :ARG0 (y / you))))

# ::snt My Mum was spat out of hell too.
# ::tok My Mum was spat out of hell too .
# ::alignments 3-4|0 7-8|0.2 6-7|0.1 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:51.434
# ::node	0	spit-01	3-4
# ::node	0.0	mum	1-2
# ::node	0.1	hell	6-7
# ::node	0.2	too	7-8
# ::root	0	spit-01
# ::edge	spit-01	ARG1	mum	0	0.0	
# ::edge	spit-01	ARG2	hell	0	0.1	
# ::edge	spit-01	ARG6	too	0	0.2	
(s / spit-01 
      :ARG1 (m / mum) 
      :ARG2 (h / hell) 
      :ARG6 (t / too))

# ::snt I highly recommend taking up smoking
# ::tok I highly recommend taking up smoking
# ::alignments 2-3|0 3-4|0.1 5-6|0.1.0 0-1|0.0 1-2|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:51.484
# ::node	0	recommend-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	take-13	3-4
# ::node	0.1.0	smoke-02	5-6
# ::node	0.2	high	1-2
# ::root	0	recommend-01
# ::edge	recommend-01	ARG0	i	0	0.0	
# ::edge	recommend-01	ARG1	take-13	0	0.1	
# ::edge	recommend-01	manner	high	0	0.2	
# ::edge	take-13	ARG1	smoke-02	0.1	0.1.0	
(r / recommend-01 
      :ARG0 (i / i) 
      :ARG1 (t / take-13 
            :ARG1 (s / smoke-02)) 
      :manner (h / high))

# ::snt Oh grow up tsr and stop negging its was a joke!!!
# ::tok Oh grow up tsr and stop negging its was a joke !!!
# ::alignments 3-4|0.0.0+0.0.0.0+0.0.0.0.0 4-5|0.0 0-1|0.1 5-6|0.0.1 1-2|0 10-11|0.0.0.1 7-8|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:51.618
# ::node	0	grow-04	1-2
# ::node	0.0	and	4-5
# ::node	0.0.0	person	3-4
# ::node	0.0.0.0	name	3-4
# ::node	0.0.0.0.0	"tsr"	3-4
# ::node	0.0.0.1	joke	10-11
# ::node	0.0.1	stop-01	5-6
# ::node	0.0.1.0	it	7-8
# ::node	0.1	oh	0-1
# ::root	0	grow-04
# ::edge	and	op1	person	0.0	0.0.0	
# ::edge	and	op2	stop-01	0.0	0.0.1	
# ::edge	grow-04	ARG1	and	0	0.0	
# ::edge	grow-04	ARG6	oh	0	0.1	
# ::edge	joke	topic	person	0.0.0.1	0.0.0	
# ::edge	name	op1	"tsr"	0.0.0.0	0.0.0.0.0	
# ::edge	person	name	name	0.0.0	0.0.0.0	
# ::edge	stop-01	ARG1	it	0.0.1	0.0.1.0	
(g / grow-04 
      :ARG1 (a / and 
            :op1 (p / person 
                  :name (n / name 
                        :op1 "tsr") 
                  :topic-of (j / joke)) 
            :op2 (s / stop-01 
                  :ARG1 (i / it))) 
      :ARG6 (o / oh))

# ::snt I think over the last year or 2 i've become a much weaker person and in a way have dulled down my personality inorder to try and make some friends at uni.
# ::tok I think over the last year or 2 i 've become a much weaker person and in a way have dulled down my personality inorder to try and make some friends at uni .
# ::alignments 1-2|0.0.3 15-16|0 20-21|0.1 18-19|0.1.0 26-27|0.1.0.0 28-29|0.1.0.0.0.0 30-31|0.1.0.0.0 29-30|0.1.0.0.0.1 21-22|0.1.2 23-24|0.1.1 10-11|0.0 5-6|0.0.3.1.0+0.0.3.1.0.0 4-5|0.0.3.1 7-8|0.1.0.0.0.0.0 14-15|0.0.1 13-14|0.0.0 12-13|0.0.2 0-1|0.0.3.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:53.027
# ::node	0	and	15-16
# ::node	0.0	become-01	10-11
# ::node	0.0.0	weak	13-14
# ::node	0.0.1	person	14-15
# ::node	0.0.2	much	12-13
# ::node	0.0.3	think-01	1-2
# ::node	0.0.3.0	i	0-1
# ::node	0.0.3.1	last	4-5
# ::node	0.0.3.1.0	temporal-quantity	5-6
# ::node	0.0.3.1.0.0	year	5-6
# ::node	0.1	dull-01	20-21
# ::node	0.1.0	way	18-19
# ::node	0.1.0.0	try-01	26-27
# ::node	0.1.0.0.0	friend	30-31
# ::node	0.1.0.0.0.0	make-02	28-29
# ::node	0.1.0.0.0.0.0	2	7-8
# ::node	0.1.0.0.0.1	some	29-30
# ::node	0.1.1	personality	23-24
# ::node	0.1.2	down	21-22
# ::root	0	and
# ::edge	and	op1	become-01	0	0.0	
# ::edge	and	op2	dull-01	0	0.1	
# ::edge	become-01	ARG1	weak	0.0	0.0.0	
# ::edge	become-01	ARG2	person	0.0	0.0.1	
# ::edge	become-01	ARG6	much	0.0	0.0.2	
# ::edge	dull-01	ARG0	way	0.1	0.1.0	
# ::edge	dull-01	ARG1	personality	0.1	0.1.1	
# ::edge	dull-01	ARG6	down	0.1	0.1.2	
# ::edge	friend	quant	some	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	make-02	ARG0	2	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	make-02	ARG1	friend	0.1.0.0.0.0	0.1.0.0.0	
# ::edge	temporal-quantity	mod	last	0.0.3.1.0	0.0.3.1	
# ::edge	temporal-quantity	unit	year	0.0.3.1.0	0.0.3.1.0.0	
# ::edge	think-01	ARG0	i	0.0.3	0.0.3.0	
# ::edge	think-01	condition	become-01	0.0.3	0.0	
# ::edge	think-01	time	last	0.0.3	0.0.3.1	
# ::edge	try-01	ARG0	way	0.1.0.0	0.1.0	
# ::edge	try-01	ARG1	friend	0.1.0.0	0.1.0.0.0	
(a2 / and 
      :op1 (b / become-01 
            :ARG1 (w / weak) 
            :ARG2 (p / person) 
            :ARG6 (m2 / much) 
            :condition-of (t4 / think-01 
                  :ARG0 (i / i) 
                  :time (l / last 
                        :mod-of (t / temporal-quantity 
                              :unit (y / year))))) 
      :op2 (d / dull-01 
            :ARG0 (w2 / way 
                  :ARG0-of (t3 / try-01 
                        :ARG1 (f / friend 
                              :ARG1-of (m3 / make-02 
                                    :ARG0 2) 
                              :quant (s / some)))) 
            :ARG1 (p2 / personality) 
            :ARG6 (d2 / down)))

# ::snt But being overly-nice to people has lead them to believe that they can say or do whatever the hell they want to me...
# ::tok But being overly - nice to people has lead them to believe that they can say or do whatever the hell they want to me ...
# ::alignments 0-1|0.0.0.0.0.1 8-9|0.0.0.0.0 11-12|0.0.0.0 14-15|0.0.0 16-17|0.0 17-18|0.0.1 15-16|0 18-19|0.0.1.0 20-21|0.0.1.0.0.0 22-23|0.0.1.0.0 4-5|0.0.0.0.0.0 2-3|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:53.397
# ::node	0	say-01	15-16
# ::node	0.0	or	16-17
# ::node	0.0.0	possible	14-15
# ::node	0.0.0.0	believe-01	11-12
# ::node	0.0.0.0.0	lead-03	8-9
# ::node	0.0.0.0.0.0	nice-41	4-5
# ::node	0.0.0.0.0.0.0	over	2-3
# ::node	0.0.0.0.0.1	contrast-01	0-1
# ::node	0.0.1	do-02	17-18
# ::node	0.0.1.0	whatever	18-19
# ::node	0.0.1.0.0	want-01	22-23
# ::node	0.0.1.0.0.0	hell	20-21
# ::root	0	say-01
# ::edge	believe-01	ARG1	possible	0.0.0.0	0.0.0	
# ::edge	contrast-01	ARG1	lead-03	0.0.0.0.0.1	0.0.0.0.0	
# ::edge	do-02	ARG1	whatever	0.0.1	0.0.1.0	
# ::edge	lead-03	ARG1	nice-41	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	lead-03	ARG2	believe-01	0.0.0.0.0	0.0.0.0	
# ::edge	nice-41	ARG1	over	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	or	op1	do-02	0.0	0.0.1	
# ::edge	possible	domain	or	0.0.0	0.0	
# ::edge	say-01	ARG1	or	0	0.0	
# ::edge	want-01	ARG0	whatever	0.0.1.0.0	0.0.1.0	
# ::edge	want-01	ARG1	hell	0.0.1.0.0	0.0.1.0.0.0	
(s / say-01 
      :ARG1 (o2 / or 
            :domain-of (p2 / possible 
                  :ARG1-of (b / believe-01 
                        :ARG2-of (l / lead-03 
                              :ARG1 (n / nice-41 
                                    :ARG1 (o / over)) 
                              :ARG1-of (c / contrast-01)))) 
            :op1 (d / do-02 
                  :ARG1 (w / whatever 
                        :ARG0-of (w2 / want-01 
                              :ARG1 (h / hell))))))

# ::snt they show absolutely no respect.
# ::tok they show absolutely no respect .
# ::alignments 3-4|0.1.0 1-2|0 4-5|0.1 0-1|0.0 2-3|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:53.429
# ::node	0	show-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	respect-01	4-5
# ::node	0.1.0	-	3-4
# ::node	0.1.0.0	absolute	2-3
# ::root	0	show-01
# ::edge	absolute	calendar	-	0.1.0.0	0.1.0	
# ::edge	respect-01	ARG1	-	0.1	0.1.0	
# ::edge	show-01	ARG0	they	0	0.0	
# ::edge	show-01	ARG1	respect-01	0	0.1	
(s / show-01 
      :ARG0 (t / they) 
      :ARG1 (r / respect-01 
            :ARG1 (- / - 
                  :calendar-of (a / absolute))))

# ::snt e.g. i'll say hello to someone from uni and they'll ignore me, but 30 minutes later they'll decide they want my help with some work... and i'll give it to them.
# ::tok e.g. i 'll say hello to someone from uni and they 'll ignore me , but 30 minutes later they 'll decide they want my help with some work ... and i 'll give it to them .
# ::alignments 15-16|0.1 9-10|0.0 33-34|0.1.0.0.2.1 21-22|0.1.0 18-19|0.1.0.1 16-17|0.1.0.0.2.1.0 17-18|0.1.0.0.1+0.1.0.0.1.0 23-24|0.1.0.0 25-26|0.1.0.0.0 28-29|0.1.0.0.2.0 27-28|0.1.0.0.2.0.1 30-31|0.1.0.0.2 12-13|0.0.0 3-4|0 6-7|0.1.0.0.2.0.0 4-5|0.2 1-2|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:54.248
# ::node	0	say-01	3-4
# ::node	0.0	and	9-10
# ::node	0.0.0	ignore-01	12-13
# ::node	0.0.0.0	i	1-2
# ::node	0.1	contrast-01	15-16
# ::node	0.1.0	decide-01	21-22
# ::node	0.1.0.0	want-01	23-24
# ::node	0.1.0.0.0	help-01	25-26
# ::node	0.1.0.0.1	temporal-quantity	17-18
# ::node	0.1.0.0.1.0	minute	17-18
# ::node	0.1.0.0.2	and	30-31
# ::node	0.1.0.0.2.0	work-01	28-29
# ::node	0.1.0.0.2.0.0	someone	6-7
# ::node	0.1.0.0.2.0.1	some	27-28
# ::node	0.1.0.0.2.1	give-01	33-34
# ::node	0.1.0.0.2.1.0	30	16-17
# ::node	0.1.0.1	late	18-19
# ::node	0.2	hello	4-5
# ::root	0	say-01
# ::edge	and	op1	ignore-01	0.0	0.0.0	
# ::edge	and	op1	want-01	0.1.0.0.2	0.1.0.0	
# ::edge	and	op2	work-01	0.1.0.0.2	0.1.0.0.2.0	
# ::edge	and	op3	give-01	0.1.0.0.2	0.1.0.0.2.1	
# ::edge	contrast-01	ARG1	say-01	0.1	0	
# ::edge	contrast-01	ARG2	decide-01	0.1	0.1.0	
# ::edge	decide-01	ARG1	want-01	0.1.0	0.1.0.0	
# ::edge	decide-01	ARG6	late	0.1.0	0.1.0.1	
# ::edge	give-01	ARG1	30	0.1.0.0.2.1	0.1.0.0.2.1.0	
# ::edge	ignore-01	ARG1	i	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	say-01	ARG6	hello	0	0.2	
# ::edge	temporal-quantity	unit	minute	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	want-01	ARG1	help-01	0.1.0.0	0.1.0.0.0	
# ::edge	want-01	ARG6	temporal-quantity	0.1.0.0	0.1.0.0.1	
# ::edge	work-01	ARG1	someone	0.1.0.0.2.0	0.1.0.0.2.0.0	
# ::edge	work-01	quant	some	0.1.0.0.2.0	0.1.0.0.2.0.1	
(s / say-01 
      :ARG1 (a2 / and 
            :op1 (i2 / ignore-01 
                  :ARG1 (i / i))) 
      :ARG1-of (c / contrast-01 
            :ARG2 (d / decide-01 
                  :ARG1 (w / want-01 
                        :ARG1 (h2 / help-01) 
                        :ARG6 (t / temporal-quantity 
                              :unit (m2 / minute)) 
                        :op-of (a / and 
                              :op1 (w2 / work-01 
                                    :ARG1 (s2 / someone) 
                                    :quant (s3 / some)) 
                              :op2 (g / give-01 
                                    :ARG1 30))) 
                  :ARG6 (l / late))) 
      :ARG6 (h / hello))

# ::snt It's causing alot of anger and distress in my life and is really starting to effect my concentration in uni.
# ::tok It 's causing alot of anger and distress in my life and is really starting to effect my concentration in uni .
# ::alignments 6-7|0.1 14-15|0.2.0 13-14|0.2.0.1 18-19|0.2.0.0 2-3|0 11-12|0.2 7-8|0.1.1 5-6|0.1.0 10-11|0.1.1.0 20-21|0.1.1.1 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:54.592
# ::node	0	cause-01	2-3
# ::node	0.0	it	0-1
# ::node	0.1	and	6-7
# ::node	0.1.0	anger	5-6
# ::node	0.1.1	distress-01	7-8
# ::node	0.1.1.0	life	10-11
# ::node	0.1.1.1	i	20-21
# ::node	0.2	and	11-12
# ::node	0.2.0	start-01	14-15
# ::node	0.2.0.0	concentration	18-19
# ::node	0.2.0.1	really	13-14
# ::root	0	cause-01
# ::edge	and	op1	anger	0.1	0.1.0	
# ::edge	and	op1	cause-01	0.2	0	
# ::edge	and	op2	distress-01	0.1	0.1.1	
# ::edge	and	op2	start-01	0.2	0.2.0	
# ::edge	cause-01	ARG0	it	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	distress-01	ARG0	life	0.1.1	0.1.1.0	
# ::edge	distress-01	ARG1	i	0.1.1	0.1.1.1	
# ::edge	start-01	ARG1	concentration	0.2.0	0.2.0.0	
# ::edge	start-01	mod	really	0.2.0	0.2.0.1	
(c / cause-01 
      :ARG0 (i / it) 
      :ARG1 (a / and 
            :op1 (a3 / anger) 
            :op2 (d / distress-01 
                  :ARG0 (l / life) 
                  :ARG1 (i2 / i))) 
      :op-of (a2 / and 
            :op1 (s / start-01 
                  :ARG1 (c2 / concentration) 
                  :mod (r / really))))

# ::snt has anyone got any experience in handling this sort of thing or how to go about gaining some respect again?
# ::tok has anyone got any experience in handling this sort of thing or how to go about gaining some respect again ?
# ::alignments 2-3|0 4-5|0.1 3-4|0.1.1 11-12|0.2.0 10-11|0.2.0.0.0.0.0 14-15|0.2.0.0 16-17|0.2.0.0.0 19-20|0.2.0.0.0.1 18-19|0.2.0.0.0.0 17-18|0.1.0 6-7|0.2 8-9|0.2.1 7-8|0.2.1.0 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:55.595
# ::node	0	get-02	2-3
# ::node	0.0	anyone	1-2
# ::node	0.1	experience-01	4-5
# ::node	0.1.0	some	17-18
# ::node	0.1.1	any	3-4
# ::node	0.2	handle-01	6-7
# ::node	0.2.0	or	11-12
# ::node	0.2.0.0	go-06	14-15
# ::node	0.2.0.0.0	gain-02	16-17
# ::node	0.2.0.0.0.0	respect-01	18-19
# ::node	0.2.0.0.0.0.0	thing	10-11
# ::node	0.2.0.0.0.1	again	19-20
# ::node	0.2.1	sort	8-9
# ::node	0.2.1.0	this	7-8
# ::root	0	get-02
# ::edge	experience-01	ARG1	some	0.1	0.1.0	
# ::edge	experience-01	mod	any	0.1	0.1.1	
# ::edge	gain-02	ARG1	respect-01	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	gain-02	manner	again	0.2.0.0.0	0.2.0.0.0.1	
# ::edge	get-02	ARG0	anyone	0	0.0	
# ::edge	get-02	ARG1	experience-01	0	0.1	
# ::edge	get-02	manner	handle-01	0	0.2	
# ::edge	go-06	ARG1	gain-02	0.2.0.0	0.2.0.0.0	
# ::edge	handle-01	ARG1	or	0.2	0.2.0	
# ::edge	handle-01	ARG2	sort	0.2	0.2.1	
# ::edge	or	op1	go-06	0.2.0	0.2.0.0	
# ::edge	respect-01	ARG1	thing	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	sort	mod	this	0.2.1	0.2.1.0	
(g2 / get-02 
      :ARG0 (a2 / anyone) 
      :ARG1 (e2 / experience-01 
            :ARG1 (s2 / some) 
            :mod (a4 / any)) 
      :manner (h / handle-01 
            :ARG1 (o / or 
                  :op1 (g3 / go-06 
                        :ARG1 (g4 / gain-02 
                              :ARG1 (r / respect-01 
                                    :ARG1 (t3 / thing)) 
                              :manner (a3 / again)))) 
            :ARG2 (s / sort 
                  :mod (t2 / this))))

# ::snt Just say no.
# ::tok Just say no.
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:55.600
# ::node	0	say-01	1-2
# ::node	0.0	just	0-1
# ::root	0	say-01
# ::edge	say-01	ARG1	just	0	0.0	
(s / say-01 
      :ARG1 (j / just))

# ::snt Do it gradually if it's not something you're particularly comfortable with.
# ::tok Do it gradually if it 's not something you 're particularly comfortable with .
# ::alignments 0-1|0 1-2|0.1 8-9|0.0.0 11-12|0.0 2-3|0.2 10-11|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:55.689
# ::node	0	do-02	0-1
# ::node	0.0	comfortable	11-12
# ::node	0.0.0	you	8-9
# ::node	0.0.1	particular	10-11
# ::node	0.1	it	1-2
# ::node	0.2	gradual	2-3
# ::root	0	do-02
# ::edge	comfortable	domain	you	0.0	0.0.0	
# ::edge	comfortable	mod	particular	0.0	0.0.1	
# ::edge	do-02	ARG1	comfortable	0	0.0	
# ::edge	do-02	ARG6	it	0	0.1	
# ::edge	do-02	manner	gradual	0	0.2	
(d / do-02 
      :ARG1 (c / comfortable 
            :domain (y / you) 
            :mod (p / particular)) 
      :ARG6 (i / it) 
      :manner (g / gradual))

# ::snt You could start with 'No, sorry but I'm busy'
# ::tok You could start with ' No , sorry but I 'm busy '
# ::alignments 1-2|0 2-3|0.0 8-9|0.0.1 11-12|0.0.1.0.0 7-8|0.0.0.0 9-10|0.0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:55.748
# ::node	0	possible	1-2
# ::node	0.0	start-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.0.0	sorry-41	7-8
# ::node	0.0.1	contrast-01	8-9
# ::node	0.0.1.0	i	9-10
# ::node	0.0.1.0.0	busy	11-12
# ::root	0	possible
# ::edge	busy	domain	i	0.0.1.0.0	0.0.1.0	
# ::edge	contrast-01	ARG1	i	0.0.1	0.0.1.0	
# ::edge	possible	domain	start-01	0	0.0	
# ::edge	sorry-41	ARG1	you	0.0.0.0	0.0.0	
# ::edge	start-01	ARG0	you	0.0	0.0.0	
# ::edge	start-01	ARG1	contrast-01	0.0	0.0.1	
(p / possible 
      :domain (s / start-01 
            :ARG0 (y / you 
                  :ARG1-of (s2 / sorry-41)) 
            :ARG1 (c / contrast-01 
                  :ARG1 (i / i 
                        :domain-of (b / busy)))))

# ::snt Of course, don't go over the top with it lest you go in completely the opposite direction.
# ::tok Of course , do n't go over the top with it lest you go in completely the opposite direction .
# ::alignments 5-6|0 13-14|0.1 18-19|0.1.1 17-18|0.1.1.0 10-11|0.0.0 8-9|0.0 6-7|0.0.1 12-13|0.1.0 15-16|0.1.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:55.946
# ::node	0	go-01	5-6
# ::node	0.0	top	8-9
# ::node	0.0.0	it	10-11
# ::node	0.0.1	over	6-7
# ::node	0.1	go-01	13-14
# ::node	0.1.0	you	12-13
# ::node	0.1.1	direction	18-19
# ::node	0.1.1.0	opposite-41	17-18
# ::node	0.1.1.0.0	complete	15-16
# ::root	0	go-01
# ::edge	go-01	ARG0	you	0.1	0.1.0	
# ::edge	go-01	ARG1	go-01	0.1	0	
# ::edge	go-01	ARG1	top	0	0.0	
# ::edge	go-01	ARG2	direction	0.1	0.1.1	
# ::edge	it	calendar	top	0.0.0	0.0	
# ::edge	opposite-41	ARG1	direction	0.1.1.0	0.1.1	
# ::edge	opposite-41	ARG6	complete	0.1.1.0	0.1.1.0.0	
# ::edge	over	op1	top	0.0.1	0.0	
(g / go-01 
      :ARG1 (t / top 
            :calendar-of (i / it) 
            :op-of (o / over)) 
      :ARG1-of (g2 / go-01 
            :ARG0 (y / you) 
            :ARG2 (d / direction 
                  :ARG1-of (o2 / opposite-41 
                        :ARG6 (c / complete)))))

# ::snt If, in your mind, you're thinking no - say it.
# ::tok If , in your mind , you 're thinking no - say it .
# ::alignments 11-12|0 8-9|0.0 4-5|0.0.1 6-7|0.0.0 9-10|0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:56.020
# ::node	0	say-01	11-12
# ::node	0.0	think-01	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.1	mind	4-5
# ::node	0.0.2	no	9-10
# ::root	0	say-01
# ::edge	say-01	ARG1	think-01	0	0.0	
# ::edge	think-01	ARG0	you	0.0	0.0.0	
# ::edge	think-01	ARG1	mind	0.0	0.0.1	
# ::edge	think-01	ARG6	no	0.0	0.0.2	
(s / say-01 
      :ARG1 (t / think-01 
            :ARG0 (y2 / you) 
            :ARG1 (m / mind) 
            :ARG6 (n / no)))

# ::snt When they start to realise that you're not going to bend over backwards for them, they'll start respecting you more.
# ::tok When they start to realise that you 're not going to bend over backwards for them , they 'll start respecting you more .
# ::alignments 2-3|0.0.0 19-20|0.0.0.0 11-12|0.1.0 13-14|0.1.0.1 12-13|0.1.0.0 20-21|0.0.0.0.0 22-23|0.0.0.0.0.0 6-7|0.1 1-2|0.0 4-5|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:56.628
# ::node	0	realize-01	4-5
# ::node	0.0	they	1-2
# ::node	0.0.0	start-01	2-3
# ::node	0.0.0.0	start-01	19-20
# ::node	0.0.0.0.0	respect-01	20-21
# ::node	0.0.0.0.0.0	more	22-23
# ::node	0.1	you	6-7
# ::node	0.1.0	bend-01	11-12
# ::node	0.1.0.0	over	12-13
# ::node	0.1.0.1	backwards	13-14
# ::root	0	realize-01
# ::edge	bend-01	ARG0	you	0.1.0	0.1	
# ::edge	bend-01	ARG1	over	0.1.0	0.1.0.0	
# ::edge	bend-01	degree	backwards	0.1.0	0.1.0.1	
# ::edge	realize-01	ARG0	they	0	0.0	
# ::edge	realize-01	ARG1	you	0	0.1	
# ::edge	respect-01	ARG1	more	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	start-01	ARG0	they	0.0.0	0.0	
# ::edge	start-01	ARG1	respect-01	0.0.0.0	0.0.0.0.0	
# ::edge	start-01	time	start-01	0.0.0.0	0.0.0	
(r2 / realize-01 
      :ARG0 (t / they 
            :ARG0-of (s / start-01 
                  :time-of (s2 / start-01 
                        :ARG1 (r / respect-01 
                              :ARG1 (m / more))))) 
      :ARG1 (y / you 
            :ARG0-of (b / bend-01 
                  :ARG1 (o / over) 
                  :degree (b2 / backwards))))

# ::snt well this is such a bad attitude really, of course you can be respected if you're nice but not to the point where you just let them do anything to you, that's not being nice it's being a fool.
# ::tok well this is such a bad attitude really , of course you can be respected if you 're nice but not to the point where you just let them do anything to you , that 's not being nice it 's being a fool .
# ::alignments 6-7|0.1.0.0 0-1|0.1.0.0.1.1 7-8|0.1.0.0.1.0 1-2|0.1.0.0.1 5-6|0.1.0.0.0 3-4|0.1.0.0.2 12-13|0.1.1.0 19-20|0 18-19|0.1 27-28|0.1.0 26-27|0.1.0.2 29-30|0.1.0.1 30-31|0.1.0.1.0 38-39|0.0.0 14-15|0.1.1 11-12|0.1.1.0.0 34-35|0.0.0.0 43-44|0.0+0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:58.051
# ::node	0	contrast-01	19-20
# ::node	0.0	person	43-44
# ::node	0.0.0	nice-41	38-39
# ::node	0.0.0.0	that	34-35
# ::node	0.0.1	fool-01	43-44
# ::node	0.1	nice-41	18-19
# ::node	0.1.0	let-01	27-28
# ::node	0.1.0.0	attitude	6-7
# ::node	0.1.0.0.0	bad	5-6
# ::node	0.1.0.0.1	this	1-2
# ::node	0.1.0.0.1.0	really	7-8
# ::node	0.1.0.0.1.1	well	0-1
# ::node	0.1.0.0.2	such	3-4
# ::node	0.1.0.1	do-02	29-30
# ::node	0.1.0.1.0	anything	30-31
# ::node	0.1.0.2	just	26-27
# ::node	0.1.1	respect-01	14-15
# ::node	0.1.1.0	possible	12-13
# ::node	0.1.1.0.0	you	11-12
# ::root	0	contrast-01
# ::edge	attitude	mod	bad	0.1.0.0	0.1.0.0.0	
# ::edge	attitude	quant	such	0.1.0.0	0.1.0.0.2	
# ::edge	contrast-01	ARG0	person	0	0.0	
# ::edge	contrast-01	ARG1	nice-41	0	0.1	
# ::edge	do-02	ARG1	anything	0.1.0.1	0.1.0.1.0	
# ::edge	fool-01	ARG1	person	0.0.1	0.0	
# ::edge	let-01	ARG0	attitude	0.1.0	0.1.0.0	
# ::edge	let-01	ARG1	do-02	0.1.0	0.1.0.1	
# ::edge	let-01	ARG6	just	0.1.0	0.1.0.2	
# ::edge	nice-41	ARG0	that	0.0.0	0.0.0.0	
# ::edge	nice-41	ARG1	let-01	0.1	0.1.0	
# ::edge	nice-41	ARG1	person	0.0.0	0.0	
# ::edge	possible	calendar	you	0.1.1.0	0.1.1.0.0	
# ::edge	possible	domain	respect-01	0.1.1.0	0.1.1	
# ::edge	respect-01	ARG1	nice-41	0.1.1	0.1	
# ::edge	this	mod	attitude	0.1.0.0.1	0.1.0.0	
# ::edge	this	time	really	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	this	time	well	0.1.0.0.1	0.1.0.0.1.1	
(c / contrast-01 
      :ARG0 (p2 / person 
            :ARG1-of (n / nice-41 
                  :ARG0 (t3 / that)) 
            :ARG1-of (f / fool-01)) 
      :ARG1 (n2 / nice-41 
            :ARG1 (l / let-01 
                  :ARG0 (a / attitude 
                        :mod (b / bad) 
                        :mod-of (t / this 
                              :time (r / really) 
                              :time (w / well)) 
                        :quant (s / such)) 
                  :ARG1 (d / do-02 
                        :ARG1 (a2 / anything)) 
                  :ARG6 (j / just)) 
            :ARG1-of (r2 / respect-01 
                  :domain-of (p / possible 
                        :calendar (y / you)))))

# ::snt I don't know if anyone will read this, but I just feel desperate and feel the need to tell someone.
# ::tok I do n't know if anyone will read this , but I just feel desperate and feel the need to tell someone .
# ::alignments 10-11|0 15-16|0.1.2 13-14|0.1 18-19|0.1.2.0.0 20-21|0.1.2.0.0.0 21-22|0.1.2.0.0.0.0 16-17|0.1.2.0 12-13|0.1.1 14-15|0.1.0 3-4|0.0 7-8|0.2 8-9|0.2.1 5-6|0.2.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:05:58.727
# ::node	0	contrast-01	10-11
# ::node	0.0	know-01	3-4
# ::node	0.0.0	i	0-1
# ::node	0.1	feel-01	13-14
# ::node	0.1.0	desperate	14-15
# ::node	0.1.1	just	12-13
# ::node	0.1.2	and	15-16
# ::node	0.1.2.0	feel-01	16-17
# ::node	0.1.2.0.0	need-01	18-19
# ::node	0.1.2.0.0.0	tell-01	20-21
# ::node	0.1.2.0.0.0.0	someone	21-22
# ::node	0.2	read-01	7-8
# ::node	0.2.0	anyone	5-6
# ::node	0.2.1	this	8-9
# ::root	0	contrast-01
# ::edge	and	op1	feel-01	0.1.2	0.1	
# ::edge	and	op2	feel-01	0.1.2	0.1.2.0	
# ::edge	contrast-01	ARG1	know-01	0	0.0	
# ::edge	contrast-01	ARG2	feel-01	0	0.1	
# ::edge	contrast-01	ARG6	read-01	0	0.2	
# ::edge	feel-01	ARG1	desperate	0.1	0.1.0	
# ::edge	feel-01	ARG1	need-01	0.1.2.0	0.1.2.0.0	
# ::edge	feel-01	ARG6	just	0.1	0.1.1	
# ::edge	know-01	ARG1	i	0.0	0.0.0	
# ::edge	need-01	ARG1	tell-01	0.1.2.0.0	0.1.2.0.0.0	
# ::edge	read-01	ARG0	anyone	0.2	0.2.0	
# ::edge	read-01	ARG1	this	0.2	0.2.1	
# ::edge	tell-01	ARG1	someone	0.1.2.0.0.0	0.1.2.0.0.0.0	
(c / contrast-01 
      :ARG1 (k / know-01 
            :ARG1 (i / i)) 
      :ARG2 (f2 / feel-01 
            :ARG1 (d / desperate) 
            :ARG6 (j / just) 
            :op-of (a2 / and 
                  :op1 (f / feel-01 
                        :ARG1 (n / need-01 
                              :ARG1 (t2 / tell-01 
                                    :ARG1 (s / someone)))))) 
      :ARG6 (r / read-01 
            :ARG0 (a / anyone) 
            :ARG1 (t / this)))

# ::snt This September I left home, and started at University. I was incredibly anxious about doing this, but rather delayed thinking about it until I got here! Now I'm here, and have been for over two weeks, I feel terribly overwhelmed by it all and feel unintelligent and socially awkward.
# ::tok This September I left home , and started at University . I was incredibly anxious about doing this , but rather delayed thinking about it until I got here ! Now I 'm here , and have been for over two weeks , I feel terribly overwhelmed by it all and feel unintelligent and socially awkward .
# ::alignments 1-2|0.0.3.0.2+0.0.3.0.2.0 6-7|0.0.3.2 7-8|0.0.3.2.1 9-10|0.0.3.2.1.0 3-4|0.0.3 4-5|0.0 2-3|0.0.3.0 19-20|0.0.3.2.0.1 21-22|0.0.3.0.0 25-26|0.0.3.0.0.0.0 27-28|0.0.1 28-29|0.0.3.2.8 22-23|0.0.3.0.0.0 14-15|0.0.3.2.0.0 16-17|0.0.3.2.0 0-1|0.0.3.0.1 11-12|0.0.3.1 35-36|0.0.3.2.12 39-40|0.0.3.2.13 40-41|0.0.3.2.14 41-42|0.0.3.2.15+0.0.3.2.15.0 26-27|0.0.1.0 33-34|0.0.3.2.11 30-31|0.0.3.2.9 50-51|0.0.3.2.4 44-45|0 53-54|0.0.3.2.5 55-56|0.0.3.2.7 52-53|0.0.4+0.0.4.0 51-52|0.0.0 46-47|0.0.2 24-25|0.0.3.0.0.0.1 49-50|0.0.3.2.3 31-32|0.0.3.2.10 13-14|0.0.3.1.0 54-55|0.0.3.2.6 45-46|0.0.3.2.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:02.733
# ::node	0	feel-01	44-45
# ::node	0.0	home	4-5
# ::node	0.0.0	feel-01	51-52
# ::node	0.0.1	get-05	27-28
# ::node	0.0.1.0	i	26-27
# ::node	0.0.2	overwhelm-01	46-47
# ::node	0.0.3	leave-01	3-4
# ::node	0.0.3.0	i	2-3
# ::node	0.0.3.0.0	delay-01	21-22
# ::node	0.0.3.0.0.0	think-01	22-23
# ::node	0.0.3.0.0.0.0	until	25-26
# ::node	0.0.3.0.0.0.1	it	24-25
# ::node	0.0.3.0.1	this	0-1
# ::node	0.0.3.0.2	date-entity	1-2
# ::node	0.0.3.0.2.0	9	1-2
# ::node	0.0.3.1	i	11-12
# ::node	0.0.3.1.0	incredible	13-14
# ::node	0.0.3.2	and	6-7
# ::node	0.0.3.2.0	do-02	16-17
# ::node	0.0.3.2.0.0	anxious	14-15
# ::node	0.0.3.2.0.1	contrast-01	19-20
# ::node	0.0.3.2.1	start-01	7-8
# ::node	0.0.3.2.1.0	university	9-10
# ::node	0.0.3.2.10	i	31-32
# ::node	0.0.3.2.11	here	33-34
# ::node	0.0.3.2.12	and	35-36
# ::node	0.0.3.2.13	over	39-40
# ::node	0.0.3.2.14	2	40-41
# ::node	0.0.3.2.15	temporal-quantity	41-42
# ::node	0.0.3.2.15.0	week	41-42
# ::node	0.0.3.2.2	terrible	45-46
# ::node	0.0.3.2.3	all	49-50
# ::node	0.0.3.2.4	and	50-51
# ::node	0.0.3.2.5	and	53-54
# ::node	0.0.3.2.6	social	54-55
# ::node	0.0.3.2.7	awkward	55-56
# ::node	0.0.3.2.8	here	28-29
# ::node	0.0.3.2.9	now	30-31
# ::node	0.0.4	intelligent-41	52-53
# ::node	0.0.4.0	-	52-53
# ::root	0	feel-01
# ::edge	and	condition	do-02	0.0.3.2	0.0.3.2.0	
# ::edge	and	op1	leave-01	0.0.3.2	0.0.3	
# ::edge	and	op10	temporal-quantity	0.0.3.2	0.0.3.2.15	
# ::edge	and	op11	terrible	0.0.3.2	0.0.3.2.2	
# ::edge	and	op12	all	0.0.3.2	0.0.3.2.3	
# ::edge	and	op13	and	0.0.3.2	0.0.3.2.4	
# ::edge	and	op14	and	0.0.3.2	0.0.3.2.5	
# ::edge	and	op15	social	0.0.3.2	0.0.3.2.6	
# ::edge	and	op16	awkward	0.0.3.2	0.0.3.2.7	
# ::edge	and	op2	start-01	0.0.3.2	0.0.3.2.1	
# ::edge	and	op3	here	0.0.3.2	0.0.3.2.8	
# ::edge	and	op4	now	0.0.3.2	0.0.3.2.9	
# ::edge	and	op5	i	0.0.3.2	0.0.3.2.10	
# ::edge	and	op6	here	0.0.3.2	0.0.3.2.11	
# ::edge	and	op7	and	0.0.3.2	0.0.3.2.12	
# ::edge	and	op8	over	0.0.3.2	0.0.3.2.13	
# ::edge	and	op9	2	0.0.3.2	0.0.3.2.14	
# ::edge	contrast-01	ARG1	do-02	0.0.3.2.0.1	0.0.3.2.0	
# ::edge	date-entity	month	9	0.0.3.0.2	0.0.3.0.2.0	
# ::edge	delay-01	ARG0	i	0.0.3.0.0	0.0.3.0	
# ::edge	delay-01	ARG1	think-01	0.0.3.0.0	0.0.3.0.0.0	
# ::edge	do-02	ARG1	anxious	0.0.3.2.0	0.0.3.2.0.0	
# ::edge	feel-01	ARG1	home	0	0.0	
# ::edge	feel-01	ARG1	home	0.0.0	0.0	
# ::edge	get-05	ARG0	i	0.0.1	0.0.1.0	
# ::edge	get-05	ARG1	home	0.0.1	0.0	
# ::edge	i	mod	this	0.0.3.0	0.0.3.0.1	
# ::edge	i	time	date-entity	0.0.3.0	0.0.3.0.2	
# ::edge	incredible	domain	i	0.0.3.1.0	0.0.3.1	
# ::edge	intelligent-41	ARG1	home	0.0.4	0.0	
# ::edge	intelligent-41	polarity	-	0.0.4	0.0.4.0	
# ::edge	leave-01	ARG0	i	0.0.3	0.0.3.0	
# ::edge	leave-01	ARG1	home	0.0.3	0.0	
# ::edge	leave-01	ARG6	i	0.0.3	0.0.3.1	
# ::edge	overwhelm-01	ARG1	home	0.0.2	0.0	
# ::edge	start-01	ARG1	university	0.0.3.2.1	0.0.3.2.1.0	
# ::edge	temporal-quantity	unit	week	0.0.3.2.15	0.0.3.2.15.0	
# ::edge	think-01	ARG1	until	0.0.3.0.0.0	0.0.3.0.0.0.0	
# ::edge	think-01	ARG6	it	0.0.3.0.0.0	0.0.3.0.0.0.1	
(f2 / feel-01 
      :ARG1 (h / home 
            :ARG1-of (f / feel-01) 
            :ARG1-of (g / get-05 
                  :ARG0 (i3 / i)) 
            :ARG1-of (o2 / overwhelm-01) 
            :ARG1-of (l / leave-01 
                  :ARG0 (i / i 
                        :ARG0-of (d3 / delay-01 
                              :ARG1 (t2 / think-01 
                                    :ARG1 (u2 / until) 
                                    :ARG6 (i6 / it))) 
                        :mod (t3 / this) 
                        :time (d / date-entity 
                              :month 9)) 
                  :ARG6 (i2 / i 
                        :domain-of (i4 / incredible)) 
                  :op-of (a / and 
                        :condition (d2 / do-02 
                              :ARG1 (a7 / anxious) 
                              :ARG1-of (c / contrast-01)) 
                        :op1 (s / start-01 
                              :ARG1 (u / university)) 
                        :op10 (t4 / terrible) 
                        :op11 (a4 / all) 
                        :op12 (a3 / and) 
                        :op13 (a5 / and) 
                        :op14 (s2 / social) 
                        :op15 (a6 / awkward) 
                        :op2 (h2 / here) 
                        :op3 (n / now) 
                        :op4 (i5 / i) 
                        :op5 (h3 / here) 
                        :op6 (a2 / and) 
                        :op7 (o / over) 
                        :op8 2 
                        :op9 (t / temporal-quantity 
                              :unit (w / week)))) 
            :ARG1-of (i7 / intelligent-41 
                  :polarity -)))

# ::snt I have been struggling emotionally for the majority of my life since moving to Secondary School, although I did lose my dad at around the age of 9 and always used to blame that for my feelings. I have had two periods of counselling in my life, over roughly 15 months from December 2009 until around March this year.
# ::tok I have been struggling emotionally for the majority of my life since moving to Secondary School , although I did lose my dad at around the age of 9 and always used to blame that for my feelings . I have had two periods of counselling in my life , over roughly 15 months from December 2009 until around March this year .
# ::alignments 55-57|0.11+0.11.0+0.11.1 59-60|0.2+0.2.0 3-4|0.1 11-12|0.1.2.1 12-13|0.1.2 15-16|0.1.2.0.0 14-15|0.1.2.0 29-30|0 33-34|0.0 30-31|0.0.0 20-21|0.1.2.2 24-25|0.1.2.2.2.1 26-27|0.1.2.2.2 28-29|0.7.0 61-62|0.4+0.4.0 22-23|0.1.2.2.1 7-8|0.1.2.2.2.0 0-1|0.1.0 1-2|0.1.1 51-52|0.8 52-53|0.9 53-54|0.10+0.10.0 60-61|0.3 58-59|0.12 43-44|0.6 45-46|0.7 42-43|0.5 18-19|0.1.2.2.0 37-38|0.7.1+0.7.1.0 4-5|0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:07.918
# ::node	0	and	29-30
# ::node	0.0	blame-01	33-34
# ::node	0.0.0	always	30-31
# ::node	0.1	struggle-01	3-4
# ::node	0.1.0	i	0-1
# ::node	0.1.1	have-03	1-2
# ::node	0.1.1.0	emotional	4-5
# ::node	0.1.2	move-01	12-13
# ::node	0.1.2.0	secondary	14-15
# ::node	0.1.2.0.0	school	15-16
# ::node	0.1.2.1	since	11-12
# ::node	0.1.2.2	lose-02	20-21
# ::node	0.1.2.2.0	i	18-19
# ::node	0.1.2.2.1	dad	22-23
# ::node	0.1.2.2.2	age-01	26-27
# ::node	0.1.2.2.2.0	majority	7-8
# ::node	0.1.2.2.2.1	around	24-25
# ::node	0.10	temporal-quantity	53-54
# ::node	0.10.0	month	53-54
# ::node	0.11	date-entity	55-57
# ::node	0.11.0	12	55-57
# ::node	0.11.1	2009	55-57
# ::node	0.12	around	58-59
# ::node	0.2	date-entity	59-60
# ::node	0.2.0	3	59-60
# ::node	0.3	this	60-61
# ::node	0.4	temporal-quantity	61-62
# ::node	0.4.0	year	61-62
# ::node	0.5	2	42-43
# ::node	0.6	period	43-44
# ::node	0.7	counsel-01	45-46
# ::node	0.7.0	9	28-29
# ::node	0.7.1	thing	37-38
# ::node	0.7.1.0	feel-01	37-38
# ::node	0.8	roughly	51-52
# ::node	0.9	15	52-53
# ::root	0	and
# ::edge	age-01	ARG1	majority	0.1.2.2.2	0.1.2.2.2.0	
# ::edge	and	op1	struggle-01	0	0.1	
# ::edge	and	op10	date-entity	0	0.2	
# ::edge	and	op11	this	0	0.3	
# ::edge	and	op12	temporal-quantity	0	0.4	
# ::edge	and	op2	2	0	0.5	
# ::edge	and	op3	period	0	0.6	
# ::edge	and	op4	counsel-01	0	0.7	
# ::edge	and	op5	roughly	0	0.8	
# ::edge	and	op6	15	0	0.9	
# ::edge	and	op7	temporal-quantity	0	0.10	
# ::edge	and	op8	date-entity	0	0.11	
# ::edge	and	op9	around	0	0.12	
# ::edge	around	op1	age-01	0.1.2.2.2.1	0.1.2.2.2	
# ::edge	blame-01	ARG0	always	0.0	0.0.0	
# ::edge	blame-01	ARG1	and	0.0	0	
# ::edge	counsel-01	ARG0	9	0.7	0.7.0	
# ::edge	counsel-01	ARG1	thing	0.7	0.7.1	
# ::edge	date-entity	month	12	0.11	0.11.0	
# ::edge	date-entity	month	3	0.2	0.2.0	
# ::edge	date-entity	year	2009	0.11	0.11.1	
# ::edge	feel-01	ARG1	thing	0.7.1.0	0.7.1	
# ::edge	have-03	ARG1	emotional	0.1.1	0.1.1.0	
# ::edge	lose-02	ARG0	i	0.1.2.2	0.1.2.2.0	
# ::edge	lose-02	ARG1	dad	0.1.2.2	0.1.2.2.1	
# ::edge	lose-02	time	age-01	0.1.2.2	0.1.2.2.2	
# ::edge	move-01	ARG2	secondary	0.1.2	0.1.2.0	
# ::edge	move-01	time	lose-02	0.1.2	0.1.2.2	
# ::edge	school	mod	secondary	0.1.2.0.0	0.1.2.0	
# ::edge	since	op1	move-01	0.1.2.1	0.1.2	
# ::edge	struggle-01	ARG0	i	0.1	0.1.0	
# ::edge	struggle-01	ARG1	have-03	0.1	0.1.1	
# ::edge	struggle-01	ARG2	move-01	0.1	0.1.2	
# ::edge	temporal-quantity	unit	month	0.10	0.10.0	
# ::edge	temporal-quantity	unit	year	0.4	0.4.0	
(a / and 
      :ARG1-of (b / blame-01 
            :ARG0 (a5 / always)) 
      :op1 (s / struggle-01 
            :ARG0 (i / i) 
            :ARG1 (h / have-03 
                  :ARG1 (e / emotional)) 
            :ARG2 (m4 / move-01 
                  :ARG2 (s3 / secondary 
                        :mod-of (s2 / school)) 
                  :op-of (s4 / since) 
                  :time (l2 / lose-02 
                        :ARG0 (i2 / i) 
                        :ARG1 (d3 / dad) 
                        :time (a3 / age-01 
                              :ARG1 (m3 / majority) 
                              :op-of (a2 / around))))) 
      :op10 (d2 / date-entity 
            :month 3) 
      :op11 (t4 / this) 
      :op12 (t2 / temporal-quantity 
            :unit (y / year)) 
      :op2 2 
      :op3 (p / period) 
      :op4 (c / counsel-01 
            :ARG0 9 
            :ARG1 (t3 / thing 
                  :ARG1-of (f / feel-01))) 
      :op5 (r2 / roughly) 
      :op6 15 
      :op7 (t / temporal-quantity 
            :unit (m / month)) 
      :op8 (d / date-entity 
            :month 12 
            :year 2009) 
      :op9 (a4 / around))

# ::snt I feel at the moment like the problems in my life are incredibly overwhelming, and are making me ever more doubtful of my always low self-esteem. I have no ability to concentrate on work, often find myself becoming very quiet in social occasions, and doubt myself over anything and everything.
# ::tok I feel at the moment like the problems in my life are incredibly overwhelming , and are making me ever more doubtful of my always low self - esteem . I have no ability to concentrate on work , often find myself becoming very quiet in social occasions , and doubt myself over anything and everything .
# ::alignments 32-33|0.0.2.0 1-2|0 4-5|0.1 15-16|0.2.0.0.1 17-18|0.2.0.0 50-51|0.0.4 20-21|0.2.0.0.0.0 19-20|0.2.0.0.0 28-29|0.2.0.0.0.0.0.0.0 25-26|0.0.1.0.0 24-25|0.0.1.0 26-27|0.2.0.0.0.0.0.0 13-14|0.2 7-8|0.2.0 0-1|0.0 49-50|0.0.4.1 54-55|0.0.4.0.0 55-56|0.0.4.0.0.0 53-54|0.0.4.0 40-41|0.0.2.1 39-40|0.0.2.1.0 42-43|0.0.2 44-45|0.0.0 47-48|0.0.4.1.0 43-44|0.0.0.1 30-31|0.0.3.0 35-36|0.0.1 37-38|0.0.3 12-13|0.2.1 21-22|0.2.0.0.0.0.0 46-47|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:10.431
# ::node	0	feel-01	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	quiet-01	44-45
# ::node	0.0.0.0	society	46-47
# ::node	0.0.0.1	very	43-44
# ::node	0.0.1	concentrate-01	35-36
# ::node	0.0.1.0	always	24-25
# ::node	0.0.1.0.0	low	25-26
# ::node	0.0.2	become-01	42-43
# ::node	0.0.2.0	-	32-33
# ::node	0.0.2.1	find-01	40-41
# ::node	0.0.2.1.0	often	39-40
# ::node	0.0.3	work-01	37-38
# ::node	0.0.3.0	i	30-31
# ::node	0.0.4	doubt-01	50-51
# ::node	0.0.4.0	anything	53-54
# ::node	0.0.4.0.0	and	54-55
# ::node	0.0.4.0.0.0	everything	55-56
# ::node	0.0.4.1	and	49-50
# ::node	0.0.4.1.0	occasion	47-48
# ::node	0.1	moment	4-5
# ::node	0.2	overwhelm-01	13-14
# ::node	0.2.0	problem	7-8
# ::node	0.2.0.0	make-02	17-18
# ::node	0.2.0.0.0	ever	19-20
# ::node	0.2.0.0.0.0	more	20-21
# ::node	0.2.0.0.0.0.0	doubt-01	21-22
# ::node	0.2.0.0.0.0.0.0	self	26-27
# ::node	0.2.0.0.0.0.0.0.0	esteem	28-29
# ::node	0.2.0.0.1	and	15-16
# ::node	0.2.1	credible	12-13
# ::root	0	feel-01
# ::edge	and	op1	anything	0.0.4.0.0	0.0.4.0	
# ::edge	and	op1	make-02	0.2.0.0.1	0.2.0.0	
# ::edge	and	op1	occasion	0.0.4.1	0.0.4.1.0	
# ::edge	and	op2	doubt-01	0.0.4.1	0.0.4	
# ::edge	and	op2	everything	0.0.4.0.0	0.0.4.0.0.0	
# ::edge	become-01	ARG0	i	0.0.2	0.0	
# ::edge	become-01	ARG1	-	0.0.2	0.0.2.0	
# ::edge	concentrate-01	ARG0	i	0.0.1	0.0	
# ::edge	concentrate-01	ARG1	always	0.0.1	0.0.1.0	
# ::edge	doubt-01	ARG0	i	0.0.4	0.0	
# ::edge	doubt-01	ARG1	anything	0.0.4	0.0.4.0	
# ::edge	doubt-01	ARG1	self	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	doubt-01	degree	more	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	esteem	mod	self	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG1	moment	0	0.1	
# ::edge	find-01	ARG1	become-01	0.0.2.1	0.0.2	
# ::edge	find-01	ARG6	often	0.0.2.1	0.0.2.1.0	
# ::edge	low	time	always	0.0.1.0.0	0.0.1.0	
# ::edge	make-02	ARG0	problem	0.2.0.0	0.2.0	
# ::edge	make-02	ARG1	ever	0.2.0.0	0.2.0.0.0	
# ::edge	more	mod	ever	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	overwhelm-01	ARG1	problem	0.2	0.2.0	
# ::edge	overwhelm-01	ARG2	feel-01	0.2	0	
# ::edge	overwhelm-01	ARG6	credible	0.2	0.2.1	
# ::edge	quiet-01	ARG0	i	0.0.0	0.0	
# ::edge	quiet-01	ARG1	society	0.0.0	0.0.0.0	
# ::edge	quiet-01	ARG6	very	0.0.0	0.0.0.1	
# ::edge	work-01	ARG0	i	0.0.3	0.0	
# ::edge	work-01	ARG1	i	0.0.3	0.0.3.0	
(f / feel-01 
      :ARG0 (i / i 
            :ARG0-of (q / quiet-01 
                  :ARG1 (s2 / society) 
                  :ARG6 (v / very)) 
            :ARG0-of (c2 / concentrate-01 
                  :ARG1 (a2 / always 
                        :time-of (l2 / low))) 
            :ARG0-of (b / become-01 
                  :ARG1 (- / -) 
                  :ARG1-of (f2 / find-01 
                        :ARG6 (o3 / often))) 
            :ARG0-of (w / work-01 
                  :ARG1 (i3 / i)) 
            :ARG0-of (d / doubt-01 
                  :ARG1 (a5 / anything 
                        :op-of (a4 / and 
                              :op1 (e3 / everything))) 
                  :op-of (a3 / and 
                        :op1 (o2 / occasion)))) 
      :ARG1 (m4 / moment) 
      :ARG2-of (o / overwhelm-01 
            :ARG1 (p / problem 
                  :ARG0-of (m2 / make-02 
                        :ARG1 (e2 / ever 
                              :mod-of (m3 / more 
                                    :degree-of (d2 / doubt-01 
                                          :ARG1 (s / self 
                                                :mod-of (e / esteem))))) 
                        :op-of (a / and))) 
            :ARG6 (c3 / credible)))

# ::snt Neither of my counsellers have diagnosed me with depression, and both have suggested I do not suffer from it, but it is a huge worry to me, as depression was the cause of my dad's death, suicide.
# ::tok Neither of my counsellers have diagnosed me with depression , and both have suggested I do not suffer from it , but it is a huge worry to me , as depression was the cause of my dad 's death , suicide .
# ::alignments 21-22|0 26-27|0.0.1 34-35|0.0.1.0.0 8-9|0.0.2 41-42|0.0.1.0.0.0.1 39-40|0.0.1.0.0.0 37-38|0.0.1.0.0.0.0 25-26|0.0.1.1 10-11|0.1.1 13-14|0.1 17-18|0.1.0 5-6|0.0 31-32|0.0.1.0 14-15|0.1.0.0 3-4|0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:11.592
# ::node	0	contrast-01	21-22
# ::node	0.0	diagnose-01	5-6
# ::node	0.0.0	person	3-4
# ::node	0.0.0.0	counsel-01	3-4
# ::node	0.0.1	worry-01	26-27
# ::node	0.0.1.0	depression	31-32
# ::node	0.0.1.0.0	cause-01	34-35
# ::node	0.0.1.0.0.0	die-01	39-40
# ::node	0.0.1.0.0.0.0	dad	37-38
# ::node	0.0.1.0.0.0.1	suicide	41-42
# ::node	0.0.1.1	huge	25-26
# ::node	0.0.2	depression	8-9
# ::node	0.1	suggest-01	13-14
# ::node	0.1.0	suffer-01	17-18
# ::node	0.1.0.0	i	14-15
# ::node	0.1.1	and	10-11
# ::root	0	contrast-01
# ::edge	and	op1	suggest-01	0.1.1	0.1	
# ::edge	cause-01	ARG0	depression	0.0.1.0.0	0.0.1.0	
# ::edge	cause-01	ARG1	die-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	contrast-01	ARG1	diagnose-01	0	0.0	
# ::edge	contrast-01	ARG2	suggest-01	0	0.1	
# ::edge	counsel-01	ARG0	person	0.0.0.0	0.0.0	
# ::edge	diagnose-01	ARG0	person	0.0	0.0.0	
# ::edge	diagnose-01	ARG1	worry-01	0.0	0.0.1	
# ::edge	diagnose-01	location	depression	0.0	0.0.2	
# ::edge	die-01	ARG1	dad	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	die-01	location	suicide	0.0.1.0.0.0	0.0.1.0.0.0.1	
# ::edge	suffer-01	ARG1	i	0.1.0	0.1.0.0	
# ::edge	suggest-01	ARG1	suffer-01	0.1	0.1.0	
# ::edge	worry-01	ARG1	depression	0.0.1	0.0.1.0	
# ::edge	worry-01	mod	huge	0.0.1	0.0.1.1	
(c / contrast-01 
      :ARG1 (d / diagnose-01 
            :ARG0 (p / person 
                  :ARG0-of (c2 / counsel-01)) 
            :ARG1 (w / worry-01 
                  :ARG1 (d2 / depression 
                        :ARG0-of (c4 / cause-01 
                              :ARG1 (d4 / die-01 
                                    :ARG1 (d5 / dad) 
                                    :location (s3 / suicide)))) 
                  :mod (h / huge)) 
            :location (d3 / depression)) 
      :ARG2 (s / suggest-01 
            :ARG1 (s2 / suffer-01 
                  :ARG1 (i / i)) 
            :op-of (a / and)))

# ::snt I have tried to solve my problems before, and have found exercise and meditation particularly useful, and have also tried things like self-help books and tapes. But my general feeling, is, 'Is this what my life will be? My one chance at existance, my one chance of being a young man, I am wasting it!' And these feelings are beating away at me.
# ::tok I have tried to solve my problems before , and have found exercise and meditation particularly useful , and have also tried things like self - help books and tapes . But my general feeling , is , ' Is this what my life will be ? My one chance at existance , my one chance of being a young man , I am wasting it ! ' And these feelings are beating away at me .
# ::alignments 9-10|0.0 2-3|0.0.1.1 20-21|0.0.2.1.4.3 22-23|0.0.2.1.4.1 13-14|0.0.2.0 29-30|0.0.2.1.4.2.0 27-28|0.0.2.1.4.0 26-27|0.0.2.1.4.0.0 24-25|0.0.2.1.4.0.0.0 11-12|0.0.2 16-17|0.0.2.0.0.0 18-19|0.0.2.1 14-15|0.0.2.0.1 12-13|0.0.2.0.0 21-22|0.0.2.1.4 7-8|0.0.1.1.1 4-5|0.0.1 6-7|0.0.1.0 0-1|0.0.1.1.0 31-32|0 34-35|0.0.0 33-34|0.0.0.0 40-41|0.0.2.1.5 62-63|0.0.2.1.9 64-65|0.0.2.1.2 28-29|0.0.2.1.4.2 49-50|0.0.2.1.8 60-61|0.0.2.1.10 59-60|0.0.2.1.6 55-56|0.0.2.1.7 48-49|0.0.2.1.11 72-73|0.0.2.1.0 73-74|0.0.2.1.0.0 15-16|0.0.2.0.0.0.0 51-52|0.0.2.1.1 70-71|0.0.2.1.3.0+0.0.2.1.3 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:16.635
# ::node	0	contrast-01	31-32
# ::node	0.0	and	9-10
# ::node	0.0.0	feel-01	34-35
# ::node	0.0.0.0	general	33-34
# ::node	0.0.1	solve-01	4-5
# ::node	0.0.1.0	problem	6-7
# ::node	0.0.1.1	try-01	2-3
# ::node	0.0.1.1.0	i	0-1
# ::node	0.0.1.1.1	before	7-8
# ::node	0.0.2	find-02	11-12
# ::node	0.0.2.0	and	13-14
# ::node	0.0.2.0.0	exercise	12-13
# ::node	0.0.2.0.0.0	useful	16-17
# ::node	0.0.2.0.0.0.0	particular	15-16
# ::node	0.0.2.0.1	meditation	14-15
# ::node	0.0.2.1	and	18-19
# ::node	0.0.2.1.0	beat-02	72-73
# ::node	0.0.2.1.0.0	away	73-74
# ::node	0.0.2.1.1	exist-01	51-52
# ::node	0.0.2.1.10	man	60-61
# ::node	0.0.2.1.11	one	48-49
# ::node	0.0.2.1.2	waste-01	64-65
# ::node	0.0.2.1.3	feel-01	70-71
# ::node	0.0.2.1.3.0	thing	70-71
# ::node	0.0.2.1.4	try-01	21-22
# ::node	0.0.2.1.4.0	book	27-28
# ::node	0.0.2.1.4.0.0	help-01	26-27
# ::node	0.0.2.1.4.0.0.0	self	24-25
# ::node	0.0.2.1.4.1	thing	22-23
# ::node	0.0.2.1.4.2	and	28-29
# ::node	0.0.2.1.4.2.0	tape	29-30
# ::node	0.0.2.1.4.3	also	20-21
# ::node	0.0.2.1.5	this	40-41
# ::node	0.0.2.1.6	young	59-60
# ::node	0.0.2.1.7	chance	55-56
# ::node	0.0.2.1.8	chance	49-50
# ::node	0.0.2.1.9	i	62-63
# ::root	0	contrast-01
# ::edge	and	op1	exercise	0.0.2.0	0.0.2.0.0	
# ::edge	and	op1	find-02	0.0.2.1	0.0.2	
# ::edge	and	op1	solve-01	0.0	0.0.1	
# ::edge	and	op1	tape	0.0.2.1.4.2	0.0.2.1.4.2.0	
# ::edge	and	op2	find-02	0.0	0.0.2	
# ::edge	and	op2	meditation	0.0.2.0	0.0.2.0.1	
# ::edge	and	op2	try-01	0.0.2.1	0.0.2.1.4	
# ::edge	beat-02	ARG1	and	0.0.2.1.0	0.0.2.1	
# ::edge	beat-02	ARG6	away	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	chance	purpose	and	0.0.2.1.7	0.0.2.1	
# ::edge	chance	purpose	and	0.0.2.1.8	0.0.2.1	
# ::edge	contrast-01	ARG1	and	0	0.0	
# ::edge	exercise	mod	useful	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	exist-01	ARG1	and	0.0.2.1.1	0.0.2.1	
# ::edge	feel-01	ARG1	general	0.0.0	0.0.0.0	
# ::edge	feel-01	ARG1	thing	0.0.2.1.3	0.0.2.1.3.0	
# ::edge	feel-01	ARG3	and	0.0.0	0.0	
# ::edge	feel-01	ARG3	and	0.0.2.1.3	0.0.2.1	
# ::edge	find-02	ARG1	and	0.0.2	0.0.2.0	
# ::edge	help-01	ARG1	book	0.0.2.1.4.0.0	0.0.2.1.4.0	
# ::edge	help-01	mod	self	0.0.2.1.4.0.0	0.0.2.1.4.0.0.0	
# ::edge	i	purpose	and	0.0.2.1.9	0.0.2.1	
# ::edge	man	purpose	and	0.0.2.1.10	0.0.2.1	
# ::edge	one	purpose	and	0.0.2.1.11	0.0.2.1	
# ::edge	solve-01	ARG1	problem	0.0.1	0.0.1.0	
# ::edge	this	purpose	and	0.0.2.1.5	0.0.2.1	
# ::edge	try-01	ARG0	book	0.0.2.1.4	0.0.2.1.4.0	
# ::edge	try-01	ARG0	i	0.0.1.1	0.0.1.1.0	
# ::edge	try-01	ARG1	solve-01	0.0.1.1	0.0.1	
# ::edge	try-01	ARG1	thing	0.0.2.1.4	0.0.2.1.4.1	
# ::edge	try-01	ARG2	and	0.0.2.1.4	0.0.2.1.4.2	
# ::edge	try-01	ARG6	before	0.0.1.1	0.0.1.1.1	
# ::edge	try-01	mod	also	0.0.2.1.4	0.0.2.1.4.3	
# ::edge	useful	mod	particular	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	waste-01	ARG1	and	0.0.2.1.2	0.0.2.1	
# ::edge	young	purpose	and	0.0.2.1.6	0.0.2.1	
(c / contrast-01 
      :ARG1 (a / and 
            :ARG3-of (f2 / feel-01 
                  :ARG1 (g / general)) 
            :op1 (s / solve-01 
                  :ARG1 (p / problem) 
                  :ARG1-of (t2 / try-01 
                        :ARG0 (i / i) 
                        :ARG6 (b / before))) 
            :op2 (f / find-02 
                  :ARG1 (a3 / and 
                        :op1 (e / exercise 
                              :mod (u / useful 
                                    :mod (p2 / particular))) 
                        :op2 (m2 / meditation)) 
                  :op-of (a2 / and 
                        :ARG1-of (b3 / beat-02 
                              :ARG6 (a6 / away)) 
                        :ARG1-of (e2 / exist-01) 
                        :ARG1-of (w / waste-01) 
                        :ARG3-of (f3 / feel-01 
                              :ARG1 (t7 / thing)) 
                        :op1 (t / try-01 
                              :ARG0 (b2 / book 
                                    :ARG1-of (h / help-01 
                                          :mod (s2 / self))) 
                              :ARG1 (t3 / thing) 
                              :ARG2 (a5 / and 
                                    :op1 (t4 / tape)) 
                              :mod (a4 / also)) 
                        :purpose-of (t6 / this) 
                        :purpose-of (y / young) 
                        :purpose-of (c2 / chance) 
                        :purpose-of (c3 / chance) 
                        :purpose-of (i2 / i) 
                        :purpose-of (m3 / man) 
                        :purpose-of (o / one)))))

# ::snt I simply don't know what to do, and when I think of things to do, I never follow through with it. Friends often say I'm lazy, and I can't disagree a lot of the time. I feel like everything anyone could do to help, people have tried, and time and time again I fail.
# ::tok I simply do n't know what to do , and when I think of things to do , I never follow through with it . Friends often say I 'm lazy , and I ca n't disagree a lot of the time . I feel like everything anyone could do to help , people have tried , and time and time again I fail .
# ::alignments 9-10|0.0 20-21|0.0.12 12-13|0.0.12.2.0 14-15|0.0.12.2.0.1 2-3|0.0.3.0 4-5|0.0.3 7-8|0.0.6.0+0.0.6.0.0 0-1|0.0.12.1 32-33|0.0.16 48-49|0.0.5 36-37|0.0.1 41-42|0.0.18 38-39|0.0.17 27-28|0 26-27|0.0.14 30-31|0.0.15 11-12|0.0.12.2.0.0 25-26|0.0.13 57-58|0.0.8 63-64|0.0.0 61-62|0.0.11 58-59|0.0.9 60-61|0.0.10 44-45|0.0.2 55-56|0.0.7 46-47|0.0.19 16-17|0.0.12.2 51-52|0.0.6 47-48|0.0.4 18-19|0.0.12.0 1-2|0.0.3.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:18.442
# ::node	0	say-01	27-28
# ::node	0.0	and	9-10
# ::node	0.0.0	fail-01	63-64
# ::node	0.0.1	disagree-01	36-37
# ::node	0.0.10	time	60-61
# ::node	0.0.11	again	61-62
# ::node	0.0.12	follow-07	20-21
# ::node	0.0.12.0	i	18-19
# ::node	0.0.12.1	i	0-1
# ::node	0.0.12.2	do-02	16-17
# ::node	0.0.12.2.0	think-01	12-13
# ::node	0.0.12.2.0.0	i	11-12
# ::node	0.0.12.2.0.1	thing	14-15
# ::node	0.0.13	friend	25-26
# ::node	0.0.14	often	26-27
# ::node	0.0.15	lazy	30-31
# ::node	0.0.16	and	32-33
# ::node	0.0.17	lot	38-39
# ::node	0.0.18	time	41-42
# ::node	0.0.19	everything	46-47
# ::node	0.0.2	feel-01	44-45
# ::node	0.0.3	know-01	4-5
# ::node	0.0.3.0	do-02	2-3
# ::node	0.0.3.0.0	simple	1-2
# ::node	0.0.4	anyone	47-48
# ::node	0.0.5	possible	48-49
# ::node	0.0.6	help-01	51-52
# ::node	0.0.6.0	thing	7-8
# ::node	0.0.6.0.0	do-02	7-8
# ::node	0.0.7	try-01	55-56
# ::node	0.0.8	and	57-58
# ::node	0.0.9	time	58-59
# ::root	0	say-01
# ::edge	and	op1	know-01	0.0	0.0.3	
# ::edge	and	op10	anyone	0.0	0.0.4	
# ::edge	and	op11	possible	0.0	0.0.5	
# ::edge	and	op12	help-01	0.0	0.0.6	
# ::edge	and	op13	try-01	0.0	0.0.7	
# ::edge	and	op14	and	0.0	0.0.8	
# ::edge	and	op15	time	0.0	0.0.9	
# ::edge	and	op16	time	0.0	0.0.10	
# ::edge	and	op17	again	0.0	0.0.11	
# ::edge	and	op2	follow-07	0.0	0.0.12	
# ::edge	and	op3	friend	0.0	0.0.13	
# ::edge	and	op4	often	0.0	0.0.14	
# ::edge	and	op5	lazy	0.0	0.0.15	
# ::edge	and	op6	and	0.0	0.0.16	
# ::edge	and	op7	lot	0.0	0.0.17	
# ::edge	and	op8	time	0.0	0.0.18	
# ::edge	and	op9	everything	0.0	0.0.19	
# ::edge	disagree-01	ARG1	and	0.0.1	0.0	
# ::edge	do-02	ARG1	follow-07	0.0.12.2	0.0.12	
# ::edge	do-02	ARG1	simple	0.0.3.0	0.0.3.0.0	
# ::edge	do-02	ARG1	thing	0.0.6.0.0	0.0.6.0	
# ::edge	fail-01	ARG1	and	0.0.0	0.0	
# ::edge	feel-01	ARG1	and	0.0.2	0.0	
# ::edge	follow-07	ARG0	i	0.0.12	0.0.12.0	
# ::edge	follow-07	ARG1	i	0.0.12	0.0.12.1	
# ::edge	help-01	ARG1	thing	0.0.6	0.0.6.0	
# ::edge	know-01	ARG1	do-02	0.0.3	0.0.3.0	
# ::edge	say-01	ARG1	and	0	0.0	
# ::edge	think-01	ARG0	i	0.0.12.2.0	0.0.12.2.0.0	
# ::edge	think-01	ARG1	thing	0.0.12.2.0	0.0.12.2.0.1	
# ::edge	think-01	ARG2	do-02	0.0.12.2.0	0.0.12.2	
(s2 / say-01 
      :ARG1 (a / and 
            :ARG1-of (f4 / fail-01) 
            :ARG1-of (d4 / disagree-01) 
            :ARG1-of (f3 / feel-01) 
            :op1 (k / know-01 
                  :ARG1 (d2 / do-02 
                        :ARG1 (s / simple))) 
            :op10 (a5 / anyone) 
            :op11 (p / possible) 
            :op12 (h / help-01 
                  :ARG1 (t / thing 
                        :ARG1-of (d / do-02))) 
            :op13 (t6 / try-01) 
            :op14 (a4 / and) 
            :op15 (t8 / time) 
            :op16 (t7 / time) 
            :op17 (a6 / again) 
            :op2 (f / follow-07 
                  :ARG0 (i3 / i) 
                  :ARG1 (i / i) 
                  :ARG1-of (d3 / do-02 
                        :ARG2-of (t2 / think-01 
                              :ARG0 (i2 / i) 
                              :ARG1 (t3 / thing)))) 
            :op3 (f2 / friend) 
            :op4 (o / often) 
            :op5 (l / lazy) 
            :op6 (a2 / and) 
            :op7 (l2 / lot) 
            :op8 (t4 / time) 
            :op9 (e2 / everything)))

# ::snt Sorry to anyone whose read this jumbled mess, and I feel a bit like a self-seeking moaner, but I truly do feel desperate.
# ::tok Sorry to anyone whose read this jumbled mess , and I feel a bit like a self - seeking moaner , but I truly do feel desperate .
# ::alignments 9-10|0.1.0.1.0.1 21-22|0.1.0.1 11-12|0.1.0.1.1 26-27|0.0 25-26|0 13-14|0.1.0.1.1.1 19-20|0.1.0+0.1 18-19|0.1.0.0 16-17|0.1.0.0.0 0-1|0.1.0.1.1.2.0 2-3|0.1.0.1.1.2 4-5|0.1.0.1.0 7-8|0.1.0.1.0.0 5-6|0.1.0.1.0.0.1 6-7|0.1.0.1.0.0.0 10-11|0.1.0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:19.423
# ::node	0	feel-01	25-26
# ::node	0.0	desperate	26-27
# ::node	0.1	moan-01	19-20
# ::node	0.1.0	person	19-20
# ::node	0.1.0.0	seek-01	18-19
# ::node	0.1.0.0.0	self	16-17
# ::node	0.1.0.1	contrast-01	21-22
# ::node	0.1.0.1.0	read-01	4-5
# ::node	0.1.0.1.0.0	mess	7-8
# ::node	0.1.0.1.0.0.0	jumble-01	6-7
# ::node	0.1.0.1.0.0.1	this	5-6
# ::node	0.1.0.1.0.1	and	9-10
# ::node	0.1.0.1.1	feel-01	11-12
# ::node	0.1.0.1.1.0	i	10-11
# ::node	0.1.0.1.1.1	bit	13-14
# ::node	0.1.0.1.1.2	anyone	2-3
# ::node	0.1.0.1.1.2.0	sorry-41	0-1
# ::root	0	feel-01
# ::edge	and	op1	read-01	0.1.0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG1	read-01	0.1.0.1	0.1.0.1.0	
# ::edge	contrast-01	ARG2	feel-01	0.1.0.1	0.1.0.1.1	
# ::edge	contrast-01	ARG6	person	0.1.0.1	0.1.0	
# ::edge	feel-01	ARG0	i	0.1.0.1.1	0.1.0.1.1.0	
# ::edge	feel-01	ARG1	bit	0.1.0.1.1	0.1.0.1.1.1	
# ::edge	feel-01	ARG1	desperate	0	0.0	
# ::edge	feel-01	ARG6	anyone	0.1.0.1.1	0.1.0.1.1.2	
# ::edge	jumble-01	ARG1	mess	0.1.0.1.0.0.0	0.1.0.1.0.0	
# ::edge	mess	mod	this	0.1.0.1.0.0	0.1.0.1.0.0.1	
# ::edge	moan-01	ARG0	person	0.1	0.1.0	
# ::edge	moan-01	ARG1	feel-01	0.1	0	
# ::edge	read-01	ARG1	mess	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	seek-01	ARG1	person	0.1.0.0	0.1.0	
# ::edge	seek-01	mod	self	0.1.0.0	0.1.0.0.0	
# ::edge	sorry-41	ARG1	anyone	0.1.0.1.1.2.0	0.1.0.1.1.2	
(f / feel-01 
      :ARG1 (d / desperate) 
      :ARG1-of (m2 / moan-01 
            :ARG0 (p / person 
                  :ARG1-of (s2 / seek-01 
                        :mod (s3 / self)) 
                  :ARG6-of (c / contrast-01 
                        :ARG1 (r / read-01 
                              :ARG1 (m / mess 
                                    :ARG1-of (j / jumble-01) 
                                    :mod (t / this)) 
                              :op-of (a / and)) 
                        :ARG2 (f2 / feel-01 
                              :ARG0 (i / i) 
                              :ARG1 (b / bit) 
                              :ARG6 (a2 / anyone 
                                    :ARG1-of (s / sorry-41)))))))

# ::snt Its not uncommon for people's existing feelings about themselves to become more intense when they are in new situations and feel the pressure to socialise with strangers and fit into new roles, i.e. being a university student.
# ::tok Its not uncommon for people 's existing feelings about themselves to become more intense when they are in new situations and feel the pressure to socialise with strangers and fit into new roles , i.e. being a university student .
# ::alignments 2-3|0.2.0.1.0.0.0 11-12|0.2.0 20-21|0.2 21-22|0 23-24|0.1 28-29|0.1.0.1 29-30|0.1.0.1.0 32-33|0.1.0.1.0.0 37-38|0.0.0.0 27-28|0.1.0.0 19-20|0.2.1 18-19|0.2.1.0 13-14|0.2.0.0 12-13|0.2.0.0.0 6-7|0.2.0.1.0.0 38-39|0.0+0.0.0 25-26|0.1.0 7-8|0.2.0.1.0+0.2.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:20.599
# ::node	0	feel-01	21-22
# ::node	0.0	person	38-39
# ::node	0.0.0	study-01	38-39
# ::node	0.0.0.0	university	37-38
# ::node	0.1	pressure-01	23-24
# ::node	0.1.0	socialize-01	25-26
# ::node	0.1.0.0	stranger	27-28
# ::node	0.1.0.1	and	28-29
# ::node	0.1.0.1.0	fit-01	29-30
# ::node	0.1.0.1.0.0	role	32-33
# ::node	0.2	and	20-21
# ::node	0.2.0	become-01	11-12
# ::node	0.2.0.0	intense	13-14
# ::node	0.2.0.0.0	more	12-13
# ::node	0.2.0.1	feel-01	7-8
# ::node	0.2.0.1.0	thing	7-8
# ::node	0.2.0.1.0.0	exist-01	6-7
# ::node	0.2.0.1.0.0.0	common	2-3
# ::node	0.2.1	situation	19-20
# ::node	0.2.1.0	new	18-19
# ::root	0	feel-01
# ::edge	and	op1	become-01	0.2	0.2.0	
# ::edge	and	op1	socialize-01	0.1.0.1	0.1.0	
# ::edge	and	op2	fit-01	0.1.0.1	0.1.0.1.0	
# ::edge	and	op2	situation	0.2	0.2.1	
# ::edge	and	op3	feel-01	0.2	0	
# ::edge	become-01	ARG1	intense	0.2.0	0.2.0.0	
# ::edge	exist-01	ARG1	thing	0.2.0.1.0.0	0.2.0.1.0	
# ::edge	exist-01	ARG6	common	0.2.0.1.0.0	0.2.0.1.0.0.0	
# ::edge	feel-01	ARG0	person	0	0.0	
# ::edge	feel-01	ARG1	pressure-01	0	0.1	
# ::edge	feel-01	ARG1	thing	0.2.0.1	0.2.0.1.0	
# ::edge	feel-01	ARG2	become-01	0.2.0.1	0.2.0	
# ::edge	fit-01	ARG1	role	0.1.0.1.0	0.1.0.1.0.0	
# ::edge	intense	degree	more	0.2.0.0	0.2.0.0.0	
# ::edge	pressure-01	ARG1	socialize-01	0.1	0.1.0	
# ::edge	situation	mod	new	0.2.1	0.2.1.0	
# ::edge	socialize-01	ARG1	stranger	0.1.0	0.1.0.0	
# ::edge	study-01	ARG0	person	0.0.0	0.0	
# ::edge	study-01	ARG1	university	0.0.0	0.0.0.0	
(f2 / feel-01 
      :ARG0 (p3 / person 
            :ARG0-of (s4 / study-01 
                  :ARG1 (u / university))) 
      :ARG1 (p2 / pressure-01 
            :ARG1 (s2 / socialize-01 
                  :ARG1 (s3 / stranger) 
                  :op-of (a2 / and 
                        :op1 (f3 / fit-01 
                              :ARG1 (r / role))))) 
      :op-of (a / and 
            :op1 (b / become-01 
                  :ARG1 (i / intense 
                        :degree (m / more)) 
                  :ARG2-of (f / feel-01 
                        :ARG1 (t / thing 
                              :ARG1-of (e / exist-01 
                                    :ARG6 (c / common))))) 
            :op2 (s / situation 
                  :mod (n / new))))

# ::snt I am not a health professional and I can only speak from personal experience which is why I strongly suggest you see a qualified health professional about your feelings and worries about depression.
# ::tok I am not a health professional and I can only speak from personal experience which is why I strongly suggest you see a qualified health professional about your feelings and worries about depression .
# ::alignments 6-7|0 8-9|0.1.2 19-20|0.1.1.0 21-22|0.1.1.0.0 29-30|0.1.1.0.0.2.0.0 30-31|0.1.1.0.0.2.0 32-33|0.1.1.0.0.2 5-6|0.0 23-24|0.1.1.0.0.1.0 4-5|0.0.0 20-21|0.1.1.0.0.0 10-11|0.1 9-10|0.1.3 13-14|0.1.1 25-26|0.1.1.0.0.1 0-1|0.1.0 24-25|0.1.1.0.0.1.1 18-19|0.1.1.0.1 28-29|0.1.1.0.0.2.0.0.0+0.1.1.0.0.2.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:22.492
# ::node	0	and	6-7
# ::node	0.0	professional	5-6
# ::node	0.0.0	health	4-5
# ::node	0.1	speak-01	10-11
# ::node	0.1.0	i	0-1
# ::node	0.1.1	experience-01	13-14
# ::node	0.1.1.0	suggest-01	19-20
# ::node	0.1.1.0.0	see-01	21-22
# ::node	0.1.1.0.0.0	you	20-21
# ::node	0.1.1.0.0.1	professional	25-26
# ::node	0.1.1.0.0.1.0	qualify-02	23-24
# ::node	0.1.1.0.0.1.1	health	24-25
# ::node	0.1.1.0.0.2	depression	32-33
# ::node	0.1.1.0.0.2.0	worry-02	30-31
# ::node	0.1.1.0.0.2.0.0	and	29-30
# ::node	0.1.1.0.0.2.0.0.0	thing	28-29
# ::node	0.1.1.0.0.2.0.0.0.0	feel-01	28-29
# ::node	0.1.1.0.1	strong	18-19
# ::node	0.1.2	possible	8-9
# ::node	0.1.3	only	9-10
# ::root	0	and
# ::edge	and	op1	professional	0	0.0	
# ::edge	and	op1	thing	0.1.1.0.0.2.0.0	0.1.1.0.0.2.0.0.0	
# ::edge	and	op2	speak-01	0	0.1	
# ::edge	and	op2	worry-02	0.1.1.0.0.2.0.0	0.1.1.0.0.2.0	
# ::edge	experience-01	ARG1	suggest-01	0.1.1	0.1.1.0	
# ::edge	feel-01	ARG1	thing	0.1.1.0.0.2.0.0.0.0	0.1.1.0.0.2.0.0.0	
# ::edge	possible	domain	speak-01	0.1.2	0.1	
# ::edge	professional	mod	health	0.0	0.0.0	
# ::edge	professional	mod	health	0.1.1.0.0.1	0.1.1.0.0.1.1	
# ::edge	qualify-02	ARG1	professional	0.1.1.0.0.1.0	0.1.1.0.0.1	
# ::edge	see-01	ARG0	you	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	see-01	ARG1	professional	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	see-01	ARG2	depression	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	speak-01	ARG0	i	0.1	0.1.0	
# ::edge	speak-01	ARG1	experience-01	0.1	0.1.1	
# ::edge	speak-01	mod	only	0.1	0.1.3	
# ::edge	suggest-01	ARG1	see-01	0.1.1.0	0.1.1.0.0	
# ::edge	suggest-01	manner	strong	0.1.1.0	0.1.1.0.1	
# ::edge	worry-02	ARG1	depression	0.1.1.0.0.2.0	0.1.1.0.0.2	
(a / and 
      :op1 (p3 / professional 
            :mod (h2 / health)) 
      :op2 (s / speak-01 
            :ARG0 (i / i) 
            :ARG1 (e / experience-01 
                  :ARG1 (s2 / suggest-01 
                        :ARG1 (s3 / see-01 
                              :ARG0 (y / you) 
                              :ARG1 (p / professional 
                                    :ARG1-of (q / qualify-02) 
                                    :mod (h / health)) 
                              :ARG2 (d / depression 
                                    :ARG1-of (w / worry-02 
                                          :op-of (a2 / and 
                                                :op1 (t / thing 
                                                      :ARG1-of (f / feel-01)))))) 
                        :manner (s4 / strong))) 
            :domain-of (p2 / possible) 
            :mod (o / only)))

# ::snt Most people feel unintelligent and awkward when they first get to uni- you're definitely not alone there. But I would really recommend that you get an appointment with your uni counselling services. It doesn't really matter whether anyone has told you that you are depressed or not, you are obviously having some problems at the minute and could use some support- labels aren't as important as your experiences. Meditation and exercise are really helpful, so definitely try to do those. But yeah, you will have to engage with help and life in general to get somewhere- but don't beat yourself up about feeling unmotivated to do anything at the minute, lots of people feel like this and hopefully it will pass as you begin to feel better. Being unkind to yourself will only make you feel worse- be kind to yourself and get some help.
# ::tok Most people feel unintelligent and awkward when they first get to uni - you 're definitely not alone there . But I would really recommend that you get an appointment with your uni counselling services . It does n't really matter whether anyone has told you that you are depressed or not , you are obviously having some problems at the minute and could use some support - labels are n't as important as your experiences . Meditation and exercise are really helpful , so definitely try to do those . But yeah , you will have to engage with help and life in general to get somewhere - but do n't beat yourself up about feeling unmotivated to do anything at the minute , lots of people feel like this and hopefully it will pass as you begin to feel better . Being unkind to yourself will only make you feel worse - be kind to yourself and get some help .
# ::alignments 2-3|0.0.1 17-18|0.0.1.1.0.1.0.0.0 13-14|0.0.0.0.0 9-10|0.0.1.2 4-5|0.0.0.1 5-6|0.0.1.1 3-4|0.0 0-1|0.0.1.0+0.0.1.0.0 20-21|0.0.0 24-25|0.0.0.1.0 23-24|0.0.0.1.0.1 27-28|0.0.0.1.0.0 29-30|0.0.1.2.0 34-35|0.0.1.1.0.1.0.0.1.0.0 33-34|0.0.1.1.0.1.0.0.1.0.0.0 26-27|0.0.0.1.0.0.0 11-12|0.0.1.2.1 40-41|0.0.1.1.0.1.0.0 39-40|0.0.1.1.0.1.0.0.1 44-45|0.0.1.1.0.1 45-46|0.0.1.1.0.1.1 50-51|0.0.1.1.0.0.0.0 49-50|0.0.1.1.0.0.0 42-43|0.0.1.1.0.1.0 62-63|0.0.19.1.0 63-64|0.0.19.1 64-65|0.0.19 66-67|0.0.5 57-58|0.0.0.1.2 43-44|0.0.1.1.0 61-62|0.0.19.1.0.0 58-59|0.0.0.1.3 65-66|0.0.19.0 47-48|0.0.1.1.0.0 72-73|0.0.0.1.4 75-76|0.0.0.1.5+0.0.0.1.5.0 53-54|0.0.24.0 68-69|0.0.4.0+0.0.4 100-101|0.0.13 86-87|0.0.18 37-38|0.0.1.1.0.1.0.0.1.0 94-95|0.0.0.1.7 81-82|0.0.20.0 78-79|0.0.0.1.6 79-80|0.0.0.1.6.1 77-78|0.0.0.1.6.0 91-92|0.0.2 109-110|0 112-113|0.0.21 116-117|0.0.7 88-89|0.0.15 123-124|0.0.0.1.9 120-121|0.0.0.1.8 98-99|0.0.12 106-107|0.0.25 107-108|0.0.25.1 101-102|0.0.13.0 102-103|0.0.13.0.0 104-105|0.0.25.0 161-162|0.0.0.1.1 137-138|0.0.22.0 131-132|0.0.17.0 135-136|0.0.11 138-139|0.0.22 128-129|0.0.6 141-142|0.0.8.0 150-151|0.0.3.0 140-141|0.0.8 130-131|0.0.17.0.0 125-126|0.0.6.0+0.0.6.0.0 149-150|0.0.16 148-149|0.0.16.0 151-152|0.0.3 152-153|0.0.3.1 144-145|0.0.23 158-159|0.0.14.1 159-160|0.0.14 160-161|0.0.14.0 155-156|0.0.10 15-16|0.0.0.0 55-56|0.0.24 117-118|0.0.9 132-133|0.0.17 82-83|0.0.20 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:50.734
# ::node	0	contrast-01	109-110
# ::node	0.0	intelligent-41	3-4
# ::node	0.0.0	contrast-01	20-21
# ::node	0.0.0.0	definite	15-16
# ::node	0.0.0.0.0	you	13-14
# ::node	0.0.0.1	and	4-5
# ::node	0.0.0.1.0	recommend-01	24-25
# ::node	0.0.0.1.0.0	get-01	27-28
# ::node	0.0.0.1.0.0.0	you	26-27
# ::node	0.0.0.1.0.1	really	23-24
# ::node	0.0.0.1.1	help	161-162
# ::node	0.0.0.1.2	some	57-58
# ::node	0.0.0.1.3	problem	58-59
# ::node	0.0.0.1.4	important	72-73
# ::node	0.0.0.1.5	thing	75-76
# ::node	0.0.0.1.5.0	experience-01	75-76
# ::node	0.0.0.1.6	and	78-79
# ::node	0.0.0.1.6.0	meditation	77-78
# ::node	0.0.0.1.6.1	exercise	79-80
# ::node	0.0.0.1.7	you	94-95
# ::node	0.0.0.1.8	anything	120-121
# ::node	0.0.0.1.9	minute	123-124
# ::node	0.0.1	feel-01	2-3
# ::node	0.0.1.0	person	0-1
# ::node	0.0.1.0.0	most	0-1
# ::node	0.0.1.1	awkward	5-6
# ::node	0.0.1.1.0	have-03	43-44
# ::node	0.0.1.1.0.0	you	47-48
# ::node	0.0.1.1.0.0.0	depress-01	49-50
# ::node	0.0.1.1.0.0.0.0	or	50-51
# ::node	0.0.1.1.0.1	tell-01	44-45
# ::node	0.0.1.1.0.1.0	anyone	42-43
# ::node	0.0.1.1.0.1.0.0	matter-01	40-41
# ::node	0.0.1.1.0.1.0.0.0	alone	17-18
# ::node	0.0.1.1.0.1.0.0.1	really	39-40
# ::node	0.0.1.1.0.1.0.0.1.0	do-02	37-38
# ::node	0.0.1.1.0.1.0.0.1.0.0	service	34-35
# ::node	0.0.1.1.0.1.0.0.1.0.0.0	counsel-01	33-34
# ::node	0.0.1.1.0.1.1	you	45-46
# ::node	0.0.1.2	get-05	9-10
# ::node	0.0.1.2.0	appointment	29-30
# ::node	0.0.1.2.1	i	11-12
# ::node	0.0.10	kind-41	155-156
# ::node	0.0.11	pass-03	135-136
# ::node	0.0.12	engage-01	98-99
# ::node	0.0.13	help-01	100-101
# ::node	0.0.13.0	and	101-102
# ::node	0.0.13.0.0	life	102-103
# ::node	0.0.14	get-01	159-160
# ::node	0.0.14.0	some	160-161
# ::node	0.0.14.1	and	158-159
# ::node	0.0.15	do-02	88-89
# ::node	0.0.16	make-02	149-150
# ::node	0.0.16.0	only	148-149
# ::node	0.0.17	hope-01	132-133
# ::node	0.0.17.0	and	131-132
# ::node	0.0.17.0.0	this	130-131
# ::node	0.0.18	try-01	86-87
# ::node	0.0.19	use-01	64-65
# ::node	0.0.19.0	some	65-66
# ::node	0.0.19.1	possible	63-64
# ::node	0.0.19.1.0	and	62-63
# ::node	0.0.19.1.0.0	minute	61-62
# ::node	0.0.2	contrast-01	91-92
# ::node	0.0.20	help-01	82-83
# ::node	0.0.20.0	really	81-82
# ::node	0.0.21	beat-00	112-113
# ::node	0.0.22	begin-01	138-139
# ::node	0.0.22.0	you	137-138
# ::node	0.0.23	kind-41	144-145
# ::node	0.0.24	obvious-41	55-56
# ::node	0.0.24.0	you	53-54
# ::node	0.0.25	get-05	106-107
# ::node	0.0.25.0	general	104-105
# ::node	0.0.25.1	somewhere	107-108
# ::node	0.0.3	feel-01	151-152
# ::node	0.0.3.0	you	150-151
# ::node	0.0.3.1	bad	152-153
# ::node	0.0.4	label-01	68-69
# ::node	0.0.4.0	thing	68-69
# ::node	0.0.5	support-01	66-67
# ::node	0.0.6	feel-01	128-129
# ::node	0.0.6.0	person	125-126
# ::node	0.0.6.0.0	lot	125-126
# ::node	0.0.7	feel-01	116-117
# ::node	0.0.8	feel-01	140-141
# ::node	0.0.8.0	good	141-142
# ::node	0.0.9	motivate-01	117-118
# ::root	0	contrast-01
# ::edge	and	op1	contrast-01	0.0.0.1	0.0.0	
# ::edge	and	op1	get-01	0.0.14.1	0.0.14	
# ::edge	and	op1	help-01	0.0.13.0	0.0.13	
# ::edge	and	op1	meditation	0.0.0.1.6	0.0.0.1.6.0	
# ::edge	and	op1	minute	0.0.19.1.0	0.0.19.1.0.0	
# ::edge	and	op1	this	0.0.17.0	0.0.17.0.0	
# ::edge	and	op10	minute	0.0.0.1	0.0.0.1.9	
# ::edge	and	op11	help	0.0.0.1	0.0.0.1.1	
# ::edge	and	op2	exercise	0.0.0.1.6	0.0.0.1.6.1	
# ::edge	and	op2	hope-01	0.0.17.0	0.0.17	
# ::edge	and	op2	life	0.0.13.0	0.0.13.0.0	
# ::edge	and	op2	possible	0.0.19.1.0	0.0.19.1	
# ::edge	and	op2	recommend-01	0.0.0.1	0.0.0.1.0	
# ::edge	and	op3	some	0.0.0.1	0.0.0.1.2	
# ::edge	and	op4	problem	0.0.0.1	0.0.0.1.3	
# ::edge	and	op5	important	0.0.0.1	0.0.0.1.4	
# ::edge	and	op6	thing	0.0.0.1	0.0.0.1.5	
# ::edge	and	op7	and	0.0.0.1	0.0.0.1.6	
# ::edge	and	op8	you	0.0.0.1	0.0.0.1.7	
# ::edge	and	op9	anything	0.0.0.1	0.0.0.1.8	
# ::edge	beat-00	ARG1	intelligent-41	0.0.21	0.0	
# ::edge	begin-01	ARG0	you	0.0.22	0.0.22.0	
# ::edge	begin-01	ARG1	intelligent-41	0.0.22	0.0	
# ::edge	contrast-01	ARG1	intelligent-41	0	0.0	
# ::edge	contrast-01	ARG1	intelligent-41	0.0.0	0.0	
# ::edge	contrast-01	ARG1	intelligent-41	0.0.2	0.0	
# ::edge	contrast-01	ARG6	definite	0.0.0	0.0.0.0	
# ::edge	counsel-01	ARG1	service	0.0.1.1.0.1.0.0.1.0.0.0	0.0.1.1.0.1.0.0.1.0.0	
# ::edge	definite	domain	you	0.0.0.0	0.0.0.0.0	
# ::edge	depress-01	ARG1	you	0.0.1.1.0.0.0	0.0.1.1.0.0	
# ::edge	do-02	ARG1	intelligent-41	0.0.15	0.0	
# ::edge	do-02	ARG1	service	0.0.1.1.0.1.0.0.1.0	0.0.1.1.0.1.0.0.1.0.0	
# ::edge	do-02	ARG6	really	0.0.1.1.0.1.0.0.1.0	0.0.1.1.0.1.0.0.1	
# ::edge	engage-01	ARG1	intelligent-41	0.0.12	0.0	
# ::edge	experience-01	ARG1	thing	0.0.0.1.5.0	0.0.0.1.5	
# ::edge	feel-01	ARG0	person	0.0.1	0.0.1.0	
# ::edge	feel-01	ARG0	person	0.0.6	0.0.6.0	
# ::edge	feel-01	ARG0	you	0.0.3	0.0.3.0	
# ::edge	feel-01	ARG1	intelligent-41	0.0.1	0.0	
# ::edge	feel-01	ARG1	intelligent-41	0.0.3	0.0	
# ::edge	feel-01	ARG1	intelligent-41	0.0.6	0.0	
# ::edge	feel-01	ARG1	intelligent-41	0.0.7	0.0	
# ::edge	feel-01	ARG1	intelligent-41	0.0.8	0.0	
# ::edge	feel-01	ARG6	awkward	0.0.1	0.0.1.1	
# ::edge	feel-01	ARG6	bad	0.0.3	0.0.3.1	
# ::edge	feel-01	ARG6	good	0.0.8	0.0.8.0	
# ::edge	feel-01	condition	get-05	0.0.1	0.0.1.2	
# ::edge	get-01	ARG0	some	0.0.14	0.0.14.0	
# ::edge	get-01	ARG0	you	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	get-01	ARG1	intelligent-41	0.0.14	0.0	
# ::edge	get-05	ARG0	appointment	0.0.1.2	0.0.1.2.0	
# ::edge	get-05	ARG0	general	0.0.25	0.0.25.0	
# ::edge	get-05	ARG1	i	0.0.1.2	0.0.1.2.1	
# ::edge	get-05	ARG1	intelligent-41	0.0.25	0.0	
# ::edge	get-05	ARG6	somewhere	0.0.25	0.0.25.1	
# ::edge	have-03	ARG1	you	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	have-03	ARG2	awkward	0.0.1.1.0	0.0.1.1	
# ::edge	help-01	ARG1	intelligent-41	0.0.13	0.0	
# ::edge	help-01	ARG1	intelligent-41	0.0.20	0.0	
# ::edge	help-01	ARG6	really	0.0.20	0.0.20.0	
# ::edge	hope-01	ARG1	intelligent-41	0.0.17	0.0	
# ::edge	kind-41	ARG1	intelligent-41	0.0.10	0.0	
# ::edge	kind-41	ARG1	intelligent-41	0.0.23	0.0	
# ::edge	label-01	ARG1	intelligent-41	0.0.4	0.0	
# ::edge	label-01	ARG2	thing	0.0.4	0.0.4.0	
# ::edge	make-02	ARG0	only	0.0.16	0.0.16.0	
# ::edge	make-02	ARG1	intelligent-41	0.0.16	0.0	
# ::edge	matter-01	ARG0	alone	0.0.1.1.0.1.0.0	0.0.1.1.0.1.0.0.0	
# ::edge	matter-01	ARG1	anyone	0.0.1.1.0.1.0.0	0.0.1.1.0.1.0	
# ::edge	matter-01	time	really	0.0.1.1.0.1.0.0	0.0.1.1.0.1.0.0.1	
# ::edge	motivate-01	ARG1	intelligent-41	0.0.9	0.0	
# ::edge	obvious-41	ARG1	intelligent-41	0.0.24	0.0	
# ::edge	obvious-41	ARG6	you	0.0.24	0.0.24.0	
# ::edge	or	op1	depress-01	0.0.1.1.0.0.0.0	0.0.1.1.0.0.0	
# ::edge	pass-03	ARG1	intelligent-41	0.0.11	0.0	
# ::edge	person	quant	lot	0.0.6.0	0.0.6.0.0	
# ::edge	person	quant	most	0.0.1.0	0.0.1.0.0	
# ::edge	recommend-01	ARG1	get-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	recommend-01	ARG6	really	0.0.0.1.0	0.0.0.1.0.1	
# ::edge	support-01	ARG1	intelligent-41	0.0.5	0.0	
# ::edge	tell-01	ARG0	anyone	0.0.1.1.0.1	0.0.1.1.0.1.0	
# ::edge	tell-01	ARG1	have-03	0.0.1.1.0.1	0.0.1.1.0	
# ::edge	tell-01	ARG6	you	0.0.1.1.0.1	0.0.1.1.0.1.1	
# ::edge	try-01	ARG1	intelligent-41	0.0.18	0.0	
# ::edge	use-01	ARG0	some	0.0.19	0.0.19.0	
# ::edge	use-01	ARG1	intelligent-41	0.0.19	0.0	
# ::edge	use-01	ARG6	possible	0.0.19	0.0.19.1	
(c6 / contrast-01 
      :ARG1 (i / intelligent-41 
            :ARG1-of (c / contrast-01 
                  :ARG6 (d / definite 
                        :domain (y / you)) 
                  :op-of (a / and 
                        :op1 (r / recommend-01 
                              :ARG1 (g2 / get-01 
                                    :ARG0 (y2 / you)) 
                              :ARG6 (r2 / really)) 
                        :op10 (h3 / help) 
                        :op2 (s4 / some) 
                        :op3 (p2 / problem) 
                        :op4 (i3 / important) 
                        :op5 (t3 / thing 
                              :ARG1-of (e2 / experience-01)) 
                        :op6 (a7 / and 
                              :op1 (m4 / meditation) 
                              :op2 (e3 / exercise)) 
                        :op7 (y6 / you) 
                        :op8 (a9 / anything) 
                        :op9 (m6 / minute))) 
            :ARG1-of (f / feel-01 
                  :ARG0 (p / person 
                        :quant (m2 / most)) 
                  :ARG6 (a2 / awkward 
                        :ARG2-of (h / have-03 
                              :ARG1 (y4 / you 
                                    :ARG1-of (d3 / depress-01 
                                          :op-of (o / or))) 
                              :ARG1-of (t / tell-01 
                                    :ARG0 (a3 / anyone 
                                          :ARG1-of (m3 / matter-01 
                                                :ARG0 (a4 / alone) 
                                                :time (r3 / really 
                                                      :ARG6-of (d4 / do-02 
                                                            :ARG1 (s / service 
                                                                  :ARG1-of (c2 / counsel-01)))))) 
                                    :ARG6 (y3 / you)))) 
                  :condition (g / get-05 
                        :ARG0 (a5 / appointment) 
                        :ARG1 (i2 / i))) 
            :ARG1-of (c5 / contrast-01) 
            :ARG1-of (f6 / feel-01 
                  :ARG0 (y8 / you) 
                  :ARG6 (b2 / bad)) 
            :ARG1-of (l / label-01 
                  :ARG2 (t2 / thing)) 
            :ARG1-of (s3 / support-01) 
            :ARG1-of (f5 / feel-01 
                  :ARG0 (p4 / person 
                        :quant (l3 / lot))) 
            :ARG1-of (f3 / feel-01) 
            :ARG1-of (f4 / feel-01 
                  :ARG6 (g5 / good)) 
            :ARG1-of (m5 / motivate-01) 
            :ARG1-of (k2 / kind-41) 
            :ARG1-of (p5 / pass-03) 
            :ARG1-of (e4 / engage-01) 
            :ARG1-of (h2 / help-01 
                  :op-of (a8 / and 
                        :op1 (l2 / life))) 
            :ARG1-of (g6 / get-01 
                  :ARG0 (s6 / some) 
                  :op-of (a11 / and)) 
            :ARG1-of (d5 / do-02) 
            :ARG1-of (m8 / make-02 
                  :ARG0 (o4 / only)) 
            :ARG1-of (h5 / hope-01 
                  :op-of (a10 / and 
                        :op1 (t6 / this))) 
            :ARG1-of (t4 / try-01) 
            :ARG1-of (u3 / use-01 
                  :ARG0 (s2 / some) 
                  :ARG6 (p3 / possible 
                        :op-of (a6 / and 
                              :op1 (m10 / minute)))) 
            :ARG1-of (h4 / help-01 
                  :ARG6 (r4 / really)) 
            :ARG1-of (b / beat-00) 
            :ARG1-of (b3 / begin-01 
                  :ARG0 (y7 / you)) 
            :ARG1-of (k / kind-41) 
            :ARG1-of (o2 / obvious-41 
                  :ARG6 (y5 / you)) 
            :ARG1-of (g4 / get-05 
                  :ARG0 (g3 / general) 
                  :ARG6 (s5 / somewhere))))

# ::snt Good luck.
# ::tok Good luck .
# ::alignments 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:50.740
# ::node	0	good	0-1
# ::node	0.0	luck	1-2
# ::root	0	good
(g / good 
      :mod-of (l / luck))

# ::snt I think a lot more people feel the same way as you do, but medicate themselves by using friends. Whilst it probably isn't a 'solution' as such, being around friends whilst being depressed is definitely better than being alone and being depressed. Either way, if you fancy a chat, feel free to PM
# ::tok I think a lot more people feel the same way as you do , but medicate themselves by using friends . Whilst it probably is n't a ' solution ' as such , being around friends whilst being depressed is definitely better than being alone and being depressed . Either way , if you fancy a chat , feel free to PM
# ::alignments 1-2|0.0.1 14-15|0.0.1.0.2 15-16|0.0.1.0.2.0 18-19|0.0.1.0.2.0.0 19-20|0.0.1.0.2.0.0.0 6-7|0.0.1.0 9-10|0.0.1.0.1 8-9|0.0.1.0.1.0 58-59|0 11-12|0.0.1.0.2.0.1 3-4|0.0.1.0.3.0+0.0.1.0.3.0.0 4-5|0.0.1.0.3 0-1|0.0 28-29|0.0.4 41-42|0.0.3.1 45-46|0.0.5.0 44-45|0.0.5 53-54|0.0.2.0 34-35|0.0.3.0.0 35-36|0.0.3.0 38-39|0.0.3 59-60|0.1 61-62|0.1.0 54-55|0.0.2 56-57|0.0.0 50-51|0.0.0.0.0 49-50|0.0.0.0 23-24|0.0.1.0.0 40-41|0.0.3.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:53.313
# ::node	0	feel-01	58-59
# ::node	0.0	i	0-1
# ::node	0.0.0	chat-01	56-57
# ::node	0.0.0.0	either	49-50
# ::node	0.0.0.0.0	way	50-51
# ::node	0.0.1	think-01	1-2
# ::node	0.0.1.0	feel-01	6-7
# ::node	0.0.1.0.0	probable	23-24
# ::node	0.0.1.0.1	way	9-10
# ::node	0.0.1.0.1.0	same-41	8-9
# ::node	0.0.1.0.2	contrast-01	14-15
# ::node	0.0.1.0.2.0	medicate-01	15-16
# ::node	0.0.1.0.2.0.0	use-01	18-19
# ::node	0.0.1.0.2.0.0.0	friend	19-20
# ::node	0.0.1.0.2.0.1	you	11-12
# ::node	0.0.1.0.3	more	4-5
# ::node	0.0.1.0.3.0	person	3-4
# ::node	0.0.1.0.3.0.0	lot	3-4
# ::node	0.0.2	fancy-02	54-55
# ::node	0.0.2.0	you	53-54
# ::node	0.0.3	depress-01	38-39
# ::node	0.0.3.0	friend	35-36
# ::node	0.0.3.0.0	around	34-35
# ::node	0.0.3.1	good	41-42
# ::node	0.0.3.1.0	definite	40-41
# ::node	0.0.4	solution	28-29
# ::node	0.0.5	alone	44-45
# ::node	0.0.5.0	and	45-46
# ::node	0.1	free-41	59-60
# ::node	0.1.0	PM	61-62
# ::root	0	feel-01
# ::edge	alone	poss	i	0.0.5	0.0	
# ::edge	and	op1	alone	0.0.5.0	0.0.5	
# ::edge	around	op1	friend	0.0.3.0.0	0.0.3.0	
# ::edge	chat-01	ARG0	i	0.0.0	0.0	
# ::edge	chat-01	ARG1	either	0.0.0	0.0.0.0	
# ::edge	contrast-01	ARG1	feel-01	0.0.1.0.2	0.0.1.0	
# ::edge	contrast-01	ARG2	medicate-01	0.0.1.0.2	0.0.1.0.2.0	
# ::edge	depress-01	ARG0	i	0.0.3	0.0	
# ::edge	depress-01	ARG1	friend	0.0.3	0.0.3.0	
# ::edge	depress-01	ARG6	good	0.0.3	0.0.3.1	
# ::edge	fancy-02	ARG0	i	0.0.2	0.0	
# ::edge	fancy-02	ARG1	you	0.0.2	0.0.2.0	
# ::edge	feel-01	ARG0	i	0	0.0	
# ::edge	feel-01	ARG0	probable	0.0.1.0	0.0.1.0.0	
# ::edge	feel-01	ARG1	free-41	0	0.1	
# ::edge	feel-01	ARG1	way	0.0.1.0	0.0.1.0.1	
# ::edge	feel-01	ARG6	more	0.0.1.0	0.0.1.0.3	
# ::edge	free-41	ARG1	PM	0.1	0.1.0	
# ::edge	good	op1	definite	0.0.3.1	0.0.3.1.0	
# ::edge	medicate-01	ARG1	use-01	0.0.1.0.2.0	0.0.1.0.2.0.0	
# ::edge	medicate-01	ARG6	you	0.0.1.0.2.0	0.0.1.0.2.0.1	
# ::edge	more	calendar	person	0.0.1.0.3	0.0.1.0.3.0	
# ::edge	person	quant	lot	0.0.1.0.3.0	0.0.1.0.3.0.0	
# ::edge	same-41	ARG1	way	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	solution	poss	i	0.0.4	0.0	
# ::edge	think-01	ARG0	i	0.0.1	0.0	
# ::edge	think-01	ARG1	feel-01	0.0.1	0.0.1.0	
# ::edge	use-01	ARG1	friend	0.0.1.0.2.0.0	0.0.1.0.2.0.0.0	
# ::edge	way	mod	either	0.0.0.0.0	0.0.0.0	
(f2 / feel-01 
      :ARG0 (i / i 
            :ARG0-of (c3 / chat-01 
                  :ARG1 (e / either 
                        :mod-of (w2 / way))) 
            :ARG0-of (t / think-01 
                  :ARG1 (f / feel-01 
                        :ARG0 (p3 / probable) 
                        :ARG1 (w / way 
                              :ARG1-of (s / same-41)) 
                        :ARG1-of (c / contrast-01 
                              :ARG2 (m3 / medicate-01 
                                    :ARG1 (u / use-01 
                                          :ARG1 (f3 / friend)) 
                                    :ARG6 (y / you))) 
                        :ARG6 (m2 / more 
                              :calendar (p / person 
                                    :quant (l / lot))))) 
            :ARG0-of (f7 / fancy-02 
                  :ARG1 (y2 / you)) 
            :ARG0-of (d / depress-01 
                  :ARG1 (f4 / friend 
                        :op-of (a2 / around)) 
                  :ARG6 (g / good 
                        :op1 (d2 / definite))) 
            :poss-of (s2 / solution) 
            :poss-of (a4 / alone 
                  :op-of (a3 / and))) 
      :ARG1 (f6 / free-41 
            :ARG1 (p2 / PM)))

# ::snt If i were you id focus on an idol. Someone you aspire to (not want to be them but someone who your admire and have respect for) e.g. someone who came from a bad background and ended up successful and happy with a family and married etc etc
# ::tok If i were you id focus on an idol . Someone you aspire to ( not want to be them but someone who your admire and have respect for ) e.g. someone who came from a bad background and ended up successful and happy with a family and married etc etc
# ::alignments 5-6|0.2.0.0.0 3-4|0.2.0.0.0.2 8-9|0.2.0.0.0.0 1-2|0.0 12-13|0.2.0.0.0.0.0.0.0 10-11|0.2.0.0.0.0.0.0.1 21-22|0.2 39-40|0.2.0 25-26|0.2.1.1.0.0 48-49|0.2.0.0.0.1 26-27|0.2.1.1.0 46-47|0.2.1.0 43-44|0.2.0.0.0.1.0 33-34|0.2.0.0.0.0.0.0.0.1 37-38|0.1 36-37|0.2.0.0.0.0.0.0.0.0 11-12|0.2.0.0.0.0.0.0 20-21|0 31-32|0.2.0.0.0.0.0.0.0.1.0 27-28|0.2.1.1 24-25|0.2.1 16-17|0.2.0.0.0.0.0 41-42|0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:54.703
# ::node	0	contrast-01	20-21
# ::node	0.0	i	1-2
# ::node	0.1	background	37-38
# ::node	0.2	someone	21-22
# ::node	0.2.0	end-03	39-40
# ::node	0.2.0.0	succeed-01	41-42
# ::node	0.2.0.0.0	focus-01	5-6
# ::node	0.2.0.0.0.0	idol	8-9
# ::node	0.2.0.0.0.0.0	want-01	16-17
# ::node	0.2.0.0.0.0.0.0	you	11-12
# ::node	0.2.0.0.0.0.0.0.0	aspire-01	12-13
# ::node	0.2.0.0.0.0.0.0.0.0	bad	36-37
# ::node	0.2.0.0.0.0.0.0.0.1	come-03	33-34
# ::node	0.2.0.0.0.0.0.0.0.1.0	someone	31-32
# ::node	0.2.0.0.0.0.0.0.1	someone	10-11
# ::node	0.2.0.0.0.1	marry-01	48-49
# ::node	0.2.0.0.0.1.0	happy	43-44
# ::node	0.2.0.0.0.2	you	3-4
# ::node	0.2.1	admire-01	24-25
# ::node	0.2.1.0	family	46-47
# ::node	0.2.1.1	respect-01	27-28
# ::node	0.2.1.1.0	have-03	26-27
# ::node	0.2.1.1.0.0	and	25-26
# ::root	0	contrast-01
# ::edge	admire-01	ARG0	family	0.2.1	0.2.1.0	
# ::edge	admire-01	ARG1	respect-01	0.2.1	0.2.1.1	
# ::edge	admire-01	ARG6	someone	0.2.1	0.2	
# ::edge	and	op1	have-03	0.2.1.1.0.0	0.2.1.1.0	
# ::edge	aspire-01	ARG0	you	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0	
# ::edge	aspire-01	ARG1	bad	0.2.0.0.0.0.0.0.0	0.2.0.0.0.0.0.0.0.0	
# ::edge	come-03	ARG0	someone	0.2.0.0.0.0.0.0.0.1	0.2.0.0.0.0.0.0.0.1.0	
# ::edge	come-03	ARG1	aspire-01	0.2.0.0.0.0.0.0.0.1	0.2.0.0.0.0.0.0.0	
# ::edge	contrast-01	ARG0	i	0	0.0	
# ::edge	contrast-01	ARG1	background	0	0.1	
# ::edge	contrast-01	ARG6	someone	0	0.2	
# ::edge	end-03	ARG1	someone	0.2.0	0.2	
# ::edge	focus-01	ARG1	idol	0.2.0.0.0	0.2.0.0.0.0	
# ::edge	focus-01	ARG6	you	0.2.0.0.0	0.2.0.0.0.2	
# ::edge	have-03	ARG1	respect-01	0.2.1.1.0	0.2.1.1	
# ::edge	marry-01	ARG1	focus-01	0.2.0.0.0.1	0.2.0.0.0	
# ::edge	marry-01	ARG2	happy	0.2.0.0.0.1	0.2.0.0.0.1.0	
# ::edge	someone	calendar	you	0.2.0.0.0.0.0.0.1	0.2.0.0.0.0.0.0	
# ::edge	succeed-01	ARG1	focus-01	0.2.0.0	0.2.0.0.0	
# ::edge	succeed-01	ARG6	end-03	0.2.0.0	0.2.0	
# ::edge	want-01	ARG1	idol	0.2.0.0.0.0.0	0.2.0.0.0.0	
# ::edge	want-01	ARG6	you	0.2.0.0.0.0.0	0.2.0.0.0.0.0.0	
(c3 / contrast-01 
      :ARG0 (i / i) 
      :ARG1 (b / background) 
      :ARG6 (s2 / someone 
            :ARG1-of (e / end-03 
                  :ARG6-of (s3 / succeed-01 
                        :ARG1 (f / focus-01 
                              :ARG1 (i2 / idol 
                                    :ARG1-of (w / want-01 
                                          :ARG6 (y2 / you 
                                                :ARG0-of (a / aspire-01 
                                                      :ARG1 (b2 / bad) 
                                                      :ARG1-of (c / come-03 
                                                            :ARG0 (s4 / someone))) 
                                                :calendar-of (s / someone)))) 
                              :ARG1-of (m2 / marry-01 
                                    :ARG2 (h / happy)) 
                              :ARG6 (y / you)))) 
            :ARG6-of (a3 / admire-01 
                  :ARG0 (f2 / family) 
                  :ARG1 (r / respect-01 
                        :ARG1-of (h2 / have-03 
                              :op-of (a2 / and))))))

# ::snt Focus on what you want to achieve in life, you havent stated what your studying, or indeed why....is it because you wanted the experience? Because your mum wanted yo to go? Because u need a degree for the career you want to do?
# ::tok Focus on what you want to achieve in life , you havent stated what your studying , or indeed why .... is it because you wanted the experience ? Because your mum wanted yo to go ? Because u need a degree for the career you want to do ?
# ::alignments 0-1|0.0 6-7|0.0.2.1+0.0.2.1.0 8-9|0.0.2.1.0.0 3-4|0.0.2.0 12-13|0 17-18|0.1.1 23-24|0.0.1.0.1.0.0.1+0.0.1.0.1.0.0.1.0 18-19|0.1.0.0 15-16|0.1+0.1.0 10-11|0.0.1.0.1.0.0.1.0.0 29-30|0.0.1.0.1 4-5|0.0.2 27-28|0.0.1.0.1.0 24-25|0.0.1.0.1.0.0.0 37-38|0.0.1.0.0.0 25-26|0.0.1.0.1.0.0 35-36|0.0.1.0.0 45-46|0.0.1.0.0.0.0.0 31-32|0.0.1.0 39-40|0.0.0 44-45|0.0.1.0.0.0.0 32-33|0.0.1 41-42|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:57.261
# ::node	0	state-01	12-13
# ::node	0.0	focus-01	0-1
# ::node	0.0.0	need-01	39-40
# ::node	0.0.0.0	degree	41-42
# ::node	0.0.1	want-01	32-33
# ::node	0.0.1.0	mum	31-32
# ::node	0.0.1.0.0	go-01	35-36
# ::node	0.0.1.0.0.0	cause-01	37-38
# ::node	0.0.1.0.0.0.0	career	44-45
# ::node	0.0.1.0.0.0.0.0	you	45-46
# ::node	0.0.1.0.1	cause-01	29-30
# ::node	0.0.1.0.1.0	experience-01	27-28
# ::node	0.0.1.0.1.0.0	want-01	25-26
# ::node	0.0.1.0.1.0.0.0	you	24-25
# ::node	0.0.1.0.1.0.0.1	thing	23-24
# ::node	0.0.1.0.1.0.0.1.0	cause-01	23-24
# ::node	0.0.1.0.1.0.0.1.0.0	you	10-11
# ::node	0.0.2	want-01	4-5
# ::node	0.0.2.0	you	3-4
# ::node	0.0.2.1	thing	6-7
# ::node	0.0.2.1.0	achieve-01	6-7
# ::node	0.0.2.1.0.0	life	8-9
# ::node	0.1	thing	15-16
# ::node	0.1.0	study-01	15-16
# ::node	0.1.0.0	indeed	18-19
# ::node	0.1.1	or	17-18
# ::root	0	state-01
# ::edge	achieve-01	ARG0	life	0.0.2.1.0	0.0.2.1.0.0	
# ::edge	achieve-01	ARG1	thing	0.0.2.1.0	0.0.2.1	
# ::edge	career	op1	you	0.0.1.0.0.0.0	0.0.1.0.0.0.0.0	
# ::edge	cause-01	ARG0	thing	0.0.1.0.1.0.0.1.0	0.0.1.0.1.0.0.1	
# ::edge	cause-01	ARG1	career	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	cause-01	ARG1	mum	0.0.1.0.1	0.0.1.0	
# ::edge	cause-01	ARG1	you	0.0.1.0.1.0.0.1.0	0.0.1.0.1.0.0.1.0.0	
# ::edge	experience-01	ARG1	cause-01	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	focus-01	ARG1	want-01	0.0	0.0.2	
# ::edge	go-01	ARG0	mum	0.0.1.0.0	0.0.1.0	
# ::edge	go-01	ARG1	cause-01	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	need-01	ARG0	focus-01	0.0.0	0.0	
# ::edge	need-01	ARG1	degree	0.0.0	0.0.0.0	
# ::edge	or	op1	thing	0.1.1	0.1	
# ::edge	state-01	ARG0	focus-01	0	0.0	
# ::edge	state-01	ARG1	thing	0	0.1	
# ::edge	study-01	ARG1	thing	0.1.0	0.1	
# ::edge	study-01	ARG6	indeed	0.1.0	0.1.0.0	
# ::edge	thing	op1	want-01	0.0.1.0.1.0.0.1	0.0.1.0.1.0.0	
# ::edge	want-01	ARG0	focus-01	0.0.1	0.0	
# ::edge	want-01	ARG0	you	0.0.1.0.1.0.0	0.0.1.0.1.0.0.0	
# ::edge	want-01	ARG0	you	0.0.2	0.0.2.0	
# ::edge	want-01	ARG1	experience-01	0.0.1.0.1.0.0	0.0.1.0.1.0	
# ::edge	want-01	ARG1	mum	0.0.1	0.0.1.0	
# ::edge	want-01	ARG1	thing	0.0.2	0.0.2.1	
(s / state-01 
      :ARG0 (f / focus-01 
            :ARG0-of (n / need-01 
                  :ARG1 (d / degree)) 
            :ARG0-of (w3 / want-01 
                  :ARG1 (m2 / mum 
                        :ARG0-of (g / go-01 
                              :ARG1 (c3 / cause-01 
                                    :ARG1 (c5 / career 
                                          :op1 (y4 / you)))) 
                        :ARG1-of (c2 / cause-01 
                              :ARG1-of (e / experience-01 
                                    :ARG1-of (w2 / want-01 
                                          :ARG0 (y3 / you) 
                                          :op-of (t3 / thing 
                                                :ARG0-of (c / cause-01 
                                                      :ARG1 (y2 / you)))))))) 
            :ARG1 (w / want-01 
                  :ARG0 (y / you) 
                  :ARG1 (t / thing 
                        :ARG1-of (a / achieve-01 
                              :ARG0 (l / life))))) 
      :ARG1 (t2 / thing 
            :ARG1-of (s2 / study-01 
                  :ARG6 (i / indeed)) 
            :op-of (o / or)))

# ::snt Either way, sum up why youre there and work your bottom off to get the best grades you can, cos once you get ur degree, you wil have something you can say "hey i didnt fail, it was hard work and i passed"
# ::tok Either way , sum up why youre there and work your bottom off to get the best grades you can , cos once you get ur degree , you wil have something you can say " hey i didnt fail , it was hard work and i passed "
# ::alignments 8-9|0.0 1-2|0.0.0.0 0-1|0.0.0.0.1 30-31|0.1 14-15|0.0.2.0.0 26-27|0.0.0.0.0.0 31-32|0.1.0 45-46|0.2.1.0.1 9-10|0.0.2 41-42|0.2.1.0.0 43-44|0.2.0 47-48|0.2.1.0 39-40|0.2 36-37|0.2.2.0 37-38|0.2.2 34-35|0 19-20|0.0.2.0.0.1 44-45|0.2.1 24-25|0.0.0.0.0 17-18|0.0.2.0.0.0 16-17|0.0.2.0.0.0.0+0.0.2.0.0.0.0.0 33-34|0.3 11-12|0.0.2.0 3-4|0.0.0 7-8|0.0.1 18-19|0.0.2.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:58.985
# ::node	0	say-01	34-35
# ::node	0.0	and	8-9
# ::node	0.0.0	sum-01	3-4
# ::node	0.0.0.0	way	1-2
# ::node	0.0.0.0.0	get-01	24-25
# ::node	0.0.0.0.0.0	degree	26-27
# ::node	0.0.0.0.1	either	0-1
# ::node	0.0.1	there	7-8
# ::node	0.0.2	work-01	9-10
# ::node	0.0.2.0	bottom	11-12
# ::node	0.0.2.0.0	get-01	14-15
# ::node	0.0.2.0.0.0	grade	17-18
# ::node	0.0.2.0.0.0.0	good	16-17
# ::node	0.0.2.0.0.0.0.0	most	16-17
# ::node	0.0.2.0.0.1	possible	19-20
# ::node	0.0.2.0.0.1.0	you	18-19
# ::node	0.1	have-03	30-31
# ::node	0.1.0	something	31-32
# ::node	0.2	fail-01	39-40
# ::node	0.2.0	hard	43-44
# ::node	0.2.1	work-01	44-45
# ::node	0.2.1.0	pass-07	47-48
# ::node	0.2.1.0.0	it	41-42
# ::node	0.2.1.0.1	and	45-46
# ::node	0.2.2	i	37-38
# ::node	0.2.2.0	hey	36-37
# ::node	0.3	possible	33-34
# ::root	0	say-01
# ::edge	and	op1	pass-07	0.2.1.0.1	0.2.1.0	
# ::edge	and	op1	sum-01	0.0	0.0.0	
# ::edge	and	op2	there	0.0	0.0.1	
# ::edge	and	op3	work-01	0.0	0.0.2	
# ::edge	either	op1	way	0.0.0.0.1	0.0.0.0	
# ::edge	fail-01	ARG1	hard	0.2	0.2.0	
# ::edge	fail-01	ARG6	i	0.2	0.2.2	
# ::edge	get-01	ARG0	bottom	0.0.2.0.0	0.0.2.0	
# ::edge	get-01	ARG0	way	0.0.0.0.0	0.0.0.0	
# ::edge	get-01	ARG1	degree	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	get-01	ARG1	grade	0.0.2.0.0	0.0.2.0.0.0	
# ::edge	get-01	ARG6	possible	0.0.2.0.0	0.0.2.0.0.1	
# ::edge	good	degree	most	0.0.2.0.0.0.0	0.0.2.0.0.0.0.0	
# ::edge	grade	mod	good	0.0.2.0.0.0	0.0.2.0.0.0.0	
# ::edge	have-03	ARG0	say-01	0.1	0	
# ::edge	have-03	ARG1	something	0.1	0.1.0	
# ::edge	hey	calendar	i	0.2.2.0	0.2.2	
# ::edge	pass-07	ARG0	it	0.2.1.0	0.2.1.0.0	
# ::edge	pass-07	ARG1	work-01	0.2.1.0	0.2.1	
# ::edge	possible	calendar	you	0.0.2.0.0.1	0.0.2.0.0.1.0	
# ::edge	possible	domain	say-01	0.3	0	
# ::edge	say-01	ARG0	and	0	0.0	
# ::edge	say-01	ARG1	fail-01	0	0.2	
# ::edge	sum-01	ARG1	way	0.0.0	0.0.0.0	
# ::edge	work-01	ARG1	bottom	0.0.2	0.0.2.0	
# ::edge	work-01	ARG1	fail-01	0.2.1	0.2	
(s3 / say-01 
      :ARG0 (a / and 
            :op1 (s / sum-01 
                  :ARG1 (w3 / way 
                        :ARG0-of (g / get-01 
                              :ARG1 (d / degree)) 
                        :op-of (e / either))) 
            :op2 (t2 / there) 
            :op3 (w2 / work-01 
                  :ARG1 (b2 / bottom 
                        :ARG0-of (g4 / get-01 
                              :ARG1 (g2 / grade 
                                    :mod (g3 / good 
                                          :degree (m / most))) 
                              :ARG6 (p2 / possible 
                                    :calendar (y / you)))))) 
      :ARG0-of (h / have-03 
            :ARG1 (s2 / something)) 
      :ARG1 (f / fail-01 
            :ARG1 (h3 / hard) 
            :ARG1-of (w / work-01 
                  :ARG1-of (p3 / pass-07 
                        :ARG0 (i2 / it) 
                        :op-of (a2 / and))) 
            :ARG6 (i / i 
                  :calendar-of (h2 / hey))) 
      :domain-of (p / possible))

# ::snt X
# ::tok X
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:58.994
# ::node	0	X	0-1
# ::root	0	X
(x / X)

# ::snt hope this helps
# ::tok hope this helps
# ::alignments 0-1|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:59.001
# ::node	0	hope-01	0-1
# ::node	0.0	help-01	2-3
# ::node	0.0.0	this	1-2
# ::root	0	hope-01
# ::edge	help-01	ARG1	this	0.0	0.0.0	
# ::edge	hope-01	ARG1	help-01	0	0.0	
(h / hope-01 
      :ARG1 (h2 / help-01 
            :ARG1 (t / this)))

# ::snt I'm pretty much non-autistic (not diagnosed with dyspraxia but I think the doctor misdiagnosed), but I walk on my toes nearly all of the time.
# ::tok I 'm pretty much non - autistic ( not diagnosed with dyspraxia but I think the doctor misdiagnosed ) , but I walk on my toes nearly all of the time .
# ::alignments 12-13|0.0.0.1 22-23|0.1 30-31|0.1.1.0 26-27|0.1.1 27-28|0.1.2 25-26|0.1.0 6-7|0.0 0-1|0.0.1 9-10|0.0.0 20-21|0 14-15|0.0.0.1.0 17-18|0.0.0.1.0.0 16-17|0.0.0.1.0.0.0 11-12|0.0.0.0 2-3|0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:59.895
# ::node	0	contrast-01	20-21
# ::node	0.0	autistic	6-7
# ::node	0.0.0	diagnose-01	9-10
# ::node	0.0.0.0	dyspraxia	11-12
# ::node	0.0.0.1	contrast-01	12-13
# ::node	0.0.0.1.0	think-01	14-15
# ::node	0.0.0.1.0.0	misdiagnose-01	17-18
# ::node	0.0.0.1.0.0.0	doctor	16-17
# ::node	0.0.1	i	0-1
# ::node	0.0.2	pretty-much	2-3
# ::node	0.1	walk-01	22-23
# ::node	0.1.0	toe	25-26
# ::node	0.1.1	nearly	26-27
# ::node	0.1.1.0	time	30-31
# ::node	0.1.2	all	27-28
# ::root	0	contrast-01
# ::edge	autistic	domain	i	0.0	0.0.1	
# ::edge	autistic	mod	pretty-much	0.0	0.0.2	
# ::edge	contrast-01	ARG1	autistic	0	0.0	
# ::edge	contrast-01	ARG1	think-01	0.0.0.1	0.0.0.1.0	
# ::edge	contrast-01	ARG2	walk-01	0	0.1	
# ::edge	diagnose-01	ARG0	dyspraxia	0.0.0	0.0.0.0	
# ::edge	diagnose-01	ARG1	contrast-01	0.0.0	0.0.0.1	
# ::edge	diagnose-01	ARG6	autistic	0.0.0	0.0	
# ::edge	misdiagnose-01	ARG1	doctor	0.0.0.1.0.0	0.0.0.1.0.0.0	
# ::edge	think-01	ARG1	misdiagnose-01	0.0.0.1.0	0.0.0.1.0.0	
# ::edge	time	quant	nearly	0.1.1.0	0.1.1	
# ::edge	walk-01	ARG0	toe	0.1	0.1.0	
# ::edge	walk-01	ARG1	nearly	0.1	0.1.1	
# ::edge	walk-01	ARG6	all	0.1	0.1.2	
(c2 / contrast-01 
      :ARG1 (a / autistic 
            :ARG6-of (d4 / diagnose-01 
                  :ARG0 (d2 / dyspraxia) 
                  :ARG1 (c / contrast-01 
                        :ARG1 (t / think-01 
                              :ARG1 (m2 / misdiagnose-01 
                                    :ARG1 (d3 / doctor))))) 
            :domain (i / i) 
            :mod (p / pretty-much)) 
      :ARG2 (w / walk-01 
            :ARG0 (t2 / toe) 
            :ARG1 (n / nearly 
                  :quant-of (t3 / time)) 
            :ARG6 (a2 / all)))

# ::snt It's more comfortable to me.
# ::tok It 's more comfortable to me .
# ::alignments 3-4|0 0-1|0.1 2-3|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:06:59.906
# ::node	0	comfortable	3-4
# ::node	0.0	more	2-3
# ::node	0.1	it	0-1
# ::root	0	comfortable
# ::edge	comfortable	degree	more	0	0.0	
# ::edge	comfortable	domain	it	0	0.1	
(c / comfortable 
      :degree (m / more) 
      :domain (i2 / it))

# ::snt What made them decide toe-walking is a sign of autism since it seems so random and isn't always indicative?
# ::tok What made them decide toe - walking is a sign of autism since it seems so random and is n't always indicative ?
# ::alignments 1-2|0.0.1.2.0 17-18|0.0.2 20-21|0.2 14-15|0.0 16-17|0.0.0 15-16|0.0.0.0 3-4|0.0.1.2 6-7|0.0.1.0.0 4-5|0.0.1.0 11-12|0.0.1.1 21-22|0+0.1 9-10|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:00.391
# ::node	0	indicate-01	21-22
# ::node	0.0	seem-01	14-15
# ::node	0.0.0	random	16-17
# ::node	0.0.0.0	so	15-16
# ::node	0.0.1	signal-01	9-10
# ::node	0.0.1.0	toe	4-5
# ::node	0.0.1.0.0	walk-01	6-7
# ::node	0.0.1.1	autism	11-12
# ::node	0.0.1.2	decide-01	3-4
# ::node	0.0.1.2.0	make-02	1-2
# ::node	0.0.2	and	17-18
# ::node	0.1	-	21-22
# ::node	0.2	always	20-21
# ::root	0	indicate-01
# ::edge	and	op1	seem-01	0.0.2	0.0	
# ::edge	decide-01	ARG1	signal-01	0.0.1.2	0.0.1	
# ::edge	indicate-01	ARG1	seem-01	0	0.0	
# ::edge	indicate-01	polarity	-	0	0.1	
# ::edge	indicate-01	time	always	0	0.2	
# ::edge	make-02	ARG1	decide-01	0.0.1.2.0	0.0.1.2	
# ::edge	random	mod	so	0.0.0	0.0.0.0	
# ::edge	seem-01	ARG1	random	0.0	0.0.0	
# ::edge	signal-01	ARG0	toe	0.0.1	0.0.1.0	
# ::edge	signal-01	ARG1	autism	0.0.1	0.0.1.1	
# ::edge	signal-01	ARG6	seem-01	0.0.1	0.0	
# ::edge	walk-01	ARG1	toe	0.0.1.0.0	0.0.1.0	
(i / indicate-01 
      :ARG1 (s2 / seem-01 
            :ARG1 (r / random 
                  :mod (s3 / so)) 
            :ARG6-of (s / signal-01 
                  :ARG0 (t2 / toe 
                        :ARG1-of (w / walk-01)) 
                  :ARG1 (a2 / autism) 
                  :ARG1-of (d / decide-01 
                        :ARG1-of (m / make-02))) 
            :op-of (a3 / and)) 
      :polarity - 
      :time (a4 / always))

# ::snt Well I might have signs of something on the autism spectrum but who doesn't have one or two?
# ::tok Well I might have signs of something on the autism spectrum but who does n't have one or two ?
# ::alignments 11-12|0 0-1|0.2 3-4|0.0 17-18|0.1.0 18-19|0.1.1 16-17|0.1.2 15-16|0.1 6-7|0.0.1.0.0 10-11|0.0.1.0.1 9-10|0.0.1.0.1.0 1-2|0.0.0 4-5|0.0.1+0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:00.833
# ::node	0	contrast-01	11-12
# ::node	0.0	have-03	3-4
# ::node	0.0.0	i	1-2
# ::node	0.0.1	thing	4-5
# ::node	0.0.1.0	signal-01	4-5
# ::node	0.0.1.0.0	something	6-7
# ::node	0.0.1.0.1	spectrum	10-11
# ::node	0.0.1.0.1.0	autism	9-10
# ::node	0.1	have-03	15-16
# ::node	0.1.0	or	17-18
# ::node	0.1.1	2	18-19
# ::node	0.1.2	1	16-17
# ::node	0.2	well	0-1
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	have-03	0	0.0	
# ::edge	contrast-01	ARG2	have-03	0	0.1	
# ::edge	contrast-01	ARG6	well	0	0.2	
# ::edge	have-03	ARG0	i	0.0	0.0.0	
# ::edge	have-03	ARG1	or	0.1	0.1.0	
# ::edge	have-03	ARG1	thing	0.0	0.0.1	
# ::edge	have-03	ARG6	2	0.1	0.1.1	
# ::edge	have-03	time	1	0.1	0.1.2	
# ::edge	signal-01	ARG0	thing	0.0.1.0	0.0.1	
# ::edge	signal-01	ARG1	something	0.0.1.0	0.0.1.0.0	
# ::edge	signal-01	ARG2	spectrum	0.0.1.0	0.0.1.0.1	
# ::edge	spectrum	mod	autism	0.0.1.0.1	0.0.1.0.1.0	
(c / contrast-01 
      :ARG1 (h2 / have-03 
            :ARG0 (i / i) 
            :ARG1 (t / thing 
                  :ARG0-of (s / signal-01 
                        :ARG1 (s2 / something) 
                        :ARG2 (s3 / spectrum 
                              :mod (a / autism))))) 
      :ARG2 (h / have-03 
            :ARG1 (o2 / or) 
            :ARG6 2 
            :time 1) 
      :ARG6 (w / well))

# ::snt You guys know what I mean.
# ::tok You guys know what I mean .
# ::alignments 2-3|0 5-6|0.1+0.1.0 4-5|0.1.0.0 1-2|0.0 0-1|0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:00.898
# ::node	0	know-01	2-3
# ::node	0.0	guy	1-2
# ::node	0.1	thing	5-6
# ::node	0.1.0	mean-01	5-6
# ::node	0.1.0.0	i	4-5
# ::node	0.2	you	0-1
# ::root	0	know-01
# ::edge	know-01	ARG0	guy	0	0.0	
# ::edge	know-01	ARG1	thing	0	0.1	
# ::edge	know-01	ARG6	you	0	0.2	
# ::edge	mean-01	ARG0	i	0.1.0	0.1.0.0	
# ::edge	mean-01	ARG1	thing	0.1.0	0.1	
(k / know-01 
      :ARG0 (g / guy) 
      :ARG1 (t / thing 
            :ARG1-of (m / mean-01 
                  :ARG0 (i / i))) 
      :ARG6 (y / you))

# ::snt Walking on toes can be a symptom of autism.
# ::tok Walking on toes can be a symptom of autism .
# ::alignments 3-4|0 6-7|0.1 0-1|0.0 2-3|0.0.0 8-9|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:00.966
# ::node	0	possible	3-4
# ::node	0.0	walk-01	0-1
# ::node	0.0.0	toe	2-3
# ::node	0.0.0.0	autism	8-9
# ::node	0.1	symptom	6-7
# ::root	0	possible
# ::edge	possible	domain	symptom	0	0.1	
# ::edge	toe	mod	autism	0.0.0	0.0.0.0	
# ::edge	walk-01	ARG0	toe	0.0	0.0.0	
# ::edge	walk-01	ARG1	possible	0.0	0	
(p / possible 
      :ARG1-of (w / walk-01 
            :ARG0 (t / toe 
                  :mod (a / autism))) 
      :domain (s / symptom))

# ::snt Having a headache can be a symptom of brain tumours.
# ::tok Having a headache can be a symptom of brain tumours .
# ::alignments 3-4|0 6-7|0.0 2-3|0.0.0.0.0 9-10|0.0.0 8-9|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:00.988
# ::node	0	possible	3-4
# ::node	0.0	symptom	6-7
# ::node	0.0.0	tumour	9-10
# ::node	0.0.0.0	brain	8-9
# ::node	0.0.0.0.0	headache	2-3
# ::root	0	possible
# ::edge	headache	mod	brain	0.0.0.0.0	0.0.0.0	
# ::edge	possible	domain	symptom	0	0.0	
# ::edge	symptom	mod	tumour	0.0	0.0.0	
# ::edge	tumour	mod	brain	0.0.0	0.0.0.0	
(p / possible 
      :domain (s / symptom 
            :mod (t / tumour 
                  :mod (b / brain 
                        :mod-of (h / headache)))))

# ::snt Feeling tired a lot can be a symptom of leukaemia.
# ::tok Feeling tired a lot can be a symptom of leukaemia .
# ::alignments 4-5|0 7-8|0.0 0-1|0.0.0.0 1-2|0.0.0 3-4|0.0.0.0.0 9-10|0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:01.115
# ::node	0	possible	4-5
# ::node	0.0	symptom	7-8
# ::node	0.0.0	tire-01	1-2
# ::node	0.0.0.0	feel-01	0-1
# ::node	0.0.0.0.0	lot	3-4
# ::node	0.0.0.0.0.0	leukaemia	9-10
# ::root	0	possible
# ::edge	feel-01	ARG1	tire-01	0.0.0.0	0.0.0	
# ::edge	feel-01	ARG6	lot	0.0.0.0	0.0.0.0.0	
# ::edge	lot	mod	leukaemia	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	possible	domain	symptom	0	0.0	
# ::edge	tire-01	ARG1	symptom	0.0.0	0.0	
(p / possible 
      :domain (s / symptom 
            :ARG1-of (t / tire-01 
                  :ARG1-of (f / feel-01 
                        :ARG6 (l2 / lot 
                              :mod (l / leukaemia))))))

# ::snt Symptoms don't always apply but if they happen in a lot of cases (which it clearly must do in this instance) it's worth noting, since otherwise nothing would ever get diagnosed.
# ::tok Symptoms do n't always apply but if they happen in a lot of cases ( which it clearly must do in this instance ) it 's worth noting , since otherwise nothing would ever get diagnosed .
# ::alignments 5-6|0 27-28|0.0 8-9|0.1.1 22-23|0.1.1.0 21-22|0.1.1.0.0 13-14|0.1.1.2.0 11-12|0.1.1.2 6-7|0.1.1.1 35-36|0.0.0 33-34|0.0.0.1 31-32|0.0.0.0 4-5|0.1 3-4|0.1.2 0-1|0.1.0 17-18|0.1.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:01.930
# ::node	0	contrast-01	5-6
# ::node	0.0	note-01	27-28
# ::node	0.0.0	diagnose-01	35-36
# ::node	0.0.0.0	nothing	31-32
# ::node	0.0.0.1	ever	33-34
# ::node	0.1	apply-02	4-5
# ::node	0.1.0	symptom	0-1
# ::node	0.1.1	happen-01	8-9
# ::node	0.1.1.0	instance	22-23
# ::node	0.1.1.0.0	this	21-22
# ::node	0.1.1.1	cause-01	6-7
# ::node	0.1.1.1.0	clear	17-18
# ::node	0.1.1.2	lot	11-12
# ::node	0.1.1.2.0	case	13-14
# ::node	0.1.2	always	3-4
# ::root	0	contrast-01
# ::edge	apply-02	ARG0	symptom	0.1	0.1.0	
# ::edge	apply-02	ARG1	happen-01	0.1	0.1.1	
# ::edge	apply-02	time	always	0.1	0.1.2	
# ::edge	cause-01	ARG0	happen-01	0.1.1.1	0.1.1	
# ::edge	cause-01	ARG1	clear	0.1.1.1	0.1.1.1.0	
# ::edge	contrast-01	ARG1	note-01	0	0.0	
# ::edge	contrast-01	ARG6	apply-02	0	0.1	
# ::edge	diagnose-01	ARG1	nothing	0.0.0	0.0.0.0	
# ::edge	diagnose-01	time	ever	0.0.0	0.0.0.1	
# ::edge	happen-01	ARG0	instance	0.1.1	0.1.1.0	
# ::edge	happen-01	ARG1	lot	0.1.1	0.1.1.2	
# ::edge	instance	mod	this	0.1.1.0	0.1.1.0.0	
# ::edge	lot	location	case	0.1.1.2	0.1.1.2.0	
# ::edge	note-01	ARG1	diagnose-01	0.0	0.0.0	
(c / contrast-01 
      :ARG1 (n / note-01 
            :ARG1 (d2 / diagnose-01 
                  :ARG1 (n2 / nothing) 
                  :time (e / ever))) 
      :ARG6 (a / apply-02 
            :ARG0 (s / symptom) 
            :ARG1 (h / happen-01 
                  :ARG0 (i2 / instance 
                        :mod (t / this)) 
                  :ARG0-of (c4 / cause-01 
                        :ARG1 (c3 / clear)) 
                  :ARG1 (l / lot 
                        :location (c2 / case))) 
            :time (a2 / always)))

# ::snt I used to walk on my toes, but that was because I was born with strange toes that curled under and had to be straightened with surgery two years ago.
# ::tok I used to walk on my toes , but that was because I was born with strange toes that curled under and had to be straightened with surgery two years ago .
# ::alignments 8-9|0 11-12|0.1 14-15|0.1.0 6-7|0.0.1 25-26|0.1.0.0.0.0 28-29|0.1.0.0.0.0.1 29-30|0.1.0.0.0.0.1.0+0.1.0.0.0.0.1.0.0 27-28|0.1.0.0.0.0.0 19-20|0.1.0.0.0 20-21|0.1.0.0.0.1 16-17|0.1.0.0.1 3-4|0.0 17-18|0.1.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:02.407
# ::node	0	contrast-01	8-9
# ::node	0.0	walk-01	3-4
# ::node	0.0.0	i	0-1
# ::node	0.0.1	toe	6-7
# ::node	0.1	cause-01	11-12
# ::node	0.1.0	bear-02	14-15
# ::node	0.1.0.0	toe	17-18
# ::node	0.1.0.0.0	curl-01	19-20
# ::node	0.1.0.0.0.0	straighten-01	25-26
# ::node	0.1.0.0.0.0.0	surgery	27-28
# ::node	0.1.0.0.0.0.1	2	28-29
# ::node	0.1.0.0.0.0.1.0	temporal-quantity	29-30
# ::node	0.1.0.0.0.0.1.0.0	year	29-30
# ::node	0.1.0.0.0.1	under	20-21
# ::node	0.1.0.0.1	strange	16-17
# ::root	0	contrast-01
# ::edge	bear-02	ARG1	toe	0.1.0	0.1.0.0	
# ::edge	cause-01	ARG0	bear-02	0.1	0.1.0	
# ::edge	cause-01	ARG1	contrast-01	0.1	0	
# ::edge	contrast-01	ARG1	walk-01	0	0.0	
# ::edge	curl-01	ARG0	toe	0.1.0.0.0	0.1.0.0	
# ::edge	curl-01	ARG1	straighten-01	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	curl-01	location	under	0.1.0.0.0	0.1.0.0.0.1	
# ::edge	straighten-01	ARG1	surgery	0.1.0.0.0.0	0.1.0.0.0.0.0	
# ::edge	straighten-01	time	2	0.1.0.0.0.0	0.1.0.0.0.0.1	
# ::edge	temporal-quantity	quant	2	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0.0.0.0.1.0	0.1.0.0.0.0.1.0.0	
# ::edge	toe	mod	strange	0.1.0.0	0.1.0.0.1	
# ::edge	walk-01	ARG0	i	0.0	0.0.0	
# ::edge	walk-01	ARG1	toe	0.0	0.0.1	
(c3 / contrast-01 
      :ARG1 (w / walk-01 
            :ARG0 (i / i) 
            :ARG1 (t3 / toe)) 
      :ARG1-of (c / cause-01 
            :ARG0 (b / bear-02 
                  :ARG1 (t2 / toe 
                        :ARG0-of (c2 / curl-01 
                              :ARG1 (s2 / straighten-01 
                                    :ARG1 (s3 / surgery) 
                                    :time (2 / 2 
                                          :quant-of (t4 / temporal-quantity 
                                                :unit (y2 / year)))) 
                              :location (u / under)) 
                        :mod (s / strange)))))

# ::snt My brother's autistic but I haven't noticed this with him either, but the spectrum is so broad and I myself probably have mild asperger's because I have problems with communication and don't pick up on social reactions/body language.
# ::tok My brother 's autistic but I have n't noticed this with him either , but the spectrum is so broad and I myself probably have mild asperger 's because I have problems with communication and do n't pick up on social reactions / body language .
# ::alignments 26-28|0.0.0+0.0.0.1+0.0.0.1.0 4-5|0 20-21|0.0.2 6-7|0.1.0 28-29|0.0.0.0 34-35|0.0.0.0.1 37-38|0.0.0.0.1.0 44-45|0.0.0.0.1.0.0 43-44|0.0.0.0.1.0.0.0.0 24-25|0.0 31-32|0.0.0.0.0 25-26|0.0.0.0.0.0.0 19-20|0.1.2.0 16-17|0.1.2.0.0 18-19|0.1.2.0.1 14-15|0.1.2 8-9|0.1 12-13|0.1.0.1 9-10|0.1.1 3-4|0.1.0.2 1-2|0.1.3 5-6|0.1.0.0 23-24|0.0.1 41-42|0.0.0.0.1.0.0.0 40-41|0.0.0.0.1.0.0.1 33-34|0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:05.200
# ::node	0	contrast-01	4-5
# ::node	0.0	have-03	24-25
# ::node	0.0.0	disease	26-28
# ::node	0.0.0.0	cause-01	28-29
# ::node	0.0.0.0.0	problem	31-32
# ::node	0.0.0.0.0.0	communicate-01	33-34
# ::node	0.0.0.0.0.0.0	mild	25-26
# ::node	0.0.0.0.1	and	34-35
# ::node	0.0.0.0.1.0	pick-04	37-38
# ::node	0.0.0.0.1.0.0	language	44-45
# ::node	0.0.0.0.1.0.0.0	react-01	41-42
# ::node	0.0.0.0.1.0.0.0.0	body	43-44
# ::node	0.0.0.0.1.0.0.1	society	40-41
# ::node	0.0.0.1	name	26-28
# ::node	0.0.0.1.0	"asperger's"	26-28
# ::node	0.0.1	probable	23-24
# ::node	0.0.2	and	20-21
# ::node	0.1	notice-01	8-9
# ::node	0.1.0	have-03	6-7
# ::node	0.1.0.0	i	5-6
# ::node	0.1.0.1	either	12-13
# ::node	0.1.0.2	autistic	3-4
# ::node	0.1.1	this	9-10
# ::node	0.1.2	contrast-01	14-15
# ::node	0.1.2.0	broad	19-20
# ::node	0.1.2.0.0	spectrum	16-17
# ::node	0.1.2.0.1	so	18-19
# ::node	0.1.3	brother	1-2
# ::root	0	contrast-01
# ::edge	and	op1	have-03	0.0.2	0.0	
# ::edge	and	op1	pick-04	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	broad	domain	spectrum	0.1.2.0	0.1.2.0.0	
# ::edge	broad	mod	so	0.1.2.0	0.1.2.0.1	
# ::edge	cause-01	ARG0	problem	0.0.0.0	0.0.0.0.0	
# ::edge	cause-01	ARG1	disease	0.0.0.0	0.0.0	
# ::edge	cause-01	ARG6	and	0.0.0.0	0.0.0.0.1	
# ::edge	communicate-01	ARG1	mild	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	contrast-01	ARG1	have-03	0	0.0	
# ::edge	contrast-01	ARG1	notice-01	0.1.2	0.1	
# ::edge	contrast-01	ARG2	broad	0.1.2	0.1.2.0	
# ::edge	contrast-01	ARG2	notice-01	0	0.1	
# ::edge	disease	name	name	0.0.0	0.0.0.1	
# ::edge	have-03	ARG0	i	0.1.0	0.1.0.0	
# ::edge	have-03	ARG1	disease	0.0	0.0.0	
# ::edge	have-03	ARG1	either	0.1.0	0.1.0.1	
# ::edge	have-03	ARG2	autistic	0.1.0	0.1.0.2	
# ::edge	language	mod	society	0.0.0.0.1.0.0	0.0.0.0.1.0.0.1	
# ::edge	name	op1	"asperger's"	0.0.0.1	0.0.0.1.0	
# ::edge	notice-01	ARG0	have-03	0.1	0.1.0	
# ::edge	notice-01	ARG1	this	0.1	0.1.1	
# ::edge	notice-01	ARG6	brother	0.1	0.1.3	
# ::edge	pick-04	ARG1	language	0.0.0.0.1.0	0.0.0.0.1.0.0	
# ::edge	probable	domain	have-03	0.0.1	0.0	
# ::edge	problem	mod	communicate-01	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	react-01	ARG0	language	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0	
# ::edge	react-01	ARG1	body	0.0.0.0.1.0.0.0	0.0.0.0.1.0.0.0.0	
(c / contrast-01 
      :ARG1 (h / have-03 
            :ARG1 (d / disease 
                  :ARG1-of (c3 / cause-01 
                        :ARG0 (p2 / problem 
                              :mod (c4 / communicate-01 
                                    :ARG1 (m2 / mild))) 
                        :ARG6 (a5 / and 
                              :op1 (p3 / pick-04 
                                    :ARG1 (l / language 
                                          :ARG0-of (r / react-01 
                                                :ARG1 (b3 / body)) 
                                          :mod (s3 / society))))) 
                  :name (n2 / name 
                        :op1 "asperger's")) 
            :domain-of (p / probable) 
            :op-of (a2 / and)) 
      :ARG2 (n / notice-01 
            :ARG0 (h2 / have-03 
                  :ARG0 (i / i) 
                  :ARG1 (e / either) 
                  :ARG2 (a / autistic)) 
            :ARG1 (t / this) 
            :ARG1-of (c2 / contrast-01 
                  :ARG2 (b2 / broad 
                        :domain (s2 / spectrum) 
                        :mod (s / so))) 
            :ARG6 (b / brother)))

# ::snt But then I don't have a proper diagnosis and even having some symptoms might not mean you have a certain condition.
# ::tok But then I do n't have a proper diagnosis and even having some symptoms might not mean you have a certain condition .
# ::alignments 0-1|0 1-2|0.0 9-10|0.1 5-6|0.1.0 16-17|0.1.1.0.0 11-12|0.1.1 21-22|0.1.1.0.0.0.1 20-21|0.1.1.0.0.0.1.0 17-18|0.1.1.0.0.0.0 10-11|0.1.1.2 13-14|0.1.1.0 12-13|0.1.1.0.1 18-19|0.1.1.0.0.0 7-8|0.1.0.0.1 2-3|0.1.1.1 8-9|0.1.0.0+0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:06.549
# ::node	0	contrast-01	0-1
# ::node	0.0	then	1-2
# ::node	0.1	and	9-10
# ::node	0.1.0	have-03	5-6
# ::node	0.1.0.0	thing	8-9
# ::node	0.1.0.0.0	diagnose-01	8-9
# ::node	0.1.0.0.1	proper	7-8
# ::node	0.1.1	have-03	11-12
# ::node	0.1.1.0	symptom	13-14
# ::node	0.1.1.0.0	mean-01	16-17
# ::node	0.1.1.0.0.0	have-03	18-19
# ::node	0.1.1.0.0.0.0	you	17-18
# ::node	0.1.1.0.0.0.1	condition	21-22
# ::node	0.1.1.0.0.0.1.0	certain	20-21
# ::node	0.1.1.0.1	some	12-13
# ::node	0.1.1.1	i	2-3
# ::node	0.1.1.2	even	10-11
# ::root	0	contrast-01
# ::edge	and	op1	have-03	0.1	0.1.0	
# ::edge	and	op2	have-03	0.1	0.1.1	
# ::edge	condition	mod	certain	0.1.1.0.0.0.1	0.1.1.0.0.0.1.0	
# ::edge	contrast-01	ARG1	then	0	0.0	
# ::edge	contrast-01	ARG2	and	0	0.1	
# ::edge	diagnose-01	ARG2	thing	0.1.0.0.0	0.1.0.0	
# ::edge	have-03	ARG0	you	0.1.1.0.0.0	0.1.1.0.0.0.0	
# ::edge	have-03	ARG1	condition	0.1.1.0.0.0	0.1.1.0.0.0.1	
# ::edge	have-03	ARG1	symptom	0.1.1	0.1.1.0	
# ::edge	have-03	ARG1	thing	0.1.0	0.1.0.0	
# ::edge	have-03	ARG6	i	0.1.1	0.1.1.1	
# ::edge	have-03	mod	even	0.1.1	0.1.1.2	
# ::edge	mean-01	ARG0	symptom	0.1.1.0.0	0.1.1.0	
# ::edge	mean-01	ARG1	have-03	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	symptom	quant	some	0.1.1.0	0.1.1.0.1	
# ::edge	thing	mod	proper	0.1.0.0	0.1.0.0.1	
(c / contrast-01 
      :ARG1 (t / then) 
      :ARG2 (a / and 
            :op1 (h2 / have-03 
                  :ARG1 (t2 / thing 
                        :ARG2-of (d / diagnose-01) 
                        :mod (p / proper))) 
            :op2 (h3 / have-03 
                  :ARG1 (s / symptom 
                        :ARG0-of (m / mean-01 
                              :ARG1 (h / have-03 
                                    :ARG0 (y / you) 
                                    :ARG1 (c2 / condition 
                                          :mod (c3 / certain)))) 
                        :quant (s2 / some)) 
                  :ARG6 (i / i) 
                  :mod (e / even))))

# ::snt I walk on my toes not as much since years of being told not to.
# ::tok I walk on my toes not as much since years of being told not to .
# ::alignments 12-13|0.1.0 9-10|0.1+0.1.1 0-1|0.0 1-2|0 4-5|0.2 7-8|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:06.654
# ::node	0	walk-01	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	much	7-8
# ::node	0.1	temporal-quantity	9-10
# ::node	0.1.0	tell-01	12-13
# ::node	0.1.1	year	9-10
# ::node	0.2	toe	4-5
# ::root	0	walk-01
# ::edge	much	domain	i	0.0.0	0.0	
# ::edge	tell-01	ARG1	temporal-quantity	0.1.0	0.1	
# ::edge	temporal-quantity	unit	year	0.1	0.1.1	
# ::edge	walk-01	ARG0	i	0	0.0	
# ::edge	walk-01	ARG1	temporal-quantity	0	0.1	
# ::edge	walk-01	medium	toe	0	0.2	
(w2 / walk-01 
      :ARG0 (i / i 
            :domain-of (m / much)) 
      :ARG1 (t4 / temporal-quantity 
            :ARG1-of (t / tell-01) 
            :unit (y / year)) 
      :medium (t3 / toe))

# ::snt I have dyspraxia.
# ::tok I have dyspraxia .
# ::alignments 1-2|0 2-3|0.1 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:06.662
# ::node	0	have-03	1-2
# ::node	0.0	i	0-1
# ::node	0.1	dyspraxia	2-3
# ::root	0	have-03
# ::edge	have-03	ARG0	i	0	0.0	
# ::edge	have-03	ARG1	dyspraxia	0	0.1	
(h / have-03 
      :ARG0 (i / i) 
      :ARG1 (d / dyspraxia))

# ::snt So maybe you are dyspraxic or have short tendons.
# ::tok So maybe you are dyspraxic or have short tendons .
# ::alignments 0-1|0.0.0.0 5-6|0.0.0.1 6-7|0.0.0 8-9|0.0 7-8|0.0.1 2-3|0.1 4-5|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:06.758
# ::node	0	dyspraxic	4-5
# ::node	0.0	tendon	8-9
# ::node	0.0.0	have-03	6-7
# ::node	0.0.0.0	so	0-1
# ::node	0.0.0.1	or	5-6
# ::node	0.0.1	short	7-8
# ::node	0.1	you	2-3
# ::root	0	dyspraxic
# ::edge	dyspraxic	calendar	tendon	0	0.0	
# ::edge	dyspraxic	domain	you	0	0.1	
# ::edge	have-03	ARG1	tendon	0.0.0	0.0	
# ::edge	have-03	ARG6	so	0.0.0	0.0.0.0	
# ::edge	or	op1	have-03	0.0.0.1	0.0.0	
# ::edge	tendon	mod	short	0.0	0.0.1	
(d / dyspraxic 
      :calendar (t / tendon 
            :ARG1-of (h / have-03 
                  :ARG6 (s / so) 
                  :op-of (o / or)) 
            :mod (s2 / short)) 
      :domain (y / you))

# ::snt People who do dance/ gymnastics/ ballet etc have it drilled into them, to the point where I find it more comfortable now =P
# ::tok People who do dance / gymnastics / ballet etc have it drilled into them , to the point where I find it more comfortable now = P
# ::alignments 11-12|0.1.0.1 20-21|0 23-24|0.0 24-25|0.1 22-23|0.0.0 10-11|0.1.0.1.0 2-3|0.1.0.2.0+0.1.0.2 3-4|0.1.0 5-6|0.1.0.3 7-8|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:07.158
# ::node	0	find-02	20-21
# ::node	0.0	comfortable	23-24
# ::node	0.0.0	more	22-23
# ::node	0.1	now	24-25
# ::node	0.1.0	dance-01	3-4
# ::node	0.1.0.0	ballet	7-8
# ::node	0.1.0.1	drill-02	11-12
# ::node	0.1.0.1.0	it	10-11
# ::node	0.1.0.2	do-02	2-3
# ::node	0.1.0.2.0	person	2-3
# ::node	0.1.0.3	gymnastics	5-6
# ::root	0	find-02
# ::edge	comfortable	degree	more	0.0	0.0.0	
# ::edge	dance-01	ARG0	now	0.1.0	0.1	
# ::edge	dance-01	ARG1	ballet	0.1.0	0.1.0.0	
# ::edge	dance-01	ARG6	gymnastics	0.1.0	0.1.0.3	
# ::edge	do-02	ARG0	person	0.1.0.2	0.1.0.2.0	
# ::edge	do-02	ARG1	dance-01	0.1.0.2	0.1.0	
# ::edge	drill-02	ARG0	it	0.1.0.1	0.1.0.1.0	
# ::edge	drill-02	ARG1	dance-01	0.1.0.1	0.1.0	
# ::edge	find-02	ARG1	comfortable	0	0.0	
# ::edge	find-02	ARG6	now	0	0.1	
(f / find-02 
      :ARG1 (c / comfortable 
            :degree (m / more)) 
      :ARG6 (n / now 
            :ARG0-of (d3 / dance-01 
                  :ARG1 (b / ballet) 
                  :ARG1-of (d / drill-02 
                        :ARG0 (i / it)) 
                  :ARG1-of (d2 / do-02 
                        :ARG0 (p / person)) 
                  :ARG6 (g / gymnastics))))

# ::snt I wouldn't read too much into random "symptoms" like that
# ::tok I would n't read too much into random " symptoms " like that
# ::alignments 3-4|0 5-6|0.3 4-5|0.2 9-10|0.1 12-13|0.1.0 7-8|0.1.1 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:07.234
# ::node	0	read-01	3-4
# ::node	0.0	i	0-1
# ::node	0.1	symptom	9-10
# ::node	0.1.0	that	12-13
# ::node	0.1.1	random	7-8
# ::node	0.2	too	4-5
# ::node	0.3	much	5-6
# ::root	0	read-01
# ::edge	read-01	ARG0	i	0	0.0	
# ::edge	read-01	ARG1	symptom	0	0.1	
# ::edge	read-01	ARG6	too	0	0.2	
# ::edge	read-01	degree	much	0	0.3	
# ::edge	symptom	calendar	that	0.1	0.1.0	
# ::edge	symptom	mod	random	0.1	0.1.1	
(r / read-01 
      :ARG0 (i / i) 
      :ARG1 (s / symptom 
            :calendar (t2 / that) 
            :mod (r2 / random)) 
      :ARG6 (t / too) 
      :degree (m / much))

# ::snt hello, i am a 12 year old girl (13 in two days) who is addicted to self harming
# ::tok hello , i am a 12 year old girl ( 13 in two days ) who is addicted to self harming
# ::alignments 0-1|0.0.0.1.0 8-9|0 2-3|0.0.0.1.0.0 17-18|0.0.0 20-21|0.0.0.1 19-20|0.0.0.1.1 5-6|0.1.0 6-7|0.1+0.1.1 10-11|0.0 12-13|0.0.0.0.0 13-14|0.0.0.0+0.0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:07.470
# ::node	0	girl	8-9
# ::node	0.0	13	10-11
# ::node	0.0.0	addict-01	17-18
# ::node	0.0.0.0	temporal-quantity	13-14
# ::node	0.0.0.0.0	2	12-13
# ::node	0.0.0.0.1	day	13-14
# ::node	0.0.0.1	harm-01	20-21
# ::node	0.0.0.1.0	hello	0-1
# ::node	0.0.0.1.0.0	i	2-3
# ::node	0.0.0.1.1	self	19-20
# ::node	0.1	temporal-quantity	6-7
# ::node	0.1.0	12	5-6
# ::node	0.1.1	year	6-7
# ::root	0	girl
# ::edge	13	calendar	girl	0.0	0	
# ::edge	addict-01	ARG0	temporal-quantity	0.0.0	0.0.0.0	
# ::edge	addict-01	ARG1	harm-01	0.0.0	0.0.0.1	
# ::edge	addict-01	ARG6	13	0.0.0	0.0	
# ::edge	girl	mod	temporal-quantity	0	0.1	
# ::edge	harm-01	ARG0	hello	0.0.0.1	0.0.0.1.0	
# ::edge	harm-01	ARG1	self	0.0.0.1	0.0.0.1.1	
# ::edge	i	calendar	hello	0.0.0.1.0.0	0.0.0.1.0	
# ::edge	temporal-quantity	quant	12	0.1	0.1.0	
# ::edge	temporal-quantity	quant	2	0.0.0.0	0.0.0.0.0	
# ::edge	temporal-quantity	unit	day	0.0.0.0	0.0.0.0.1	
# ::edge	temporal-quantity	unit	year	0.1	0.1.1	
(g / girl 
      :calendar-of (12 / 13 
            :ARG6-of (a2 / addict-01 
                  :ARG0 (t / temporal-quantity 
                        :quant 2 
                        :unit (d2 / day)) 
                  :ARG1 (h / harm-01 
                        :ARG0 (h2 / hello 
                              :calendar-of (i / i)) 
                        :ARG1 (s / self)))) 
      :mod (t2 / temporal-quantity 
            :quant 12 
            :unit (y / year)))

# ::snt i started when i was seven as i slit each firnger indevidually with sissors, and from that day i never stopped,
# ::tok i started when i was seven as i slit each firnger indevidually with sissors , and from that day i never stopped ,
# ::alignments 15-16|0 21-22|0.1 16-17|0.1.1 18-19|0.1.0 17-18|0.1.1.0 1-2|0.0.0.0 5-6|0.0.0 8-9|0.0 9-10|0.0.1 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:07.696
# ::node	0	and	15-16
# ::node	0.0	slit-01	8-9
# ::node	0.0.0	7	5-6
# ::node	0.0.0.0	start-01	1-2
# ::node	0.0.0.0.0	i	0-1
# ::node	0.0.1	each	9-10
# ::node	0.1	stop-01	21-22
# ::node	0.1.0	day	18-19
# ::node	0.1.1	from	16-17
# ::node	0.1.1.0	that	17-18
# ::root	0	and
# ::edge	and	op1	slit-01	0	0.0	
# ::edge	and	op2	stop-01	0	0.1	
# ::edge	from	calendar	that	0.1.1	0.1.1.0	
# ::edge	slit-01	ARG1	7	0.0	0.0.0	
# ::edge	slit-01	ARG6	each	0.0	0.0.1	
# ::edge	start-01	ARG1	7	0.0.0.0	0.0.0	
# ::edge	start-01	ARG6	i	0.0.0.0	0.0.0.0.0	
# ::edge	stop-01	ARG1	day	0.1	0.1.0	
# ::edge	stop-01	ARG6	from	0.1	0.1.1	
(a2 / and 
      :op1 (s2 / slit-01 
            :ARG1 (7 / 7 
                  :ARG1-of (s / start-01 
                        :ARG6 (i / i))) 
            :ARG6 (e / each)) 
      :op2 (s4 / stop-01 
            :ARG1 (d / day) 
            :ARG6 (f2 / from 
                  :calendar (t2 / that))))

# ::snt it has got worse as i have a scar on my leg as i slit in my ex boyfriends name with stables,as i wont stop cutting unless i bleed,
# ::tok it has got worse as i have a scar on my leg as i slit in my ex boyfriends name with stables , as i wont stop cutting unless i bleed ,
# ::alignments 0-1|0.0.1.0.1.0 1-2|0.0.1.0.1 8-9|0.0 14-15|0.0.0.0 26-27|0.1.0 30-31|0 27-28|0.1 19-20|0.0.0.0.0 18-19|0.0.0.0.0.0 17-18|0.0.1.0.0 11-12|0.0.0 5-6|0.0.1 3-4|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:08.500
# ::node	0	bleed-01	30-31
# ::node	0.0	scar-01	8-9
# ::node	0.0.0	leg	11-12
# ::node	0.0.0.0	slit-01	14-15
# ::node	0.0.0.0.0	name	19-20
# ::node	0.0.0.0.0.0	boyfriend	18-19
# ::node	0.0.1	i	5-6
# ::node	0.0.1.0	worsen-01	3-4
# ::node	0.0.1.0.0	ex	17-18
# ::node	0.0.1.0.1	have-03	1-2
# ::node	0.0.1.0.1.0	it	0-1
# ::node	0.1	cut-01	27-28
# ::node	0.1.0	stop-01	26-27
# ::root	0	bleed-01
# ::edge	bleed-01	ARG1	scar-01	0	0.0	
# ::edge	boyfriend	name	name	0.0.0.0.0.0	0.0.0.0.0	
# ::edge	cut-01	ARG1	bleed-01	0.1	0	
# ::edge	have-03	ARG0	it	0.0.1.0.1	0.0.1.0.1.0	
# ::edge	have-03	ARG1	worsen-01	0.0.1.0.1	0.0.1.0	
# ::edge	scar-01	ARG0	leg	0.0	0.0.0	
# ::edge	scar-01	ARG1	i	0.0	0.0.1	
# ::edge	slit-01	ARG1	name	0.0.0.0	0.0.0.0.0	
# ::edge	slit-01	part	leg	0.0.0.0	0.0.0	
# ::edge	stop-01	ARG1	cut-01	0.1.0	0.1	
# ::edge	worsen-01	ARG1	ex	0.0.1.0	0.0.1.0.0	
# ::edge	worsen-01	ARG6	i	0.0.1.0	0.0.1	
(b2 / bleed-01 
      :ARG1 (s / scar-01 
            :ARG0 (l / leg 
                  :part-of (s2 / slit-01 
                        :ARG1 (n / name 
                              :name-of (b / boyfriend)))) 
            :ARG1 (i2 / i 
                  :ARG6-of (w / worsen-01 
                        :ARG1 (e / ex) 
                        :ARG1-of (h / have-03 
                              :ARG0 (i / it))))) 
      :ARG1-of (c4 / cut-01 
            :ARG1-of (s4 / stop-01)))

# ::snt i have sevral slits on my arm,
# ::tok i have sevral slits on my arm ,
# ::alignments 1-2|0 3-4|0.0 6-7|0.2 0-1|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:08.548
# ::node	0	have-03	1-2
# ::node	0.0	slit	3-4
# ::node	0.1	i	0-1
# ::node	0.2	arm	6-7
# ::root	0	have-03
# ::edge	have-03	ARG1	slit	0	0.0	
# ::edge	have-03	ARG6	i	0	0.1	
# ::edge	have-03	location	arm	0	0.2	
(h / have-03 
      :ARG1 (s / slit) 
      :ARG6 (i / i) 
      :location (a / arm))

# ::snt they healed, then i cut myself with staples i robbed from school and a razor.
# ::tok they healed , then i cut myself with staples i robbed from school and a razor .
# ::alignments 13-14|0.1.0 5-6|0.1 3-4|0.1.2 8-9|0.1.0.0.0 10-11|0.1.0.0 12-13|0.1.0.1 15-16|0.1.0.2 4-5|0.1.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:08.760
# ::node	0	heal-01	1-2
# ::node	0.0	they	0-1
# ::node	0.1	cut-01	5-6
# ::node	0.1.0	and	13-14
# ::node	0.1.0.0	rob-01	10-11
# ::node	0.1.0.0.0	staple	8-9
# ::node	0.1.0.1	school	12-13
# ::node	0.1.0.2	razor	15-16
# ::node	0.1.1	i	4-5
# ::node	0.1.2	then	3-4
# ::root	0	heal-01
# ::edge	and	op1	school	0.1.0	0.1.0.1	
# ::edge	and	op2	razor	0.1.0	0.1.0.2	
# ::edge	cut-01	ARG0	and	0.1	0.1.0	
# ::edge	cut-01	ARG1	i	0.1	0.1.1	
# ::edge	cut-01	time	then	0.1	0.1.2	
# ::edge	heal-01	ARG0	they	0	0.0	
# ::edge	heal-01	ARG1	cut-01	0	0.1	
# ::edge	rob-01	ARG1	and	0.1.0.0	0.1.0	
# ::edge	rob-01	ARG6	staple	0.1.0.0	0.1.0.0.0	
(h / heal-01 
      :ARG0 (t / they) 
      :ARG1 (c / cut-01 
            :ARG0 (a / and 
                  :ARG1-of (r / rob-01 
                        :ARG6 (s / staple)) 
                  :op1 (s2 / school) 
                  :op2 (r2 / razor)) 
            :ARG1 (i / i) 
            :time (t2 / then)))

# ::snt when i cant find anything to cut with i take around 5 paracetmols and other drugs and i take them with larger and vodka.
# ::tok when i cant find anything to cut with i take around 5 paracetmols and other drugs and i take them with larger and vodka .
# ::alignments 13-14|0.1.1 3-4|0.0 6-7|0.0.1+0.0.1.0 9-10|0.1 16-17|0 23-24|0.3.0 18-19|0.3 22-23|0.0.0 15-16|0.2 14-15|0.2.0 10-11|0.1.1.0 11-12|0.1.1.0.0 1-2|0.0.1.0.0 12-13|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.069
# ::node	0	and	16-17
# ::node	0.0	find-01	3-4
# ::node	0.0.0	and	22-23
# ::node	0.0.1	thing	6-7
# ::node	0.0.1.0	cut-01	6-7
# ::node	0.0.1.0.0	i	1-2
# ::node	0.1	take-01	9-10
# ::node	0.1.0	paracetamol	12-13
# ::node	0.1.1	and	13-14
# ::node	0.1.1.0	around	10-11
# ::node	0.1.1.0.0	5	11-12
# ::node	0.2	drug	15-16
# ::node	0.2.0	other	14-15
# ::node	0.3	take-01	18-19
# ::node	0.3.0	vodka	23-24
# ::root	0	and
# ::edge	and	condition	find-01	0	0.0	
# ::edge	and	op1	take-01	0	0.1	
# ::edge	and	op1	take-01	0.1.1	0.1	
# ::edge	and	op2	drug	0	0.2	
# ::edge	and	op3	take-01	0	0.3	
# ::edge	around	op1	5	0.1.1.0	0.1.1.0.0	
# ::edge	around	op2	and	0.1.1.0	0.1.1	
# ::edge	cut-01	ARG1	i	0.0.1.0	0.0.1.0.0	
# ::edge	cut-01	instrument	thing	0.0.1.0	0.0.1	
# ::edge	drug	mod	other	0.2	0.2.0	
# ::edge	find-01	ARG0	and	0.0	0.0.0	
# ::edge	find-01	ARG1	thing	0.0	0.0.1	
# ::edge	take-01	ARG1	paracetamol	0.1	0.1.0	
# ::edge	take-01	ARG1	vodka	0.3	0.3.0	
(a5 / and 
      :condition (f / find-01 
            :ARG0 (a4 / and) 
            :ARG1 (t3 / thing 
                  :instrument-of (c / cut-01 
                        :ARG1 (i / i)))) 
      :op1 (t2 / take-01 
            :ARG1 (p / paracetamol) 
            :op-of (a2 / and 
                  :op-of (a / around 
                        :op1 5))) 
      :op2 (d / drug 
            :mod (o / other)) 
      :op3 (t / take-01 
            :ARG1 (v / vodka)))

# ::snt as im writing this i am really tempted to cut my arm or burn myslef,
# ::tok as im writing this i am really tempted to cut my arm or burn myslef ,
# ::alignments 7-8|0.1.0.1 2-3|0.1.0.1.0 3-4|0.0 12-13|0.1 13-14|0 9-10|0.1.0 11-12|0.1.0.0 4-5|0.1.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.323
# ::node	0	burn-01	13-14
# ::node	0.0	this	3-4
# ::node	0.1	or	12-13
# ::node	0.1.0	cut-01	9-10
# ::node	0.1.0.0	arm	11-12
# ::node	0.1.0.1	tempt-01	7-8
# ::node	0.1.0.1.0	write-01	2-3
# ::node	0.1.0.1.0.0	i	4-5
# ::root	0	burn-01
# ::edge	burn-01	ARG1	this	0	0.0	
# ::edge	cut-01	ARG1	arm	0.1.0	0.1.0.0	
# ::edge	or	op1	cut-01	0.1	0.1.0	
# ::edge	or	op2	burn-01	0.1	0	
# ::edge	tempt-01	ARG1	cut-01	0.1.0.1	0.1.0	
# ::edge	write-01	ARG1	tempt-01	0.1.0.1.0	0.1.0.1	
# ::edge	write-01	ARG6	i	0.1.0.1.0	0.1.0.1.0.0	
(b / burn-01 
      :ARG1 (t2 / this) 
      :op-of (o / or 
            :op1 (c / cut-01 
                  :ARG1 (a / arm) 
                  :ARG1-of (t / tempt-01 
                        :ARG1-of (w / write-01 
                              :ARG6 (i / i))))))

# ::snt i am addicted,when ever one heals i cut again
# ::tok i am addicted , when ever one heals i cut again
# ::alignments 2-3|0.0 0-1|0 9-10|0.0.0 7-8|0.0.0.1 5-6|0.0.0.0.0 6-7|0.0.0.0 10-11|0.0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.413
# ::node	0	i	0-1
# ::node	0.0	addict-01	2-3
# ::node	0.0.0	cut-01	9-10
# ::node	0.0.0.0	one	6-7
# ::node	0.0.0.0.0	ever	5-6
# ::node	0.0.0.1	heal-01	7-8
# ::node	0.0.0.2	again	10-11
# ::root	0	i
(i / i 
      :ARG1-of (a / addict-01 
            :condition (c / cut-01 
                  :ARG1 (o / one 
                        :op-of (e / ever)) 
                  :ARG1-of (h / heal-01) 
                  :mod (a2 / again))))

# ::snt it think about it everyday,
# ::tok it think about it everyday ,
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.420
# ::node	0	think-01	1-2
# ::node	0.0	it	0-1
# ::root	0	think-01
# ::edge	think-01	ARG0	it	0	0.0	
(t / think-01 
      :ARG0 (i2 / it))

# ::snt i am 12 and i am already sick of my life.
# ::tok i am 12 and i am already sick of my life .
# ::alignments 3-4|0 10-11|0.1 6-7|0.0.0.0 0-1|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.440
# ::node	0	and	3-4
# ::node	0.0	i	0-1
# ::node	0.0.0	12	2-3
# ::node	0.0.0.0	already	6-7
# ::node	0.1	life	10-11
# ::root	0	and
# ::edge	12	calendar	already	0.0.0	0.0.0.0	
# ::edge	12	calendar	i	0.0.0	0.0	
# ::edge	and	calendar	i	0	0.0	
# ::edge	and	op1	life	0	0.1	
(a / and 
      :calendar (i / i 
            :calendar-of (1 / 12 
                  :calendar (a3 / already))) 
      :op1 (l / life))

# ::snt the source of this is that; when i was 7 my dad left,and he doesnt want to know me anymore,
# ::tok the source of this is that ; when i was 7 my dad left , and he doesnt want to know me anymore ,
# ::alignments 1-2|0.0.0.0 3-4|0.0.0.0.0 6-7|0.0.0 18-19|0 22-23|0.0.1 20-21|0.0 13-14|0.0.0.1 10-11|0.0.0.1.1 12-13|0.0.0.1.0 8-9|0.0.0.1.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.781
# ::node	0	want-01	18-19
# ::node	0.0	know-01	20-21
# ::node	0.0.0	and	6-7
# ::node	0.0.0.0	source-02	1-2
# ::node	0.0.0.0.0	this	3-4
# ::node	0.0.0.1	leave-01	13-14
# ::node	0.0.0.1.0	dad	12-13
# ::node	0.0.0.1.1	7	10-11
# ::node	0.0.0.1.1.0	i	8-9
# ::node	0.0.1	anymore	22-23
# ::root	0	want-01
# ::edge	7	calendar	i	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	know-01	ARG1	and	0.0	0.0.0	
# ::edge	know-01	ARG6	anymore	0.0	0.0.1	
# ::edge	leave-01	ARG0	dad	0.0.0.1	0.0.0.1.0	
# ::edge	leave-01	ARG1	and	0.0.0.1	0.0.0	
# ::edge	leave-01	ARG6	7	0.0.0.1	0.0.0.1.1	
# ::edge	source-02	ARG1	and	0.0.0.0	0.0.0	
# ::edge	source-02	ARG6	this	0.0.0.0	0.0.0.0.0	
# ::edge	want-01	ARG1	know-01	0	0.0	
(w / want-01 
      :ARG1 (k / know-01 
            :ARG1 (a / and 
                  :ARG1-of (s / source-02 
                        :ARG6 (t / this)) 
                  :ARG1-of (l / leave-01 
                        :ARG0 (d / dad) 
                        :ARG6 (7 / 7 
                              :calendar (i / i)))) 
            :ARG6 (a3 / anymore)))

# ::snt he just cares about his new little girl and wife,his new life, where im not wanted.
# ::tok he just cares about his new little girl and wife , his new life , where im not wanted .
# ::alignments 2-3|0 1-2|0.2 8-9|0.1.2 13-14|0.1.2.1.0 18-19|0.1.2.1.0.0 5-6|0.1.1 9-10|0.1.2.0 7-8|0.1 12-13|0.1.2.1 6-7|0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:09.944
# ::node	0	care-01	2-3
# ::node	0.0	he	0-1
# ::node	0.1	girl	7-8
# ::node	0.1.0	little	6-7
# ::node	0.1.1	new	5-6
# ::node	0.1.2	and	8-9
# ::node	0.1.2.0	wife	9-10
# ::node	0.1.2.1	new	12-13
# ::node	0.1.2.1.0	life	13-14
# ::node	0.1.2.1.0.0	want-01	18-19
# ::node	0.2	just	1-2
# ::root	0	care-01
# ::edge	and	op1	girl	0.1.2	0.1	
# ::edge	and	op2	wife	0.1.2	0.1.2.0	
# ::edge	and	op3	new	0.1.2	0.1.2.1	
# ::edge	care-01	ARG0	he	0	0.0	
# ::edge	care-01	ARG1	girl	0	0.1	
# ::edge	care-01	ARG6	just	0	0.2	
# ::edge	girl	degree	little	0.1	0.1.0	
# ::edge	girl	mod	new	0.1	0.1.1	
# ::edge	life	mod	new	0.1.2.1.0	0.1.2.1	
# ::edge	want-01	ARG1	life	0.1.2.1.0.0	0.1.2.1.0	
(c / care-01 
      :ARG0 (h / he) 
      :ARG1 (g / girl 
            :degree (l / little) 
            :mod (n2 / new) 
            :op-of (a / and 
                  :op1 (w / wife) 
                  :op2 (n / new 
                        :mod-of (l2 / life 
                              :ARG1-of (w2 / want-01))))) 
      :ARG6 (j / just))

# ::snt my best mate died when i was 10
# ::tok my best mate died when i was 10
# ::alignments 3-4|0 7-8|0.1 2-3|0.0 5-6|0.2 1-2|0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:10.007
# ::node	0	die-01	3-4
# ::node	0.0	mate	2-3
# ::node	0.0.0	good	1-2
# ::node	0.0.0.0	most	1-2
# ::node	0.1	10	7-8
# ::node	0.2	i	5-6
# ::root	0	die-01
# ::edge	die-01	ARG0	mate	0	0.0	
# ::edge	die-01	ARG1	10	0	0.1	
# ::edge	die-01	ARG6	i	0	0.2	
# ::edge	good	degree	most	0.0.0	0.0.0.0	
# ::edge	mate	mod	good	0.0	0.0.0	
(d / die-01 
      :ARG0 (m / mate 
            :mod (g / good 
                  :degree (m2 / most))) 
      :ARG1 10 
      :ARG6 (i / i))

# ::snt i had a reltionship with a boy who is 16 and i am forbidden to speak to him because of what happend and the age diffrience
# ::tok i had a reltionship with a boy who is 16 and i am forbidden to speak to him because of what happend and the age diffrience
# ::alignments 10-11|0.1 13-14|0.1.0 18-19|0 22-23|0.0 24-25|0.0.1.0 15-16|0.1.0.1 1-2|0.0.0 6-7|0.1.0.0 9-10|0.1.0.1.0 0-1|0.0.0.0 25-26|0.0.1 21-22|0.2+0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:10.672
# ::node	0	cause-01	18-19
# ::node	0.0	and	22-23
# ::node	0.0.0	have-03	1-2
# ::node	0.0.0.0	i	0-1
# ::node	0.0.1	differ-02	25-26
# ::node	0.0.1.0	age	24-25
# ::node	0.1	and	10-11
# ::node	0.1.0	forbid-01	13-14
# ::node	0.1.0.0	boy	6-7
# ::node	0.1.0.1	speak-01	15-16
# ::node	0.1.0.1.0	16	9-10
# ::node	0.2	thing	21-22
# ::node	0.2.0	happen-01	21-22
# ::root	0	cause-01
# ::edge	and	op1	differ-02	0.0	0.0.1	
# ::edge	cause-01	ARG0	and	0	0.0	
# ::edge	cause-01	ARG1	and	0	0.1	
# ::edge	cause-01	ARG6	thing	0	0.2	
# ::edge	differ-02	ARG1	age	0.0.1	0.0.1.0	
# ::edge	forbid-01	ARG0	boy	0.1.0	0.1.0.0	
# ::edge	forbid-01	ARG1	speak-01	0.1.0	0.1.0.1	
# ::edge	forbid-01	ARG6	and	0.1.0	0.1	
# ::edge	happen-01	ARG1	thing	0.2.0	0.2	
# ::edge	have-03	ARG0	and	0.0.0	0.0	
# ::edge	have-03	ARG1	i	0.0.0	0.0.0.0	
# ::edge	speak-01	ARG1	16	0.1.0.1	0.1.0.1.0	
(c / cause-01 
      :ARG0 (a2 / and 
            :ARG0-of (h / have-03 
                  :ARG1 (i / i)) 
            :op1 (d / differ-02 
                  :ARG1 (a3 / age))) 
      :ARG1 (a / and 
            :ARG6-of (f / forbid-01 
                  :ARG0 (b / boy) 
                  :ARG1 (s / speak-01 
                        :ARG1 16))) 
      :ARG6 (t / thing 
            :ARG1-of (h2 / happen-01)))

# ::snt also my mum suffers from bi polar and i have depression
# ::tok also my mum suffers from bi polar and i have depression
# ::alignments 5-7|0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0.0.0 7-8|0 9-10|0.0 10-11|0.0.1 3-4|0.0.0.0 0-1|0.0.0.0.1 2-3|0.0.0 8-9|0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:10.865
# ::node	0	and	7-8
# ::node	0.0	have-03	9-10
# ::node	0.0.0	mum	2-3
# ::node	0.0.0.0	suffer-01	3-4
# ::node	0.0.0.0.0	disease	5-7
# ::node	0.0.0.0.0.0	name	5-7
# ::node	0.0.0.0.0.0.0	"bipolar"	5-7
# ::node	0.0.0.0.1	also	0-1
# ::node	0.0.1	depression	10-11
# ::node	0.0.2	i	8-9
# ::root	0	and
# ::edge	and	op1	have-03	0	0.0	
# ::edge	disease	name	name	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-03	ARG0	mum	0.0	0.0.0	
# ::edge	have-03	ARG1	depression	0.0	0.0.1	
# ::edge	have-03	ARG6	i	0.0	0.0.2	
# ::edge	name	op1	"bipolar"	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	suffer-01	ARG0	mum	0.0.0.0	0.0.0	
# ::edge	suffer-01	ARG1	disease	0.0.0.0	0.0.0.0.0	
# ::edge	suffer-01	mod	also	0.0.0.0	0.0.0.0.1	
(a / and 
      :op1 (h / have-03 
            :ARG0 (m / mum 
                  :ARG0-of (s / suffer-01 
                        :ARG1 (d2 / disease 
                              :name (n / name 
                                    :op1 "bipolar")) 
                        :mod (a2 / also))) 
            :ARG1 (d / depression) 
            :ARG6 (i / i)))

# ::snt i dont what to stop,
# ::tok i dont what to stop ,
# ::alignments 0-1|0 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:10.871
# ::node	0	i	0-1
# ::node	0.0	stop-01	4-5
# ::root	0	i
(i / i 
      :ARG1-of (s / stop-01))

# ::snt i dont care what i do to myself,i want to do it again and again to tourture myslef,i hate me.
# ::tok i dont care what i do to myself , i want to do it again and again to tourture myslef , i hate me .
# ::alignments 2-3|0.1 5-6|0.1.0.0+0.1.0.0.0 0-1|0.0 10-11|0.1.0 12-13|0.1.0.1 22-23|0 14-15|0.1.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:11.184
# ::node	0	hate-01	22-23
# ::node	0.0	i	0-1
# ::node	0.1	care-01	2-3
# ::node	0.1.0	want-01	10-11
# ::node	0.1.0.0	thing	5-6
# ::node	0.1.0.0.0	do-02	5-6
# ::node	0.1.0.1	do-02	12-13
# ::node	0.1.0.1.0	again-and-again	14-15
# ::root	0	hate-01
# ::edge	care-01	ARG1	want-01	0.1	0.1.0	
# ::edge	do-02	ARG1	again-and-again	0.1.0.1	0.1.0.1.0	
# ::edge	do-02	ARG1	thing	0.1.0.0.0	0.1.0.0	
# ::edge	hate-01	ARG0	i	0	0.0	
# ::edge	hate-01	ARG1	care-01	0	0.1	
# ::edge	want-01	ARG0	thing	0.1.0	0.1.0.0	
# ::edge	want-01	ARG1	do-02	0.1.0	0.1.0.1	
(h / hate-01 
      :ARG0 (i / i) 
      :ARG1 (c / care-01 
            :ARG1 (w / want-01 
                  :ARG0 (t / thing 
                        :ARG1-of (d / do-02)) 
                  :ARG1 (d2 / do-02 
                        :ARG1 (a / again-and-again)))))

# ::snt however,my best mate,i love him,loads,he means the world to me and if i do anything then he will,
# ::tok however , my best mate , i love him , loads , he means the world to me and if i do anything then he will ,
# ::alignments 18-19|0 21-22|0.1.2 22-23|0.1.2.0 13-14|0.1 15-16|0.1.1 12-13|0.1.0 7-8|0.0 10-11|0.0.1 4-5|0.0.0 3-4|0.0.0.0+0.0.0.0.0 6-7|0.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:11.800
# ::node	0	and	18-19
# ::node	0.0	love-01	7-8
# ::node	0.0.0	mate	4-5
# ::node	0.0.0.0	good	3-4
# ::node	0.0.0.0.0	most	3-4
# ::node	0.0.1	loads	10-11
# ::node	0.0.2	i	6-7
# ::node	0.1	mean-01	13-14
# ::node	0.1.0	he	12-13
# ::node	0.1.1	world	15-16
# ::node	0.1.2	do-02	21-22
# ::node	0.1.2.0	anything	22-23
# ::root	0	and
# ::edge	and	op1	love-01	0	0.0	
# ::edge	and	op2	mean-01	0	0.1	
# ::edge	do-02	ARG1	anything	0.1.2	0.1.2.0	
# ::edge	do-02	ARG6	mean-01	0.1.2	0.1	
# ::edge	good	degree	most	0.0.0.0	0.0.0.0.0	
# ::edge	love-01	ARG1	mate	0.0	0.0.0	
# ::edge	love-01	ARG6	loads	0.0	0.0.1	
# ::edge	love-01	manner	i	0.0	0.0.2	
# ::edge	mate	mod	good	0.0.0	0.0.0.0	
# ::edge	mean-01	ARG0	he	0.1	0.1.0	
# ::edge	mean-01	ARG1	world	0.1	0.1.1	
(a / and 
      :op1 (l / love-01 
            :ARG1 (m / mate 
                  :mod (g / good 
                        :degree (m3 / most))) 
            :ARG6 (l2 / loads) 
            :manner (i / i)) 
      :op2 (m2 / mean-01 
            :ARG0 (h / he) 
            :ARG1 (w / world) 
            :ARG6-of (d / do-02 
                  :ARG1 (a3 / anything))))

# ::snt i dont tell him but he finds out,
# ::tok i dont tell him but he finds out ,
# ::alignments 4-5|0 6-7|0.0 2-3|0.0.1 5-6|0.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:11.906
# ::node	0	contrast-01	4-5
# ::node	0.0	find-03	6-7
# ::node	0.0.0	he	5-6
# ::node	0.0.1	tell-01	2-3
# ::node	0.0.1.0	i	0-1
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	find-03	0	0.0	
# ::edge	find-03	ARG0	he	0.0	0.0.0	
# ::edge	find-03	ARG1	tell-01	0.0	0.0.1	
# ::edge	tell-01	ARG6	i	0.0.1	0.0.1.0	
(c / contrast-01 
      :ARG1 (f / find-03 
            :ARG0 (h / he) 
            :ARG1 (t / tell-01 
                  :ARG6 (i / i))))

# ::snt i dont want to hurt him,i dont want him to hurt himself
# ::tok i dont want to hurt him , i dont want him to hurt himself
# ::alignments 2-3|0.1.0 4-5|0.1.0.0 0-1|0.1 9-10|0 12-13|0.0 7-8|0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:11.946
# ::node	0	want-01	9-10
# ::node	0.0	hurt-01	12-13
# ::node	0.1	i	0-1
# ::node	0.1.0	want-01	2-3
# ::node	0.1.0.0	hurt-01	4-5
# ::node	0.1.0.0.0	i	7-8
# ::root	0	want-01
# ::edge	hurt-01	ARG1	i	0.1.0.0	0.1.0.0.0	
# ::edge	i	op1	want-01	0.1	0.1.0	
# ::edge	want-01	ARG1	hurt-01	0	0.0	
# ::edge	want-01	ARG1	hurt-01	0.1.0	0.1.0.0	
# ::edge	want-01	time	i	0	0.1	
(w2 / want-01 
      :ARG1 (h3 / hurt-01) 
      :time (i / i 
            :op1 (w / want-01 
                  :ARG1 (h / hurt-01 
                        :ARG1 (i2 / i)))))

# ::snt what do i do
# ::tok what do i do
# ::alignments 1-2|0.0 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:11.951
# ::node	0	i	2-3
# ::node	0.0	do-02	1-2
# ::root	0	i
(i / i 
      :ARG1-of (d / do-02))

# ::snt thanks you for reading
# ::tok thanks you for reading
# ::alignments 0-1|0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:11.958
# ::node	0	thank-01	0-1
# ::node	0.0	you	1-2
# ::node	0.0.0	read-01	3-4
# ::root	0	thank-01
# ::edge	read-01	ARG1	you	0.0.0	0.0	
# ::edge	thank-01	ARG1	you	0	0.0	
(t / thank-01 
      :ARG1 (y / you 
            :ARG1-of (r / read-01)))

# ::snt Are you on any drugs or getting any therapy?
# ::tok Are you on any drugs or getting any therapy ?
# ::alignments 5-6|0 6-7|0.1 8-9|0.1.0 3-4|0.0.0 1-2|0.1.1 4-5|0.0 7-8|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:12.138
# ::node	0	or	5-6
# ::node	0.0	drug	4-5
# ::node	0.0.0	any	3-4
# ::node	0.1	get-01	6-7
# ::node	0.1.0	therapy	8-9
# ::node	0.1.0.0	any	7-8
# ::node	0.1.1	you	1-2
# ::root	0	or
# ::edge	drug	mod	any	0.0	0.0.0	
# ::edge	get-01	ARG1	therapy	0.1	0.1.0	
# ::edge	get-01	ARG6	you	0.1	0.1.1	
# ::edge	or	op1	drug	0	0.0	
# ::edge	or	op2	get-01	0	0.1	
# ::edge	therapy	mod	any	0.1.0	0.1.0.0	
(o / or 
      :op1 (d / drug 
            :mod (a2 / any)) 
      :op2 (g / get-01 
            :ARG1 (t / therapy 
                  :mod (a / any)) 
            :ARG6 (y2 / you)))

# ::snt It might be an idea to talk to your school nurse or your GP and tell them what's going on.
# ::tok It might be an idea to talk to your school nurse or your GP and tell them what 's going on .
# ::alignments 14-15|0 15-16|0.1 19-20|0.1.0+0.1.0.0 6-7|0.0 11-12|0.0.0 9-10|0.0.1 10-11|0.0.1.0+0.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:12.410
# ::node	0	and	14-15
# ::node	0.0	talk-01	6-7
# ::node	0.0.0	or	11-12
# ::node	0.0.1	school	9-10
# ::node	0.0.1.0	have-org-role-91	10-11
# ::node	0.0.1.0.0	nurse	10-11
# ::node	0.1	tell-01	15-16
# ::node	0.1.0	thing	19-20
# ::node	0.1.0.0	go-00	19-20
# ::root	0	and
# ::edge	and	op1	talk-01	0	0.0	
# ::edge	and	op2	tell-01	0	0.1	
# ::edge	go-00	ARG1	thing	0.1.0.0	0.1.0	
# ::edge	have-org-role-91	ARG1	school	0.0.1.0	0.0.1	
# ::edge	have-org-role-91	ARG2	nurse	0.0.1.0	0.0.1.0.0	
# ::edge	talk-01	ARG1	or	0.0	0.0.0	
# ::edge	talk-01	ARG2	school	0.0	0.0.1	
# ::edge	tell-01	ARG1	thing	0.1	0.1.0	
(a / and 
      :op1 (t / talk-01 
            :ARG1 (o / or) 
            :ARG2 (s / school 
                  :ARG1-of (h2 / have-org-role-91 
                        :ARG2 (n / nurse)))) 
      :op2 (t2 / tell-01 
            :ARG1 (t3 / thing 
                  :ARG1-of (g2 / go-00))))

# ::snt Perhaps there's a teacher at school who you trust and could tell.
# ::tok Perhaps there 's a teacher at school who you trust and could tell .
# ::alignments 11-12|0 9-10|0.0.0.0.0.1+0.0.0.0.0 8-9|0.0.0.0 12-13|0.0 6-7|0.0.0.0.0.0+0.0.0.0.0.0.0 4-5|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:12.620
# ::node	0	possible	11-12
# ::node	0.0	tell-01	12-13
# ::node	0.0.0	teach-01	4-5
# ::node	0.0.0.0	you	8-9
# ::node	0.0.0.0.0	trust-01	9-10
# ::node	0.0.0.0.0.0	have-org-role-91	6-7
# ::node	0.0.0.0.0.0.0	school	6-7
# ::node	0.0.0.0.0.1	person	9-10
# ::root	0	possible
# ::edge	have-org-role-91	ARG1	school	0.0.0.0.0.0	0.0.0.0.0.0.0	
# ::edge	possible	domain	tell-01	0	0.0	
# ::edge	teach-01	ARG1	you	0.0.0	0.0.0.0	
# ::edge	tell-01	ARG1	teach-01	0.0	0.0.0	
# ::edge	trust-01	ARG0	you	0.0.0.0.0	0.0.0.0	
# ::edge	trust-01	ARG1	have-org-role-91	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	trust-01	ARG2	person	0.0.0.0.0	0.0.0.0.0.1	
(p / possible 
      :domain (t3 / tell-01 
            :ARG1 (t / teach-01 
                  :ARG1 (y / you 
                        :ARG0-of (t2 / trust-01 
                              :ARG1 (h / have-org-role-91 
                                    :ARG1 (s / school)) 
                              :ARG2 (p3 / person))))))

# ::snt If you tell people they can help you,
# ::tok If you tell people they can help you ,
# ::alignments 5-6|0.1.0 2-3|0 6-7|0.1 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:12.635
# ::node	0	tell-01	2-3
# ::node	0.0	you	1-2
# ::node	0.1	help-01	6-7
# ::node	0.1.0	possible	5-6
# ::root	0	tell-01
# ::edge	possible	domain	help-01	0.1.0	0.1	
# ::edge	tell-01	ARG0	you	0	0.0	
# ::edge	tell-01	ARG1	help-01	0	0.1	
(t / tell-01 
      :ARG0 (y / you) 
      :ARG1 (h / help-01 
            :domain-of (p / possible)))

# ::snt if you keep it bottled up inside it's likely to only get worse.
# ::tok if you keep it bottled up inside it 's likely to only get worse .
# ::alignments 9-10|0 2-3|0.2 3-4|0.2.1.0 6-7|0.2.1.1 4-5|0.2.1 1-2|0.2.0 7-8|0.1 11-12|0.0.0 13-14|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:12.859
# ::node	0	likely	9-10
# ::node	0.0	worsen-01	13-14
# ::node	0.0.0	only	11-12
# ::node	0.1	it	7-8
# ::node	0.2	keep-01	2-3
# ::node	0.2.0	you	1-2
# ::node	0.2.1	bottle-02	4-5
# ::node	0.2.1.0	it	3-4
# ::node	0.2.1.1	inside	6-7
# ::root	0	likely
# ::edge	bottle-02	ARG0	it	0.2.1	0.2.1.0	
# ::edge	bottle-02	ARG1	inside	0.2.1	0.2.1.1	
# ::edge	keep-01	ARG0	you	0.2	0.2.0	
# ::edge	keep-01	ARG1	bottle-02	0.2	0.2.1	
# ::edge	likely	domain	it	0	0.1	
# ::edge	likely	time	keep-01	0	0.2	
# ::edge	worsen-01	ARG1	likely	0.0	0	
# ::edge	worsen-01	ARG6	only	0.0	0.0.0	
(l / likely 
      :ARG1-of (w / worsen-01 
            :ARG6 (o / only)) 
      :domain (i / it) 
      :time (k / keep-01 
            :ARG0 (y / you) 
            :ARG1 (b / bottle-02 
                  :ARG0 (i4 / it) 
                  :ARG1 (i3 / inside))))

# ::snt Trust me, it's better to get these things as early as possible rather than let them get even worse.
# ::tok Trust me , it 's better to get these things as early as possible rather than let them get even worse .
# ::alignments 0-1|0.0.0.1 5-6|0.0.0.1.0 7-8|0.0.0 16-17|0.0.0.0.0 19-20|0.0.0.0.0.0 11-12|0.0 13-14|0 9-10|0.0.0.0 20-21|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:13.089
# ::node	0	possible	13-14
# ::node	0.0	early	11-12
# ::node	0.0.0	get-01	7-8
# ::node	0.0.0.0	thing	9-10
# ::node	0.0.0.0.0	let-01	16-17
# ::node	0.0.0.0.0.0	even	19-20
# ::node	0.0.0.0.0.0.0	worsen-01	20-21
# ::node	0.0.0.1	trust-01	0-1
# ::node	0.0.0.1.0	good	5-6
# ::root	0	possible
(p / possible 
      :degree-of (e / early 
            :ARG6-of (g2 / get-01 
                  :ARG1 (t2 / thing 
                        :ARG1-of (l / let-01 
                              :ARG0 (e2 / even 
                                    :ARG1-of (w / worsen-01)))) 
                  :ARG1-of (t / trust-01 
                        :domain-of (g / good)))))

# ::snt Please don't do this,
# ::tok Please do n't do this ,
# ::alignments 1-2|0 4-5|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:13.096
# ::node	0	do-02	1-2
# ::node	0.0	this	4-5
# ::root	0	do-02
# ::edge	do-02	ARG1	this	0	0.0	
(d / do-02 
      :ARG1 (t / this))

# ::snt I'm 17 I started self harming last year, mainly cutting my arms, but I have stopped since the last few months,
# ::tok I 'm 17 I started self harming last year , mainly cutting my arms , but I have stopped since the last few months ,
# ::alignments 15-16|0 18-19|0.1 19-20|0.1.1 22-23|0.1.1.0.0 23-24|0.1.1.0+0.1.1.0.1 7-8|0.1.0.1.0 0-1|0.0.1 2-3|0.2 8-9|0.1.0.1+0.1.0.1.1 4-5|0.0 21-22|0.1.1.0.1.0 6-7|0.0.0 11-12|0.1.0 13-14|0.1.0.0 5-6|0.0.0.0 10-11|0.1.0.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:13.850
# ::node	0	contrast-01	15-16
# ::node	0.0	start-01	4-5
# ::node	0.0.0	harm-01	6-7
# ::node	0.0.0.0	self	5-6
# ::node	0.0.1	i	0-1
# ::node	0.1	stop-01	18-19
# ::node	0.1.0	cut-01	11-12
# ::node	0.1.0.0	arm	13-14
# ::node	0.1.0.1	temporal-quantity	8-9
# ::node	0.1.0.1.0	last	7-8
# ::node	0.1.0.1.1	year	8-9
# ::node	0.1.0.2	main	10-11
# ::node	0.1.1	since	19-20
# ::node	0.1.1.0	temporal-quantity	23-24
# ::node	0.1.1.0.0	few	22-23
# ::node	0.1.1.0.1	month	23-24
# ::node	0.1.1.0.1.0	last	21-22
# ::node	0.2	17	2-3
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	start-01	0	0.0	
# ::edge	contrast-01	ARG2	stop-01	0	0.1	
# ::edge	contrast-01	time	17	0	0.2	
# ::edge	cut-01	ARG1	arm	0.1.0	0.1.0.0	
# ::edge	cut-01	ARG6	temporal-quantity	0.1.0	0.1.0.1	
# ::edge	cut-01	manner	main	0.1.0	0.1.0.2	
# ::edge	few	op1	temporal-quantity	0.1.1.0.0	0.1.1.0	
# ::edge	harm-01	ARG1	self	0.0.0	0.0.0.0	
# ::edge	month	mod	last	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	since	op1	temporal-quantity	0.1.1	0.1.1.0	
# ::edge	start-01	ARG1	harm-01	0.0	0.0.0	
# ::edge	start-01	ARG6	i	0.0	0.0.1	
# ::edge	stop-01	ARG1	cut-01	0.1	0.1.0	
# ::edge	stop-01	time	since	0.1	0.1.1	
# ::edge	temporal-quantity	mod	last	0.1.0.1	0.1.0.1.0	
# ::edge	temporal-quantity	unit	month	0.1.1.0	0.1.1.0.1	
# ::edge	temporal-quantity	unit	year	0.1.0.1	0.1.0.1.1	
(c / contrast-01 
      :ARG1 (s / start-01 
            :ARG1 (h / harm-01 
                  :ARG1 (s2 / self)) 
            :ARG6 (i / i)) 
      :ARG2 (s3 / stop-01 
            :ARG1 (c2 / cut-01 
                  :ARG1 (a3 / arm) 
                  :ARG6 (t2 / temporal-quantity 
                        :mod (l2 / last) 
                        :unit (y / year)) 
                  :manner (m3 / main)) 
            :time (s4 / since 
                  :op1 (t3 / temporal-quantity 
                        :op-of (f / few) 
                        :unit (m4 / month 
                              :mod (l / last))))) 
      :time 17)

# ::snt its hard but you can do it.
# ::tok its hard but you can do it .
# ::alignments 2-3|0.0.0.0 4-5|0 5-6|0.0 3-4|0.0.0 1-2|0.0.0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:13.924
# ::node	0	possible	4-5
# ::node	0.0	do-02	5-6
# ::node	0.0.0	you	3-4
# ::node	0.0.0.0	contrast-01	2-3
# ::node	0.0.0.0.0	hard	1-2
# ::node	0.0.1	it	0-1
# ::root	0	possible
# ::edge	contrast-01	ARG1	hard	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG6	you	0.0.0.0	0.0.0	
# ::edge	do-02	ARG0	you	0.0	0.0.0	
# ::edge	do-02	ARG1	it	0.0	0.0.1	
# ::edge	possible	domain	do-02	0	0.0	
(p / possible 
      :domain (d / do-02 
            :ARG0 (y / you 
                  :ARG6-of (c / contrast-01 
                        :ARG1 (h / hard))) 
            :ARG1 (i2 / it)))

# ::snt I feel so much happier, but seeing the scars is both a painful reminder of how I felt at that time, how strong my feelings were that I would want to do such a thing to myself!
# ::tok I feel so much happier , but seeing the scars is both a painful reminder of how I felt at that time , how strong my feelings were that I would want to do such a thing to myself !
# ::alignments 6-7|0 14-15|0.0.1 36-37|0.0.1.0.1.0.0.0 1-2|0.0 21-22|0.0.1.0.0 20-21|0.0.1.0.0.0 26-27|0.0.1.0.1 31-32|0.0.1.0.1.0 33-34|0.0.1.0.1.0.0 34-35|0.0.1.0.1.0.0.0.0 24-25|0.0.1.0.1.0.1 2-3|0.0.2.0 7-8|0.1 9-10|0.1.0 18-19|0.0.1.0 4-5|0.2 3-4|0.0.2 0-1|0.0.0 13-14|0.0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:15.349
# ::node	0	contrast-01	6-7
# ::node	0.0	feel-01	1-2
# ::node	0.0.0	i	0-1
# ::node	0.0.1	remind-01	14-15
# ::node	0.0.1.0	feel-01	18-19
# ::node	0.0.1.0.0	time	21-22
# ::node	0.0.1.0.0.0	that	20-21
# ::node	0.0.1.0.1	feeling	26-27
# ::node	0.0.1.0.1.0	want-01	31-32
# ::node	0.0.1.0.1.0.0	do-02	33-34
# ::node	0.0.1.0.1.0.0.0	thing	36-37
# ::node	0.0.1.0.1.0.0.0.0	such	34-35
# ::node	0.0.1.0.1.0.1	strong	24-25
# ::node	0.0.1.1	pain-01	13-14
# ::node	0.0.2	much	3-4
# ::node	0.0.2.0	so	2-3
# ::node	0.1	see-01	7-8
# ::node	0.1.0	scar	9-10
# ::node	0.2	happy	4-5
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	feel-01	0	0.0	
# ::edge	contrast-01	ARG2	see-01	0	0.1	
# ::edge	contrast-01	ARG6	happy	0	0.2	
# ::edge	do-02	ARG1	thing	0.0.1.0.1.0.0	0.0.1.0.1.0.0.0	
# ::edge	feel-01	ARG0	i	0.0	0.0.0	
# ::edge	feel-01	ARG0	time	0.0.1.0	0.0.1.0.0	
# ::edge	feel-01	ARG1	feeling	0.0.1.0	0.0.1.0.1	
# ::edge	feel-01	ARG1	remind-01	0.0	0.0.1	
# ::edge	feel-01	ARG6	much	0.0	0.0.2	
# ::edge	much	calendar	so	0.0.2	0.0.2.0	
# ::edge	pain-01	ARG1	remind-01	0.0.1.1	0.0.1	
# ::edge	remind-01	ARG1	feel-01	0.0.1	0.0.1.0	
# ::edge	see-01	ARG1	scar	0.1	0.1.0	
# ::edge	thing	mod	such	0.0.1.0.1.0.0.0	0.0.1.0.1.0.0.0.0	
# ::edge	time	mod	that	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	want-01	ARG0	feeling	0.0.1.0.1.0	0.0.1.0.1	
# ::edge	want-01	ARG1	do-02	0.0.1.0.1.0	0.0.1.0.1.0.0	
# ::edge	want-01	ARG6	strong	0.0.1.0.1.0	0.0.1.0.1.0.1	
(c / contrast-01 
      :ARG1 (f2 / feel-01 
            :ARG0 (i / i) 
            :ARG1 (r / remind-01 
                  :ARG1 (f / feel-01 
                        :ARG0 (t / time 
                              :mod (t2 / that)) 
                        :ARG1 (f3 / feeling 
                              :ARG0-of (w / want-01 
                                    :ARG1 (d / do-02 
                                          :ARG1 (t4 / thing 
                                                :mod (s3 / such))) 
                                    :ARG6 (s2 / strong)))) 
                  :ARG1-of (p / pain-01)) 
            :ARG6 (m2 / much 
                  :calendar (s6 / so))) 
      :ARG2 (s4 / see-01 
            :ARG1 (s5 / scar)) 
      :ARG6 (h / happy))

# ::snt And, also strength, you can do it, I found salvation in poetry writing and keeping a journal,
# ::tok And , also strength , you can do it , I found salvation in poetry writing and keeping a journal ,
# ::alignments 0-1|0.1 2-3|0.0.1.0 3-4|0.0.1 6-7|0 7-8|0.0 8-9|0.0.2 5-6|0.0.0 11-12|0.0.2.0 12-13|0.0.2.0.1.0.0 16-17|0.0.2.0.1 17-18|0.0.2.0.1.1 19-20|0.0.2.0.1.1.1 15-16|0.0.2.0.1.0 14-15|0.0.2.0.1.1.0 10-11|0.0.2.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:15.830
# ::node	0	possible	6-7
# ::node	0.0	do-02	7-8
# ::node	0.0.0	you	5-6
# ::node	0.0.1	strength	3-4
# ::node	0.0.1.0	also	2-3
# ::node	0.0.2	it	8-9
# ::node	0.0.2.0	find-01	11-12
# ::node	0.0.2.0.0	i	10-11
# ::node	0.0.2.0.1	and	16-17
# ::node	0.0.2.0.1.0	write-01	15-16
# ::node	0.0.2.0.1.0.0	salvation	12-13
# ::node	0.0.2.0.1.1	keep-03	17-18
# ::node	0.0.2.0.1.1.0	poetry	14-15
# ::node	0.0.2.0.1.1.1	journal	19-20
# ::node	0.1	and	0-1
# ::root	0	possible
# ::edge	and	op1	write-01	0.0.2.0.1	0.0.2.0.1.0	
# ::edge	and	op2	keep-03	0.0.2.0.1	0.0.2.0.1.1	
# ::edge	do-02	ARG0	you	0.0	0.0.0	
# ::edge	do-02	ARG2	strength	0.0	0.0.1	
# ::edge	do-02	ARG6	it	0.0	0.0.2	
# ::edge	find-01	ARG0	i	0.0.2.0	0.0.2.0.0	
# ::edge	find-01	ARG1	and	0.0.2.0	0.0.2.0.1	
# ::edge	find-01	ARG6	it	0.0.2.0	0.0.2	
# ::edge	keep-03	ARG0	poetry	0.0.2.0.1.1	0.0.2.0.1.1.0	
# ::edge	keep-03	ARG1	journal	0.0.2.0.1.1	0.0.2.0.1.1.1	
# ::edge	possible	domain	and	0	0.1	
# ::edge	possible	domain	do-02	0	0.0	
# ::edge	strength	calendar	also	0.0.1	0.0.1.0	
# ::edge	write-01	ARG1	salvation	0.0.2.0.1.0	0.0.2.0.1.0.0	
(p / possible 
      :domain (d / do-02 
            :ARG0 (y / you) 
            :ARG2 (s / strength 
                  :calendar (a2 / also)) 
            :ARG6 (i / it 
                  :ARG6-of (f / find-01 
                        :ARG0 (i2 / i) 
                        :ARG1 (a3 / and 
                              :op1 (w / write-01 
                                    :ARG1 (s2 / salvation)) 
                              :op2 (k / keep-03 
                                    :ARG0 (p2 / poetry) 
                                    :ARG1 (j / journal)))))) 
      :domain (a / and))

# ::snt self harming is addictive, but you can overcome it,
# ::tok self harming is addictive , but you can overcome it ,
# ::alignments 5-6|0 7-8|0.0.1 8-9|0.0 6-7|0.0.0 1-2|0.1.0 0-1|0.1.0.0 3-4|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:16.062
# ::node	0	contrast-01	5-6
# ::node	0.0	overcome-01	8-9
# ::node	0.0.0	you	6-7
# ::node	0.0.1	possible	7-8
# ::node	0.1	addict-01	3-4
# ::node	0.1.0	harm-01	1-2
# ::node	0.1.0.0	self	0-1
# ::root	0	contrast-01
# ::edge	addict-01	ARG1	harm-01	0.1	0.1.0	
# ::edge	contrast-01	ARG1	overcome-01	0	0.0	
# ::edge	contrast-01	ARG6	addict-01	0	0.1	
# ::edge	harm-01	ARG1	self	0.1.0	0.1.0.0	
# ::edge	overcome-01	ARG0	you	0.0	0.0.0	
# ::edge	overcome-01	mod	possible	0.0	0.0.1	
(c / contrast-01 
      :ARG1 (o / overcome-01 
            :ARG0 (y / you) 
            :mod (p / possible)) 
      :ARG6 (a / addict-01 
            :ARG1 (h / harm-01 
                  :ARG1 (s / self))))

# ::snt remember your self harming does not define who you are.
# ::tok remember your self harming does not define who you are .
# ::alignments 0-1|0.0 6-7|0 8-9|0.1+0.1.0 3-4|0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:16.202
# ::node	0	define-01	6-7
# ::node	0.0	remember-01	0-1
# ::node	0.0.0	harm-01	3-4
# ::node	0.0.0.0	self	2-3
# ::node	0.1	person	8-9
# ::node	0.1.0	you	8-9
# ::root	0	define-01
# ::edge	define-01	ARG0	remember-01	0	0.0	
# ::edge	define-01	ARG6	person	0	0.1	
# ::edge	harm-01	ARG1	self	0.0.0	0.0.0.0	
# ::edge	person	domain	you	0.1	0.1.0	
# ::edge	remember-01	ARG1	harm-01	0.0	0.0.0	
(d / define-01 
      :ARG0 (r / remember-01 
            :ARG1 (h / harm-01 
                  :ARG1 (s / self))) 
      :ARG6 (p / person 
            :domain (y2 / you)))

# ::snt You can overcome it.
# ::tok You can overcome it .
# ::alignments 1-2|0 2-3|0.0 3-4|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:16.213
# ::node	0	possible	1-2
# ::node	0.0	overcome-01	2-3
# ::node	0.0.0	you	0-1
# ::node	0.0.1	it	3-4
# ::root	0	possible
(p / possible 
      :mod-of (o / overcome-01 
            :ARG0 (y / you) 
            :ARG1 (i / it)))

# ::snt So I think Ive got a form of OCD because for the past year, I've found that everytime I go out, especially to Uni, I'm always checking my belongings to make sure I haven't lost or left anything.
# ::tok So I think Ive got a form of OCD because for the past year , I 've found that everytime I go out , especially to Uni , I 'm always checking my belongings to make sure I have n't lost or left anything .
# ::alignments 8-9|0.1.1.0+0.1.1.0.0+0.1.1.0.0.0 9-10|0 2-3|0.1.2 0-1|0.1.2.2 4-5|0.1 6-7|0.1.1 17-18|0.0 13-14|0.0.0 12-13|0.0.0.0 31-32|0.1.2.1.0.0 21-22|0.0.1 24-25|0.1.0 41-42|0.0.1.0.0 42-43|0.0.1.0 40-41|0.0.1.0.0.0 43-44|0.0.1.0.0.0.0 30-31|0.1.2.1.0.0.0 1-2|0.1.2.0 33-34|0.1.2.1.0+0.1.2.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:19.047
# ::node	0	cause-01	9-10
# ::node	0.0	find-01	17-18
# ::node	0.0.0	year	13-14
# ::node	0.0.0.0	past	12-13
# ::node	0.0.1	go-17	21-22
# ::node	0.0.1.0	leave-02	42-43
# ::node	0.0.1.0.0	or	41-42
# ::node	0.0.1.0.0.0	lose-02	40-41
# ::node	0.0.1.0.0.0.0	anything	43-44
# ::node	0.1	get-02	4-5
# ::node	0.1.0	especially	24-25
# ::node	0.1.1	form	6-7
# ::node	0.1.1.0	disease	8-9
# ::node	0.1.1.0.0	name	8-9
# ::node	0.1.1.0.0.0	"OCD"	8-9
# ::node	0.1.2	think-01	2-3
# ::node	0.1.2.0	i	1-2
# ::node	0.1.2.1	belong-01	33-34
# ::node	0.1.2.1.0	thing	33-34
# ::node	0.1.2.1.0.0	check-01	31-32
# ::node	0.1.2.1.0.0.0	always	30-31
# ::node	0.1.2.2	so	0-1
# ::root	0	cause-01
# ::edge	belong-01	ARG0	thing	0.1.2.1	0.1.2.1.0	
# ::edge	belong-01	ARG1	think-01	0.1.2.1	0.1.2	
# ::edge	cause-01	ARG0	find-01	0	0.0	
# ::edge	cause-01	ARG1	get-02	0	0.1	
# ::edge	check-01	ARG1	thing	0.1.2.1.0.0	0.1.2.1.0	
# ::edge	check-01	time	always	0.1.2.1.0.0	0.1.2.1.0.0.0	
# ::edge	disease	name	name	0.1.1.0	0.1.1.0.0	
# ::edge	disease	quant	form	0.1.1.0	0.1.1	
# ::edge	find-01	ARG1	year	0.0	0.0.0	
# ::edge	get-02	ARG0	especially	0.1	0.1.0	
# ::edge	get-02	ARG1	form	0.1	0.1.1	
# ::edge	go-17	ARG1	find-01	0.0.1	0.0	
# ::edge	leave-02	ARG1	go-17	0.0.1.0	0.0.1	
# ::edge	lose-02	ARG1	anything	0.0.1.0.0.0	0.0.1.0.0.0.0	
# ::edge	name	op1	"OCD"	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	or	op1	lose-02	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	or	op2	leave-02	0.0.1.0.0	0.0.1.0	
# ::edge	so	op1	think-01	0.1.2.2	0.1.2	
# ::edge	think-01	ARG0	i	0.1.2	0.1.2.0	
# ::edge	think-01	ARG1	get-02	0.1.2	0.1	
# ::edge	year	mod	past	0.0.0	0.0.0.0	
(c / cause-01 
      :ARG0 (f / find-01 
            :ARG1 (y / year 
                  :mod (p / past)) 
            :ARG1-of (g2 / go-17 
                  :ARG1-of (l2 / leave-02 
                        :op-of (o / or 
                              :op1 (l / lose-02 
                                    :ARG1 (a2 / anything)))))) 
      :ARG1 (g / get-02 
            :ARG0 (e / especially) 
            :ARG1 (f2 / form 
                  :quant-of (d / disease 
                        :name (n / name 
                              :op1 "OCD"))) 
            :ARG1-of (t3 / think-01 
                  :ARG0 (i / i) 
                  :ARG1-of (b / belong-01 
                        :ARG0 (t / thing 
                              :ARG1-of (c2 / check-01 
                                    :time (a / always)))) 
                  :op-of (s / so))))

# ::snt I often have to check twice at one go, then after 30 seconds for some reason I cant resist checking again!
# ::tok I often have to check twice at one go , then after 30 seconds for some reason I cant resist checking again !
# ::alignments 0-1|0.0 4-5|0.0.0 8-9|0.0.0.0 7-8|0.0.0.1 1-2|0 19-20|0.0.0.2.1 20-21|0.0.0.2.1.1 21-22|0.0.0.2.1.1.1 11-12|0.0.0.2 12-13|0.0.0.2.1.0.0 13-14|0.0.0.2.1.0+0.0.0.2.1.0.1 10-11|0.0.0.2.0 16-17|0.0.0.2.1.1.0 15-16|0.0.0.2.1.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:19.508
# ::node	0	often	1-2
# ::node	0.0	i	0-1
# ::node	0.0.0	check-01	4-5
# ::node	0.0.0.0	go	8-9
# ::node	0.0.0.1	1	7-8
# ::node	0.0.0.2	after	11-12
# ::node	0.0.0.2.0	then	10-11
# ::node	0.0.0.2.1	resist-01	19-20
# ::node	0.0.0.2.1.0	temporal-quantity	13-14
# ::node	0.0.0.2.1.0.0	30	12-13
# ::node	0.0.0.2.1.0.1	second	13-14
# ::node	0.0.0.2.1.1	check-01	20-21
# ::node	0.0.0.2.1.1.0	reason	16-17
# ::node	0.0.0.2.1.1.1	again	21-22
# ::node	0.0.0.2.1.2	some	15-16
# ::root	0	often
# ::edge	after	mod	then	0.0.0.2	0.0.0.2.0	
# ::edge	after	op1	resist-01	0.0.0.2	0.0.0.2.1	
# ::edge	check-01	ARG0	i	0.0.0	0.0	
# ::edge	check-01	ARG1	go	0.0.0	0.0.0.0	
# ::edge	check-01	ARG1	reason	0.0.0.2.1.1	0.0.0.2.1.1.0	
# ::edge	check-01	ARG6	1	0.0.0	0.0.0.1	
# ::edge	check-01	mod	again	0.0.0.2.1.1	0.0.0.2.1.1.1	
# ::edge	check-01	time	after	0.0.0	0.0.0.2	
# ::edge	often	calendar	i	0	0.0	
# ::edge	resist-01	ARG0	temporal-quantity	0.0.0.2.1	0.0.0.2.1.0	
# ::edge	resist-01	ARG1	check-01	0.0.0.2.1	0.0.0.2.1.1	
# ::edge	resist-01	ARG6	some	0.0.0.2.1	0.0.0.2.1.2	
# ::edge	temporal-quantity	quant	30	0.0.0.2.1.0	0.0.0.2.1.0.0	
# ::edge	temporal-quantity	unit	second	0.0.0.2.1.0	0.0.0.2.1.0.1	
(o2 / often 
      :calendar (i / i 
            :ARG0-of (c / check-01 
                  :ARG1 (g / go) 
                  :ARG6 1 
                  :time (a2 / after 
                        :mod (t2 / then) 
                        :op1 (r / resist-01 
                              :ARG0 (t / temporal-quantity 
                                    :quant 30 
                                    :unit (s / second)) 
                              :ARG1 (c3 / check-01 
                                    :ARG1 (r2 / reason) 
                                    :mod (a / again)) 
                              :ARG6 (s2 / some))))))

# ::snt Why is this!?
# ::tok Why is this ! ?
# ::alignments 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:19.511
# ::node	0	this	2-3
# ::root	0	this
(t / this)

# ::snt Am I going crazy or something?
# ::tok Am I going crazy or something ?
# ::alignments 4-5|0.3 5-6|0.2 2-3|0 3-4|0.1 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:19.565
# ::node	0	go-08	2-3
# ::node	0.0	i	1-2
# ::node	0.1	crazy	3-4
# ::node	0.2	something	5-6
# ::node	0.3	or	4-5
# ::root	0	go-08
# ::edge	go-08	ARG0	i	0	0.0	
# ::edge	go-08	ARG1	crazy	0	0.1	
# ::edge	go-08	ARG6	something	0	0.2	
# ::edge	or	op1	go-08	0.3	0	
(g / go-08 
      :ARG0 (i / i) 
      :ARG1 (c / crazy) 
      :ARG6 (s / something) 
      :op-of (o / or))

# ::snt It happens most often when I'm carrying many things, but that is rarely and even still daily I'm checking many times. And is this OCD to any extent?
# ::tok It happens most often when I 'm carrying many things , but that is rarely and even still daily I 'm checking many times . And is this OCD to any extent ?
# ::alignments 28-29|0.0.0.4+0.0.0.4.0+0.0.0.4.0.0 15-16|0.0.0 21-22|0.0.0.2 8-9|0.1.0.0 17-18|0.0.0.2.1 16-17|0.0.0.0.1 1-2|0.0.0.0 3-4|0.1.1 7-8|0.1 11-12|0 9-10|0.1.0 22-23|0.0.0.2.0 2-3|0.1.1.0 0-1|0.0.0.0.0 27-28|0.0.0.3 31-32|0.0.0.5 30-31|0.0 14-15|0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:20.345
# ::node	0	contrast-01	11-12
# ::node	0.0	any	30-31
# ::node	0.0.0	and	15-16
# ::node	0.0.0.0	happen-01	1-2
# ::node	0.0.0.0.0	it	0-1
# ::node	0.0.0.0.1	even	16-17
# ::node	0.0.0.1	rare	14-15
# ::node	0.0.0.2	check-01	21-22
# ::node	0.0.0.2.0	many	22-23
# ::node	0.0.0.2.1	still	17-18
# ::node	0.0.0.3	this	27-28
# ::node	0.0.0.4	disease	28-29
# ::node	0.0.0.4.0	name	28-29
# ::node	0.0.0.4.0.0	"OCD"	28-29
# ::node	0.0.0.5	extent	31-32
# ::node	0.1	carry-01	7-8
# ::node	0.1.0	thing	9-10
# ::node	0.1.0.0	many	8-9
# ::node	0.1.1	often	3-4
# ::node	0.1.1.0	most	2-3
# ::root	0	contrast-01
# ::edge	and	op1	happen-01	0.0.0	0.0.0.0	
# ::edge	and	op2	rare	0.0.0	0.0.0.1	
# ::edge	and	op3	check-01	0.0.0	0.0.0.2	
# ::edge	and	op4	this	0.0.0	0.0.0.3	
# ::edge	and	op5	disease	0.0.0	0.0.0.4	
# ::edge	and	op6	any	0.0.0	0.0	
# ::edge	and	op7	extent	0.0.0	0.0.0.5	
# ::edge	carry-01	ARG1	thing	0.1	0.1.0	
# ::edge	carry-01	frequency	often	0.1	0.1.1	
# ::edge	check-01	ARG1	many	0.0.0.2	0.0.0.2.0	
# ::edge	check-01	mod	still	0.0.0.2	0.0.0.2.1	
# ::edge	contrast-01	ARG1	any	0	0.0	
# ::edge	contrast-01	ARG2	carry-01	0	0.1	
# ::edge	disease	name	name	0.0.0.4	0.0.0.4.0	
# ::edge	happen-01	ARG0	it	0.0.0.0	0.0.0.0.0	
# ::edge	happen-01	ARG1	even	0.0.0.0	0.0.0.0.1	
# ::edge	name	op1	"OCD"	0.0.0.4.0	0.0.0.4.0.0	
# ::edge	often	degree	most	0.1.1	0.1.1.0	
# ::edge	thing	quant	many	0.1.0	0.1.0.0	
(c3 / contrast-01 
      :ARG1 (a2 / any 
            :op-of (a / and 
                  :op1 (h / happen-01 
                        :ARG0 (i / it) 
                        :ARG1 (e / even)) 
                  :op2 (r / rare) 
                  :op3 (c2 / check-01 
                        :ARG1 (m3 / many) 
                        :mod (s / still)) 
                  :op4 (t3 / this) 
                  :op5 (d2 / disease 
                        :name (n / name 
                              :op1 "OCD")) 
                  :op6 (e2 / extent))) 
      :ARG2 (c / carry-01 
            :ARG1 (t / thing 
                  :quant (m5 / many)) 
            :frequency (o / often 
                  :degree (m2 / most))))

# ::snt What can I do about this?
# ::tok What can I do about this ?
# ::alignments 3-4|0.0 1-2|0 5-6|0.0.1 2-3|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:20.358
# ::node	0	possible	1-2
# ::node	0.0	do-02	3-4
# ::node	0.0.0	i	2-3
# ::node	0.0.1	this	5-6
# ::root	0	possible
# ::edge	do-02	ARG0	i	0.0	0.0.0	
# ::edge	do-02	ARG1	this	0.0	0.0.1	
# ::edge	possible	domain	do-02	0	0.0	
(p / possible 
      :domain (d / do-02 
            :ARG0 (i / i) 
            :ARG1 (t / this)))

# ::snt If I don't check, I get very very anxious, which does sort of go away after 15-30 mins, but often the anxiety is so much that I can't wait that long.
# ::tok If I do n't check , I get very very anxious , which does sort of go away after 15-30 mins , but often the anxiety is so much that I ca n't wait that long .
# ::alignments 22-23|0 25-26|0.1.0 23-24|0.1.2 28-29|0.1 0-1|0.0.0 33-34|0.1.1 35-36|0.1.1.0 29-30|0.1.1.1 7-8|0.0.1 4-5|0.0.0.0 10-11|0.0 16-17|0.1.1.0.0 18-19|0.1.1.0.0.2 14-15|0.1.1.0.0.0 17-18|0.1.1.0.0.1 8-9|0.0.2 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:20.844
# ::node	0	contrast-01	22-23
# ::node	0.0	anxious	10-11
# ::node	0.0.0	cause-01	0-1
# ::node	0.0.0.0	check-01	4-5
# ::node	0.0.0.0.0	i	1-2
# ::node	0.0.1	get-03	7-8
# ::node	0.0.2	very	8-9
# ::node	0.1	much	28-29
# ::node	0.1.0	anxiety	25-26
# ::node	0.1.1	wait-01	33-34
# ::node	0.1.1.0	long	35-36
# ::node	0.1.1.0.0	go-01	16-17
# ::node	0.1.1.0.0.0	sort	14-15
# ::node	0.1.1.0.0.1	away	17-18
# ::node	0.1.1.0.0.2	after	18-19
# ::node	0.1.1.1	that	29-30
# ::node	0.1.2	often	23-24
# ::root	0	contrast-01
# ::edge	anxious	degree	very	0.0	0.0.2	
# ::edge	cause-01	ARG0	check-01	0.0.0	0.0.0.0	
# ::edge	cause-01	ARG1	anxious	0.0.0	0.0	
# ::edge	check-01	ARG1	i	0.0.0.0	0.0.0.0.0	
# ::edge	contrast-01	ARG1	anxious	0	0.0	
# ::edge	contrast-01	ARG2	much	0	0.1	
# ::edge	get-03	ARG1	anxious	0.0.1	0.0	
# ::edge	go-01	ARG0	sort	0.1.1.0.0	0.1.1.0.0.0	
# ::edge	go-01	ARG1	long	0.1.1.0.0	0.1.1.0	
# ::edge	go-01	mod	away	0.1.1.0.0	0.1.1.0.0.1	
# ::edge	go-01	time	after	0.1.1.0.0	0.1.1.0.0.2	
# ::edge	much	domain	anxiety	0.1	0.1.0	
# ::edge	much	domain	wait-01	0.1	0.1.1	
# ::edge	often	quant	much	0.1.2	0.1	
# ::edge	that	op1	wait-01	0.1.1.1	0.1.1	
# ::edge	wait-01	ARG1	long	0.1.1	0.1.1.0	
(c / contrast-01 
      :ARG1 (a / anxious 
            :ARG1-of (c3 / cause-01 
                  :ARG0 (c2 / check-01 
                        :ARG1 (i / i))) 
            :ARG1-of (g / get-03) 
            :degree (v / very)) 
      :ARG2 (m3 / much 
            :domain (a4 / anxiety) 
            :domain (w / wait-01 
                  :ARG1 (l / long 
                        :ARG1-of (g2 / go-01 
                              :ARG0 (s / sort) 
                              :mod (a2 / away) 
                              :time (a3 / after))) 
                  :op-of (t3 / that)) 
            :quant-of (o2 / often)))

# ::snt I feel if I lost my wallet or phone, then I'm doomed or so I feel.
# ::tok I feel if I lost my wallet or phone , then I 'm doomed or so I feel .
# ::alignments 7-8|0.1.1 1-2|0 17-18|0.1.2.2 13-14|0.1.2.0 4-5|0.1 14-15|0.1.2 8-9|0.1.2.1 6-7|0.1.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:21.179
# ::node	0	feel-02	1-2
# ::node	0.0	i	0-1
# ::node	0.1	lose-02	4-5
# ::node	0.1.0	wallet	6-7
# ::node	0.1.1	or	7-8
# ::node	0.1.2	or	14-15
# ::node	0.1.2.0	doom-01	13-14
# ::node	0.1.2.1	phone	8-9
# ::node	0.1.2.2	feel-02	17-18
# ::root	0	feel-02
# ::edge	doom-01	ARG1	or	0.1.2.0	0.1.2	
# ::edge	feel-02	ARG0	i	0	0.0	
# ::edge	feel-02	ARG1	lose-02	0	0.1	
# ::edge	lose-02	ARG1	wallet	0.1	0.1.0	
# ::edge	lose-02	ARG6	or	0.1	0.1.1	
# ::edge	or	op1	lose-02	0.1.2	0.1	
# ::edge	or	op2	phone	0.1.2	0.1.2.1	
# ::edge	or	op3	feel-02	0.1.2	0.1.2.2	
(f2 / feel-02 
      :ARG0 (i / i) 
      :ARG1 (l / lose-02 
            :ARG1 (w / wallet) 
            :ARG6 (o / or) 
            :op-of (o2 / or 
                  :ARG1-of (d / doom-01) 
                  :op1 (p / phone) 
                  :op2 (f / feel-02))))

# ::snt I just wish I could go out without worrying every 2 mins whether I've left or lost something.
# ::tok I just wish I could go out without worrying every 2 mins whether I 've left or lost something .
# ::alignments 2-3|0 1-2|0.2 5-6|0.1 8-9|0.1.0 10-11|0.1.0.0.0 16-17|0.1.0.0.1 17-18|0.1.0.0.1.0 15-16|0.1.0.0 18-19|0.1.0.0.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:21.370
# ::node	0	wish-01	2-3
# ::node	0.0	i	0-1
# ::node	0.1	go-17	5-6
# ::node	0.1.0	worry-02	8-9
# ::node	0.1.0.0	leave-01	15-16
# ::node	0.1.0.0.0	2	10-11
# ::node	0.1.0.0.1	or	16-17
# ::node	0.1.0.0.1.0	lose-02	17-18
# ::node	0.1.0.0.1.0.0	something	18-19
# ::node	0.2	just	1-2
# ::root	0	wish-01
# ::edge	go-17	ARG1	worry-02	0.1	0.1.0	
# ::edge	leave-01	ARG1	2	0.1.0.0	0.1.0.0.0	
# ::edge	lose-02	ARG1	something	0.1.0.0.1.0	0.1.0.0.1.0.0	
# ::edge	or	op1	leave-01	0.1.0.0.1	0.1.0.0	
# ::edge	or	op2	lose-02	0.1.0.0.1	0.1.0.0.1.0	
# ::edge	wish-01	ARG0	i	0	0.0	
# ::edge	wish-01	ARG1	go-17	0	0.1	
# ::edge	wish-01	ARG6	just	0	0.2	
# ::edge	worry-02	ARG1	leave-01	0.1.0	0.1.0.0	
(w / wish-01 
      :ARG0 (i / i) 
      :ARG1 (g / go-17 
            :ARG1 (w2 / worry-02 
                  :ARG1 (l / leave-01 
                        :ARG1 2 
                        :op-of (o / or 
                              :op1 (l2 / lose-02 
                                    :ARG1 (s / something)))))) 
      :ARG6 (j / just))

# ::snt I really dont know what to do, and am afraid of going to the GP.
# ::tok I really dont know what to do , and am afraid of going to the GP .
# ::alignments 8-9|0 12-13|0.0.2 3-4|0.0 1-2|0.0.0.0 6-7|0.0.1+0.0.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:21.519
# ::node	0	and	8-9
# ::node	0.0	know-01	3-4
# ::node	0.0.0	i	0-1
# ::node	0.0.0.0	really	1-2
# ::node	0.0.1	thing	6-7
# ::node	0.0.1.0	do-02	6-7
# ::node	0.0.2	go-02	12-13
# ::root	0	and
# ::edge	and	op1	know-01	0	0.0	
# ::edge	do-02	ARG1	thing	0.0.1.0	0.0.1	
# ::edge	go-02	ARG1	know-01	0.0.2	0.0	
# ::edge	know-01	ARG0	i	0.0	0.0.0	
# ::edge	know-01	ARG1	thing	0.0	0.0.1	
# ::edge	really	calendar	i	0.0.0.0	0.0.0	
(a / and 
      :op1 (k / know-01 
            :ARG0 (i / i 
                  :calendar-of (r / really)) 
            :ARG1 (t / thing 
                  :ARG1-of (d / do-02)) 
            :ARG1-of (g / go-02)))

# ::snt They've probably never heard of some compulsion like this and I just dont know what to do
# ::tok They 've probably never heard of some compulsion like this and I just dont know what to do
# ::alignments 10-11|0.3 14-15|0.1 12-13|0.1.1 17-18|0.1.0+0.1.0.0 11-12|0.3.1 4-5|0 7-8|0.2 9-10|0.3.0 6-7|0.2.0 0-1|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:21.924
# ::node	0	hear-01	4-5
# ::node	0.0	they	0-1
# ::node	0.0.0	probable	2-3
# ::node	0.1	know-01	14-15
# ::node	0.1.0	thing	17-18
# ::node	0.1.0.0	do-02	17-18
# ::node	0.1.1	just	12-13
# ::node	0.2	compulsion	7-8
# ::node	0.2.0	some	6-7
# ::node	0.3	and	10-11
# ::node	0.3.0	this	9-10
# ::node	0.3.1	i	11-12
# ::root	0	hear-01
# ::edge	and	calendar	this	0.3	0.3.0	
# ::edge	and	op1	i	0.3	0.3.1	
# ::edge	compulsion	quant	some	0.2	0.2.0	
# ::edge	do-02	ARG1	thing	0.1.0.0	0.1.0	
# ::edge	hear-01	ARG0	they	0	0.0	
# ::edge	hear-01	ARG1	know-01	0	0.1	
# ::edge	hear-01	location	and	0	0.3	
# ::edge	hear-01	location	compulsion	0	0.2	
# ::edge	know-01	ARG1	thing	0.1	0.1.0	
# ::edge	know-01	frequency	just	0.1	0.1.1	
# ::edge	probable	domain	they	0.0.0	0.0	
(h / hear-01 
      :ARG0 (t / they 
            :domain-of (p / probable)) 
      :ARG1 (k / know-01 
            :ARG1 (t3 / thing 
                  :ARG1-of (d / do-02)) 
            :frequency (j / just)) 
      :location (c / compulsion 
            :quant (s / some)) 
      :location (a / and 
            :calendar (t2 / this) 
            :op1 (i / i)))

# ::snt Do any of you have a similar 'ritual'?
# ::tok Do any of you have a similar ' ritual ' ?
# ::alignments 4-5|0.0.0 8-9|0.0.0.0 2-3|0.0+0 3-4|0.1 1-2|0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:22.047
# ::node	0	include-91	2-3
# ::node	0.0	person	2-3
# ::node	0.0.0	have-03	4-5
# ::node	0.0.0.0	ritual	8-9
# ::node	0.0.0.1	any	1-2
# ::node	0.1	you	3-4
# ::root	0	include-91
# ::edge	have-03	ARG0	person	0.0.0	0.0	
# ::edge	have-03	ARG1	ritual	0.0.0	0.0.0.0	
# ::edge	have-03	ARG6	any	0.0.0	0.0.0.1	
# ::edge	include-91	ARG1	person	0	0.0	
# ::edge	include-91	ARG6	you	0	0.1	
(i / include-91 
      :ARG1 (p / person 
            :ARG0-of (h / have-03 
                  :ARG1 (r / ritual) 
                  :ARG6 (a / any))) 
      :ARG6 (y / you))

# ::snt People would think I'm crazy, but it's very strangely difficult to get yourself out of this.
# ::tok People would think I 'm crazy , but it 's very strangely difficult to get yourself out of this .
# ::alignments 7-8|0 12-13|0.1 10-11|0.1.0 14-15|0.1.1 16-17|0.1.1.1 18-19|0.1.1.0 2-3|0.0.0 5-6|0.0 3-4|0.0.1 11-12|0.1.2 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:22.197
# ::node	0	contrast-01	7-8
# ::node	0.0	crazy	5-6
# ::node	0.0.0	think-01	2-3
# ::node	0.0.1	i	3-4
# ::node	0.1	difficult	12-13
# ::node	0.1.0	very	10-11
# ::node	0.1.1	get-05	14-15
# ::node	0.1.1.0	this	18-19
# ::node	0.1.1.1	out	16-17
# ::node	0.1.2	strange	11-12
# ::root	0	contrast-01
# ::edge	contrast-01	ARG1	crazy	0	0.0	
# ::edge	contrast-01	ARG2	difficult	0	0.1	
# ::edge	crazy	domain	i	0.0	0.0.1	
# ::edge	difficult	degree	very	0.1	0.1.0	
# ::edge	difficult	domain	get-05	0.1	0.1.1	
# ::edge	difficult	mod	strange	0.1	0.1.2	
# ::edge	get-05	ARG1	this	0.1.1	0.1.1.0	
# ::edge	get-05	ARG6	out	0.1.1	0.1.1.1	
# ::edge	think-01	ARG1	crazy	0.0.0	0.0	
(c / contrast-01 
      :ARG1 (c2 / crazy 
            :ARG1-of (t / think-01) 
            :domain (i / i)) 
      :ARG2 (d / difficult 
            :degree (v / very) 
            :domain (g / get-05 
                  :ARG1 (t2 / this) 
                  :ARG6 (o / out)) 
            :mod (s / strange)))

# ::snt What advice could you give me?
# ::tok What advice could you give me ?
# ::alignments 3-4|0.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:22.224
# ::node	0	possible	2-3
# ::node	0.0	advise-01	1-2
# ::node	0.0.0	you	3-4
# ::root	0	possible
(p / possible 
      :ARG6-of (a / advise-01 
            :ARG1 (y / you)))

# ::snt I used to do this on my way to college-I had a list of items I knew I had on me and used to check compulsively on the bus.
# ::tok I used to do this on my way to college - I had a list of items I knew I had on me and used to check compulsively on the bus .
# ::alignments 1-2|0.1.0.0.0.0.0.0.0 3-4|0.1.0.0.0.0.0 7-8|0.1.0.0.0.0.0.0.0.0 9-10|0.1.0.0.0.0 4-5|0.1.0.0.0.0.0.1 0-1|0.1.0.0.0.0.0.0 23-24|0.1.0.0 24-25|0.1.0.0.0 26-27|0.1.0.0.0.1 30-31|0.1.0.0.0.1.1 12-13|0.1.0 14-15|0.1+0 16-17|0.0 20-21|0.0.0 18-19|0.0.0.0 27-28|0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:22.955
# ::node	0	list-01	14-15
# ::node	0.0	item	16-17
# ::node	0.0.0	have-03	20-21
# ::node	0.0.0.0	know-01	18-19
# ::node	0.1	thing	14-15
# ::node	0.1.0	have-03	12-13
# ::node	0.1.0.0	and	23-24
# ::node	0.1.0.0.0	use-02	24-25
# ::node	0.1.0.0.0.0	college	9-10
# ::node	0.1.0.0.0.0.0	do-02	3-4
# ::node	0.1.0.0.0.0.0.0	i	0-1
# ::node	0.1.0.0.0.0.0.0.0	use-02	1-2
# ::node	0.1.0.0.0.0.0.0.0.0	way	7-8
# ::node	0.1.0.0.0.0.0.1	this	4-5
# ::node	0.1.0.0.0.1	check-01	26-27
# ::node	0.1.0.0.0.1.0	compulsive	27-28
# ::node	0.1.0.0.0.1.1	bus	30-31
# ::root	0	list-01
# ::edge	and	op1	have-03	0.1.0.0	0.1.0	
# ::edge	and	op2	use-02	0.1.0.0	0.1.0.0.0	
# ::edge	check-01	ARG1	compulsive	0.1.0.0.0.1	0.1.0.0.0.1.0	
# ::edge	check-01	ARG2	bus	0.1.0.0.0.1	0.1.0.0.0.1.1	
# ::edge	do-02	ARG0	i	0.1.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	do-02	ARG1	this	0.1.0.0.0.0.0	0.1.0.0.0.0.0.1	
# ::edge	do-02	ARG2	college	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	have-03	ARG1	item	0.0.0	0.0	
# ::edge	have-03	ARG1	thing	0.1.0	0.1	
# ::edge	know-01	ARG1	have-03	0.0.0.0	0.0.0	
# ::edge	list-01	ARG1	item	0	0.0	
# ::edge	list-01	ARG2	thing	0	0.1	
# ::edge	use-02	ARG0	i	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0	
# ::edge	use-02	ARG1	college	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	use-02	ARG1	way	0.1.0.0.0.0.0.0.0	0.1.0.0.0.0.0.0.0.0	
# ::edge	use-02	ARG2	check-01	0.1.0.0.0	0.1.0.0.0.1	
(l / list-01 
      :ARG1 (i2 / item 
            :ARG1-of (h2 / have-03 
                  :ARG1-of (k / know-01))) 
      :ARG2 (t2 / thing 
            :ARG1-of (h / have-03 
                  :op-of (a / and 
                        :op1 (u2 / use-02 
                              :ARG1 (c / college 
                                    :ARG2-of (d / do-02 
                                          :ARG0 (i / i 
                                                :ARG0-of (u / use-02 
                                                      :ARG1 (w / way))) 
                                          :ARG1 (t / this))) 
                              :ARG2 (c2 / check-01 
                                    :ARG1 (c3 / compulsive) 
                                    :ARG2 (b / bus)))))))

# ::snt I now have more severe anxiety and think this was just a warning sign so just try and wean yourself out of the habit while it's relatively fresh-definitely visit your doctor but also tell yourself not to keep checking these things (easier said than done I know).
# ::tok I now have more severe anxiety and think this was just a warning sign so just try and wean yourself out of the habit while it 's relatively fresh - definitely visit your doctor but also tell yourself not to keep checking these things ( easier said than done I know ) .
# ::alignments 50-51|0.0.0 45-46|0.1 48-49|0.0 46-47|0 3-4|0.0.0.0.0.1.0.0 6-7|0.0.0.0.0.2 17-18|0.0.0.0 31-32|0.0.0.0.0.2.0.0.0.0.0.0 34-35|0.0.0.0.0.2.0.0.0.0.0 36-37|0.0.0.0.3 40-41|0.0.0.0.3.0 41-42|0.0.0.0.3.0.0 43-44|0.0.0.0.2.0 8-9|0.0.0.0.0.2.0.0 33-34|0.0.0.0.0.2.0.0.0.0.0.0.0 16-17|0.0.0.0.1 10-11|0.0.0.0.0.2.0.0.1 18-19|0.0.0.0.2 28-29|0.0.0.0.0.2.0.0.0.0.0.0.1.0.0 23-24|0.0.0.0.3.0.0.0 7-8|0.0.0.0.0.2.0 13-14|0.0.0.0.0.2.0.0.0 12-13|0.0.0.0.0.2.0.0.0.0 2-3|0.0.0.0.0 1-2|0.0.0.0.1.0 5-6|0.0.0.0.0.1 4-5|0.0.0.0.0.1.0 0-1|0.0.0.0.0.0 30-31|0.0.0.0.0.2.0.0.0.0.0.0.1 27-28|0.0.0.0.0.2.0.0.0.0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:25.274
# ::node	0	say-01	46-47
# ::node	0.0	do-02	48-49
# ::node	0.0.0	know-01	50-51
# ::node	0.0.0.0	and	17-18
# ::node	0.0.0.0.0	have-03	2-3
# ::node	0.0.0.0.0.0	i	0-1
# ::node	0.0.0.0.0.1	anxiety	5-6
# ::node	0.0.0.0.0.1.0	severe	4-5
# ::node	0.0.0.0.0.1.0.0	more	3-4
# ::node	0.0.0.0.0.2	and	6-7
# ::node	0.0.0.0.0.2.0	think-01	7-8
# ::node	0.0.0.0.0.2.0.0	this	8-9
# ::node	0.0.0.0.0.2.0.0.0	sign	13-14
# ::node	0.0.0.0.0.2.0.0.0.0	warn-01	12-13
# ::node	0.0.0.0.0.2.0.0.0.0.0	contrast-01	34-35
# ::node	0.0.0.0.0.2.0.0.0.0.0.0	visit-01	31-32
# ::node	0.0.0.0.0.2.0.0.0.0.0.0.0	doctor	33-34
# ::node	0.0.0.0.0.2.0.0.0.0.0.0.1	definite	30-31
# ::node	0.0.0.0.0.2.0.0.0.0.0.0.1.0	relative	27-28
# ::node	0.0.0.0.0.2.0.0.0.0.0.0.1.0.0	fresh	28-29
# ::node	0.0.0.0.0.2.0.0.1	just	10-11
# ::node	0.0.0.0.1	try-01	16-17
# ::node	0.0.0.0.1.0	now	1-2
# ::node	0.0.0.0.2	wean-01	18-19
# ::node	0.0.0.0.2.0	thing	43-44
# ::node	0.0.0.0.3	tell-01	36-37
# ::node	0.0.0.0.3.0	keep-01	40-41
# ::node	0.0.0.0.3.0.0	check-01	41-42
# ::node	0.0.0.0.3.0.0.0	habit	23-24
# ::node	0.1	easy	45-46
# ::root	0	say-01
# ::edge	and	op1	have-03	0.0.0.0	0.0.0.0.0	
# ::edge	and	op1	have-03	0.0.0.0.0.2	0.0.0.0.0	
# ::edge	and	op2	think-01	0.0.0.0.0.2	0.0.0.0.0.2.0	
# ::edge	and	op2	try-01	0.0.0.0	0.0.0.0.1	
# ::edge	and	op3	wean-01	0.0.0.0	0.0.0.0.2	
# ::edge	and	op4	tell-01	0.0.0.0	0.0.0.0.3	
# ::edge	anxiety	mod	severe	0.0.0.0.0.1	0.0.0.0.0.1.0	
# ::edge	check-01	ARG1	habit	0.0.0.0.3.0.0	0.0.0.0.3.0.0.0	
# ::edge	contrast-01	ARG1	visit-01	0.0.0.0.0.2.0.0.0.0.0	0.0.0.0.0.2.0.0.0.0.0.0	
# ::edge	definite	mod	relative	0.0.0.0.0.2.0.0.0.0.0.0.1	0.0.0.0.0.2.0.0.0.0.0.0.1.0	
# ::edge	do-02	ARG1	know-01	0.0	0.0.0	
# ::edge	fresh	mod	relative	0.0.0.0.0.2.0.0.0.0.0.0.1.0.0	0.0.0.0.0.2.0.0.0.0.0.0.1.0	
# ::edge	have-03	ARG0	i	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	have-03	ARG1	anxiety	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	keep-01	ARG1	check-01	0.0.0.0.3.0	0.0.0.0.3.0.0	
# ::edge	know-01	ARG1	and	0.0.0	0.0.0.0	
# ::edge	say-01	ARG1	do-02	0	0.0	
# ::edge	say-01	ARG6	easy	0	0.1	
# ::edge	severe	degree	more	0.0.0.0.0.1.0	0.0.0.0.0.1.0.0	
# ::edge	tell-01	ARG1	keep-01	0.0.0.0.3	0.0.0.0.3.0	
# ::edge	think-01	ARG1	this	0.0.0.0.0.2.0	0.0.0.0.0.2.0.0	
# ::edge	this	mod	sign	0.0.0.0.0.2.0.0	0.0.0.0.0.2.0.0.0	
# ::edge	this	time	just	0.0.0.0.0.2.0.0	0.0.0.0.0.2.0.0.1	
# ::edge	try-01	ARG1	now	0.0.0.0.1	0.0.0.0.1.0	
# ::edge	visit-01	ARG1	doctor	0.0.0.0.0.2.0.0.0.0.0.0	0.0.0.0.0.2.0.0.0.0.0.0.0	
# ::edge	visit-01	ARG6	definite	0.0.0.0.0.2.0.0.0.0.0.0	0.0.0.0.0.2.0.0.0.0.0.0.1	
# ::edge	warn-01	ARG0	sign	0.0.0.0.0.2.0.0.0.0	0.0.0.0.0.2.0.0.0	
# ::edge	warn-01	ARG1	contrast-01	0.0.0.0.0.2.0.0.0.0	0.0.0.0.0.2.0.0.0.0.0	
# ::edge	wean-01	ARG1	thing	0.0.0.0.2	0.0.0.0.2.0	
(s3 / say-01 
      :ARG1 (d3 / do-02 
            :ARG1 (k2 / know-01 
                  :ARG1 (a3 / and 
                        :op1 (h / have-03 
                              :ARG0 (i / i) 
                              :ARG1 (a2 / anxiety 
                                    :mod (s / severe 
                                          :degree (m3 / more))) 
                              :op-of (a / and 
                                    :op1 (t / think-01 
                                          :ARG1 (t6 / this 
                                                :mod (s2 / sign 
                                                      :ARG0-of (w / warn-01 
                                                            :ARG1 (c / contrast-01 
                                                                  :ARG1 (v2 / visit-01 
                                                                        :ARG1 (d / doctor) 
                                                                        :ARG6 (d2 / definite 
                                                                              :mod (r / relative 
                                                                                    :mod-of (f / fresh))))))) 
                                                :time (j / just))))) 
                        :op2 (t3 / try-01 
                              :ARG1 (n / now)) 
                        :op3 (w2 / wean-01 
                              :ARG1 (t5 / thing)) 
                        :op4 (t4 / tell-01 
                              :ARG1 (k / keep-01 
                                    :ARG1 (c2 / check-01 
                                          :ARG1 (h2 / habit))))))) 
      :ARG6 (e / easy))

# ::snt Doctors will have seen much worse cases so don't worry about that!
# ::tok Doctors will have seen much worse cases so do n't worry about that !
# ::alignments 3-4|0 6-7|0.1 5-6|0.1.0 4-5|0.2.1 0-1|0.0 10-11|0.2 12-13|0.2.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:25.369
# ::node	0	see-01	3-4
# ::node	0.0	doctor	0-1
# ::node	0.1	case	6-7
# ::node	0.1.0	bad	5-6
# ::node	0.2	worry-02	10-11
# ::node	0.2.0	that	12-13
# ::node	0.2.1	much	4-5
# ::root	0	see-01
# ::edge	case	mod	bad	0.1	0.1.0	
# ::edge	see-01	ARG0	doctor	0	0.0	
# ::edge	see-01	ARG1	case	0	0.1	
# ::edge	see-01	condition	worry-02	0	0.2	
# ::edge	worry-02	ARG0	that	0.2	0.2.0	
# ::edge	worry-02	ARG1	much	0.2	0.2.1	
(s / see-01 
      :ARG0 (d / doctor) 
      :ARG1 (c2 / case 
            :mod (b / bad)) 
      :condition (w / worry-02 
            :ARG0 (t / that) 
            :ARG1 (m2 / much)))

# ::snt I did about OCD in psycology today :P
# ::tok I did about OCD in psycology today : P
# ::alignments 3-4|0.2+0.2.0+0.2.0.0 1-2|0 6-7|0.1 0-1|0.0 5-6|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:25.475
# ::node	0	do-02	1-2
# ::node	0.0	i	0-1
# ::node	0.1	today	6-7
# ::node	0.1.0	psychology	5-6
# ::node	0.2	disease	3-4
# ::node	0.2.0	name	3-4
# ::node	0.2.0.0	"OCD"	3-4
# ::root	0	do-02
# ::edge	disease	name	name	0.2	0.2.0	
# ::edge	do-02	ARG0	i	0	0.0	
# ::edge	do-02	ARG1	today	0	0.1	
# ::edge	do-02	ARG2	disease	0	0.2	
# ::edge	name	op1	"OCD"	0.2.0	0.2.0.0	
# ::edge	today	mod	psychology	0.1	0.1.0	
(d / do-02 
      :ARG0 (i / i) 
      :ARG1 (t / today 
            :mod (p / psychology)) 
      :ARG2 (d2 / disease 
            :name (n / name 
                  :op1 "OCD")))

# ::snt To get rid of it, one way could be just to avoid the compulsive act so don't check to see whether you have lost something, just leave it (:
# ::tok To get rid of it , one way could be just to avoid the compulsive act so do n't check to see whether you have lost something , just leave it ( :
# ::alignments 7-8|0.0 19-20|0.0.0 25-26|0.0.0.0 26-27|0.0.0.0.1 29-30|0.0.0.0.1.0 10-11|0.0.1.2 4-5|0.0.1.1.0 12-13|0.0.1 28-29|0.0.0.0.2 15-16|0.0.1.0 14-15|0.0.1.0.1 2-3|0.0.1.1 30-31|0.0.1.0.0 23-24|0.0.0.0.0 8-9|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:26.019
# ::node	0	possible	8-9
# ::node	0.0	way	7-8
# ::node	0.0.0	check-01	19-20
# ::node	0.0.0.0	lose-02	25-26
# ::node	0.0.0.0.0	you	23-24
# ::node	0.0.0.0.1	something	26-27
# ::node	0.0.0.0.1.0	leave-01	29-30
# ::node	0.0.0.0.2	just	28-29
# ::node	0.0.1	avoid-01	12-13
# ::node	0.0.1.0	act-01	15-16
# ::node	0.0.1.0.0	it	30-31
# ::node	0.0.1.0.1	compulsive	14-15
# ::node	0.0.1.1	rid-01	2-3
# ::node	0.0.1.1.0	it	4-5
# ::node	0.0.1.2	just	10-11
# ::root	0	possible
# ::edge	act-01	ARG1	it	0.0.1.0	0.0.1.0.0	
# ::edge	act-01	mod	compulsive	0.0.1.0	0.0.1.0.1	
# ::edge	avoid-01	ARG0	way	0.0.1	0.0	
# ::edge	avoid-01	ARG1	act-01	0.0.1	0.0.1.0	
# ::edge	avoid-01	ARG6	rid-01	0.0.1	0.0.1.1	
# ::edge	avoid-01	degree	just	0.0.1	0.0.1.2	
# ::edge	check-01	ARG0	way	0.0.0	0.0	
# ::edge	check-01	ARG1	lose-02	0.0.0	0.0.0.0	
# ::edge	leave-01	ARG1	something	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	lose-02	ARG0	you	0.0.0.0	0.0.0.0.0	
# ::edge	lose-02	ARG1	something	0.0.0.0	0.0.0.0.1	
# ::edge	lose-02	ARG6	just	0.0.0.0	0.0.0.0.2	
# ::edge	possible	domain	way	0	0.0	
# ::edge	rid-01	ARG1	it	0.0.1.1	0.0.1.1.0	
(p / possible 
      :domain (w / way 
            :ARG0-of (c3 / check-01 
                  :ARG1 (l2 / lose-02 
                        :ARG0 (y / you) 
                        :ARG1 (s / something 
                              :ARG1-of (l / leave-01)) 
                        :ARG6 (j / just))) 
            :ARG0-of (a / avoid-01 
                  :ARG1 (a2 / act-01 
                        :ARG1 (i / it) 
                        :mod (c / compulsive)) 
                  :ARG6 (r / rid-01 
                        :ARG1 (i2 / it)) 
                  :degree (j2 / just))))

# ::snt Even though your anxiety levels would increase for a duration, they will gradualy decrease so hopefully, overtime your OCD will disappear (:
# ::tok Even though your anxiety levels would increase for a duration , they will gradualy decrease so hopefully , overtime your OCD will disappear ( :
# ::alignments 20-21|0.0+0.0.0+0.0.0.0 14-15|0.1.0 6-7|0.2 9-10|0.2.1 4-5|0.2.0 3-4|0.2.0.0 22-23|0 18-19|0.1.0.0 16-17|0.1 13-14|0.1.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:26.332
# ::node	0	disappear-01	22-23
# ::node	0.0	disease	20-21
# ::node	0.0.0	name	20-21
# ::node	0.0.0.0	"OCD"	20-21
# ::node	0.1	hope-01	16-17
# ::node	0.1.0	decrease-01	14-15
# ::node	0.1.0.0	overtime	18-19
# ::node	0.1.0.1	gradual	13-14
# ::node	0.2	increase-01	6-7
# ::node	0.2.0	level	4-5
# ::node	0.2.0.0	anxiety	3-4
# ::node	0.2.1	duration	9-10
# ::root	0	disappear-01
# ::edge	decrease-01	ARG1	overtime	0.1.0	0.1.0.0	
# ::edge	decrease-01	degree	hope-01	0.1.0	0.1	
# ::edge	decrease-01	manner	gradual	0.1.0	0.1.0.1	
# ::edge	disappear-01	ARG1	disease	0	0.0	
# ::edge	disappear-01	time	increase-01	0	0.2	
# ::edge	disease	name	name	0.0	0.0.0	
# ::edge	hope-01	ARG1	disappear-01	0.1	0	
# ::edge	increase-01	ARG1	level	0.2	0.2.0	
# ::edge	increase-01	ARG2	duration	0.2	0.2.1	
# ::edge	level	mod	anxiety	0.2.0	0.2.0.0	
# ::edge	name	op1	"OCD"	0.0.0	0.0.0.0	
(d3 / disappear-01 
      :ARG1 (d4 / disease 
            :name (n / name 
                  :op1 "OCD")) 
      :ARG1-of (h / hope-01 
            :degree-of (d2 / decrease-01 
                  :ARG1 (o / overtime) 
                  :manner (g / gradual))) 
      :time (i / increase-01 
            :ARG1 (l / level 
                  :mod (a / anxiety)) 
            :ARG2 (d / duration)))

# ::snt To me that just sounds like you being overly anxious, as opposed to having really bad OCD.
# ::tok To me that just sounds like you being overly anxious , as opposed to having really bad OCD .
# ::alignments 17-18|0.0.0.1.0.0+0.0.0.1.0.0.0+0.0.0.1.0.0.0.0 4-5|0.0 14-15|0.0.0.1.0 16-17|0.0.0.1.0.1.0 15-16|0.0.0.1.0.1 9-10|0.0.0 6-7|0.0.0.0 8-9|0.0.0.1 2-3|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:26.495
# ::node	0	that	2-3
# ::node	0.0	sound-01	4-5
# ::node	0.0.0	anxious	9-10
# ::node	0.0.0.0	you	6-7
# ::node	0.0.0.1	overly	8-9
# ::node	0.0.0.1.0	have-03	14-15
# ::node	0.0.0.1.0.0	disease	17-18
# ::node	0.0.0.1.0.0.0	name	17-18
# ::node	0.0.0.1.0.0.0.0	"OCD"	17-18
# ::node	0.0.0.1.0.1	really	15-16
# ::node	0.0.0.1.0.1.0	bad	16-17
# ::root	0	that
(t / that 
      :ARG0-of (s / sound-01 
            :ARG1 (a / anxious 
                  :domain (y / you) 
                  :mod (o / overly 
                        :ARG0-of (h / have-03 
                              :ARG1 (d / disease 
                                    :name (n / name 
                                          :op1 "OCD")) 
                              :ARG6 (r / really 
                                    :calendar (b / bad)))))))

# ::snt I am very obsessional to the point where I get up 20 times a night to check the locks in my house are all locked a particular way.
# ::tok I am very obsessional to the point where I get up 20 times a night to check the locks in my house are all locked a particular way .
# ::alignments 0-1|0.1 2-3|0.2 9-10|0.0.2 16-17|0.0.1 18-19|0.0.0 26-27|0.0.2.0 24-25|0.0 23-24|0.0.3 21-22|0.0.0.0 11-12|0.0.2.1.0 14-15|0.0.1.0+0.0.1.0.0 10-11|0.0.2.1 3-4|0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:27.106
# ::node	0	obsess-01	3-4
# ::node	0.0	lock	24-25
# ::node	0.0.0	lock-01	18-19
# ::node	0.0.0.0	house	21-22
# ::node	0.0.1	check-01	16-17
# ::node	0.0.1.0	temporal-quantity	14-15
# ::node	0.0.1.0.0	night	14-15
# ::node	0.0.2	get-05	9-10
# ::node	0.0.2.0	particular	26-27
# ::node	0.0.2.1	up	10-11
# ::node	0.0.2.1.0	20	11-12
# ::node	0.0.3	all	23-24
# ::node	0.1	i	0-1
# ::node	0.2	very	2-3
# ::root	0	obsess-01
# ::edge	check-01	ARG0	temporal-quantity	0.0.1	0.0.1.0	
# ::edge	check-01	ARG1	lock	0.0.1	0.0	
# ::edge	get-05	ARG0	particular	0.0.2	0.0.2.0	
# ::edge	get-05	ARG2	lock	0.0.2	0.0	
# ::edge	get-05	direction	up	0.0.2	0.0.2.1	
# ::edge	lock	mod	all	0.0	0.0.3	
# ::edge	lock-01	ARG0	lock	0.0.0	0.0	
# ::edge	lock-01	ARG1	house	0.0.0	0.0.0.0	
# ::edge	obsess-01	ARG0	lock	0	0.0	
# ::edge	obsess-01	ARG1	i	0	0.1	
# ::edge	obsess-01	degree	very	0	0.2	
# ::edge	temporal-quantity	unit	night	0.0.1.0	0.0.1.0.0	
# ::edge	up	op1	20	0.0.2.1	0.0.2.1.0	
(o / obsess-01 
      :ARG0 (l2 / lock 
            :ARG0-of (l / lock-01 
                  :ARG1 (h / house)) 
            :ARG1-of (c / check-01 
                  :ARG0 (t / temporal-quantity 
                        :unit (n / night))) 
            :ARG2-of (g / get-05 
                  :ARG0 (p / particular) 
                  :direction (u / up 
                        :op1 20)) 
            :mod (a / all)) 
      :ARG1 (i / i) 
      :degree (v / very))

# ::snt Sometimes although I know they're locked I'm convinced they're not.
# ::tok Sometimes although I know they 're locked I 'm convinced they 're not .
# ::alignments 9-10|0 3-4|0.0.1 6-7|0.0 0-1|0.0.1.0.0 4-5|0.0.0 2-3|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:27.249
# ::node	0	convince-01	9-10
# ::node	0.0	lock-01	6-7
# ::node	0.0.0	they	4-5
# ::node	0.0.1	know-01	3-4
# ::node	0.0.1.0	i	2-3
# ::node	0.0.1.0.0	sometimes	0-1
# ::root	0	convince-01
# ::edge	convince-01	ARG1	lock-01	0	0.0	
# ::edge	know-01	ARG0	i	0.0.1	0.0.1.0	
# ::edge	know-01	ARG1	lock-01	0.0.1	0.0	
# ::edge	lock-01	ARG1	they	0.0	0.0.0	
# ::edge	sometimes	domain	i	0.0.1.0.0	0.0.1.0	
(c / convince-01 
      :ARG1 (l2 / lock-01 
            :ARG1 (t / they) 
            :ARG1-of (k / know-01 
                  :ARG0 (i / i 
                        :domain-of (s / sometimes)))))

# ::snt I think it becomes a real problem when the obsession starts to really interrupt your everyday routine.
# ::tok I think it becomes a real problem when the obsession starts to really interrupt your everyday routine .
# ::alignments 1-2|0 10-11|0.1.1.0 13-14|0.1.1.0.1 12-13|0.1.1.0.1.1 16-17|0.1.1.0.1.0 3-4|0.1 6-7|0.1.1 5-6|0.1.1.1 2-3|0.1.0 0-1|0.0 9-10|0.1.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:27.584
# ::node	0	think-01	1-2
# ::node	0.0	i	0-1
# ::node	0.1	become-01	3-4
# ::node	0.1.0	it	2-3
# ::node	0.1.1	problem	6-7
# ::node	0.1.1.0	start-01	10-11
# ::node	0.1.1.0.0	obsess-01	9-10
# ::node	0.1.1.0.1	interrupt-01	13-14
# ::node	0.1.1.0.1.0	routine	16-17
# ::node	0.1.1.0.1.1	really	12-13
# ::node	0.1.1.1	real	5-6
# ::root	0	think-01
# ::edge	become-01	ARG0	it	0.1	0.1.0	
# ::edge	become-01	ARG1	problem	0.1	0.1.1	
# ::edge	interrupt-01	ARG1	routine	0.1.1.0.1	0.1.1.0.1.0	
# ::edge	interrupt-01	manner	really	0.1.1.0.1	0.1.1.0.1.1	
# ::edge	problem	mod	real	0.1.1	0.1.1.1	
# ::edge	start-01	ARG0	obsess-01	0.1.1.0	0.1.1.0.0	
# ::edge	start-01	ARG1	interrupt-01	0.1.1.0	0.1.1.0.1	
# ::edge	start-01	ARG2	problem	0.1.1.0	0.1.1	
# ::edge	think-01	ARG0	i	0	0.0	
# ::edge	think-01	ARG1	become-01	0	0.1	
(t / think-01 
      :ARG0 (i / i) 
      :ARG1 (b / become-01 
            :ARG0 (i2 / it) 
            :ARG1 (p / problem 
                  :ARG2-of (s / start-01 
                        :ARG0 (o / obsess-01) 
                        :ARG1 (i3 / interrupt-01 
                              :ARG1 (r2 / routine) 
                              :manner (r3 / really))) 
                  :mod (r / real))))

# ::snt You definitely aren't crazy though don't worry and your GP will be understanding of the issue I'm sure.
# ::tok You definitely are n't crazy though do n't worry and your GP will be understanding of the issue I 'm sure .
# ::alignments 9-10|0 18-19|0.1.0.0 14-15|0.1 17-18|0.1.0 4-5|0.0.1 0-1|0.0.0 8-9|0.0 1-2|0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:27.712
# ::node	0	and	9-10
# ::node	0.0	worry-02	8-9
# ::node	0.0.0	you	0-1
# ::node	0.0.1	crazy	4-5
# ::node	0.0.1.0	definite	1-2
# ::node	0.1	understand-01	14-15
# ::node	0.1.0	issue	17-18
# ::node	0.1.0.0	i	18-19
# ::root	0	and
# ::edge	and	op1	worry-02	0	0.0	
# ::edge	and	op2	understand-01	0	0.1	
# ::edge	crazy	domain	worry-02	0.0.1	0.0	
# ::edge	crazy	mod	definite	0.0.1	0.0.1.0	
# ::edge	issue	calendar	i	0.1.0	0.1.0.0	
# ::edge	understand-01	ARG1	issue	0.1	0.1.0	
# ::edge	worry-02	ARG1	you	0.0	0.0.0	
(a / and 
      :op1 (w / worry-02 
            :ARG1 (y / you) 
            :domain-of (c2 / crazy 
                  :mod (d / definite))) 
      :op2 (u / understand-01 
            :ARG1 (i2 / issue 
                  :calendar (i / i))))

# ::snt I go to therapy (for other reasons also) and they have encouraged me to pick a number of times to check, obviously that is less than 20, and to stick to it and cut down that way.
# ::tok I go to therapy ( for other reasons also ) and they have encouraged me to pick a number of times to check , obviously that is less than 20 , and to stick to it and cut down that way .
# ::alignments 10-11|0 13-14|0.1 31-32|0.1.1 37-38|0.1.1.2 33-34|0.1.1.1 16-17|0.1.2 18-19|0.1.2.0 22-23|0.1.1.0 27-28|0.1.1.2.0 29-30|0.1.1.1.0 11-12|0.1.0 1-2|0.0 7-8|0.0.1 8-9|0.1.1.0.0 6-7|0.0.1.0 3-4|0.0.2 0-1|0.0.0 24-25|0.1.1.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:29.220
# ::node	0	and	10-11
# ::node	0.0	go-01	1-2
# ::node	0.0.0	i	0-1
# ::node	0.0.1	reason	7-8
# ::node	0.0.1.0	other	6-7
# ::node	0.0.2	therapy	3-4
# ::node	0.1	encourage-01	13-14
# ::node	0.1.0	they	11-12
# ::node	0.1.1	and	31-32
# ::node	0.1.1.0	check-01	22-23
# ::node	0.1.1.0.0	also	8-9
# ::node	0.1.1.0.1	obvious	24-25
# ::node	0.1.1.1	stick-01	33-34
# ::node	0.1.1.1.0	20	29-30
# ::node	0.1.1.2	cut-02	37-38
# ::node	0.1.1.2.0	less	27-28
# ::node	0.1.2	pick-01	16-17
# ::node	0.1.2.0	number	18-19
# ::root	0	and
# ::edge	and	op1	check-01	0.1.1	0.1.1.0	
# ::edge	and	op1	go-01	0	0.0	
# ::edge	and	op2	encourage-01	0	0.1	
# ::edge	and	op2	stick-01	0.1.1	0.1.1.1	
# ::edge	and	op3	cut-02	0.1.1	0.1.1.2	
# ::edge	check-01	ARG1	also	0.1.1.0	0.1.1.0.0	
# ::edge	check-01	ARG6	obvious	0.1.1.0	0.1.1.0.1	
# ::edge	cut-02	ARG1	less	0.1.1.2	0.1.1.2.0	
# ::edge	encourage-01	ARG0	they	0.1	0.1.0	
# ::edge	encourage-01	ARG1	and	0.1	0.1.1	
# ::edge	encourage-01	ARG2	pick-01	0.1	0.1.2	
# ::edge	go-01	ARG0	i	0.0	0.0.0	
# ::edge	go-01	ARG1	reason	0.0	0.0.1	
# ::edge	go-01	ARG4	therapy	0.0	0.0.2	
# ::edge	pick-01	ARG1	number	0.1.2	0.1.2.0	
# ::edge	reason	mod	other	0.0.1	0.0.1.0	
# ::edge	stick-01	ARG1	20	0.1.1.1	0.1.1.1.0	
(a / and 
      :op1 (g / go-01 
            :ARG0 (i / i) 
            :ARG1 (r / reason 
                  :mod (o / other)) 
            :ARG4 (t / therapy)) 
      :op2 (e / encourage-01 
            :ARG0 (t2 / they) 
            :ARG1 (a3 / and 
                  :op1 (c2 / check-01 
                        :ARG1 (a2 / also) 
                        :ARG6 (o2 / obvious)) 
                  :op2 (s / stick-01 
                        :ARG1 20) 
                  :op3 (c / cut-02 
                        :ARG1 (l / less))) 
            :ARG2 (p / pick-01 
                  :ARG1 (n2 / number))))

# ::snt I think the idea is to teach me, I'm still 'okay' if I check 5 times or 20 times.
# ::tok I think the idea is to teach me , I 'm still ' okay ' if I check 5 times or 20 times .
# ::alignments 1-2|0.1 6-7|0.1.1.0 3-4|0.1.1 13-14|0 20-21|0.0.0 17-18|0.0 21-22|0.1.2 18-19|0.1.1.0.0 11-12|0.2 0-1|0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:29.520
# ::node	0	okay	13-14
# ::node	0.0	check-01	17-18
# ::node	0.0.0	or	20-21
# ::node	0.1	think-01	1-2
# ::node	0.1.0	i	0-1
# ::node	0.1.1	idea	3-4
# ::node	0.1.1.0	teach-01	6-7
# ::node	0.1.1.0.0	5	18-19
# ::node	0.1.2	20	21-22
# ::node	0.2	still	11-12
# ::root	0	okay
# ::edge	20	op1	think-01	0.1.2	0.1	
# ::edge	check-01	ARG1	or	0.0	0.0.0	
# ::edge	okay	domain	check-01	0	0.0	
# ::edge	okay	domain	think-01	0	0.1	
# ::edge	okay	mod	still	0	0.2	
# ::edge	teach-01	ARG0	idea	0.1.1.0	0.1.1	
# ::edge	teach-01	ARG1	5	0.1.1.0	0.1.1.0.0	
# ::edge	think-01	ARG0	i	0.1	0.1.0	
# ::edge	think-01	ARG1	idea	0.1	0.1.1	
(o / okay 
      :domain (c2 / check-01 
            :ARG1 (o2 / or)) 
      :domain (t / think-01 
            :ARG0 (i / i) 
            :ARG1 (i2 / idea 
                  :ARG0-of (t2 / teach-01 
                        :ARG1 5)) 
            :op-of 20) 
      :mod (s / still))

# ::snt So far I have been a lot better, I think there is definitely hope of improvement for anyone that wants it.
# ::tok So far I have been a lot better , I think there is definitely hope of improvement for anyone that wants it .
# ::alignments 7-8|0.2 2-3|0.1 6-7|0.2.0 10-11|0 14-15|0.0.0 18-19|0.0.0.1.0 20-21|0.0.0.0 13-14|0.0 16-17|0.0.0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:29.742
# ::node	0	think-01	10-11
# ::node	0.0	definite	13-14
# ::node	0.0.0	hope-01	14-15
# ::node	0.0.0.0	want-01	20-21
# ::node	0.0.0.1	improve-01	16-17
# ::node	0.0.0.1.0	anyone	18-19
# ::node	0.1	i	2-3
# ::node	0.2	good	7-8
# ::node	0.2.0	lot	6-7
# ::root	0	think-01
# ::edge	good	calendar	lot	0.2	0.2.0	
# ::edge	hope-01	ARG1	improve-01	0.0.0	0.0.0.1	
# ::edge	hope-01	ARG6	definite	0.0.0	0.0	
# ::edge	improve-01	ARG1	anyone	0.0.0.1	0.0.0.1.0	
# ::edge	think-01	ARG0	definite	0	0.0	
# ::edge	think-01	ARG1	i	0	0.1	
# ::edge	think-01	ARG6	good	0	0.2	
# ::edge	want-01	ARG0	hope-01	0.0.0.0	0.0.0	
(t / think-01 
      :ARG0 (d / definite 
            :ARG6-of (h / hope-01 
                  :ARG0-of (w / want-01) 
                  :ARG1 (i2 / improve-01 
                        :ARG1 (a / anyone)))) 
      :ARG1 (i / i) 
      :ARG6 (g / good 
            :calendar (l / lot)))

# ::snt Usually I'm pretty calm about things and like to take things as they come and not to worry too much.
# ::tok Usually I 'm pretty calm about things and like to take things as they come and not to worry too much .
# ::alignments 7-8|0.1.1.0 18-19|0.1.2 20-21|0.1.2.1 19-20|0.1.2.0 8-9|0.1.1 10-11|0.1 14-15|0 4-5|0.1.0 6-7|0.1.0.1 1-2|0.1.0.0 3-4|0.1.0.2 0-1|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:30.027
# ::node	0	come-01	14-15
# ::node	0.0	usual	0-1
# ::node	0.1	take-02	10-11
# ::node	0.1.0	calm	4-5
# ::node	0.1.0.0	i	1-2
# ::node	0.1.0.1	thing	6-7
# ::node	0.1.0.2	pretty	3-4
# ::node	0.1.1	like-02	8-9
# ::node	0.1.1.0	and	7-8
# ::node	0.1.2	worry-01	18-19
# ::node	0.1.2.0	too	19-20
# ::node	0.1.2.1	much	20-21
# ::root	0	come-01
# ::edge	and	op1	like-02	0.1.1.0	0.1.1	
# ::edge	calm	domain	i	0.1.0	0.1.0.0	
# ::edge	calm	location	thing	0.1.0	0.1.0.1	
# ::edge	calm	mod	pretty	0.1.0	0.1.0.2	
# ::edge	come-01	ARG1	usual	0	0.0	
# ::edge	like-02	ARG1	take-02	0.1.1	0.1	
# ::edge	take-02	ARG1	calm	0.1	0.1.0	
# ::edge	take-02	time	come-01	0.1	0	
# ::edge	worry-01	ARG1	take-02	0.1.2	0.1	
# ::edge	worry-01	ARG6	too	0.1.2	0.1.2.0	
# ::edge	worry-01	degree	much	0.1.2	0.1.2.1	
(c2 / come-01 
      :ARG1 (u / usual) 
      :time-of (t2 / take-02 
            :ARG1 (c / calm 
                  :domain (i / i) 
                  :location (t / thing) 
                  :mod (p / pretty)) 
            :ARG1-of (l / like-02 
                  :op-of (a / and)) 
            :ARG1-of (w / worry-01 
                  :ARG6 (t3 / too) 
                  :degree (m / much))))

# ::snt However, over the last month or two I've found myself becoming really anxious about things, and I'm not talking about a mere out of the blue feeling of nervousness.
# ::tok However , over the last month or two I 've found myself becoming really anxious about things , and I 'm not talking about a mere out of the blue feeling of nervousness .
# ::alignments 18-19|0 22-23|0.1 30-31|0.1.0.0 25-26|0.0.0.0 10-11|0.0 6-7|0.0.1 7-8|0.0.1.1 5-6|0.0.1.0+0.0.1.0.0 4-5|0.0.1.0.0.0 12-13|0.0.0 14-15|0.0.0.1 16-17|0.0.0.2 8-9|0.1.0 32-33|0.1.0.0.0 13-14|0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:30.574
# ::node	0	and	18-19
# ::node	0.0	find-01	10-11
# ::node	0.0.0	become-01	12-13
# ::node	0.0.0.0	mere	25-26
# ::node	0.0.0.1	anxious	14-15
# ::node	0.0.0.1.0	real	13-14
# ::node	0.0.0.2	thing	16-17
# ::node	0.0.1	or	6-7
# ::node	0.0.1.0	temporal-quantity	5-6
# ::node	0.0.1.0.0	month	5-6
# ::node	0.0.1.0.0.0	last	4-5
# ::node	0.0.1.1	2	7-8
# ::node	0.1	talk-01	22-23
# ::node	0.1.0	i	8-9
# ::node	0.1.0.0	feel-01	30-31
# ::node	0.1.0.0.0	nervous	32-33
# ::root	0	and
# ::edge	and	op1	find-01	0	0.0	
# ::edge	and	op2	talk-01	0	0.1	
# ::edge	anxious	mod	real	0.0.0.1	0.0.0.1.0	
# ::edge	become-01	ARG0	mere	0.0.0	0.0.0.0	
# ::edge	become-01	ARG1	anxious	0.0.0	0.0.0.1	
# ::edge	become-01	ARG2	thing	0.0.0	0.0.0.2	
# ::edge	feel-01	ARG0	i	0.1.0.0	0.1.0	
# ::edge	feel-01	ARG1	nervous	0.1.0.0	0.1.0.0.0	
# ::edge	find-01	ARG1	become-01	0.0	0.0.0	
# ::edge	find-01	ARG2	or	0.0	0.0.1	
# ::edge	month	mod	last	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	or	op1	temporal-quantity	0.0.1	0.0.1.0	
# ::edge	or	op2	2	0.0.1	0.0.1.1	
# ::edge	talk-01	ARG1	i	0.1	0.1.0	
# ::edge	temporal-quantity	unit	month	0.0.1.0	0.0.1.0.0	
(a2 / and 
      :op1 (f / find-01 
            :ARG1 (b / become-01 
                  :ARG0 (m3 / mere) 
                  :ARG1 (a / anxious 
                        :mod (r / real)) 
                  :ARG2 (t / thing)) 
            :ARG2 (o / or 
                  :op1 (t3 / temporal-quantity 
                        :unit (m2 / month 
                              :mod (l / last))) 
                  :op2 2)) 
      :op2 (t4 / talk-01 
            :ARG1 (i / i 
                  :ARG0-of (f2 / feel-01 
                        :ARG1 (n / nervous)))))

# ::snt I have begun to feel irrationally panicky about a variety of things which beforehand wouldn't worry me too much or even cross my mind as something to cause alarm bells to ring in my head.
# ::tok I have begun to feel irrationally panicky about a variety of things which beforehand would n't worry me too much or even cross my mind as something to cause alarm bells to ring in my head .
# ::alignments 2-3|0.0.0.0.1.0.0 4-5|0.0.0.0.1.0 11-12|0.0.0.0 22-23|0.0.0 21-22|0.0.0.1 26-27|0.0.1 28-29|0 32-33|0.1.1 35-36|0.1.1.0 30-31|0.1 29-30|0.1.0 24-25|0.0 16-17|0.0.0.0.0 19-20|0.0.0.0.0.0 18-19|0.0.0.0.0.0.0 13-14|0.0.0.0.0.1 9-10|0.0.0.0.1 0-1|0.0.0.0.1.0.0.0 6-7|0.0.0.0.1.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:31.704
# ::node	0	cause-01	28-29
# ::node	0.0	mind	24-25
# ::node	0.0.0	cross-01	22-23
# ::node	0.0.0.0	thing	11-12
# ::node	0.0.0.0.0	worry-02	16-17
# ::node	0.0.0.0.0.0	much	19-20
# ::node	0.0.0.0.0.0.0	too	18-19
# ::node	0.0.0.0.0.1	beforehand	13-14
# ::node	0.0.0.0.1	variety	9-10
# ::node	0.0.0.0.1.0	feel-01	4-5
# ::node	0.0.0.0.1.0.0	begin-01	2-3
# ::node	0.0.0.0.1.0.0.0	i	0-1
# ::node	0.0.0.0.1.1	panic-01	6-7
# ::node	0.0.0.1	even	21-22
# ::node	0.0.1	something	26-27
# ::node	0.1	bell	30-31
# ::node	0.1.0	alarm-01	29-30
# ::node	0.1.1	ring-01	32-33
# ::node	0.1.1.0	head	35-36
# ::root	0	cause-01
# ::edge	alarm-01	ARG1	bell	0.1.0	0.1	
# ::edge	begin-01	ARG0	i	0.0.0.0.1.0.0	0.0.0.0.1.0.0.0	
# ::edge	begin-01	ARG1	feel-01	0.0.0.0.1.0.0	0.0.0.0.1.0	
# ::edge	cause-01	ARG0	mind	0	0.0	
# ::edge	cause-01	ARG1	bell	0	0.1	
# ::edge	cross-01	ARG0	thing	0.0.0	0.0.0.0	
# ::edge	cross-01	ARG1	mind	0.0.0	0.0	
# ::edge	cross-01	manner	even	0.0.0	0.0.0.1	
# ::edge	feel-01	ARG1	variety	0.0.0.0.1.0	0.0.0.0.1	
# ::edge	mind	location	something	0.0	0.0.1	
# ::edge	panic-01	ARG1	variety	0.0.0.0.1.1	0.0.0.0.1	
# ::edge	ring-01	ARG0	head	0.1.1	0.1.1.0	
# ::edge	ring-01	ARG1	bell	0.1.1	0.1	
# ::edge	thing	mod	variety	0.0.0.0	0.0.0.0.1	
# ::edge	too	quant	much	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	worry-02	ARG0	thing	0.0.0.0.0	0.0.0.0	
# ::edge	worry-02	ARG1	much	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	worry-02	ARG6	beforehand	0.0.0.0.0	0.0.0.0.0.1	
(c2 / cause-01 
      :ARG0 (m2 / mind 
            :ARG1-of (c / cross-01 
                  :ARG0 (t / thing 
                        :ARG0-of (w / worry-02 
                              :ARG1 (m / much 
                                    :quant-of (t2 / too)) 
                              :ARG6 (b2 / beforehand)) 
                        :mod (v / variety 
                              :ARG1-of (f / feel-01 
                                    :ARG1-of (b / begin-01 
                                          :ARG0 (i / i))) 
                              :ARG1-of (p / panic-01))) 
                  :manner (e / even)) 
            :location (s / something)) 
      :ARG1 (b3 / bell 
            :ARG1-of (a / alarm-01) 
            :ARG1-of (r2 / ring-01 
                  :ARG0 (h / head))))

# ::snt I'm not sure if it's the change in lifestyle (going from care-free student to unemployed graduate) that is causing this or if it's a sign of other issues, but it's beginning to bug me as it's affecting my confidence and happiness.
# ::tok I 'm not sure if it 's the change in lifestyle ( going from care - free student to unemployed graduate ) that is causing this or if it 's a sign of other issues , but it 's beginning to bug me as it 's affecting my confidence and happiness .
# ::alignments 36-37|0 39-40|0.1 41-42|0.1.0 4-5|0.0.0.0.0.0.0 46-47|0.1.0.0 49-50|0.1.0.0.0.1 0-1|0.0.0.0.0.1 26-27|0.0.0.0 34-35|0.0 33-34|0.0.1 24-25|0.1.0.0.0.1.0 25-26|0.1.0.0.0.1.0.0 8-9|0.0.0.0.0 12-13|0.0.0.0.0.0.1 20-21|0.1.0.0.0.0+0.1.0.0.0.0.0 16-17|0.0.0.0.0.0.1.0.1 14-15|0.0.0.0.0.0.1.0.1.0 10-11|0.0.0.0.0.0 50-51|0.1.0.0.1 48-49|0.1.0.0.0 31-32|0.0.0 19-20|0.1.0.0.0.0.1 17-18|0.0.0.0.0.0.1.0+0.0.0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:34.544
# ::node	0	contrast-01	36-37
# ::node	0.0	issue	34-35
# ::node	0.0.0	signal-01	31-32
# ::node	0.0.0.0	or	26-27
# ::node	0.0.0.0.0	change-01	8-9
# ::node	0.0.0.0.0.0	lifestyle	10-11
# ::node	0.0.0.0.0.0.0	cause-01	4-5
# ::node	0.0.0.0.0.0.1	go-01	12-13
# ::node	0.0.0.0.0.0.1.0	person	17-18
# ::node	0.0.0.0.0.0.1.0.0	study-01	17-18
# ::node	0.0.0.0.0.0.1.0.1	free-41	16-17
# ::node	0.0.0.0.0.0.1.0.1.0	care-01	14-15
# ::node	0.0.0.0.0.1	i	0-1
# ::node	0.0.1	other	33-34
# ::node	0.1	begin-01	39-40
# ::node	0.1.0	bug-01	41-42
# ::node	0.1.0.0	affect-01	46-47
# ::node	0.1.0.0.0	confident-41	48-49
# ::node	0.1.0.0.0.0	person	20-21
# ::node	0.1.0.0.0.0.0	graduate-01	20-21
# ::node	0.1.0.0.0.0.1	employ-01	19-20
# ::node	0.1.0.0.0.1	and	49-50
# ::node	0.1.0.0.0.1.0	cause-01	24-25
# ::node	0.1.0.0.0.1.0.0	this	25-26
# ::node	0.1.0.0.1	happy	50-51
# ::root	0	contrast-01
# ::edge	affect-01	ARG2	confident-41	0.1.0.0	0.1.0.0.0	
# ::edge	affect-01	ARG6	happy	0.1.0.0	0.1.0.0.1	
# ::edge	and	op1	confident-41	0.1.0.0.0.1	0.1.0.0.0	
# ::edge	begin-01	ARG1	bug-01	0.1	0.1.0	
# ::edge	bug-01	ARG1	affect-01	0.1.0	0.1.0.0	
# ::edge	care-01	ARG1	free-41	0.0.0.0.0.0.1.0.1.0	0.0.0.0.0.0.1.0.1	
# ::edge	cause-01	ARG0	and	0.1.0.0.0.1.0	0.1.0.0.0.1	
# ::edge	cause-01	ARG1	lifestyle	0.0.0.0.0.0.0	0.0.0.0.0.0	
# ::edge	cause-01	ARG1	this	0.1.0.0.0.1.0	0.1.0.0.0.1.0.0	
# ::edge	change-01	ARG1	lifestyle	0.0.0.0.0	0.0.0.0.0.0	
# ::edge	change-01	ARG6	i	0.0.0.0.0	0.0.0.0.0.1	
# ::edge	confident-41	ARG1	person	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	contrast-01	ARG1	issue	0	0.0	
# ::edge	contrast-01	ARG2	begin-01	0	0.1	
# ::edge	employ-01	ARG1	person	0.1.0.0.0.0.1	0.1.0.0.0.0	
# ::edge	free-41	ARG1	person	0.0.0.0.0.0.1.0.1	0.0.0.0.0.0.1.0	
# ::edge	go-01	ARG1	person	0.0.0.0.0.0.1	0.0.0.0.0.0.1.0	
# ::edge	go-01	ARG6	lifestyle	0.0.0.0.0.0.1	0.0.0.0.0.0	
# ::edge	graduate-01	ARG0	person	0.1.0.0.0.0.0	0.1.0.0.0.0	
# ::edge	issue	mod	other	0.0	0.0.1	
# ::edge	or	op1	change-01	0.0.0.0	0.0.0.0.0	
# ::edge	or	op2	signal-01	0.0.0.0	0.0.0	
# ::edge	signal-01	ARG1	issue	0.0.0	0.0	
# ::edge	study-01	ARG0	person	0.0.0.0.0.0.1.0.0	0.0.0.0.0.0.1.0	
(c / contrast-01 
      :ARG1 (i2 / issue 
            :ARG1-of (s2 / signal-01 
                  :op-of (o / or 
                        :op1 (c3 / change-01 
                              :ARG1 (l / lifestyle 
                                    :ARG1-of (c5 / cause-01) 
                                    :ARG6-of (g / go-01 
                                          :ARG1 (p3 / person 
                                                :ARG0-of (s / study-01) 
                                                :ARG1-of (f / free-41 
                                                      :ARG1-of (c4 / care-01))))) 
                              :ARG6 (i / i)))) 
            :mod (o2 / other)) 
      :ARG2 (b / begin-01 
            :ARG1 (b2 / bug-01 
                  :ARG1 (a / affect-01 
                        :ARG2 (c6 / confident-41 
                              :ARG1 (p2 / person 
                                    :ARG0-of (g2 / graduate-01) 
                                    :ARG1-of (e / employ-01)) 
                              :op-of (a2 / and 
                                    :ARG0-of (c2 / cause-01 
                                          :ARG1 (t / this)))) 
                        :ARG6 (h / happy)))))

# ::snt I've spoken to a few people about it including my parents but they all think the same: that I'm going through a random phase and that I should hold off taking action until it is clear that it is a serious problem
# ::tok I 've spoken to a few people about it including my parents but they all think the same : that I 'm going through a random phase and that I should hold off taking action until it is clear that it is a serious problem
# ::alignments 12-13|0 15-16|0.1 17-18|0.1.1 27-28|0.0.2 30-31|0.0.2.0.1 31-32|0.0.2.0 35-36|0.1.1.0.0 38-39|0.1.1.0 44-45|0.0.0 43-44|0.0.0.0 22-23|0.0 26-27|0.0.1 25-26|0.2.1.1 14-15|0.1.0+0.1.0.0 2-3|0.2.1 5-6|0.0.2.0.0 9-10|0.2+0.2.0 11-12|0.2.0.1 8-9|0.2.0.0 0-1|0.2.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:36.750
# ::node	0	contrast-01	12-13
# ::node	0.0	go-02	22-23
# ::node	0.0.0	problem	44-45
# ::node	0.0.0.0	serious	43-44
# ::node	0.0.1	phase	26-27
# ::node	0.0.2	and	27-28
# ::node	0.0.2.0	hold-08	31-32
# ::node	0.0.2.0.0	few	5-6
# ::node	0.0.2.0.1	recommend-01	30-31
# ::node	0.1	think-01	15-16
# ::node	0.1.0	person	14-15
# ::node	0.1.0.0	all	14-15
# ::node	0.1.1	same-41	17-18
# ::node	0.1.1.0	clear	38-39
# ::node	0.1.1.0.0	until	35-36
# ::node	0.2	person	9-10
# ::node	0.2.0	include-01	9-10
# ::node	0.2.0.0	it	8-9
# ::node	0.2.0.1	parent	11-12
# ::node	0.2.1	speak-01	2-3
# ::node	0.2.1.0	i	0-1
# ::node	0.2.1.1	random	25-26
# ::root	0	contrast-01
# ::edge	and	op1	go-02	0.0.2	0.0	
# ::edge	and	op2	hold-08	0.0.2	0.0.2.0	
# ::edge	contrast-01	ARG1	go-02	0	0.0	
# ::edge	contrast-01	ARG2	think-01	0	0.1	
# ::edge	contrast-01	ARG6	person	0	0.2	
# ::edge	go-02	ARG1	problem	0.0	0.0.0	
# ::edge	go-02	ARG2	phase	0.0	0.0.1	
# ::edge	hold-08	ARG1	few	0.0.2.0	0.0.2.0.0	
# ::edge	include-01	ARG0	it	0.2.0	0.2.0.0	
# ::edge	include-01	ARG1	parent	0.2.0	0.2.0.1	
# ::edge	include-01	ARG2	person	0.2.0	0.2	
# ::edge	person	quant	all	0.1.0	0.1.0.0	
# ::edge	problem	mod	serious	0.0.0	0.0.0.0	
# ::edge	recommend-01	ARG1	hold-08	0.0.2.0.1	0.0.2.0	
# ::edge	same-41	ARG1	clear	0.1.1	0.1.1.0	
# ::edge	speak-01	ARG0	i	0.2.1	0.2.1.0	
# ::edge	speak-01	ARG1	random	0.2.1	0.2.1.1	
# ::edge	speak-01	ARG2	person	0.2.1	0.2	
# ::edge	think-01	ARG0	person	0.1	0.1.0	
# ::edge	think-01	ARG1	same-41	0.1	0.1.1	
# ::edge	until	op1	clear	0.1.1.0.0	0.1.1.0	
(c / contrast-01 
      :ARG1 (g / go-02 
            :ARG1 (p5 / problem 
                  :mod (s2 / serious)) 
            :ARG2 (p4 / phase) 
            :op-of (a2 / and 
                  :op1 (h / hold-08 
                        :ARG1 (f / few) 
                        :ARG1-of (r / recommend-01)))) 
      :ARG2 (t / think-01 
            :ARG0 (p3 / person 
                  :quant (a / all)) 
            :ARG1 (s3 / same-41 
                  :ARG1 (c2 / clear 
                        :op-of (u / until)))) 
      :ARG6 (p / person 
            :ARG2-of (i3 / include-01 
                  :ARG0 (i2 / it) 
                  :ARG1 (p2 / parent)) 
            :ARG2-of (s / speak-01 
                  :ARG0 (i / i) 
                  :ARG1 (r2 / random))))

# ::snt So was wondering what's the best thing to do?
# ::tok So was wondering what 's the best thing to do ?
# ::alignments 2-3|0 0-1|0.1 7-8|0.0 9-10|0.0.0 6-7|0.0.1+0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:36.862
# ::node	0	wonder-01	2-3
# ::node	0.0	thing	7-8
# ::node	0.0.0	do-02	9-10
# ::node	0.0.1	good	6-7
# ::node	0.0.1.0	most	6-7
# ::node	0.1	so	0-1
# ::root	0	wonder-01
# ::edge	do-02	ARG1	thing	0.0.0	0.0	
# ::edge	good	degree	most	0.0.1	0.0.1.0	
# ::edge	thing	mod	good	0.0	0.0.1	
# ::edge	wonder-01	ARG1	thing	0	0.0	
# ::edge	wonder-01	mod	so	0	0.1	
(w / wonder-01 
      :ARG1 (t / thing 
            :ARG1-of (d / do-02) 
            :mod (g / good 
                  :degree (m / most))) 
      :mod (s / so))

# ::snt Speak to a doctor about it and see if anti-anxiety pills could take the edge off of things?
# ::tok Speak to a doctor about it and see if anti - anxiety pills could take the edge off of things ?
# ::alignments 6-7|0 7-8|0.2 14-15|0.2.0.0 19-20|0.2.0.0.2 13-14|0.2.0 16-17|0.2.0.0.1 12-13|0.2.0.0.0 9-10|0.2.0.0.0.0 11-12|0.2.0.0.0.0.0 0-1|0.0 3-4|0.0.0 5-6|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:37.171
# ::node	0	and	6-7
# ::node	0.0	speak-01	0-1
# ::node	0.0.0	doctor	3-4
# ::node	0.1	it	5-6
# ::node	0.2	see-01	7-8
# ::node	0.2.0	possible	13-14
# ::node	0.2.0.0	take-07	14-15
# ::node	0.2.0.0.0	pill	12-13
# ::node	0.2.0.0.0.0	counter-01	9-10
# ::node	0.2.0.0.0.0.0	anxiety	11-12
# ::node	0.2.0.0.1	edge	16-17
# ::node	0.2.0.0.2	thing	19-20
# ::root	0	and
# ::edge	and	op1	speak-01	0	0.0	
# ::edge	and	op2	it	0	0.1	
# ::edge	and	op3	see-01	0	0.2	
# ::edge	counter-01	ARG0	pill	0.2.0.0.0.0	0.2.0.0.0	
# ::edge	counter-01	ARG1	anxiety	0.2.0.0.0.0	0.2.0.0.0.0.0	
# ::edge	possible	domain	take-07	0.2.0	0.2.0.0	
# ::edge	see-01	ARG1	possible	0.2	0.2.0	
# ::edge	speak-01	ARG1	doctor	0.0	0.0.0	
# ::edge	take-07	ARG0	pill	0.2.0.0	0.2.0.0.0	
# ::edge	take-07	ARG1	edge	0.2.0.0	0.2.0.0.1	
# ::edge	take-07	location	thing	0.2.0.0	0.2.0.0.2	
(a / and 
      :op1 (s / speak-01 
            :ARG1 (d / doctor)) 
      :op2 (i / it) 
      :op3 (s2 / see-01 
            :ARG1 (p2 / possible 
                  :domain (t / take-07 
                        :ARG0 (p / pill 
                              :ARG0-of (c / counter-01 
                                    :ARG1 (a2 / anxiety))) 
                        :ARG1 (e / edge) 
                        :location (t2 / thing)))))

# ::snt See if I can speak to a counsellor?
# ::tok See if I can speak to a counsellor ?
# ::alignments 0-1|0 4-5|0.0.0 3-4|0.0 2-3|0.0.0.0 7-8|0.0.0.1+0.0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:37.193
# ::node	0	see-01	0-1
# ::node	0.0	possible	3-4
# ::node	0.0.0	speak-01	4-5
# ::node	0.0.0.0	i	2-3
# ::node	0.0.0.1	person	7-8
# ::node	0.0.0.1.0	counsel-01	7-8
# ::root	0	see-01
# ::edge	counsel-01	ARG0	person	0.0.0.1.0	0.0.0.1	
# ::edge	possible	domain	speak-01	0.0	0.0.0	
# ::edge	see-01	ARG1	possible	0	0.0	
# ::edge	speak-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	speak-01	ARG1	person	0.0.0	0.0.0.1	
(s / see-01 
      :ARG1 (p2 / possible 
            :domain (s2 / speak-01 
                  :ARG0 (i / i) 
                  :ARG1 (p / person 
                        :ARG0-of (c / counsel-01)))))

# ::snt Or should I take the advice given by the close people around me and just keep an eye on the anxiety until it becomes a problem?
# ::tok Or should I take the advice given by the close people around me and just keep an eye on the anxiety until it becomes a problem ?
# ::alignments 0-1|0.1 1-2|0 13-14|0.2 17-18|0.0.2.1 14-15|0.0.2.1.1 21-22|0.0.2.3 23-24|0.0.2 25-26|0.0.2.2 20-21|0.0.2.1.0 3-4|0.0 9-10|0.0.2.0 11-12|0.0.1.0.0 2-3|0.0.0 5-6|0.0.1+0.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:37.688
# ::node	0	recommend-01	1-2
# ::node	0.0	take-01	3-4
# ::node	0.0.0	i	2-3
# ::node	0.0.1	thing	5-6
# ::node	0.0.1.0	advise-01	5-6
# ::node	0.0.1.0.0	around	11-12
# ::node	0.0.2	become-01	23-24
# ::node	0.0.2.0	close	9-10
# ::node	0.0.2.1	eye-01	17-18
# ::node	0.0.2.1.0	anxiety	20-21
# ::node	0.0.2.1.1	just	14-15
# ::node	0.0.2.2	problem	25-26
# ::node	0.0.2.3	until	21-22
# ::node	0.1	or	0-1
# ::node	0.2	and	13-14
# ::root	0	recommend-01
# ::edge	advise-01	ARG1	around	0.0.1.0	0.0.1.0.0	
# ::edge	advise-01	ARG2	thing	0.0.1.0	0.0.1	
# ::edge	and	op1	recommend-01	0.2	0	
# ::edge	become-01	ARG0	close	0.0.2	0.0.2.0	
# ::edge	become-01	ARG1	eye-01	0.0.2	0.0.2.1	
# ::edge	become-01	ARG2	problem	0.0.2	0.0.2.2	
# ::edge	eye-01	ARG1	anxiety	0.0.2.1	0.0.2.1.0	
# ::edge	eye-01	ARG6	just	0.0.2.1	0.0.2.1.1	
# ::edge	recommend-01	ARG1	take-01	0	0.0	
# ::edge	recommend-01	ARG6	or	0	0.1	
# ::edge	take-01	ARG0	i	0.0	0.0.0	
# ::edge	take-01	ARG1	thing	0.0	0.0.1	
# ::edge	take-01	time	become-01	0.0	0.0.2	
# ::edge	until	op1	become-01	0.0.2.3	0.0.2	
(r / recommend-01 
      :ARG1 (t / take-01 
            :ARG0 (i / i) 
            :ARG1 (t2 / thing 
                  :ARG2-of (a2 / advise-01 
                        :ARG1 (a3 / around))) 
            :time (b / become-01 
                  :ARG0 (c / close) 
                  :ARG1 (e / eye-01 
                        :ARG1 (a4 / anxiety) 
                        :ARG6 (j / just)) 
                  :ARG2 (p2 / problem) 
                  :op-of (u / until))) 
      :ARG6 (o / or) 
      :op-of (a / and))

# ::snt Well I woudnt try to keep an eye on ur anxiety for a start because that will make u tense and more likely to become more panicky (circle of demise there)
# ::tok Well I woudnt try to keep an eye on ur anxiety for a start because that will make u tense and more likely to become more panicky ( circle of demise there )
# ::alignments 3-4|0.1 13-14|0.1.1.0.0 7-8|0.1.1 10-11|0.1.1.0 1-2|0.1.2 14-15|0 17-18|0.0 20-21|0.0.0 22-23|0.1.2.0 21-22|0.1.2.0.0 25-26|0.1.0 19-20|0.0.0.0 28-29|0.1.0.0.0 31-32|0.1.0.0.1 30-31|0.1.0.0.0.0 26-27|0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:38.309
# ::node	0	cause-01	14-15
# ::node	0.0	make-01	17-18
# ::node	0.0.0	and	20-21
# ::node	0.0.0.0	tense-01	19-20
# ::node	0.1	try-01	3-4
# ::node	0.1.0	more	25-26
# ::node	0.1.0.0	panic-01	26-27
# ::node	0.1.0.0.0	circle	28-29
# ::node	0.1.0.0.0.0	demise	30-31
# ::node	0.1.0.0.1	there	31-32
# ::node	0.1.1	eye-01	7-8
# ::node	0.1.1.0	anxiety	10-11
# ::node	0.1.1.0.0	start	13-14
# ::node	0.1.2	i	1-2
# ::node	0.1.2.0	likely	22-23
# ::node	0.1.2.0.0	more	21-22
# ::root	0	cause-01
# ::edge	and	op1	tense-01	0.0.0	0.0.0.0	
# ::edge	anxiety	poss	start	0.1.1.0	0.1.1.0.0	
# ::edge	cause-01	ARG0	make-01	0	0.0	
# ::edge	cause-01	ARG1	try-01	0	0.1	
# ::edge	circle	location	demise	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	eye-01	ARG1	anxiety	0.1.1	0.1.1.0	
# ::edge	likely	degree	more	0.1.2.0	0.1.2.0.0	
# ::edge	likely	domain	i	0.1.2.0	0.1.2	
# ::edge	make-01	ARG1	and	0.0	0.0.0	
# ::edge	panic-01	ARG0	circle	0.1.0.0	0.1.0.0.0	
# ::edge	panic-01	ARG1	there	0.1.0.0	0.1.0.0.1	
# ::edge	panic-01	ARG6	more	0.1.0.0	0.1.0	
# ::edge	try-01	ARG0	more	0.1	0.1.0	
# ::edge	try-01	ARG1	eye-01	0.1	0.1.1	
# ::edge	try-01	ARG6	i	0.1	0.1.2	
(c / cause-01 
      :ARG0 (m2 / make-01 
            :ARG1 (a2 / and 
                  :op1 (t2 / tense-01))) 
      :ARG1 (t / try-01 
            :ARG0 (m3 / more 
                  :ARG6-of (p2 / panic-01 
                        :ARG0 (c2 / circle 
                              :location (d / demise)) 
                        :ARG1 (t3 / there))) 
            :ARG1 (e / eye-01 
                  :ARG1 (a / anxiety 
                        :poss (s / start))) 
            :ARG6 (i / i 
                  :domain-of (l / likely 
                        :degree (m4 / more)))))

# ::snt what I would try to do is focus on something that is garunteed to make you smile or feel happier as soon as you start to feel a bit panicky about anything.
# ::tok what I would try to do is focus on something that is garunteed to make you smile or feel happier as soon as you start to feel a bit panicky about anything .
# ::alignments 1-2|0.1.0 3-4|0.1 7-8|0 24-25|0.2.0.0.1 18-19|0.2.0.1 28-29|0.2.0.0.1.0.0.0 31-32|0.2.0.0.1.0.0.1 9-10|0.0 14-15|0.2 17-18|0.2.0 26-27|0.2.0.0.1.0 19-20|0.2.0.1.0 16-17|0.2.0.0 15-16|0.2.0.0.0 29-30|0.2.0.0.1.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:39.209
# ::node	0	focus-01	7-8
# ::node	0.0	something	9-10
# ::node	0.1	try-01	3-4
# ::node	0.1.0	i	1-2
# ::node	0.2	make-02	14-15
# ::node	0.2.0	or	17-18
# ::node	0.2.0.0	smile-01	16-17
# ::node	0.2.0.0.0	you	15-16
# ::node	0.2.0.0.1	start-01	24-25
# ::node	0.2.0.0.1.0	feel-01	26-27
# ::node	0.2.0.0.1.0.0	panic-01	29-30
# ::node	0.2.0.0.1.0.0.0	bit	28-29
# ::node	0.2.0.0.1.0.0.1	anything	31-32
# ::node	0.2.0.1	feel-01	18-19
# ::node	0.2.0.1.0	happy	19-20
# ::root	0	focus-01
# ::edge	feel-01	ARG1	happy	0.2.0.1	0.2.0.1.0	
# ::edge	feel-01	ARG1	panic-01	0.2.0.0.1.0	0.2.0.0.1.0.0	
# ::edge	focus-01	ARG1	something	0	0.0	
# ::edge	make-02	ARG1	focus-01	0.2	0	
# ::edge	or	op1	make-02	0.2.0	0.2	
# ::edge	or	op2	smile-01	0.2.0	0.2.0.0	
# ::edge	or	op3	feel-01	0.2.0	0.2.0.1	
# ::edge	panic-01	ARG0	bit	0.2.0.0.1.0.0	0.2.0.0.1.0.0.0	
# ::edge	panic-01	ARG1	anything	0.2.0.0.1.0.0	0.2.0.0.1.0.0.1	
# ::edge	smile-01	ARG0	you	0.2.0.0	0.2.0.0.0	
# ::edge	smile-01	ARG1	start-01	0.2.0.0	0.2.0.0.1	
# ::edge	start-01	ARG1	feel-01	0.2.0.0.1	0.2.0.0.1.0	
# ::edge	try-01	ARG0	i	0.1	0.1.0	
# ::edge	try-01	ARG1	focus-01	0.1	0	
(f / focus-01 
      :ARG1 (s / something) 
      :ARG1-of (t / try-01 
            :ARG0 (i / i)) 
      :ARG1-of (m / make-02 
            :op-of (o / or 
                  :op1 (s2 / smile-01 
                        :ARG0 (y / you) 
                        :ARG1 (s3 / start-01 
                              :ARG1 (f2 / feel-01 
                                    :ARG1 (p / panic-01 
                                          :ARG0 (b / bit) 
                                          :ARG1 (a2 / anything))))) 
                  :op2 (f3 / feel-01 
                        :ARG1 (h / happy)))))

# ::snt Or if u cant do that-when you start to feel panicky, get one of your friends to make you laugh (it works for me and i suffer from random panic attacks lol
# ::tok Or if u cant do that - when you start to feel panicky , get one of your friends to make you laugh ( it works for me and i suffer from random panic attacks lol
# ::alignments 0-1|0.1.0.1 4-5|0.1.0.1.0.0 5-6|0.1.0.1.0 14-15|0.1.0 9-10|0.2 11-12|0 33-34|0.1.0.0.1.0.0.0.0.0.0.0 20-21|0.1.0.0.1.0 22-23|0.1.0.0.1.0.0.0 18-19|0.1.0.0.1 16-17|0.1.0.0 8-9|0.0 28-29|0.1.0.0.1.0.0.0.0 35-36|0.1.0.0.1.0.0.0.0.0.0 30-31|0.1.0.0.1.0.0.0.0.0 34-35|0.1.0.0.1.0.0.0.0.0.0.1 32-33|0.1.0.0.0 29-30|0.1.0.0.1.0.0.0.0.0.1 25-26|0.1.0.0.1.0.0 12-13|0.1 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:40.338
# ::node	0	feel-01	11-12
# ::node	0.0	you	8-9
# ::node	0.1	panic-01	12-13
# ::node	0.1.0	get-04	14-15
# ::node	0.1.0.0	include-91	16-17
# ::node	0.1.0.0.0	random	32-33
# ::node	0.1.0.0.1	friend	18-19
# ::node	0.1.0.0.1.0	make-02	20-21
# ::node	0.1.0.0.1.0.0	work-09	25-26
# ::node	0.1.0.0.1.0.0.0	laugh-01	22-23
# ::node	0.1.0.0.1.0.0.0.0	and	28-29
# ::node	0.1.0.0.1.0.0.0.0.0	suffer-01	30-31
# ::node	0.1.0.0.1.0.0.0.0.0.0	lol	35-36
# ::node	0.1.0.0.1.0.0.0.0.0.0.0	panic-01	33-34
# ::node	0.1.0.0.1.0.0.0.0.0.0.1	attack	34-35
# ::node	0.1.0.0.1.0.0.0.0.0.1	i	29-30
# ::node	0.1.0.1	or	0-1
# ::node	0.1.0.1.0	that	5-6
# ::node	0.1.0.1.0.0	do-02	4-5
# ::node	0.2	start-01	9-10
# ::root	0	feel-01
# ::edge	and	op1	laugh-01	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0	
# ::edge	and	op2	suffer-01	0.1.0.0.1.0.0.0.0	0.1.0.0.1.0.0.0.0.0	
# ::edge	do-02	ARG1	that	0.1.0.1.0.0	0.1.0.1.0	
# ::edge	feel-01	ARG0	you	0	0.0	
# ::edge	feel-01	ARG1	panic-01	0	0.1	
# ::edge	get-04	ARG1	include-91	0.1.0	0.1.0.0	
# ::edge	include-91	ARG1	random	0.1.0.0	0.1.0.0.0	
# ::edge	include-91	ARG2	friend	0.1.0.0	0.1.0.0.1	
# ::edge	laugh-01	ARG1	work-09	0.1.0.0.1.0.0.0	0.1.0.0.1.0.0	
# ::edge	lol	mod	attack	0.1.0.0.1.0.0.0.0.0.0	0.1.0.0.1.0.0.0.0.0.0.1	
# ::edge	make-02	ARG1	friend	0.1.0.0.1.0	0.1.0.0.1	
# ::edge	or	op1	that	0.1.0.1	0.1.0.1.0	
# ::edge	or	op2	get-04	0.1.0.1	0.1.0	
# ::edge	panic-01	ARG1	get-04	0.1	0.1.0	
# ::edge	panic-01	ARG1	lol	0.1.0.0.1.0.0.0.0.0.0.0	0.1.0.0.1.0.0.0.0.0.0	
# ::edge	start-01	ARG1	feel-01	0.2	0	
# ::edge	suffer-01	ARG1	lol	0.1.0.0.1.0.0.0.0.0	0.1.0.0.1.0.0.0.0.0.0	
# ::edge	suffer-01	ARG6	i	0.1.0.0.1.0.0.0.0.0	0.1.0.0.1.0.0.0.0.0.1	
# ::edge	work-09	ARG1	make-02	0.1.0.0.1.0.0	0.1.0.0.1.0	
(f3 / feel-01 
      :ARG0 (y / you) 
      :ARG1 (p2 / panic-01 
            :ARG1 (g / get-04 
                  :ARG1 (i3 / include-91 
                        :ARG1 (r / random) 
                        :ARG2 (f / friend 
                              :ARG1-of (m2 / make-02 
                                    :ARG1-of (w / work-09 
                                          :ARG1-of (l / laugh-01 
                                                :op-of (a / and 
                                                      :op1 (s2 / suffer-01 
                                                            :ARG1 (l2 / lol 
                                                                  :ARG1-of (p / panic-01) 
                                                                  :mod (a2 / attack)) 
                                                            :ARG6 (i / i)))))))) 
                  :op-of (o / or 
                        :op1 (t / that 
                              :ARG1-of (d / do-02))))) 
      :ARG1-of (s / start-01))

# ::snt This started happening to me, where I'd just start being really anxious over tiny things, although from the sound of things, not as severely as you.
# ::tok This started happening to me , where I 'd just start being really anxious over tiny things , although from the sound of things , not as severely as you .
# ::alignments 1-2|0 2-3|0.1 10-11|0.2 29-30|0.0 21-22|0.1.0.0 16-17|0.1.0.0.0 23-24|0.1.0 15-16|0.1.0.0.0.0 7-8|0.2.0 12-13|0.2.1 27-28|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:40.691
# ::node	0	start-01	1-2
# ::node	0.0	you	29-30
# ::node	0.0.0	severe	27-28
# ::node	0.1	happen-01	2-3
# ::node	0.1.0	thing	23-24
# ::node	0.1.0.0	sound-01	21-22
# ::node	0.1.0.0.0	thing	16-17
# ::node	0.1.0.0.0.0	tiny	15-16
# ::node	0.2	start-01	10-11
# ::node	0.2.0	i	7-8
# ::node	0.2.1	really	12-13
# ::root	0	start-01
# ::edge	happen-01	ARG1	thing	0.1	0.1.0	
# ::edge	sound-01	ARG1	thing	0.1.0.0	0.1.0	
# ::edge	sound-01	ARG6	thing	0.1.0.0	0.1.0.0.0	
# ::edge	start-01	ARG0	i	0.2	0.2.0	
# ::edge	start-01	ARG0	you	0	0.0	
# ::edge	start-01	ARG1	happen-01	0	0.1	
# ::edge	start-01	ARG6	really	0.2	0.2.1	
# ::edge	start-01	condition	start-01	0	0.2	
# ::edge	thing	mod	tiny	0.1.0.0.0	0.1.0.0.0.0	
# ::edge	you	calendar	severe	0.0	0.0.0	
(s / start-01 
      :ARG0 (y / you 
            :calendar (s3 / severe)) 
      :ARG1 (h / happen-01 
            :ARG1 (t / thing 
                  :ARG1-of (s4 / sound-01 
                        :ARG6 (t4 / thing 
                              :mod (t2 / tiny))))) 
      :condition (s2 / start-01 
            :ARG0 (i / i) 
            :ARG6 (r / really)))

# ::snt What I find helps is just talking about what is making you anxious to someone else.
# ::tok What I find helps is just talking about what is making you anxious to someone else .
# ::alignments 2-3|0.0.0 3-4|0 6-7|0.0 5-6|0.0.2 14-15|0.0.1.0.0.0 15-16|0.0.0.1 10-11|0.0.1+0.0.1.0 12-13|0.0.1.0.0 11-12|0.0.1.0.0.1 1-2|0.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:40.865
# ::node	0	help-01	3-4
# ::node	0.0	talk-01	6-7
# ::node	0.0.0	find-01	2-3
# ::node	0.0.0.0	i	1-2
# ::node	0.0.0.1	else	15-16
# ::node	0.0.1	thing	10-11
# ::node	0.0.1.0	make-02	10-11
# ::node	0.0.1.0.0	anxious	12-13
# ::node	0.0.1.0.0.0	someone	14-15
# ::node	0.0.1.0.0.1	you	11-12
# ::node	0.0.2	just	5-6
# ::root	0	help-01
# ::edge	anxious	calendar	someone	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	anxious	calendar	you	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	find-01	ARG0	i	0.0.0	0.0.0.0	
# ::edge	find-01	ARG1	else	0.0.0	0.0.0.1	
# ::edge	help-01	ARG1	talk-01	0	0.0	
# ::edge	make-02	ARG0	thing	0.0.1.0	0.0.1	
# ::edge	make-02	ARG1	anxious	0.0.1.0	0.0.1.0.0	
# ::edge	talk-01	ARG0	find-01	0.0	0.0.0	
# ::edge	talk-01	ARG1	thing	0.0	0.0.1	
# ::edge	talk-01	ARG6	just	0.0	0.0.2	
(h / help-01 
      :ARG1 (t / talk-01 
            :ARG0 (f / find-01 
                  :ARG0 (i / i) 
                  :ARG1 (e / else)) 
            :ARG1 (t2 / thing 
                  :ARG0-of (m / make-02 
                        :ARG1 (a / anxious 
                              :calendar (s / someone) 
                              :calendar (y / you)))) 
            :ARG6 (j / just)))

# ::snt Perhaps not in a moany way but I found that mentioning the thing that I was worried about to my mum and seeing her react to the situation in a calm way (like I should have been reacting) made me feel better about it because I knew it wasn't a big deal and I didn't need to be anxious about it.
# ::tok Perhaps not in a moany way but I found that mentioning the thing that I was worried about to my mum and seeing her react to the situation in a calm way ( like I should have been reacting ) made me feel better about it because I knew it was n't a big deal and I did n't need to be anxious about it .
# ::alignments 6-7|0 5-6|0.0.3.0.1 0-1|0.0.3.0.1.1 8-9|0.0.3.0 21-22|0.0.0.1 40-41|0.0 46-47|0.0.1.1 48-49|0.0.1.1.0 55-56|0.0.3 59-60|0.0.3.1 62-63|0.0.3.1.0 54-55|0.0.1.1.0.0 53-54|0.0.1.1.0.0.0 42-43|0.0.1 43-44|0.0.1.0 22-23|0.0.0.1.1 24-25|0.0.0.1.1.0 31-32|0.0.0.1.1.0.0.0 30-31|0.0.0.1.1.0.0.0.0 38-39|0.0.2 35-36|0.0.2.0 27-28|0.0.0.1.1.0.0 10-11|0.0.0 20-21|0.0.0.1.0.0 12-13|0.0.0.0 16-17|0.0.0.1.0 7-8|0.0.3.0.0 4-5|0.0.3.0.1.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:43.917
# ::node	0	contrast-01	6-7
# ::node	0.0	make-02	40-41
# ::node	0.0.0	mention-01	10-11
# ::node	0.0.0.0	thing	12-13
# ::node	0.0.0.1	and	21-22
# ::node	0.0.0.1.0	worry-02	16-17
# ::node	0.0.0.1.0.0	mum	20-21
# ::node	0.0.0.1.1	see-01	22-23
# ::node	0.0.0.1.1.0	react-01	24-25
# ::node	0.0.0.1.1.0.0	situation	27-28
# ::node	0.0.0.1.1.0.0.0	way	31-32
# ::node	0.0.0.1.1.0.0.0.0	calm	30-31
# ::node	0.0.1	feel-01	42-43
# ::node	0.0.1.0	good	43-44
# ::node	0.0.1.1	cause-01	46-47
# ::node	0.0.1.1.0	know-01	48-49
# ::node	0.0.1.1.0.0	deal	54-55
# ::node	0.0.1.1.0.0.0	big	53-54
# ::node	0.0.2	react-01	38-39
# ::node	0.0.2.0	recommend-01	35-36
# ::node	0.0.3	and	55-56
# ::node	0.0.3.0	find-01	8-9
# ::node	0.0.3.0.0	i	7-8
# ::node	0.0.3.0.1	way	5-6
# ::node	0.0.3.0.1.0	moan-01	4-5
# ::node	0.0.3.0.1.1	perhaps	0-1
# ::node	0.0.3.1	need-01	59-60
# ::node	0.0.3.1.0	anxious	62-63
# ::root	0	contrast-01
# ::edge	and	op1	make-02	0.0.3	0.0	
# ::edge	and	op1	mention-01	0.0.0.1	0.0.0	
# ::edge	and	op2	need-01	0.0.3	0.0.3.1	
# ::edge	and	op2	worry-02	0.0.0.1	0.0.0.1.0	
# ::edge	and	op3	see-01	0.0.0.1	0.0.0.1.1	
# ::edge	cause-01	ARG0	know-01	0.0.1.1	0.0.1.1.0	
# ::edge	cause-01	ARG1	feel-01	0.0.1.1	0.0.1	
# ::edge	contrast-01	ARG1	make-02	0	0.0	
# ::edge	deal	mod	big	0.0.1.1.0.0	0.0.1.1.0.0.0	
# ::edge	feel-01	ARG1	good	0.0.1	0.0.1.0	
# ::edge	find-01	ARG0	i	0.0.3.0	0.0.3.0.0	
# ::edge	find-01	ARG1	and	0.0.3.0	0.0.3	
# ::edge	find-01	ARG6	way	0.0.3.0	0.0.3.0.1	
# ::edge	know-01	ARG1	deal	0.0.1.1.0	0.0.1.1.0.0	
# ::edge	make-02	ARG0	mention-01	0.0	0.0.0	
# ::edge	make-02	ARG1	feel-01	0.0	0.0.1	
# ::edge	mention-01	ARG1	thing	0.0.0	0.0.0.0	
# ::edge	moan-01	ARG1	way	0.0.3.0.1.0	0.0.3.0.1	
# ::edge	need-01	ARG1	anxious	0.0.3.1	0.0.3.1.0	
# ::edge	react-01	ARG1	make-02	0.0.2	0.0	
# ::edge	react-01	ARG1	situation	0.0.0.1.1.0	0.0.0.1.1.0.0	
# ::edge	recommend-01	ARG1	react-01	0.0.2.0	0.0.2	
# ::edge	see-01	ARG1	react-01	0.0.0.1.1	0.0.0.1.1.0	
# ::edge	situation	location	way	0.0.0.1.1.0.0	0.0.0.1.1.0.0.0	
# ::edge	way	mod	calm	0.0.0.1.1.0.0.0	0.0.0.1.1.0.0.0.0	
# ::edge	way	time	perhaps	0.0.3.0.1	0.0.3.0.1.1	
# ::edge	worry-02	ARG1	mum	0.0.0.1.0	0.0.0.1.0.0	
(c / contrast-01 
      :ARG1 (m3 / make-02 
            :ARG0 (m / mention-01 
                  :ARG1 (t / thing) 
                  :op-of (a / and 
                        :op1 (w / worry-02 
                              :ARG1 (m2 / mum)) 
                        :op2 (s / see-01 
                              :ARG1 (r / react-01 
                                    :ARG1 (s2 / situation 
                                          :location (w2 / way 
                                                :mod (c2 / calm))))))) 
            :ARG1 (f2 / feel-01 
                  :ARG1 (g / good) 
                  :ARG1-of (c3 / cause-01 
                        :ARG0 (k / know-01 
                              :ARG1 (d / deal 
                                    :mod (b / big))))) 
            :ARG1-of (r3 / react-01 
                  :ARG1-of (r2 / recommend-01)) 
            :op-of (a2 / and 
                  :ARG1-of (f / find-01 
                        :ARG0 (i / i) 
                        :ARG6 (w4 / way 
                              :ARG1-of (m5 / moan-01) 
                              :time (p / perhaps))) 
                  :op1 (n / need-01 
                        :ARG1 (a3 / anxious)))))

# ::snt However, if it gets worse, then yes, go to the doctor's.
# ::tok However , if it gets worse , then yes , go to the doctor 's .
# ::alignments 10-11|0 3-4|0.0.0 13-14|0.1 5-6|0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:43.976
# ::node	0	go-02	10-11
# ::node	0.0	worsen-01	5-6
# ::node	0.0.0	it	3-4
# ::node	0.1	doctor	13-14
# ::root	0	go-02
# ::edge	go-02	ARG1	worsen-01	0	0.0	
# ::edge	go-02	ARG4	doctor	0	0.1	
# ::edge	worsen-01	ARG1	it	0.0	0.0.0	
(g / go-02 
      :ARG1 (w / worsen-01 
            :ARG1 (i / it)) 
      :ARG4 (d / doctor))

# ::snt I have a friend who suffers from severe anxiety that can prevent her from leaving the house and doing things because she's so worried about what can go wrong.
# ::tok I have a friend who suffers from severe anxiety that can prevent her from leaving the house and doing things because she 's so worried about what can go wrong .
# ::alignments 1-2|0.0.1.0.0 3-4|0.0.1.0.0.1 5-6|0.0.1.0.0.1.0 8-9|0.0.1.0.0.1.0.0 11-12|0.0.1.0.0.1.0.0.0 20-21|0.0.1.0 24-25|0.0.1 23-24|0.0.1.1 19-20|0.0.1.0.0.1.0.0.0.0.1.0.0 28-29|0.0 10-11|0.0.1.0.0.1.0.0.0.1 29-30|0.0.0 27-28|0 17-18|0.0.1.0.0.1.0.0.0.0.1 18-19|0.0.1.0.0.1.0.0.0.0.1.0 14-15|0.0.1.0.0.1.0.0.0.0 16-17|0.0.1.0.0.1.0.0.0.0.0 7-8|0.0.1.0.0.1.0.0.1 0-1|0.0.1.0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:45.137
# ::node	0	possible	27-28
# ::node	0.0	go-06	28-29
# ::node	0.0.0	wrong	29-30
# ::node	0.0.1	worry-02	24-25
# ::node	0.0.1.0	cause-01	20-21
# ::node	0.0.1.0.0	have-03	1-2
# ::node	0.0.1.0.0.0	i	0-1
# ::node	0.0.1.0.0.1	friend	3-4
# ::node	0.0.1.0.0.1.0	suffer-01	5-6
# ::node	0.0.1.0.0.1.0.0	anxiety	8-9
# ::node	0.0.1.0.0.1.0.0.0	prevent-01	11-12
# ::node	0.0.1.0.0.1.0.0.0.0	leave-01	14-15
# ::node	0.0.1.0.0.1.0.0.0.0.0	house	16-17
# ::node	0.0.1.0.0.1.0.0.0.0.1	and	17-18
# ::node	0.0.1.0.0.1.0.0.0.0.1.0	do-02	18-19
# ::node	0.0.1.0.0.1.0.0.0.0.1.0.0	thing	19-20
# ::node	0.0.1.0.0.1.0.0.0.1	possible	10-11
# ::node	0.0.1.0.0.1.0.0.1	severe	7-8
# ::node	0.0.1.1	so	23-24
# ::root	0	possible
# ::edge	and	op1	leave-01	0.0.1.0.0.1.0.0.0.0.1	0.0.1.0.0.1.0.0.0.0	
# ::edge	and	op2	do-02	0.0.1.0.0.1.0.0.0.0.1	0.0.1.0.0.1.0.0.0.0.1.0	
# ::edge	anxiety	mod	severe	0.0.1.0.0.1.0.0	0.0.1.0.0.1.0.0.1	
# ::edge	cause-01	ARG1	worry-02	0.0.1.0	0.0.1	
# ::edge	do-02	ARG1	thing	0.0.1.0.0.1.0.0.0.0.1.0	0.0.1.0.0.1.0.0.0.0.1.0.0	
# ::edge	go-06	ARG1	wrong	0.0	0.0.0	
# ::edge	have-03	ARG0	i	0.0.1.0.0	0.0.1.0.0.0	
# ::edge	have-03	ARG1	friend	0.0.1.0.0	0.0.1.0.0.1	
# ::edge	have-03	time	cause-01	0.0.1.0.0	0.0.1.0	
# ::edge	leave-01	ARG1	house	0.0.1.0.0.1.0.0.0.0	0.0.1.0.0.1.0.0.0.0.0	
# ::edge	possible	domain	go-06	0	0.0	
# ::edge	possible	domain	prevent-01	0.0.1.0.0.1.0.0.0.1	0.0.1.0.0.1.0.0.0	
# ::edge	prevent-01	ARG0	anxiety	0.0.1.0.0.1.0.0.0	0.0.1.0.0.1.0.0	
# ::edge	prevent-01	ARG1	leave-01	0.0.1.0.0.1.0.0.0	0.0.1.0.0.1.0.0.0.0	
# ::edge	suffer-01	ARG0	friend	0.0.1.0.0.1.0	0.0.1.0.0.1	
# ::edge	suffer-01	ARG1	anxiety	0.0.1.0.0.1.0	0.0.1.0.0.1.0.0	
# ::edge	worry-02	ARG1	go-06	0.0.1	0.0	
# ::edge	worry-02	manner	so	0.0.1	0.0.1.1	
(p2 / possible 
      :domain (g / go-06 
            :ARG1 (w2 / wrong) 
            :ARG1-of (w / worry-02 
                  :ARG1-of (c / cause-01 
                        :time-of (h / have-03 
                              :ARG0 (i / i) 
                              :ARG1 (f / friend 
                                    :ARG0-of (s / suffer-01 
                                          :ARG1 (a / anxiety 
                                                :ARG0-of (p / prevent-01 
                                                      :ARG1 (l / leave-01 
                                                            :ARG1 (h2 / house) 
                                                            :op-of (a2 / and 
                                                                  :op1 (d / do-02 
                                                                        :ARG1 (t2 / thing)))) 
                                                      :domain-of (p3 / possible)) 
                                                :mod (s2 / severe)))))) 
                  :manner (s3 / so))))

# ::snt The doctors gave her medication and it's made her much better.
# ::tok The doctors gave her medication and it 's made her much better .
# ::alignments 5-6|0 8-9|0.1 11-12|0.1.0 10-11|0.1.1 2-3|0.0 4-5|0.0.1 1-2|0.0.0 ::annotator JAMR dev v0.3 mod v0.1 ::date 2015-02-17T13:07:45.289
# ::node	0	and	5-6
# ::node	0.0	give-01	2-3
# ::node	0.0.0	doctor	1-2
# ::node	0.0.1	medication	4-5
# ::node	0.1	make-02	8-9
# ::node	0.1.0	good	11-12
# ::node	0.1.1	much	10-11
# ::root	0	and
# ::edge	and	op1	give-01	0	0.0	
# ::edge	and	op2	make-02	0	0.1	
# ::edge	give-01	ARG0	doctor	0.0	0.0.0	
# ::edge	give-01	ARG1	medication	0.0	0.0.1	
# ::edge	make-02	ARG1	good	0.1	0.1.0	
# ::edge	make-02	ARG6	much	0.1	0.1.1	
(a / and 
      :op1 (g / give-01 
            :ARG0 (d / doctor) 
            :ARG1 (m2 / medication)) 
      :op2 (m / make-02 
            :ARG1 (g2 / good) 
            :ARG6 (m4 / much)))

